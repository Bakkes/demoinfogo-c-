// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class Cstrike15Usermessages {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_VGUIMenu__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VGUIMenu, global::CCSUsrMsg_VGUIMenu.Builder> internal__static_CCSUsrMsg_VGUIMenu__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_VGUIMenu_Subkey__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VGUIMenu.Types.Subkey, global::CCSUsrMsg_VGUIMenu.Types.Subkey.Builder> internal__static_CCSUsrMsg_VGUIMenu_Subkey__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_Geiger__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Geiger, global::CCSUsrMsg_Geiger.Builder> internal__static_CCSUsrMsg_Geiger__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_Train__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Train, global::CCSUsrMsg_Train.Builder> internal__static_CCSUsrMsg_Train__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_HudText__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_HudText, global::CCSUsrMsg_HudText.Builder> internal__static_CCSUsrMsg_HudText__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_SayText__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SayText, global::CCSUsrMsg_SayText.Builder> internal__static_CCSUsrMsg_SayText__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_SayText2__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SayText2, global::CCSUsrMsg_SayText2.Builder> internal__static_CCSUsrMsg_SayText2__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_TextMsg__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_TextMsg, global::CCSUsrMsg_TextMsg.Builder> internal__static_CCSUsrMsg_TextMsg__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_HudMsg__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_HudMsg, global::CCSUsrMsg_HudMsg.Builder> internal__static_CCSUsrMsg_HudMsg__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_Shake__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Shake, global::CCSUsrMsg_Shake.Builder> internal__static_CCSUsrMsg_Shake__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_Fade__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Fade, global::CCSUsrMsg_Fade.Builder> internal__static_CCSUsrMsg_Fade__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_Rumble__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Rumble, global::CCSUsrMsg_Rumble.Builder> internal__static_CCSUsrMsg_Rumble__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_CloseCaption__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_CloseCaption, global::CCSUsrMsg_CloseCaption.Builder> internal__static_CCSUsrMsg_CloseCaption__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_CloseCaptionDirect__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_CloseCaptionDirect, global::CCSUsrMsg_CloseCaptionDirect.Builder> internal__static_CCSUsrMsg_CloseCaptionDirect__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_SendAudio__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SendAudio, global::CCSUsrMsg_SendAudio.Builder> internal__static_CCSUsrMsg_SendAudio__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_RawAudio__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_RawAudio, global::CCSUsrMsg_RawAudio.Builder> internal__static_CCSUsrMsg_RawAudio__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_VoiceMask__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VoiceMask, global::CCSUsrMsg_VoiceMask.Builder> internal__static_CCSUsrMsg_VoiceMask__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_VoiceMask_PlayerMask__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VoiceMask.Types.PlayerMask, global::CCSUsrMsg_VoiceMask.Types.PlayerMask.Builder> internal__static_CCSUsrMsg_VoiceMask_PlayerMask__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_Damage__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Damage, global::CCSUsrMsg_Damage.Builder> internal__static_CCSUsrMsg_Damage__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_RadioText__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_RadioText, global::CCSUsrMsg_RadioText.Builder> internal__static_CCSUsrMsg_RadioText__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_HintText__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_HintText, global::CCSUsrMsg_HintText.Builder> internal__static_CCSUsrMsg_HintText__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_KeyHintText__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_KeyHintText, global::CCSUsrMsg_KeyHintText.Builder> internal__static_CCSUsrMsg_KeyHintText__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ProcessSpottedEntityUpdate, global::CCSUsrMsg_ProcessSpottedEntityUpdate.Builder> internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate, global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate.Builder> internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_SendPlayerItemDrops__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SendPlayerItemDrops, global::CCSUsrMsg_SendPlayerItemDrops.Builder> internal__static_CCSUsrMsg_SendPlayerItemDrops__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_SendPlayerItemFound__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SendPlayerItemFound, global::CCSUsrMsg_SendPlayerItemFound.Builder> internal__static_CCSUsrMsg_SendPlayerItemFound__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_ReloadEffect__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ReloadEffect, global::CCSUsrMsg_ReloadEffect.Builder> internal__static_CCSUsrMsg_ReloadEffect__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_AdjustMoney__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_AdjustMoney, global::CCSUsrMsg_AdjustMoney.Builder> internal__static_CCSUsrMsg_AdjustMoney__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_KillCam__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_KillCam, global::CCSUsrMsg_KillCam.Builder> internal__static_CCSUsrMsg_KillCam__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_DesiredTimescale__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_DesiredTimescale, global::CCSUsrMsg_DesiredTimescale.Builder> internal__static_CCSUsrMsg_DesiredTimescale__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_CurrentTimescale__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_CurrentTimescale, global::CCSUsrMsg_CurrentTimescale.Builder> internal__static_CCSUsrMsg_CurrentTimescale__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_AchievementEvent__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_AchievementEvent, global::CCSUsrMsg_AchievementEvent.Builder> internal__static_CCSUsrMsg_AchievementEvent__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_MatchEndConditions__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_MatchEndConditions, global::CCSUsrMsg_MatchEndConditions.Builder> internal__static_CCSUsrMsg_MatchEndConditions__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_PlayerStatsUpdate__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_PlayerStatsUpdate, global::CCSUsrMsg_PlayerStatsUpdate.Builder> internal__static_CCSUsrMsg_PlayerStatsUpdate__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_PlayerStatsUpdate_Stat__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat, global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat.Builder> internal__static_CCSUsrMsg_PlayerStatsUpdate_Stat__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_DisplayInventory__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_DisplayInventory, global::CCSUsrMsg_DisplayInventory.Builder> internal__static_CCSUsrMsg_DisplayInventory__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_XRankGet__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_XRankGet, global::CCSUsrMsg_XRankGet.Builder> internal__static_CCSUsrMsg_XRankGet__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_XRankUpd__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_XRankUpd, global::CCSUsrMsg_XRankUpd.Builder> internal__static_CCSUsrMsg_XRankUpd__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_CallVoteFailed__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_CallVoteFailed, global::CCSUsrMsg_CallVoteFailed.Builder> internal__static_CCSUsrMsg_CallVoteFailed__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_VoteStart__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VoteStart, global::CCSUsrMsg_VoteStart.Builder> internal__static_CCSUsrMsg_VoteStart__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_VotePass__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VotePass, global::CCSUsrMsg_VotePass.Builder> internal__static_CCSUsrMsg_VotePass__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_VoteFailed__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VoteFailed, global::CCSUsrMsg_VoteFailed.Builder> internal__static_CCSUsrMsg_VoteFailed__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_VoteSetup__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VoteSetup, global::CCSUsrMsg_VoteSetup.Builder> internal__static_CCSUsrMsg_VoteSetup__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_SendLastKillerDamageToClient__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SendLastKillerDamageToClient, global::CCSUsrMsg_SendLastKillerDamageToClient.Builder> internal__static_CCSUsrMsg_SendLastKillerDamageToClient__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_ServerRankUpdate__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ServerRankUpdate, global::CCSUsrMsg_ServerRankUpdate.Builder> internal__static_CCSUsrMsg_ServerRankUpdate__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_ServerRankUpdate_RankUpdate__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate, global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate.Builder> internal__static_CCSUsrMsg_ServerRankUpdate_RankUpdate__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_ItemPickup__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ItemPickup, global::CCSUsrMsg_ItemPickup.Builder> internal__static_CCSUsrMsg_ItemPickup__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_ShowMenu__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ShowMenu, global::CCSUsrMsg_ShowMenu.Builder> internal__static_CCSUsrMsg_ShowMenu__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_BarTime__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_BarTime, global::CCSUsrMsg_BarTime.Builder> internal__static_CCSUsrMsg_BarTime__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_AmmoDenied__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_AmmoDenied, global::CCSUsrMsg_AmmoDenied.Builder> internal__static_CCSUsrMsg_AmmoDenied__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_MarkAchievement__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_MarkAchievement, global::CCSUsrMsg_MarkAchievement.Builder> internal__static_CCSUsrMsg_MarkAchievement__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_MatchStatsUpdate__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_MatchStatsUpdate, global::CCSUsrMsg_MatchStatsUpdate.Builder> internal__static_CCSUsrMsg_MatchStatsUpdate__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_ItemDrop__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ItemDrop, global::CCSUsrMsg_ItemDrop.Builder> internal__static_CCSUsrMsg_ItemDrop__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_GlowPropTurnOff__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_GlowPropTurnOff, global::CCSUsrMsg_GlowPropTurnOff.Builder> internal__static_CCSUsrMsg_GlowPropTurnOff__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_RoundBackupFilenames__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_RoundBackupFilenames, global::CCSUsrMsg_RoundBackupFilenames.Builder> internal__static_CCSUsrMsg_RoundBackupFilenames__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_ResetHud__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ResetHud, global::CCSUsrMsg_ResetHud.Builder> internal__static_CCSUsrMsg_ResetHud__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_GameTitle__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_GameTitle, global::CCSUsrMsg_GameTitle.Builder> internal__static_CCSUsrMsg_GameTitle__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_RequestState__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_RequestState, global::CCSUsrMsg_RequestState.Builder> internal__static_CCSUsrMsg_RequestState__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_StopSpectatorMode__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_StopSpectatorMode, global::CCSUsrMsg_StopSpectatorMode.Builder> internal__static_CCSUsrMsg_StopSpectatorMode__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_DisconnectToLobby__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_DisconnectToLobby, global::CCSUsrMsg_DisconnectToLobby.Builder> internal__static_CCSUsrMsg_DisconnectToLobby__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_WarmupHasEnded__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_WarmupHasEnded, global::CCSUsrMsg_WarmupHasEnded.Builder> internal__static_CCSUsrMsg_WarmupHasEnded__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_ClientInfo__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ClientInfo, global::CCSUsrMsg_ClientInfo.Builder> internal__static_CCSUsrMsg_ClientInfo__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CCSUsrMsg_ServerRankRevealAll__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ServerRankRevealAll, global::CCSUsrMsg_ServerRankRevealAll.Builder> internal__static_CCSUsrMsg_ServerRankRevealAll__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static Cstrike15Usermessages() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        "Chxjc3RyaWtlMTVfdXNlcm1lc3NhZ2VzLnByb3RvGiBnb29nbGUvcHJvdG9i" + 
        "dWYvZGVzY3JpcHRvci5wcm90bxoRbmV0bWVzc2FnZXMucHJvdG8aGmNzdHJp" + 
        "a2UxNV9nY21lc3NhZ2VzLnByb3RvIoIBChJDQ1NVc3JNc2dfVkdVSU1lbnUS" + 
        "DAoEbmFtZRgBIAEoCRIMCgRzaG93GAIgASgIEisKB3N1YmtleXMYAyADKAsy" + 
        "Gi5DQ1NVc3JNc2dfVkdVSU1lbnUuU3Via2V5GiMKBlN1YmtleRIMCgRuYW1l" + 
        "GAEgASgJEgsKA3N0chgCIAEoCSIhChBDQ1NVc3JNc2dfR2VpZ2VyEg0KBXJh" + 
        "bmdlGAEgASgFIiAKD0NDU1Vzck1zZ19UcmFpbhINCgV0cmFpbhgBIAEoBSIh" + 
        "ChFDQ1NVc3JNc2dfSHVkVGV4dBIMCgR0ZXh0GAEgASgJIlUKEUNDU1Vzck1z" + 
        "Z19TYXlUZXh0Eg8KB2VudF9pZHgYASABKAUSDAoEdGV4dBgCIAEoCRIMCgRj" + 
        "aGF0GAMgASgIEhMKC3RleHRhbGxjaGF0GAQgASgIImoKEkNDU1Vzck1zZ19T" + 
        "YXlUZXh0MhIPCgdlbnRfaWR4GAEgASgFEgwKBGNoYXQYAiABKAgSEAoIbXNn" + 
        "X25hbWUYAyABKAkSDgoGcGFyYW1zGAQgAygJEhMKC3RleHRhbGxjaGF0GAUg" + 
        "ASgIIjQKEUNDU1Vzck1zZ19UZXh0TXNnEg8KB21zZ19kc3QYASABKAUSDgoG" + 
        "cGFyYW1zGAMgAygJIuABChBDQ1NVc3JNc2dfSHVkTXNnEg8KB2NoYW5uZWwY" + 
        "ASABKAUSGgoDcG9zGAIgASgLMg0uQ01zZ1ZlY3RvcjJEEhcKBGNscjEYAyAB" + 
        "KAsyCS5DTXNnUkdCQRIXCgRjbHIyGAQgASgLMgkuQ01zZ1JHQkESDgoGZWZm" + 
        "ZWN0GAUgASgFEhQKDGZhZGVfaW5fdGltZRgGIAEoAhIVCg1mYWRlX291dF90" + 
        "aW1lGAcgASgCEhEKCWhvbGRfdGltZRgJIAEoAhIPCgdmeF90aW1lGAogASgC" + 
        "EgwKBHRleHQYCyABKAkiYAoPQ0NTVXNyTXNnX1NoYWtlEg8KB2NvbW1hbmQY" + 
        "ASABKAUSFwoPbG9jYWxfYW1wbGl0dWRlGAIgASgCEhEKCWZyZXF1ZW5jeRgD" + 
        "IAEoAhIQCghkdXJhdGlvbhgEIAEoAiJcCg5DQ1NVc3JNc2dfRmFkZRIQCghk" + 
        "dXJhdGlvbhgBIAEoBRIRCglob2xkX3RpbWUYAiABKAUSDQoFZmxhZ3MYAyAB" + 
        "KAUSFgoDY2xyGAQgASgLMgkuQ01zZ1JHQkEiPgoQQ0NTVXNyTXNnX1J1bWJs" + 
        "ZRINCgVpbmRleBgBIAEoBRIMCgRkYXRhGAIgASgFEg0KBWZsYWdzGAMgASgF" + 
        "Ik0KFkNDU1Vzck1zZ19DbG9zZUNhcHRpb24SDAoEaGFzaBgBIAEoDRIQCghk" + 
        "dXJhdGlvbhgCIAEoBRITCgtmcm9tX3BsYXllchgDIAEoCCJTChxDQ1NVc3JN" + 
        "c2dfQ2xvc2VDYXB0aW9uRGlyZWN0EgwKBGhhc2gYASABKA0SEAoIZHVyYXRp" + 
        "b24YAiABKAUSEwoLZnJvbV9wbGF5ZXIYAyABKAgiKgoTQ0NTVXNyTXNnX1Nl" + 
        "bmRBdWRpbxITCgtyYWRpb19zb3VuZBgBIAEoCSJdChJDQ1NVc3JNc2dfUmF3" + 
        "QXVkaW8SDQoFcGl0Y2gYASABKAUSDgoGZW50aWR4GAIgASgFEhAKCGR1cmF0" + 
        "aW9uGAMgASgCEhYKDnZvaWNlX2ZpbGVuYW1lGAQgASgJIqEBChNDQ1NVc3JN" + 
        "c2dfVm9pY2VNYXNrEjUKDHBsYXllcl9tYXNrcxgBIAMoCzIfLkNDU1Vzck1z" + 
        "Z19Wb2ljZU1hc2suUGxheWVyTWFzaxIZChFwbGF5ZXJfbW9kX2VuYWJsZRgC" + 
        "IAEoCBo4CgpQbGF5ZXJNYXNrEhcKD2dhbWVfcnVsZXNfbWFzaxgBIAEoBRIR" + 
        "CgliYW5fbWFza3MYAiABKAUiTAoQQ0NTVXNyTXNnX0RhbWFnZRIOCgZhbW91" + 
        "bnQYASABKAUSKAoTaW5mbGljdG9yX3dvcmxkX3BvcxgCIAEoCzILLkNNc2dW" + 
        "ZWN0b3IiWAoTQ0NTVXNyTXNnX1JhZGlvVGV4dBIPCgdtc2dfZHN0GAEgASgF" + 
        "Eg4KBmNsaWVudBgCIAEoBRIQCghtc2dfbmFtZRgDIAEoCRIOCgZwYXJhbXMY" + 
        "BCADKAkiIgoSQ0NTVXNyTXNnX0hpbnRUZXh0EgwKBHRleHQYASABKAkiJgoV" + 
        "Q0NTVXNyTXNnX0tleUhpbnRUZXh0Eg0KBWhpbnRzGAEgAygJItYCCiRDQ1NV" + 
        "c3JNc2dfUHJvY2Vzc1Nwb3R0ZWRFbnRpdHlVcGRhdGUSEgoKbmV3X3VwZGF0" + 
        "ZRgBIAEoCBJRCg5lbnRpdHlfdXBkYXRlcxgCIAMoCzI5LkNDU1Vzck1zZ19Q" + 
        "cm9jZXNzU3BvdHRlZEVudGl0eVVwZGF0ZS5TcG90dGVkRW50aXR5VXBkYXRl" + 
        "GsYBChNTcG90dGVkRW50aXR5VXBkYXRlEhIKCmVudGl0eV9pZHgYASABKAUS" + 
        "EAoIY2xhc3NfaWQYAiABKAUSEAoIb3JpZ2luX3gYAyABKAUSEAoIb3JpZ2lu" + 
        "X3kYBCABKAUSEAoIb3JpZ2luX3oYBSABKAUSDwoHYW5nbGVfeRgGIAEoBRIP" + 
        "CgdkZWZ1c2VyGAcgASgIEhoKEnBsYXllcl9oYXNfZGVmdXNlchgIIAEoCBIV" + 
        "Cg1wbGF5ZXJfaGFzX2M0GAkgASgIIlMKHUNDU1Vzck1zZ19TZW5kUGxheWVy" + 
        "SXRlbURyb3BzEjIKDmVudGl0eV91cGRhdGVzGAEgAygLMhouQ0Vjb25JdGVt" + 
        "UHJldmlld0RhdGFCbG9jayJfCh1DQ1NVc3JNc2dfU2VuZFBsYXllckl0ZW1G" + 
        "b3VuZBIsCghpdGVtaW5mbxgBIAEoCzIaLkNFY29uSXRlbVByZXZpZXdEYXRh" + 
        "QmxvY2sSEAoIZW50aW5kZXgYAiABKAUiOQoWQ0NTVXNyTXNnX1JlbG9hZEVm" + 
        "ZmVjdBIOCgZlbnRpZHgYASABKAUSDwoHYWN0YW5pbRgCIAEoBSInChVDQ1NV" + 
        "c3JNc2dfQWRqdXN0TW9uZXkSDgoGYW1vdW50GAEgASgFIlIKEUNDU1Vzck1z" + 
        "Z19LaWxsQ2FtEhAKCG9ic19tb2RlGAEgASgFEhQKDGZpcnN0X3RhcmdldBgC" + 
        "IAEoBRIVCg1zZWNvbmRfdGFyZ2V0GAMgASgFIosBChpDQ1NVc3JNc2dfRGVz" + 
        "aXJlZFRpbWVzY2FsZRIZChFkZXNpcmVkX3RpbWVzY2FsZRgBIAEoAhIdChVk" + 
        "dXJhdGlvbl9yZWFsdGltZV9zZWMYAiABKAISGQoRaW50ZXJwb2xhdG9yX3R5" + 
        "cGUYAyABKAUSGAoQc3RhcnRfYmxlbmRfdGltZRgEIAEoAiIzChpDQ1NVc3JN" + 
        "c2dfQ3VycmVudFRpbWVzY2FsZRIVCg1jdXJfdGltZXNjYWxlGAEgASgCIlEK" + 
        "GkNDU1Vzck1zZ19BY2hpZXZlbWVudEV2ZW50EhMKC2FjaGlldmVtZW50GAEg" + 
        "ASgFEg0KBWNvdW50GAIgASgFEg8KB3VzZXJfaWQYAyABKAUicgocQ0NTVXNy" + 
        "TXNnX01hdGNoRW5kQ29uZGl0aW9ucxIRCglmcmFnbGltaXQYASABKAUSFAoM" + 
        "bXBfbWF4cm91bmRzGAIgASgFEhMKC21wX3dpbmxpbWl0GAMgASgFEhQKDG1w" + 
        "X3RpbWVsaW1pdBgEIAEoBSKiAQobQ0NTVXNyTXNnX1BsYXllclN0YXRzVXBk" + 
        "YXRlEg8KB3ZlcnNpb24YASABKAUSMAoFc3RhdHMYBCADKAsyIS5DQ1NVc3JN" + 
        "c2dfUGxheWVyU3RhdHNVcGRhdGUuU3RhdBIPCgd1c2VyX2lkGAUgASgFEgsK" + 
        "A2NyYxgGIAEoBRoiCgRTdGF0EgsKA2lkeBgBIAEoBRINCgVkZWx0YRgCIAEo" + 
        "BSI+ChpDQ1NVc3JNc2dfRGlzcGxheUludmVudG9yeRIPCgdkaXNwbGF5GAEg" + 
        "ASgIEg8KB3VzZXJfaWQYAiABKAUiOgoSQ0NTVXNyTXNnX1hSYW5rR2V0EhAK" + 
        "CG1vZGVfaWR4GAEgASgFEhIKCmNvbnRyb2xsZXIYAiABKAUiSwoSQ0NTVXNy" + 
        "TXNnX1hSYW5rVXBkEhAKCG1vZGVfaWR4GAEgASgFEhIKCmNvbnRyb2xsZXIY" + 
        "AiABKAUSDwoHcmFua2luZxgDIAEoBSI4ChhDQ1NVc3JNc2dfQ2FsbFZvdGVG" + 
        "YWlsZWQSDgoGcmVhc29uGAEgASgFEgwKBHRpbWUYAiABKAUingEKE0NDU1Vz" + 
        "ck1zZ19Wb3RlU3RhcnQSDAoEdGVhbRgBIAEoBRIPCgdlbnRfaWR4GAIgASgF" + 
        "EhEKCXZvdGVfdHlwZRgDIAEoBRIQCghkaXNwX3N0chgEIAEoCRITCgtkZXRh" + 
        "aWxzX3N0chgFIAEoCRIWCg5vdGhlcl90ZWFtX3N0chgGIAEoCRIWCg5pc195" + 
        "ZXNfbm9fdm90ZRgHIAEoCCJcChJDQ1NVc3JNc2dfVm90ZVBhc3MSDAoEdGVh" + 
        "bRgBIAEoBRIRCgl2b3RlX3R5cGUYAiABKAUSEAoIZGlzcF9zdHIYAyABKAkS" + 
        "EwoLZGV0YWlsc19zdHIYBCABKAkiNAoUQ0NTVXNyTXNnX1ZvdGVGYWlsZWQS" + 
        "DAoEdGVhbRgBIAEoBRIOCgZyZWFzb24YAiABKAUiLwoTQ0NTVXNyTXNnX1Zv" + 
        "dGVTZXR1cBIYChBwb3RlbnRpYWxfaXNzdWVzGAEgAygJIoQBCiZDQ1NVc3JN" + 
        "c2dfU2VuZExhc3RLaWxsZXJEYW1hZ2VUb0NsaWVudBIWCg5udW1faGl0c19n" + 
        "aXZlbhgBIAEoBRIUCgxkYW1hZ2VfZ2l2ZW4YAiABKAUSFgoObnVtX2hpdHNf" + 
        "dGFrZW4YAyABKAUSFAoMZGFtYWdlX3Rha2VuGAQgASgFIsYBChpDQ1NVc3JN" + 
        "c2dfU2VydmVyUmFua1VwZGF0ZRI7CgtyYW5rX3VwZGF0ZRgBIAMoCzImLkND" + 
        "U1Vzck1zZ19TZXJ2ZXJSYW5rVXBkYXRlLlJhbmtVcGRhdGUaawoKUmFua1Vw" + 
        "ZGF0ZRISCgphY2NvdW50X2lkGAEgASgFEhAKCHJhbmtfb2xkGAIgASgFEhAK" + 
        "CHJhbmtfbmV3GAMgASgFEhAKCG51bV93aW5zGAQgASgFEhMKC3JhbmtfY2hh" + 
        "bmdlGAUgASgCIiQKFENDU1Vzck1zZ19JdGVtUGlja3VwEgwKBGl0ZW0YASAB" + 
        "KAkiWQoSQ0NTVXNyTXNnX1Nob3dNZW51EhgKEGJpdHNfdmFsaWRfc2xvdHMY" + 
        "ASABKAUSFAoMZGlzcGxheV90aW1lGAIgASgFEhMKC21lbnVfc3RyaW5nGAMg" + 
        "ASgJIiEKEUNDU1Vzck1zZ19CYXJUaW1lEgwKBHRpbWUYASABKAkiJwoUQ0NT" + 
        "VXNyTXNnX0FtbW9EZW5pZWQSDwoHYW1tb0lkeBgBIAEoBSIwChlDQ1NVc3JN" + 
        "c2dfTWFya0FjaGlldmVtZW50EhMKC2FjaGlldmVtZW50GAEgASgJIiwKGkND" + 
        "U1Vzck1zZ19NYXRjaFN0YXRzVXBkYXRlEg4KBnVwZGF0ZRgBIAEoCSIzChJD" + 
        "Q1NVc3JNc2dfSXRlbURyb3ASDgoGaXRlbWlkGAEgASgDEg0KBWRlYXRoGAIg" + 
        "ASgIIisKGUNDU1Vzck1zZ19HbG93UHJvcFR1cm5PZmYSDgoGZW50aWR4GAEg" + 
        "ASgFImIKHkNDU1Vzck1zZ19Sb3VuZEJhY2t1cEZpbGVuYW1lcxINCgVjb3Vu" + 
        "dBgBIAEoBRINCgVpbmRleBgCIAEoBRIQCghmaWxlbmFtZRgDIAEoCRIQCghu" + 
        "aWNlbmFtZRgEIAEoCSIjChJDQ1NVc3JNc2dfUmVzZXRIdWQSDQoFcmVzZXQY" + 
        "ASABKAgiJAoTQ0NTVXNyTXNnX0dhbWVUaXRsZRINCgVkdW1teRgBIAEoBSIn" + 
        "ChZDQ1NVc3JNc2dfUmVxdWVzdFN0YXRlEg0KBWR1bW15GAEgASgFIiwKG0ND" + 
        "U1Vzck1zZ19TdG9wU3BlY3RhdG9yTW9kZRINCgVkdW1teRgBIAEoBSIsChtD" + 
        "Q1NVc3JNc2dfRGlzY29ubmVjdFRvTG9iYnkSDQoFZHVtbXkYASABKAUiKQoY" + 
        "Q0NTVXNyTXNnX1dhcm11cEhhc0VuZGVkEg0KBWR1bW15GAEgASgFIiUKFEND" + 
        "U1Vzck1zZ19DbGllbnRJbmZvEg0KBWR1bW15GAEgASgFIj4KHUNDU1Vzck1z" + 
        "Z19TZXJ2ZXJSYW5rUmV2ZWFsQWxsEh0KFXNlY29uZHNfdGlsbF9zaHV0ZG93" + 
        "bhgBIAEoBSqQCwoWRUNzdHJpa2UxNVVzZXJNZXNzYWdlcxISCg5DU19VTV9W" + 
        "R1VJTWVudRABEhAKDENTX1VNX0dlaWdlchACEg8KC0NTX1VNX1RyYWluEAMS" + 
        "EQoNQ1NfVU1fSHVkVGV4dBAEEhEKDUNTX1VNX1NheVRleHQQBRISCg5DU19V" + 
        "TV9TYXlUZXh0MhAGEhEKDUNTX1VNX1RleHRNc2cQBxIQCgxDU19VTV9IdWRN" + 
        "c2cQCBISCg5DU19VTV9SZXNldEh1ZBAJEhMKD0NTX1VNX0dhbWVUaXRsZRAK" + 
        "Eg8KC0NTX1VNX1NoYWtlEAwSDgoKQ1NfVU1fRmFkZRANEhAKDENTX1VNX1J1" + 
        "bWJsZRAOEhYKEkNTX1VNX0Nsb3NlQ2FwdGlvbhAPEhwKGENTX1VNX0Nsb3Nl" + 
        "Q2FwdGlvbkRpcmVjdBAQEhMKD0NTX1VNX1NlbmRBdWRpbxAREhIKDkNTX1VN" + 
        "X1Jhd0F1ZGlvEBISEwoPQ1NfVU1fVm9pY2VNYXNrEBMSFgoSQ1NfVU1fUmVx" + 
        "dWVzdFN0YXRlEBQSEAoMQ1NfVU1fRGFtYWdlEBUSEwoPQ1NfVU1fUmFkaW9U" + 
        "ZXh0EBYSEgoOQ1NfVU1fSGludFRleHQQFxIVChFDU19VTV9LZXlIaW50VGV4" + 
        "dBAYEiQKIENTX1VNX1Byb2Nlc3NTcG90dGVkRW50aXR5VXBkYXRlEBkSFgoS" + 
        "Q1NfVU1fUmVsb2FkRWZmZWN0EBoSFQoRQ1NfVU1fQWRqdXN0TW9uZXkQGxIZ" + 
        "ChVDU19VTV9VcGRhdGVUZWFtTW9uZXkQHBIbChdDU19VTV9TdG9wU3BlY3Rh" + 
        "dG9yTW9kZRAdEhEKDUNTX1VNX0tpbGxDYW0QHhIaChZDU19VTV9EZXNpcmVk" + 
        "VGltZXNjYWxlEB8SGgoWQ1NfVU1fQ3VycmVudFRpbWVzY2FsZRAgEhoKFkNT" + 
        "X1VNX0FjaGlldmVtZW50RXZlbnQQIRIcChhDU19VTV9NYXRjaEVuZENvbmRp" + 
        "dGlvbnMQIhIbChdDU19VTV9EaXNjb25uZWN0VG9Mb2JieRAjEhsKF0NTX1VN" + 
        "X1BsYXllclN0YXRzVXBkYXRlECQSGgoWQ1NfVU1fRGlzcGxheUludmVudG9y" + 
        "eRAlEhgKFENTX1VNX1dhcm11cEhhc0VuZGVkECYSFAoQQ1NfVU1fQ2xpZW50" + 
        "SW5mbxAnEhIKDkNTX1VNX1hSYW5rR2V0ECgSEgoOQ1NfVU1fWFJhbmtVcGQQ" + 
        "KRIYChRDU19VTV9DYWxsVm90ZUZhaWxlZBAtEhMKD0NTX1VNX1ZvdGVTdGFy" + 
        "dBAuEhIKDkNTX1VNX1ZvdGVQYXNzEC8SFAoQQ1NfVU1fVm90ZUZhaWxlZBAw" + 
        "EhMKD0NTX1VNX1ZvdGVTZXR1cBAxEh0KGUNTX1VNX1NlcnZlclJhbmtSZXZl" + 
        "YWxBbGwQMhImCiJDU19VTV9TZW5kTGFzdEtpbGxlckRhbWFnZVRvQ2xpZW50" + 
        "EDMSGgoWQ1NfVU1fU2VydmVyUmFua1VwZGF0ZRA0EhQKEENTX1VNX0l0ZW1Q" + 
        "aWNrdXAQNRISCg5DU19VTV9TaG93TWVudRA2EhEKDUNTX1VNX0JhclRpbWUQ" + 
        "NxIUChBDU19VTV9BbW1vRGVuaWVkEDgSGQoVQ1NfVU1fTWFya0FjaGlldmVt" + 
        "ZW50EDkSGgoWQ1NfVU1fTWF0Y2hTdGF0c1VwZGF0ZRA6EhIKDkNTX1VNX0l0" + 
        "ZW1Ecm9wEDsSGQoVQ1NfVU1fR2xvd1Byb3BUdXJuT2ZmEDwSHQoZQ1NfVU1f" + 
        "U2VuZFBsYXllckl0ZW1Ecm9wcxA9Eh4KGkNTX1VNX1JvdW5kQmFja3VwRmls" + 
        "ZW5hbWVzED4SHQoZQ1NfVU1fU2VuZFBsYXllckl0ZW1Gb3VuZBA/");
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_CCSUsrMsg_VGUIMenu__Descriptor = Descriptor.MessageTypes[0];
      internal__static_CCSUsrMsg_VGUIMenu__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VGUIMenu, global::CCSUsrMsg_VGUIMenu.Builder>(internal__static_CCSUsrMsg_VGUIMenu__Descriptor,
              new string[] { "Name", "Show", "Subkeys", });
      internal__static_CCSUsrMsg_VGUIMenu_Subkey__Descriptor = internal__static_CCSUsrMsg_VGUIMenu__Descriptor.NestedTypes[0];
      internal__static_CCSUsrMsg_VGUIMenu_Subkey__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VGUIMenu.Types.Subkey, global::CCSUsrMsg_VGUIMenu.Types.Subkey.Builder>(internal__static_CCSUsrMsg_VGUIMenu_Subkey__Descriptor,
              new string[] { "Name", "Str", });
      internal__static_CCSUsrMsg_Geiger__Descriptor = Descriptor.MessageTypes[1];
      internal__static_CCSUsrMsg_Geiger__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Geiger, global::CCSUsrMsg_Geiger.Builder>(internal__static_CCSUsrMsg_Geiger__Descriptor,
              new string[] { "Range", });
      internal__static_CCSUsrMsg_Train__Descriptor = Descriptor.MessageTypes[2];
      internal__static_CCSUsrMsg_Train__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Train, global::CCSUsrMsg_Train.Builder>(internal__static_CCSUsrMsg_Train__Descriptor,
              new string[] { "Train", });
      internal__static_CCSUsrMsg_HudText__Descriptor = Descriptor.MessageTypes[3];
      internal__static_CCSUsrMsg_HudText__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_HudText, global::CCSUsrMsg_HudText.Builder>(internal__static_CCSUsrMsg_HudText__Descriptor,
              new string[] { "Text", });
      internal__static_CCSUsrMsg_SayText__Descriptor = Descriptor.MessageTypes[4];
      internal__static_CCSUsrMsg_SayText__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SayText, global::CCSUsrMsg_SayText.Builder>(internal__static_CCSUsrMsg_SayText__Descriptor,
              new string[] { "EntIdx", "Text", "Chat", "Textallchat", });
      internal__static_CCSUsrMsg_SayText2__Descriptor = Descriptor.MessageTypes[5];
      internal__static_CCSUsrMsg_SayText2__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SayText2, global::CCSUsrMsg_SayText2.Builder>(internal__static_CCSUsrMsg_SayText2__Descriptor,
              new string[] { "EntIdx", "Chat", "MsgName", "Params", "Textallchat", });
      internal__static_CCSUsrMsg_TextMsg__Descriptor = Descriptor.MessageTypes[6];
      internal__static_CCSUsrMsg_TextMsg__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_TextMsg, global::CCSUsrMsg_TextMsg.Builder>(internal__static_CCSUsrMsg_TextMsg__Descriptor,
              new string[] { "MsgDst", "Params", });
      internal__static_CCSUsrMsg_HudMsg__Descriptor = Descriptor.MessageTypes[7];
      internal__static_CCSUsrMsg_HudMsg__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_HudMsg, global::CCSUsrMsg_HudMsg.Builder>(internal__static_CCSUsrMsg_HudMsg__Descriptor,
              new string[] { "Channel", "Pos", "Clr1", "Clr2", "Effect", "FadeInTime", "FadeOutTime", "HoldTime", "FxTime", "Text", });
      internal__static_CCSUsrMsg_Shake__Descriptor = Descriptor.MessageTypes[8];
      internal__static_CCSUsrMsg_Shake__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Shake, global::CCSUsrMsg_Shake.Builder>(internal__static_CCSUsrMsg_Shake__Descriptor,
              new string[] { "Command", "LocalAmplitude", "Frequency", "Duration", });
      internal__static_CCSUsrMsg_Fade__Descriptor = Descriptor.MessageTypes[9];
      internal__static_CCSUsrMsg_Fade__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Fade, global::CCSUsrMsg_Fade.Builder>(internal__static_CCSUsrMsg_Fade__Descriptor,
              new string[] { "Duration", "HoldTime", "Flags", "Clr", });
      internal__static_CCSUsrMsg_Rumble__Descriptor = Descriptor.MessageTypes[10];
      internal__static_CCSUsrMsg_Rumble__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Rumble, global::CCSUsrMsg_Rumble.Builder>(internal__static_CCSUsrMsg_Rumble__Descriptor,
              new string[] { "Index", "Data", "Flags", });
      internal__static_CCSUsrMsg_CloseCaption__Descriptor = Descriptor.MessageTypes[11];
      internal__static_CCSUsrMsg_CloseCaption__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_CloseCaption, global::CCSUsrMsg_CloseCaption.Builder>(internal__static_CCSUsrMsg_CloseCaption__Descriptor,
              new string[] { "Hash", "Duration", "FromPlayer", });
      internal__static_CCSUsrMsg_CloseCaptionDirect__Descriptor = Descriptor.MessageTypes[12];
      internal__static_CCSUsrMsg_CloseCaptionDirect__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_CloseCaptionDirect, global::CCSUsrMsg_CloseCaptionDirect.Builder>(internal__static_CCSUsrMsg_CloseCaptionDirect__Descriptor,
              new string[] { "Hash", "Duration", "FromPlayer", });
      internal__static_CCSUsrMsg_SendAudio__Descriptor = Descriptor.MessageTypes[13];
      internal__static_CCSUsrMsg_SendAudio__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SendAudio, global::CCSUsrMsg_SendAudio.Builder>(internal__static_CCSUsrMsg_SendAudio__Descriptor,
              new string[] { "RadioSound", });
      internal__static_CCSUsrMsg_RawAudio__Descriptor = Descriptor.MessageTypes[14];
      internal__static_CCSUsrMsg_RawAudio__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_RawAudio, global::CCSUsrMsg_RawAudio.Builder>(internal__static_CCSUsrMsg_RawAudio__Descriptor,
              new string[] { "Pitch", "Entidx", "Duration", "VoiceFilename", });
      internal__static_CCSUsrMsg_VoiceMask__Descriptor = Descriptor.MessageTypes[15];
      internal__static_CCSUsrMsg_VoiceMask__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VoiceMask, global::CCSUsrMsg_VoiceMask.Builder>(internal__static_CCSUsrMsg_VoiceMask__Descriptor,
              new string[] { "PlayerMasks", "PlayerModEnable", });
      internal__static_CCSUsrMsg_VoiceMask_PlayerMask__Descriptor = internal__static_CCSUsrMsg_VoiceMask__Descriptor.NestedTypes[0];
      internal__static_CCSUsrMsg_VoiceMask_PlayerMask__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VoiceMask.Types.PlayerMask, global::CCSUsrMsg_VoiceMask.Types.PlayerMask.Builder>(internal__static_CCSUsrMsg_VoiceMask_PlayerMask__Descriptor,
              new string[] { "GameRulesMask", "BanMasks", });
      internal__static_CCSUsrMsg_Damage__Descriptor = Descriptor.MessageTypes[16];
      internal__static_CCSUsrMsg_Damage__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_Damage, global::CCSUsrMsg_Damage.Builder>(internal__static_CCSUsrMsg_Damage__Descriptor,
              new string[] { "Amount", "InflictorWorldPos", });
      internal__static_CCSUsrMsg_RadioText__Descriptor = Descriptor.MessageTypes[17];
      internal__static_CCSUsrMsg_RadioText__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_RadioText, global::CCSUsrMsg_RadioText.Builder>(internal__static_CCSUsrMsg_RadioText__Descriptor,
              new string[] { "MsgDst", "Client", "MsgName", "Params", });
      internal__static_CCSUsrMsg_HintText__Descriptor = Descriptor.MessageTypes[18];
      internal__static_CCSUsrMsg_HintText__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_HintText, global::CCSUsrMsg_HintText.Builder>(internal__static_CCSUsrMsg_HintText__Descriptor,
              new string[] { "Text", });
      internal__static_CCSUsrMsg_KeyHintText__Descriptor = Descriptor.MessageTypes[19];
      internal__static_CCSUsrMsg_KeyHintText__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_KeyHintText, global::CCSUsrMsg_KeyHintText.Builder>(internal__static_CCSUsrMsg_KeyHintText__Descriptor,
              new string[] { "Hints", });
      internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate__Descriptor = Descriptor.MessageTypes[20];
      internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ProcessSpottedEntityUpdate, global::CCSUsrMsg_ProcessSpottedEntityUpdate.Builder>(internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate__Descriptor,
              new string[] { "NewUpdate", "EntityUpdates", });
      internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate__Descriptor = internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate__Descriptor.NestedTypes[0];
      internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate, global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate.Builder>(internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate__Descriptor,
              new string[] { "EntityIdx", "ClassId", "OriginX", "OriginY", "OriginZ", "AngleY", "Defuser", "PlayerHasDefuser", "PlayerHasC4", });
      internal__static_CCSUsrMsg_SendPlayerItemDrops__Descriptor = Descriptor.MessageTypes[21];
      internal__static_CCSUsrMsg_SendPlayerItemDrops__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SendPlayerItemDrops, global::CCSUsrMsg_SendPlayerItemDrops.Builder>(internal__static_CCSUsrMsg_SendPlayerItemDrops__Descriptor,
              new string[] { "EntityUpdates", });
      internal__static_CCSUsrMsg_SendPlayerItemFound__Descriptor = Descriptor.MessageTypes[22];
      internal__static_CCSUsrMsg_SendPlayerItemFound__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SendPlayerItemFound, global::CCSUsrMsg_SendPlayerItemFound.Builder>(internal__static_CCSUsrMsg_SendPlayerItemFound__Descriptor,
              new string[] { "Iteminfo", "Entindex", });
      internal__static_CCSUsrMsg_ReloadEffect__Descriptor = Descriptor.MessageTypes[23];
      internal__static_CCSUsrMsg_ReloadEffect__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ReloadEffect, global::CCSUsrMsg_ReloadEffect.Builder>(internal__static_CCSUsrMsg_ReloadEffect__Descriptor,
              new string[] { "Entidx", "Actanim", });
      internal__static_CCSUsrMsg_AdjustMoney__Descriptor = Descriptor.MessageTypes[24];
      internal__static_CCSUsrMsg_AdjustMoney__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_AdjustMoney, global::CCSUsrMsg_AdjustMoney.Builder>(internal__static_CCSUsrMsg_AdjustMoney__Descriptor,
              new string[] { "Amount", });
      internal__static_CCSUsrMsg_KillCam__Descriptor = Descriptor.MessageTypes[25];
      internal__static_CCSUsrMsg_KillCam__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_KillCam, global::CCSUsrMsg_KillCam.Builder>(internal__static_CCSUsrMsg_KillCam__Descriptor,
              new string[] { "ObsMode", "FirstTarget", "SecondTarget", });
      internal__static_CCSUsrMsg_DesiredTimescale__Descriptor = Descriptor.MessageTypes[26];
      internal__static_CCSUsrMsg_DesiredTimescale__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_DesiredTimescale, global::CCSUsrMsg_DesiredTimescale.Builder>(internal__static_CCSUsrMsg_DesiredTimescale__Descriptor,
              new string[] { "DesiredTimescale", "DurationRealtimeSec", "InterpolatorType", "StartBlendTime", });
      internal__static_CCSUsrMsg_CurrentTimescale__Descriptor = Descriptor.MessageTypes[27];
      internal__static_CCSUsrMsg_CurrentTimescale__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_CurrentTimescale, global::CCSUsrMsg_CurrentTimescale.Builder>(internal__static_CCSUsrMsg_CurrentTimescale__Descriptor,
              new string[] { "CurTimescale", });
      internal__static_CCSUsrMsg_AchievementEvent__Descriptor = Descriptor.MessageTypes[28];
      internal__static_CCSUsrMsg_AchievementEvent__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_AchievementEvent, global::CCSUsrMsg_AchievementEvent.Builder>(internal__static_CCSUsrMsg_AchievementEvent__Descriptor,
              new string[] { "Achievement", "Count", "UserId", });
      internal__static_CCSUsrMsg_MatchEndConditions__Descriptor = Descriptor.MessageTypes[29];
      internal__static_CCSUsrMsg_MatchEndConditions__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_MatchEndConditions, global::CCSUsrMsg_MatchEndConditions.Builder>(internal__static_CCSUsrMsg_MatchEndConditions__Descriptor,
              new string[] { "Fraglimit", "MpMaxrounds", "MpWinlimit", "MpTimelimit", });
      internal__static_CCSUsrMsg_PlayerStatsUpdate__Descriptor = Descriptor.MessageTypes[30];
      internal__static_CCSUsrMsg_PlayerStatsUpdate__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_PlayerStatsUpdate, global::CCSUsrMsg_PlayerStatsUpdate.Builder>(internal__static_CCSUsrMsg_PlayerStatsUpdate__Descriptor,
              new string[] { "Version", "Stats", "UserId", "Crc", });
      internal__static_CCSUsrMsg_PlayerStatsUpdate_Stat__Descriptor = internal__static_CCSUsrMsg_PlayerStatsUpdate__Descriptor.NestedTypes[0];
      internal__static_CCSUsrMsg_PlayerStatsUpdate_Stat__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat, global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat.Builder>(internal__static_CCSUsrMsg_PlayerStatsUpdate_Stat__Descriptor,
              new string[] { "Idx", "Delta", });
      internal__static_CCSUsrMsg_DisplayInventory__Descriptor = Descriptor.MessageTypes[31];
      internal__static_CCSUsrMsg_DisplayInventory__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_DisplayInventory, global::CCSUsrMsg_DisplayInventory.Builder>(internal__static_CCSUsrMsg_DisplayInventory__Descriptor,
              new string[] { "Display", "UserId", });
      internal__static_CCSUsrMsg_XRankGet__Descriptor = Descriptor.MessageTypes[32];
      internal__static_CCSUsrMsg_XRankGet__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_XRankGet, global::CCSUsrMsg_XRankGet.Builder>(internal__static_CCSUsrMsg_XRankGet__Descriptor,
              new string[] { "ModeIdx", "Controller", });
      internal__static_CCSUsrMsg_XRankUpd__Descriptor = Descriptor.MessageTypes[33];
      internal__static_CCSUsrMsg_XRankUpd__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_XRankUpd, global::CCSUsrMsg_XRankUpd.Builder>(internal__static_CCSUsrMsg_XRankUpd__Descriptor,
              new string[] { "ModeIdx", "Controller", "Ranking", });
      internal__static_CCSUsrMsg_CallVoteFailed__Descriptor = Descriptor.MessageTypes[34];
      internal__static_CCSUsrMsg_CallVoteFailed__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_CallVoteFailed, global::CCSUsrMsg_CallVoteFailed.Builder>(internal__static_CCSUsrMsg_CallVoteFailed__Descriptor,
              new string[] { "Reason", "Time", });
      internal__static_CCSUsrMsg_VoteStart__Descriptor = Descriptor.MessageTypes[35];
      internal__static_CCSUsrMsg_VoteStart__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VoteStart, global::CCSUsrMsg_VoteStart.Builder>(internal__static_CCSUsrMsg_VoteStart__Descriptor,
              new string[] { "Team", "EntIdx", "VoteType", "DispStr", "DetailsStr", "OtherTeamStr", "IsYesNoVote", });
      internal__static_CCSUsrMsg_VotePass__Descriptor = Descriptor.MessageTypes[36];
      internal__static_CCSUsrMsg_VotePass__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VotePass, global::CCSUsrMsg_VotePass.Builder>(internal__static_CCSUsrMsg_VotePass__Descriptor,
              new string[] { "Team", "VoteType", "DispStr", "DetailsStr", });
      internal__static_CCSUsrMsg_VoteFailed__Descriptor = Descriptor.MessageTypes[37];
      internal__static_CCSUsrMsg_VoteFailed__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VoteFailed, global::CCSUsrMsg_VoteFailed.Builder>(internal__static_CCSUsrMsg_VoteFailed__Descriptor,
              new string[] { "Team", "Reason", });
      internal__static_CCSUsrMsg_VoteSetup__Descriptor = Descriptor.MessageTypes[38];
      internal__static_CCSUsrMsg_VoteSetup__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_VoteSetup, global::CCSUsrMsg_VoteSetup.Builder>(internal__static_CCSUsrMsg_VoteSetup__Descriptor,
              new string[] { "PotentialIssues", });
      internal__static_CCSUsrMsg_SendLastKillerDamageToClient__Descriptor = Descriptor.MessageTypes[39];
      internal__static_CCSUsrMsg_SendLastKillerDamageToClient__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_SendLastKillerDamageToClient, global::CCSUsrMsg_SendLastKillerDamageToClient.Builder>(internal__static_CCSUsrMsg_SendLastKillerDamageToClient__Descriptor,
              new string[] { "NumHitsGiven", "DamageGiven", "NumHitsTaken", "DamageTaken", });
      internal__static_CCSUsrMsg_ServerRankUpdate__Descriptor = Descriptor.MessageTypes[40];
      internal__static_CCSUsrMsg_ServerRankUpdate__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ServerRankUpdate, global::CCSUsrMsg_ServerRankUpdate.Builder>(internal__static_CCSUsrMsg_ServerRankUpdate__Descriptor,
              new string[] { "RankUpdate", });
      internal__static_CCSUsrMsg_ServerRankUpdate_RankUpdate__Descriptor = internal__static_CCSUsrMsg_ServerRankUpdate__Descriptor.NestedTypes[0];
      internal__static_CCSUsrMsg_ServerRankUpdate_RankUpdate__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate, global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate.Builder>(internal__static_CCSUsrMsg_ServerRankUpdate_RankUpdate__Descriptor,
              new string[] { "AccountId", "RankOld", "RankNew", "NumWins", "RankChange", });
      internal__static_CCSUsrMsg_ItemPickup__Descriptor = Descriptor.MessageTypes[41];
      internal__static_CCSUsrMsg_ItemPickup__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ItemPickup, global::CCSUsrMsg_ItemPickup.Builder>(internal__static_CCSUsrMsg_ItemPickup__Descriptor,
              new string[] { "Item", });
      internal__static_CCSUsrMsg_ShowMenu__Descriptor = Descriptor.MessageTypes[42];
      internal__static_CCSUsrMsg_ShowMenu__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ShowMenu, global::CCSUsrMsg_ShowMenu.Builder>(internal__static_CCSUsrMsg_ShowMenu__Descriptor,
              new string[] { "BitsValidSlots", "DisplayTime", "MenuString", });
      internal__static_CCSUsrMsg_BarTime__Descriptor = Descriptor.MessageTypes[43];
      internal__static_CCSUsrMsg_BarTime__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_BarTime, global::CCSUsrMsg_BarTime.Builder>(internal__static_CCSUsrMsg_BarTime__Descriptor,
              new string[] { "Time", });
      internal__static_CCSUsrMsg_AmmoDenied__Descriptor = Descriptor.MessageTypes[44];
      internal__static_CCSUsrMsg_AmmoDenied__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_AmmoDenied, global::CCSUsrMsg_AmmoDenied.Builder>(internal__static_CCSUsrMsg_AmmoDenied__Descriptor,
              new string[] { "AmmoIdx", });
      internal__static_CCSUsrMsg_MarkAchievement__Descriptor = Descriptor.MessageTypes[45];
      internal__static_CCSUsrMsg_MarkAchievement__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_MarkAchievement, global::CCSUsrMsg_MarkAchievement.Builder>(internal__static_CCSUsrMsg_MarkAchievement__Descriptor,
              new string[] { "Achievement", });
      internal__static_CCSUsrMsg_MatchStatsUpdate__Descriptor = Descriptor.MessageTypes[46];
      internal__static_CCSUsrMsg_MatchStatsUpdate__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_MatchStatsUpdate, global::CCSUsrMsg_MatchStatsUpdate.Builder>(internal__static_CCSUsrMsg_MatchStatsUpdate__Descriptor,
              new string[] { "Update", });
      internal__static_CCSUsrMsg_ItemDrop__Descriptor = Descriptor.MessageTypes[47];
      internal__static_CCSUsrMsg_ItemDrop__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ItemDrop, global::CCSUsrMsg_ItemDrop.Builder>(internal__static_CCSUsrMsg_ItemDrop__Descriptor,
              new string[] { "Itemid", "Death", });
      internal__static_CCSUsrMsg_GlowPropTurnOff__Descriptor = Descriptor.MessageTypes[48];
      internal__static_CCSUsrMsg_GlowPropTurnOff__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_GlowPropTurnOff, global::CCSUsrMsg_GlowPropTurnOff.Builder>(internal__static_CCSUsrMsg_GlowPropTurnOff__Descriptor,
              new string[] { "Entidx", });
      internal__static_CCSUsrMsg_RoundBackupFilenames__Descriptor = Descriptor.MessageTypes[49];
      internal__static_CCSUsrMsg_RoundBackupFilenames__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_RoundBackupFilenames, global::CCSUsrMsg_RoundBackupFilenames.Builder>(internal__static_CCSUsrMsg_RoundBackupFilenames__Descriptor,
              new string[] { "Count", "Index", "Filename", "Nicename", });
      internal__static_CCSUsrMsg_ResetHud__Descriptor = Descriptor.MessageTypes[50];
      internal__static_CCSUsrMsg_ResetHud__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ResetHud, global::CCSUsrMsg_ResetHud.Builder>(internal__static_CCSUsrMsg_ResetHud__Descriptor,
              new string[] { "Reset", });
      internal__static_CCSUsrMsg_GameTitle__Descriptor = Descriptor.MessageTypes[51];
      internal__static_CCSUsrMsg_GameTitle__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_GameTitle, global::CCSUsrMsg_GameTitle.Builder>(internal__static_CCSUsrMsg_GameTitle__Descriptor,
              new string[] { "Dummy", });
      internal__static_CCSUsrMsg_RequestState__Descriptor = Descriptor.MessageTypes[52];
      internal__static_CCSUsrMsg_RequestState__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_RequestState, global::CCSUsrMsg_RequestState.Builder>(internal__static_CCSUsrMsg_RequestState__Descriptor,
              new string[] { "Dummy", });
      internal__static_CCSUsrMsg_StopSpectatorMode__Descriptor = Descriptor.MessageTypes[53];
      internal__static_CCSUsrMsg_StopSpectatorMode__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_StopSpectatorMode, global::CCSUsrMsg_StopSpectatorMode.Builder>(internal__static_CCSUsrMsg_StopSpectatorMode__Descriptor,
              new string[] { "Dummy", });
      internal__static_CCSUsrMsg_DisconnectToLobby__Descriptor = Descriptor.MessageTypes[54];
      internal__static_CCSUsrMsg_DisconnectToLobby__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_DisconnectToLobby, global::CCSUsrMsg_DisconnectToLobby.Builder>(internal__static_CCSUsrMsg_DisconnectToLobby__Descriptor,
              new string[] { "Dummy", });
      internal__static_CCSUsrMsg_WarmupHasEnded__Descriptor = Descriptor.MessageTypes[55];
      internal__static_CCSUsrMsg_WarmupHasEnded__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_WarmupHasEnded, global::CCSUsrMsg_WarmupHasEnded.Builder>(internal__static_CCSUsrMsg_WarmupHasEnded__Descriptor,
              new string[] { "Dummy", });
      internal__static_CCSUsrMsg_ClientInfo__Descriptor = Descriptor.MessageTypes[56];
      internal__static_CCSUsrMsg_ClientInfo__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ClientInfo, global::CCSUsrMsg_ClientInfo.Builder>(internal__static_CCSUsrMsg_ClientInfo__Descriptor,
              new string[] { "Dummy", });
      internal__static_CCSUsrMsg_ServerRankRevealAll__Descriptor = Descriptor.MessageTypes[57];
      internal__static_CCSUsrMsg_ServerRankRevealAll__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CCSUsrMsg_ServerRankRevealAll, global::CCSUsrMsg_ServerRankRevealAll.Builder>(internal__static_CCSUsrMsg_ServerRankRevealAll__Descriptor,
              new string[] { "SecondsTillShutdown", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        global::Google.ProtocolBuffers.DescriptorProtos.DescriptorProtoFile.Descriptor, 
        global::Netmessages.Descriptor, 
        global::Cstrike15Gcmessages.Descriptor, 
        }, assigner);
  }
  #endregion
  
}
#region Enums
public enum ECstrike15UserMessages {
  CS_UM_VGUIMenu = 1,
  CS_UM_Geiger = 2,
  CS_UM_Train = 3,
  CS_UM_HudText = 4,
  CS_UM_SayText = 5,
  CS_UM_SayText2 = 6,
  CS_UM_TextMsg = 7,
  CS_UM_HudMsg = 8,
  CS_UM_ResetHud = 9,
  CS_UM_GameTitle = 10,
  CS_UM_Shake = 12,
  CS_UM_Fade = 13,
  CS_UM_Rumble = 14,
  CS_UM_CloseCaption = 15,
  CS_UM_CloseCaptionDirect = 16,
  CS_UM_SendAudio = 17,
  CS_UM_RawAudio = 18,
  CS_UM_VoiceMask = 19,
  CS_UM_RequestState = 20,
  CS_UM_Damage = 21,
  CS_UM_RadioText = 22,
  CS_UM_HintText = 23,
  CS_UM_KeyHintText = 24,
  CS_UM_ProcessSpottedEntityUpdate = 25,
  CS_UM_ReloadEffect = 26,
  CS_UM_AdjustMoney = 27,
  CS_UM_UpdateTeamMoney = 28,
  CS_UM_StopSpectatorMode = 29,
  CS_UM_KillCam = 30,
  CS_UM_DesiredTimescale = 31,
  CS_UM_CurrentTimescale = 32,
  CS_UM_AchievementEvent = 33,
  CS_UM_MatchEndConditions = 34,
  CS_UM_DisconnectToLobby = 35,
  CS_UM_PlayerStatsUpdate = 36,
  CS_UM_DisplayInventory = 37,
  CS_UM_WarmupHasEnded = 38,
  CS_UM_ClientInfo = 39,
  CS_UM_XRankGet = 40,
  CS_UM_XRankUpd = 41,
  CS_UM_CallVoteFailed = 45,
  CS_UM_VoteStart = 46,
  CS_UM_VotePass = 47,
  CS_UM_VoteFailed = 48,
  CS_UM_VoteSetup = 49,
  CS_UM_ServerRankRevealAll = 50,
  CS_UM_SendLastKillerDamageToClient = 51,
  CS_UM_ServerRankUpdate = 52,
  CS_UM_ItemPickup = 53,
  CS_UM_ShowMenu = 54,
  CS_UM_BarTime = 55,
  CS_UM_AmmoDenied = 56,
  CS_UM_MarkAchievement = 57,
  CS_UM_MatchStatsUpdate = 58,
  CS_UM_ItemDrop = 59,
  CS_UM_GlowPropTurnOff = 60,
  CS_UM_SendPlayerItemDrops = 61,
  CS_UM_RoundBackupFilenames = 62,
  CS_UM_SendPlayerItemFound = 63,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_VGUIMenu : pb::GeneratedMessage<CCSUsrMsg_VGUIMenu, CCSUsrMsg_VGUIMenu.Builder> {
  private CCSUsrMsg_VGUIMenu() { }
  private static readonly CCSUsrMsg_VGUIMenu defaultInstance = new CCSUsrMsg_VGUIMenu().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgVGUIMenuFieldNames = new string[] { "name", "show", "subkeys" };
  private static readonly uint[] _cCSUsrMsgVGUIMenuFieldTags = new uint[] { 10, 16, 26 };
  public static CCSUsrMsg_VGUIMenu DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_VGUIMenu DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_VGUIMenu ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VGUIMenu__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_VGUIMenu, CCSUsrMsg_VGUIMenu.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VGUIMenu__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Subkey : pb::GeneratedMessage<Subkey, Subkey.Builder> {
      private Subkey() { }
      private static readonly Subkey defaultInstance = new Subkey().MakeReadOnly();
      private static readonly string[] _subkeyFieldNames = new string[] { "name", "str" };
      private static readonly uint[] _subkeyFieldTags = new uint[] { 10, 18 };
      public static Subkey DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Subkey DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Subkey ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VGUIMenu_Subkey__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Subkey, Subkey.Builder> InternalFieldAccessors {
        get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VGUIMenu_Subkey__FieldAccessorTable; }
      }
      
      public const int NameFieldNumber = 1;
      private bool hasName;
      private string name_ = "";
      public bool HasName {
        get { return hasName; }
      }
      public string Name {
        get { return name_; }
      }
      
      public const int StrFieldNumber = 2;
      private bool hasStr;
      private string str_ = "";
      public bool HasStr {
        get { return hasStr; }
      }
      public string Str {
        get { return str_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _subkeyFieldNames;
        if (hasName) {
          output.WriteString(1, field_names[0], Name);
        }
        if (hasStr) {
          output.WriteString(2, field_names[1], Str);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasName) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Name);
          }
          if (hasStr) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Str);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static Subkey ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Subkey ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Subkey ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Subkey ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Subkey ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Subkey ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Subkey ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Subkey ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Subkey ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Subkey ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Subkey MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Subkey prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Subkey, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Subkey cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Subkey result;
        
        private Subkey PrepareBuilder() {
          if (resultIsReadOnly) {
            Subkey original = result;
            result = new Subkey();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Subkey MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CCSUsrMsg_VGUIMenu.Types.Subkey.Descriptor; }
        }
        
        public override Subkey DefaultInstanceForType {
          get { return global::CCSUsrMsg_VGUIMenu.Types.Subkey.DefaultInstance; }
        }
        
        public override Subkey BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Subkey) {
            return MergeFrom((Subkey) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Subkey other) {
          if (other == global::CCSUsrMsg_VGUIMenu.Types.Subkey.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasStr) {
            Str = other.Str;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_subkeyFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _subkeyFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasName = input.ReadString(ref result.name_);
                break;
              }
              case 18: {
                result.hasStr = input.ReadString(ref result.str_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasName {
          get { return result.hasName; }
        }
        public string Name {
          get { return result.Name; }
          set { SetName(value); }
        }
        public Builder SetName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder ClearName() {
          PrepareBuilder();
          result.hasName = false;
          result.name_ = "";
          return this;
        }
        
        public bool HasStr {
          get { return result.hasStr; }
        }
        public string Str {
          get { return result.Str; }
          set { SetStr(value); }
        }
        public Builder SetStr(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasStr = true;
          result.str_ = value;
          return this;
        }
        public Builder ClearStr() {
          PrepareBuilder();
          result.hasStr = false;
          result.str_ = "";
          return this;
        }
      }
      static Subkey() {
        object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int ShowFieldNumber = 2;
  private bool hasShow;
  private bool show_;
  public bool HasShow {
    get { return hasShow; }
  }
  public bool Show {
    get { return show_; }
  }
  
  public const int SubkeysFieldNumber = 3;
  private pbc::PopsicleList<global::CCSUsrMsg_VGUIMenu.Types.Subkey> subkeys_ = new pbc::PopsicleList<global::CCSUsrMsg_VGUIMenu.Types.Subkey>();
  public scg::IList<global::CCSUsrMsg_VGUIMenu.Types.Subkey> SubkeysList {
    get { return subkeys_; }
  }
  public int SubkeysCount {
    get { return subkeys_.Count; }
  }
  public global::CCSUsrMsg_VGUIMenu.Types.Subkey GetSubkeys(int index) {
    return subkeys_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgVGUIMenuFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[0], Name);
    }
    if (hasShow) {
      output.WriteBool(2, field_names[1], Show);
    }
    if (subkeys_.Count > 0) {
      output.WriteMessageArray(3, field_names[2], subkeys_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasShow) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, Show);
      }
      foreach (global::CCSUsrMsg_VGUIMenu.Types.Subkey element in SubkeysList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_VGUIMenu ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VGUIMenu ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VGUIMenu ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VGUIMenu ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VGUIMenu ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VGUIMenu ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VGUIMenu ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_VGUIMenu ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_VGUIMenu ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VGUIMenu ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_VGUIMenu MakeReadOnly() {
    subkeys_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_VGUIMenu prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_VGUIMenu, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_VGUIMenu cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_VGUIMenu result;
    
    private CCSUsrMsg_VGUIMenu PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_VGUIMenu original = result;
        result = new CCSUsrMsg_VGUIMenu();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_VGUIMenu MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_VGUIMenu.Descriptor; }
    }
    
    public override CCSUsrMsg_VGUIMenu DefaultInstanceForType {
      get { return global::CCSUsrMsg_VGUIMenu.DefaultInstance; }
    }
    
    public override CCSUsrMsg_VGUIMenu BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_VGUIMenu) {
        return MergeFrom((CCSUsrMsg_VGUIMenu) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_VGUIMenu other) {
      if (other == global::CCSUsrMsg_VGUIMenu.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasShow) {
        Show = other.Show;
      }
      if (other.subkeys_.Count != 0) {
        result.subkeys_.Add(other.subkeys_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgVGUIMenuFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgVGUIMenuFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 16: {
            result.hasShow = input.ReadBool(ref result.show_);
            break;
          }
          case 26: {
            input.ReadMessageArray(tag, field_name, result.subkeys_, global::CCSUsrMsg_VGUIMenu.Types.Subkey.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasShow {
      get { return result.hasShow; }
    }
    public bool Show {
      get { return result.Show; }
      set { SetShow(value); }
    }
    public Builder SetShow(bool value) {
      PrepareBuilder();
      result.hasShow = true;
      result.show_ = value;
      return this;
    }
    public Builder ClearShow() {
      PrepareBuilder();
      result.hasShow = false;
      result.show_ = false;
      return this;
    }
    
    public pbc::IPopsicleList<global::CCSUsrMsg_VGUIMenu.Types.Subkey> SubkeysList {
      get { return PrepareBuilder().subkeys_; }
    }
    public int SubkeysCount {
      get { return result.SubkeysCount; }
    }
    public global::CCSUsrMsg_VGUIMenu.Types.Subkey GetSubkeys(int index) {
      return result.GetSubkeys(index);
    }
    public Builder SetSubkeys(int index, global::CCSUsrMsg_VGUIMenu.Types.Subkey value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.subkeys_[index] = value;
      return this;
    }
    public Builder SetSubkeys(int index, global::CCSUsrMsg_VGUIMenu.Types.Subkey.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.subkeys_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddSubkeys(global::CCSUsrMsg_VGUIMenu.Types.Subkey value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.subkeys_.Add(value);
      return this;
    }
    public Builder AddSubkeys(global::CCSUsrMsg_VGUIMenu.Types.Subkey.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.subkeys_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeSubkeys(scg::IEnumerable<global::CCSUsrMsg_VGUIMenu.Types.Subkey> values) {
      PrepareBuilder();
      result.subkeys_.Add(values);
      return this;
    }
    public Builder ClearSubkeys() {
      PrepareBuilder();
      result.subkeys_.Clear();
      return this;
    }
  }
  static CCSUsrMsg_VGUIMenu() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_Geiger : pb::GeneratedMessage<CCSUsrMsg_Geiger, CCSUsrMsg_Geiger.Builder> {
  private CCSUsrMsg_Geiger() { }
  private static readonly CCSUsrMsg_Geiger defaultInstance = new CCSUsrMsg_Geiger().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgGeigerFieldNames = new string[] { "range" };
  private static readonly uint[] _cCSUsrMsgGeigerFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_Geiger DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_Geiger DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_Geiger ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Geiger__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_Geiger, CCSUsrMsg_Geiger.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Geiger__FieldAccessorTable; }
  }
  
  public const int RangeFieldNumber = 1;
  private bool hasRange;
  private int range_;
  public bool HasRange {
    get { return hasRange; }
  }
  public int Range {
    get { return range_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgGeigerFieldNames;
    if (hasRange) {
      output.WriteInt32(1, field_names[0], Range);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRange) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Range);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_Geiger ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Geiger ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Geiger ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Geiger ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Geiger ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Geiger ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Geiger ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_Geiger ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_Geiger ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Geiger ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_Geiger MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_Geiger prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_Geiger, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_Geiger cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_Geiger result;
    
    private CCSUsrMsg_Geiger PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_Geiger original = result;
        result = new CCSUsrMsg_Geiger();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_Geiger MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_Geiger.Descriptor; }
    }
    
    public override CCSUsrMsg_Geiger DefaultInstanceForType {
      get { return global::CCSUsrMsg_Geiger.DefaultInstance; }
    }
    
    public override CCSUsrMsg_Geiger BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_Geiger) {
        return MergeFrom((CCSUsrMsg_Geiger) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_Geiger other) {
      if (other == global::CCSUsrMsg_Geiger.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasRange) {
        Range = other.Range;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgGeigerFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgGeigerFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasRange = input.ReadInt32(ref result.range_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasRange {
      get { return result.hasRange; }
    }
    public int Range {
      get { return result.Range; }
      set { SetRange(value); }
    }
    public Builder SetRange(int value) {
      PrepareBuilder();
      result.hasRange = true;
      result.range_ = value;
      return this;
    }
    public Builder ClearRange() {
      PrepareBuilder();
      result.hasRange = false;
      result.range_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_Geiger() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_Train : pb::GeneratedMessage<CCSUsrMsg_Train, CCSUsrMsg_Train.Builder> {
  private CCSUsrMsg_Train() { }
  private static readonly CCSUsrMsg_Train defaultInstance = new CCSUsrMsg_Train().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgTrainFieldNames = new string[] { "train" };
  private static readonly uint[] _cCSUsrMsgTrainFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_Train DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_Train DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_Train ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Train__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_Train, CCSUsrMsg_Train.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Train__FieldAccessorTable; }
  }
  
  public const int TrainFieldNumber = 1;
  private bool hasTrain;
  private int train_;
  public bool HasTrain {
    get { return hasTrain; }
  }
  public int Train {
    get { return train_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgTrainFieldNames;
    if (hasTrain) {
      output.WriteInt32(1, field_names[0], Train);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTrain) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Train);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_Train ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Train ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Train ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Train ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Train ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Train ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Train ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_Train ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_Train ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Train ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_Train MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_Train prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_Train, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_Train cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_Train result;
    
    private CCSUsrMsg_Train PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_Train original = result;
        result = new CCSUsrMsg_Train();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_Train MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_Train.Descriptor; }
    }
    
    public override CCSUsrMsg_Train DefaultInstanceForType {
      get { return global::CCSUsrMsg_Train.DefaultInstance; }
    }
    
    public override CCSUsrMsg_Train BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_Train) {
        return MergeFrom((CCSUsrMsg_Train) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_Train other) {
      if (other == global::CCSUsrMsg_Train.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTrain) {
        Train = other.Train;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgTrainFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgTrainFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasTrain = input.ReadInt32(ref result.train_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTrain {
      get { return result.hasTrain; }
    }
    public int Train {
      get { return result.Train; }
      set { SetTrain(value); }
    }
    public Builder SetTrain(int value) {
      PrepareBuilder();
      result.hasTrain = true;
      result.train_ = value;
      return this;
    }
    public Builder ClearTrain() {
      PrepareBuilder();
      result.hasTrain = false;
      result.train_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_Train() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_HudText : pb::GeneratedMessage<CCSUsrMsg_HudText, CCSUsrMsg_HudText.Builder> {
  private CCSUsrMsg_HudText() { }
  private static readonly CCSUsrMsg_HudText defaultInstance = new CCSUsrMsg_HudText().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgHudTextFieldNames = new string[] { "text" };
  private static readonly uint[] _cCSUsrMsgHudTextFieldTags = new uint[] { 10 };
  public static CCSUsrMsg_HudText DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_HudText DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_HudText ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_HudText__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_HudText, CCSUsrMsg_HudText.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_HudText__FieldAccessorTable; }
  }
  
  public const int TextFieldNumber = 1;
  private bool hasText;
  private string text_ = "";
  public bool HasText {
    get { return hasText; }
  }
  public string Text {
    get { return text_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgHudTextFieldNames;
    if (hasText) {
      output.WriteString(1, field_names[0], Text);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Text);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_HudText ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_HudText ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_HudText ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_HudText ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_HudText ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_HudText ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_HudText ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_HudText ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_HudText ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_HudText ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_HudText MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_HudText prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_HudText, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_HudText cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_HudText result;
    
    private CCSUsrMsg_HudText PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_HudText original = result;
        result = new CCSUsrMsg_HudText();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_HudText MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_HudText.Descriptor; }
    }
    
    public override CCSUsrMsg_HudText DefaultInstanceForType {
      get { return global::CCSUsrMsg_HudText.DefaultInstance; }
    }
    
    public override CCSUsrMsg_HudText BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_HudText) {
        return MergeFrom((CCSUsrMsg_HudText) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_HudText other) {
      if (other == global::CCSUsrMsg_HudText.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasText) {
        Text = other.Text;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgHudTextFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgHudTextFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasText = input.ReadString(ref result.text_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasText {
      get { return result.hasText; }
    }
    public string Text {
      get { return result.Text; }
      set { SetText(value); }
    }
    public Builder SetText(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasText = true;
      result.text_ = value;
      return this;
    }
    public Builder ClearText() {
      PrepareBuilder();
      result.hasText = false;
      result.text_ = "";
      return this;
    }
  }
  static CCSUsrMsg_HudText() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_SayText : pb::GeneratedMessage<CCSUsrMsg_SayText, CCSUsrMsg_SayText.Builder> {
  private CCSUsrMsg_SayText() { }
  private static readonly CCSUsrMsg_SayText defaultInstance = new CCSUsrMsg_SayText().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgSayTextFieldNames = new string[] { "chat", "ent_idx", "text", "textallchat" };
  private static readonly uint[] _cCSUsrMsgSayTextFieldTags = new uint[] { 24, 8, 18, 32 };
  public static CCSUsrMsg_SayText DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_SayText DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_SayText ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SayText__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_SayText, CCSUsrMsg_SayText.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SayText__FieldAccessorTable; }
  }
  
  public const int EntIdxFieldNumber = 1;
  private bool hasEntIdx;
  private int entIdx_;
  public bool HasEntIdx {
    get { return hasEntIdx; }
  }
  public int EntIdx {
    get { return entIdx_; }
  }
  
  public const int TextFieldNumber = 2;
  private bool hasText;
  private string text_ = "";
  public bool HasText {
    get { return hasText; }
  }
  public string Text {
    get { return text_; }
  }
  
  public const int ChatFieldNumber = 3;
  private bool hasChat;
  private bool chat_;
  public bool HasChat {
    get { return hasChat; }
  }
  public bool Chat {
    get { return chat_; }
  }
  
  public const int TextallchatFieldNumber = 4;
  private bool hasTextallchat;
  private bool textallchat_;
  public bool HasTextallchat {
    get { return hasTextallchat; }
  }
  public bool Textallchat {
    get { return textallchat_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgSayTextFieldNames;
    if (hasEntIdx) {
      output.WriteInt32(1, field_names[1], EntIdx);
    }
    if (hasText) {
      output.WriteString(2, field_names[2], Text);
    }
    if (hasChat) {
      output.WriteBool(3, field_names[0], Chat);
    }
    if (hasTextallchat) {
      output.WriteBool(4, field_names[3], Textallchat);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEntIdx) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, EntIdx);
      }
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Text);
      }
      if (hasChat) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, Chat);
      }
      if (hasTextallchat) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, Textallchat);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_SayText ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SayText ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SayText ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SayText ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SayText ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SayText ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SayText ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_SayText ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_SayText ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SayText ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_SayText MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_SayText prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_SayText, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_SayText cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_SayText result;
    
    private CCSUsrMsg_SayText PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_SayText original = result;
        result = new CCSUsrMsg_SayText();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_SayText MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_SayText.Descriptor; }
    }
    
    public override CCSUsrMsg_SayText DefaultInstanceForType {
      get { return global::CCSUsrMsg_SayText.DefaultInstance; }
    }
    
    public override CCSUsrMsg_SayText BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_SayText) {
        return MergeFrom((CCSUsrMsg_SayText) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_SayText other) {
      if (other == global::CCSUsrMsg_SayText.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEntIdx) {
        EntIdx = other.EntIdx;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      if (other.HasChat) {
        Chat = other.Chat;
      }
      if (other.HasTextallchat) {
        Textallchat = other.Textallchat;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgSayTextFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgSayTextFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEntIdx = input.ReadInt32(ref result.entIdx_);
            break;
          }
          case 18: {
            result.hasText = input.ReadString(ref result.text_);
            break;
          }
          case 24: {
            result.hasChat = input.ReadBool(ref result.chat_);
            break;
          }
          case 32: {
            result.hasTextallchat = input.ReadBool(ref result.textallchat_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEntIdx {
      get { return result.hasEntIdx; }
    }
    public int EntIdx {
      get { return result.EntIdx; }
      set { SetEntIdx(value); }
    }
    public Builder SetEntIdx(int value) {
      PrepareBuilder();
      result.hasEntIdx = true;
      result.entIdx_ = value;
      return this;
    }
    public Builder ClearEntIdx() {
      PrepareBuilder();
      result.hasEntIdx = false;
      result.entIdx_ = 0;
      return this;
    }
    
    public bool HasText {
      get { return result.hasText; }
    }
    public string Text {
      get { return result.Text; }
      set { SetText(value); }
    }
    public Builder SetText(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasText = true;
      result.text_ = value;
      return this;
    }
    public Builder ClearText() {
      PrepareBuilder();
      result.hasText = false;
      result.text_ = "";
      return this;
    }
    
    public bool HasChat {
      get { return result.hasChat; }
    }
    public bool Chat {
      get { return result.Chat; }
      set { SetChat(value); }
    }
    public Builder SetChat(bool value) {
      PrepareBuilder();
      result.hasChat = true;
      result.chat_ = value;
      return this;
    }
    public Builder ClearChat() {
      PrepareBuilder();
      result.hasChat = false;
      result.chat_ = false;
      return this;
    }
    
    public bool HasTextallchat {
      get { return result.hasTextallchat; }
    }
    public bool Textallchat {
      get { return result.Textallchat; }
      set { SetTextallchat(value); }
    }
    public Builder SetTextallchat(bool value) {
      PrepareBuilder();
      result.hasTextallchat = true;
      result.textallchat_ = value;
      return this;
    }
    public Builder ClearTextallchat() {
      PrepareBuilder();
      result.hasTextallchat = false;
      result.textallchat_ = false;
      return this;
    }
  }
  static CCSUsrMsg_SayText() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_SayText2 : pb::GeneratedMessage<CCSUsrMsg_SayText2, CCSUsrMsg_SayText2.Builder> {
  private CCSUsrMsg_SayText2() { }
  private static readonly CCSUsrMsg_SayText2 defaultInstance = new CCSUsrMsg_SayText2().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgSayText2FieldNames = new string[] { "chat", "ent_idx", "msg_name", "params", "textallchat" };
  private static readonly uint[] _cCSUsrMsgSayText2FieldTags = new uint[] { 16, 8, 26, 34, 40 };
  public static CCSUsrMsg_SayText2 DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_SayText2 DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_SayText2 ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SayText2__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_SayText2, CCSUsrMsg_SayText2.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SayText2__FieldAccessorTable; }
  }
  
  public const int EntIdxFieldNumber = 1;
  private bool hasEntIdx;
  private int entIdx_;
  public bool HasEntIdx {
    get { return hasEntIdx; }
  }
  public int EntIdx {
    get { return entIdx_; }
  }
  
  public const int ChatFieldNumber = 2;
  private bool hasChat;
  private bool chat_;
  public bool HasChat {
    get { return hasChat; }
  }
  public bool Chat {
    get { return chat_; }
  }
  
  public const int MsgNameFieldNumber = 3;
  private bool hasMsgName;
  private string msgName_ = "";
  public bool HasMsgName {
    get { return hasMsgName; }
  }
  public string MsgName {
    get { return msgName_; }
  }
  
  public const int ParamsFieldNumber = 4;
  private pbc::PopsicleList<string> params_ = new pbc::PopsicleList<string>();
  public scg::IList<string> ParamsList {
    get { return pbc::Lists.AsReadOnly(params_); }
  }
  public int ParamsCount {
    get { return params_.Count; }
  }
  public string GetParams(int index) {
    return params_[index];
  }
  
  public const int TextallchatFieldNumber = 5;
  private bool hasTextallchat;
  private bool textallchat_;
  public bool HasTextallchat {
    get { return hasTextallchat; }
  }
  public bool Textallchat {
    get { return textallchat_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgSayText2FieldNames;
    if (hasEntIdx) {
      output.WriteInt32(1, field_names[1], EntIdx);
    }
    if (hasChat) {
      output.WriteBool(2, field_names[0], Chat);
    }
    if (hasMsgName) {
      output.WriteString(3, field_names[2], MsgName);
    }
    if (params_.Count > 0) {
      output.WriteStringArray(4, field_names[3], params_);
    }
    if (hasTextallchat) {
      output.WriteBool(5, field_names[4], Textallchat);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEntIdx) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, EntIdx);
      }
      if (hasChat) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, Chat);
      }
      if (hasMsgName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, MsgName);
      }
      {
        int dataSize = 0;
        foreach (string element in ParamsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * params_.Count;
      }
      if (hasTextallchat) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, Textallchat);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_SayText2 ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SayText2 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SayText2 ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SayText2 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SayText2 ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SayText2 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SayText2 ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_SayText2 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_SayText2 ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SayText2 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_SayText2 MakeReadOnly() {
    params_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_SayText2 prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_SayText2, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_SayText2 cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_SayText2 result;
    
    private CCSUsrMsg_SayText2 PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_SayText2 original = result;
        result = new CCSUsrMsg_SayText2();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_SayText2 MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_SayText2.Descriptor; }
    }
    
    public override CCSUsrMsg_SayText2 DefaultInstanceForType {
      get { return global::CCSUsrMsg_SayText2.DefaultInstance; }
    }
    
    public override CCSUsrMsg_SayText2 BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_SayText2) {
        return MergeFrom((CCSUsrMsg_SayText2) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_SayText2 other) {
      if (other == global::CCSUsrMsg_SayText2.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEntIdx) {
        EntIdx = other.EntIdx;
      }
      if (other.HasChat) {
        Chat = other.Chat;
      }
      if (other.HasMsgName) {
        MsgName = other.MsgName;
      }
      if (other.params_.Count != 0) {
        result.params_.Add(other.params_);
      }
      if (other.HasTextallchat) {
        Textallchat = other.Textallchat;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgSayText2FieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgSayText2FieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEntIdx = input.ReadInt32(ref result.entIdx_);
            break;
          }
          case 16: {
            result.hasChat = input.ReadBool(ref result.chat_);
            break;
          }
          case 26: {
            result.hasMsgName = input.ReadString(ref result.msgName_);
            break;
          }
          case 34: {
            input.ReadStringArray(tag, field_name, result.params_);
            break;
          }
          case 40: {
            result.hasTextallchat = input.ReadBool(ref result.textallchat_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEntIdx {
      get { return result.hasEntIdx; }
    }
    public int EntIdx {
      get { return result.EntIdx; }
      set { SetEntIdx(value); }
    }
    public Builder SetEntIdx(int value) {
      PrepareBuilder();
      result.hasEntIdx = true;
      result.entIdx_ = value;
      return this;
    }
    public Builder ClearEntIdx() {
      PrepareBuilder();
      result.hasEntIdx = false;
      result.entIdx_ = 0;
      return this;
    }
    
    public bool HasChat {
      get { return result.hasChat; }
    }
    public bool Chat {
      get { return result.Chat; }
      set { SetChat(value); }
    }
    public Builder SetChat(bool value) {
      PrepareBuilder();
      result.hasChat = true;
      result.chat_ = value;
      return this;
    }
    public Builder ClearChat() {
      PrepareBuilder();
      result.hasChat = false;
      result.chat_ = false;
      return this;
    }
    
    public bool HasMsgName {
      get { return result.hasMsgName; }
    }
    public string MsgName {
      get { return result.MsgName; }
      set { SetMsgName(value); }
    }
    public Builder SetMsgName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasMsgName = true;
      result.msgName_ = value;
      return this;
    }
    public Builder ClearMsgName() {
      PrepareBuilder();
      result.hasMsgName = false;
      result.msgName_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<string> ParamsList {
      get { return PrepareBuilder().params_; }
    }
    public int ParamsCount {
      get { return result.ParamsCount; }
    }
    public string GetParams(int index) {
      return result.GetParams(index);
    }
    public Builder SetParams(int index, string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.params_[index] = value;
      return this;
    }
    public Builder AddParams(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.params_.Add(value);
      return this;
    }
    public Builder AddRangeParams(scg::IEnumerable<string> values) {
      PrepareBuilder();
      result.params_.Add(values);
      return this;
    }
    public Builder ClearParams() {
      PrepareBuilder();
      result.params_.Clear();
      return this;
    }
    
    public bool HasTextallchat {
      get { return result.hasTextallchat; }
    }
    public bool Textallchat {
      get { return result.Textallchat; }
      set { SetTextallchat(value); }
    }
    public Builder SetTextallchat(bool value) {
      PrepareBuilder();
      result.hasTextallchat = true;
      result.textallchat_ = value;
      return this;
    }
    public Builder ClearTextallchat() {
      PrepareBuilder();
      result.hasTextallchat = false;
      result.textallchat_ = false;
      return this;
    }
  }
  static CCSUsrMsg_SayText2() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_TextMsg : pb::GeneratedMessage<CCSUsrMsg_TextMsg, CCSUsrMsg_TextMsg.Builder> {
  private CCSUsrMsg_TextMsg() { }
  private static readonly CCSUsrMsg_TextMsg defaultInstance = new CCSUsrMsg_TextMsg().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgTextMsgFieldNames = new string[] { "msg_dst", "params" };
  private static readonly uint[] _cCSUsrMsgTextMsgFieldTags = new uint[] { 8, 26 };
  public static CCSUsrMsg_TextMsg DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_TextMsg DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_TextMsg ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_TextMsg__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_TextMsg, CCSUsrMsg_TextMsg.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_TextMsg__FieldAccessorTable; }
  }
  
  public const int MsgDstFieldNumber = 1;
  private bool hasMsgDst;
  private int msgDst_;
  public bool HasMsgDst {
    get { return hasMsgDst; }
  }
  public int MsgDst {
    get { return msgDst_; }
  }
  
  public const int ParamsFieldNumber = 3;
  private pbc::PopsicleList<string> params_ = new pbc::PopsicleList<string>();
  public scg::IList<string> ParamsList {
    get { return pbc::Lists.AsReadOnly(params_); }
  }
  public int ParamsCount {
    get { return params_.Count; }
  }
  public string GetParams(int index) {
    return params_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgTextMsgFieldNames;
    if (hasMsgDst) {
      output.WriteInt32(1, field_names[0], MsgDst);
    }
    if (params_.Count > 0) {
      output.WriteStringArray(3, field_names[1], params_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMsgDst) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, MsgDst);
      }
      {
        int dataSize = 0;
        foreach (string element in ParamsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * params_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_TextMsg ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_TextMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_TextMsg ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_TextMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_TextMsg ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_TextMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_TextMsg ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_TextMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_TextMsg ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_TextMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_TextMsg MakeReadOnly() {
    params_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_TextMsg prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_TextMsg, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_TextMsg cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_TextMsg result;
    
    private CCSUsrMsg_TextMsg PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_TextMsg original = result;
        result = new CCSUsrMsg_TextMsg();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_TextMsg MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_TextMsg.Descriptor; }
    }
    
    public override CCSUsrMsg_TextMsg DefaultInstanceForType {
      get { return global::CCSUsrMsg_TextMsg.DefaultInstance; }
    }
    
    public override CCSUsrMsg_TextMsg BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_TextMsg) {
        return MergeFrom((CCSUsrMsg_TextMsg) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_TextMsg other) {
      if (other == global::CCSUsrMsg_TextMsg.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasMsgDst) {
        MsgDst = other.MsgDst;
      }
      if (other.params_.Count != 0) {
        result.params_.Add(other.params_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgTextMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgTextMsgFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasMsgDst = input.ReadInt32(ref result.msgDst_);
            break;
          }
          case 26: {
            input.ReadStringArray(tag, field_name, result.params_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasMsgDst {
      get { return result.hasMsgDst; }
    }
    public int MsgDst {
      get { return result.MsgDst; }
      set { SetMsgDst(value); }
    }
    public Builder SetMsgDst(int value) {
      PrepareBuilder();
      result.hasMsgDst = true;
      result.msgDst_ = value;
      return this;
    }
    public Builder ClearMsgDst() {
      PrepareBuilder();
      result.hasMsgDst = false;
      result.msgDst_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<string> ParamsList {
      get { return PrepareBuilder().params_; }
    }
    public int ParamsCount {
      get { return result.ParamsCount; }
    }
    public string GetParams(int index) {
      return result.GetParams(index);
    }
    public Builder SetParams(int index, string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.params_[index] = value;
      return this;
    }
    public Builder AddParams(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.params_.Add(value);
      return this;
    }
    public Builder AddRangeParams(scg::IEnumerable<string> values) {
      PrepareBuilder();
      result.params_.Add(values);
      return this;
    }
    public Builder ClearParams() {
      PrepareBuilder();
      result.params_.Clear();
      return this;
    }
  }
  static CCSUsrMsg_TextMsg() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_HudMsg : pb::GeneratedMessage<CCSUsrMsg_HudMsg, CCSUsrMsg_HudMsg.Builder> {
  private CCSUsrMsg_HudMsg() { }
  private static readonly CCSUsrMsg_HudMsg defaultInstance = new CCSUsrMsg_HudMsg().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgHudMsgFieldNames = new string[] { "channel", "clr1", "clr2", "effect", "fade_in_time", "fade_out_time", "fx_time", "hold_time", "pos", "text" };
  private static readonly uint[] _cCSUsrMsgHudMsgFieldTags = new uint[] { 8, 26, 34, 40, 53, 61, 85, 77, 18, 90 };
  public static CCSUsrMsg_HudMsg DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_HudMsg DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_HudMsg ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_HudMsg__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_HudMsg, CCSUsrMsg_HudMsg.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_HudMsg__FieldAccessorTable; }
  }
  
  public const int ChannelFieldNumber = 1;
  private bool hasChannel;
  private int channel_;
  public bool HasChannel {
    get { return hasChannel; }
  }
  public int Channel {
    get { return channel_; }
  }
  
  public const int PosFieldNumber = 2;
  private bool hasPos;
  private global::CMsgVector2D pos_;
  public bool HasPos {
    get { return hasPos; }
  }
  public global::CMsgVector2D Pos {
    get { return pos_ ?? global::CMsgVector2D.DefaultInstance; }
  }
  
  public const int Clr1FieldNumber = 3;
  private bool hasClr1;
  private global::CMsgRGBA clr1_;
  public bool HasClr1 {
    get { return hasClr1; }
  }
  public global::CMsgRGBA Clr1 {
    get { return clr1_ ?? global::CMsgRGBA.DefaultInstance; }
  }
  
  public const int Clr2FieldNumber = 4;
  private bool hasClr2;
  private global::CMsgRGBA clr2_;
  public bool HasClr2 {
    get { return hasClr2; }
  }
  public global::CMsgRGBA Clr2 {
    get { return clr2_ ?? global::CMsgRGBA.DefaultInstance; }
  }
  
  public const int EffectFieldNumber = 5;
  private bool hasEffect;
  private int effect_;
  public bool HasEffect {
    get { return hasEffect; }
  }
  public int Effect {
    get { return effect_; }
  }
  
  public const int FadeInTimeFieldNumber = 6;
  private bool hasFadeInTime;
  private float fadeInTime_;
  public bool HasFadeInTime {
    get { return hasFadeInTime; }
  }
  public float FadeInTime {
    get { return fadeInTime_; }
  }
  
  public const int FadeOutTimeFieldNumber = 7;
  private bool hasFadeOutTime;
  private float fadeOutTime_;
  public bool HasFadeOutTime {
    get { return hasFadeOutTime; }
  }
  public float FadeOutTime {
    get { return fadeOutTime_; }
  }
  
  public const int HoldTimeFieldNumber = 9;
  private bool hasHoldTime;
  private float holdTime_;
  public bool HasHoldTime {
    get { return hasHoldTime; }
  }
  public float HoldTime {
    get { return holdTime_; }
  }
  
  public const int FxTimeFieldNumber = 10;
  private bool hasFxTime;
  private float fxTime_;
  public bool HasFxTime {
    get { return hasFxTime; }
  }
  public float FxTime {
    get { return fxTime_; }
  }
  
  public const int TextFieldNumber = 11;
  private bool hasText;
  private string text_ = "";
  public bool HasText {
    get { return hasText; }
  }
  public string Text {
    get { return text_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgHudMsgFieldNames;
    if (hasChannel) {
      output.WriteInt32(1, field_names[0], Channel);
    }
    if (hasPos) {
      output.WriteMessage(2, field_names[8], Pos);
    }
    if (hasClr1) {
      output.WriteMessage(3, field_names[1], Clr1);
    }
    if (hasClr2) {
      output.WriteMessage(4, field_names[2], Clr2);
    }
    if (hasEffect) {
      output.WriteInt32(5, field_names[3], Effect);
    }
    if (hasFadeInTime) {
      output.WriteFloat(6, field_names[4], FadeInTime);
    }
    if (hasFadeOutTime) {
      output.WriteFloat(7, field_names[5], FadeOutTime);
    }
    if (hasHoldTime) {
      output.WriteFloat(9, field_names[7], HoldTime);
    }
    if (hasFxTime) {
      output.WriteFloat(10, field_names[6], FxTime);
    }
    if (hasText) {
      output.WriteString(11, field_names[9], Text);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasChannel) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Channel);
      }
      if (hasPos) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Pos);
      }
      if (hasClr1) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Clr1);
      }
      if (hasClr2) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Clr2);
      }
      if (hasEffect) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, Effect);
      }
      if (hasFadeInTime) {
        size += pb::CodedOutputStream.ComputeFloatSize(6, FadeInTime);
      }
      if (hasFadeOutTime) {
        size += pb::CodedOutputStream.ComputeFloatSize(7, FadeOutTime);
      }
      if (hasHoldTime) {
        size += pb::CodedOutputStream.ComputeFloatSize(9, HoldTime);
      }
      if (hasFxTime) {
        size += pb::CodedOutputStream.ComputeFloatSize(10, FxTime);
      }
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(11, Text);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_HudMsg ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_HudMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_HudMsg ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_HudMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_HudMsg ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_HudMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_HudMsg ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_HudMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_HudMsg ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_HudMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_HudMsg MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_HudMsg prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_HudMsg, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_HudMsg cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_HudMsg result;
    
    private CCSUsrMsg_HudMsg PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_HudMsg original = result;
        result = new CCSUsrMsg_HudMsg();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_HudMsg MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_HudMsg.Descriptor; }
    }
    
    public override CCSUsrMsg_HudMsg DefaultInstanceForType {
      get { return global::CCSUsrMsg_HudMsg.DefaultInstance; }
    }
    
    public override CCSUsrMsg_HudMsg BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_HudMsg) {
        return MergeFrom((CCSUsrMsg_HudMsg) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_HudMsg other) {
      if (other == global::CCSUsrMsg_HudMsg.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasChannel) {
        Channel = other.Channel;
      }
      if (other.HasPos) {
        MergePos(other.Pos);
      }
      if (other.HasClr1) {
        MergeClr1(other.Clr1);
      }
      if (other.HasClr2) {
        MergeClr2(other.Clr2);
      }
      if (other.HasEffect) {
        Effect = other.Effect;
      }
      if (other.HasFadeInTime) {
        FadeInTime = other.FadeInTime;
      }
      if (other.HasFadeOutTime) {
        FadeOutTime = other.FadeOutTime;
      }
      if (other.HasHoldTime) {
        HoldTime = other.HoldTime;
      }
      if (other.HasFxTime) {
        FxTime = other.FxTime;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgHudMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgHudMsgFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasChannel = input.ReadInt32(ref result.channel_);
            break;
          }
          case 18: {
            global::CMsgVector2D.Builder subBuilder = global::CMsgVector2D.CreateBuilder();
            if (result.hasPos) {
              subBuilder.MergeFrom(Pos);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Pos = subBuilder.BuildPartial();
            break;
          }
          case 26: {
            global::CMsgRGBA.Builder subBuilder = global::CMsgRGBA.CreateBuilder();
            if (result.hasClr1) {
              subBuilder.MergeFrom(Clr1);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Clr1 = subBuilder.BuildPartial();
            break;
          }
          case 34: {
            global::CMsgRGBA.Builder subBuilder = global::CMsgRGBA.CreateBuilder();
            if (result.hasClr2) {
              subBuilder.MergeFrom(Clr2);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Clr2 = subBuilder.BuildPartial();
            break;
          }
          case 40: {
            result.hasEffect = input.ReadInt32(ref result.effect_);
            break;
          }
          case 53: {
            result.hasFadeInTime = input.ReadFloat(ref result.fadeInTime_);
            break;
          }
          case 61: {
            result.hasFadeOutTime = input.ReadFloat(ref result.fadeOutTime_);
            break;
          }
          case 77: {
            result.hasHoldTime = input.ReadFloat(ref result.holdTime_);
            break;
          }
          case 85: {
            result.hasFxTime = input.ReadFloat(ref result.fxTime_);
            break;
          }
          case 90: {
            result.hasText = input.ReadString(ref result.text_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasChannel {
      get { return result.hasChannel; }
    }
    public int Channel {
      get { return result.Channel; }
      set { SetChannel(value); }
    }
    public Builder SetChannel(int value) {
      PrepareBuilder();
      result.hasChannel = true;
      result.channel_ = value;
      return this;
    }
    public Builder ClearChannel() {
      PrepareBuilder();
      result.hasChannel = false;
      result.channel_ = 0;
      return this;
    }
    
    public bool HasPos {
     get { return result.hasPos; }
    }
    public global::CMsgVector2D Pos {
      get { return result.Pos; }
      set { SetPos(value); }
    }
    public Builder SetPos(global::CMsgVector2D value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPos = true;
      result.pos_ = value;
      return this;
    }
    public Builder SetPos(global::CMsgVector2D.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasPos = true;
      result.pos_ = builderForValue.Build();
      return this;
    }
    public Builder MergePos(global::CMsgVector2D value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasPos &&
          result.pos_ != global::CMsgVector2D.DefaultInstance) {
          result.pos_ = global::CMsgVector2D.CreateBuilder(result.pos_).MergeFrom(value).BuildPartial();
      } else {
        result.pos_ = value;
      }
      result.hasPos = true;
      return this;
    }
    public Builder ClearPos() {
      PrepareBuilder();
      result.hasPos = false;
      result.pos_ = null;
      return this;
    }
    
    public bool HasClr1 {
     get { return result.hasClr1; }
    }
    public global::CMsgRGBA Clr1 {
      get { return result.Clr1; }
      set { SetClr1(value); }
    }
    public Builder SetClr1(global::CMsgRGBA value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasClr1 = true;
      result.clr1_ = value;
      return this;
    }
    public Builder SetClr1(global::CMsgRGBA.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasClr1 = true;
      result.clr1_ = builderForValue.Build();
      return this;
    }
    public Builder MergeClr1(global::CMsgRGBA value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasClr1 &&
          result.clr1_ != global::CMsgRGBA.DefaultInstance) {
          result.clr1_ = global::CMsgRGBA.CreateBuilder(result.clr1_).MergeFrom(value).BuildPartial();
      } else {
        result.clr1_ = value;
      }
      result.hasClr1 = true;
      return this;
    }
    public Builder ClearClr1() {
      PrepareBuilder();
      result.hasClr1 = false;
      result.clr1_ = null;
      return this;
    }
    
    public bool HasClr2 {
     get { return result.hasClr2; }
    }
    public global::CMsgRGBA Clr2 {
      get { return result.Clr2; }
      set { SetClr2(value); }
    }
    public Builder SetClr2(global::CMsgRGBA value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasClr2 = true;
      result.clr2_ = value;
      return this;
    }
    public Builder SetClr2(global::CMsgRGBA.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasClr2 = true;
      result.clr2_ = builderForValue.Build();
      return this;
    }
    public Builder MergeClr2(global::CMsgRGBA value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasClr2 &&
          result.clr2_ != global::CMsgRGBA.DefaultInstance) {
          result.clr2_ = global::CMsgRGBA.CreateBuilder(result.clr2_).MergeFrom(value).BuildPartial();
      } else {
        result.clr2_ = value;
      }
      result.hasClr2 = true;
      return this;
    }
    public Builder ClearClr2() {
      PrepareBuilder();
      result.hasClr2 = false;
      result.clr2_ = null;
      return this;
    }
    
    public bool HasEffect {
      get { return result.hasEffect; }
    }
    public int Effect {
      get { return result.Effect; }
      set { SetEffect(value); }
    }
    public Builder SetEffect(int value) {
      PrepareBuilder();
      result.hasEffect = true;
      result.effect_ = value;
      return this;
    }
    public Builder ClearEffect() {
      PrepareBuilder();
      result.hasEffect = false;
      result.effect_ = 0;
      return this;
    }
    
    public bool HasFadeInTime {
      get { return result.hasFadeInTime; }
    }
    public float FadeInTime {
      get { return result.FadeInTime; }
      set { SetFadeInTime(value); }
    }
    public Builder SetFadeInTime(float value) {
      PrepareBuilder();
      result.hasFadeInTime = true;
      result.fadeInTime_ = value;
      return this;
    }
    public Builder ClearFadeInTime() {
      PrepareBuilder();
      result.hasFadeInTime = false;
      result.fadeInTime_ = 0F;
      return this;
    }
    
    public bool HasFadeOutTime {
      get { return result.hasFadeOutTime; }
    }
    public float FadeOutTime {
      get { return result.FadeOutTime; }
      set { SetFadeOutTime(value); }
    }
    public Builder SetFadeOutTime(float value) {
      PrepareBuilder();
      result.hasFadeOutTime = true;
      result.fadeOutTime_ = value;
      return this;
    }
    public Builder ClearFadeOutTime() {
      PrepareBuilder();
      result.hasFadeOutTime = false;
      result.fadeOutTime_ = 0F;
      return this;
    }
    
    public bool HasHoldTime {
      get { return result.hasHoldTime; }
    }
    public float HoldTime {
      get { return result.HoldTime; }
      set { SetHoldTime(value); }
    }
    public Builder SetHoldTime(float value) {
      PrepareBuilder();
      result.hasHoldTime = true;
      result.holdTime_ = value;
      return this;
    }
    public Builder ClearHoldTime() {
      PrepareBuilder();
      result.hasHoldTime = false;
      result.holdTime_ = 0F;
      return this;
    }
    
    public bool HasFxTime {
      get { return result.hasFxTime; }
    }
    public float FxTime {
      get { return result.FxTime; }
      set { SetFxTime(value); }
    }
    public Builder SetFxTime(float value) {
      PrepareBuilder();
      result.hasFxTime = true;
      result.fxTime_ = value;
      return this;
    }
    public Builder ClearFxTime() {
      PrepareBuilder();
      result.hasFxTime = false;
      result.fxTime_ = 0F;
      return this;
    }
    
    public bool HasText {
      get { return result.hasText; }
    }
    public string Text {
      get { return result.Text; }
      set { SetText(value); }
    }
    public Builder SetText(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasText = true;
      result.text_ = value;
      return this;
    }
    public Builder ClearText() {
      PrepareBuilder();
      result.hasText = false;
      result.text_ = "";
      return this;
    }
  }
  static CCSUsrMsg_HudMsg() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_Shake : pb::GeneratedMessage<CCSUsrMsg_Shake, CCSUsrMsg_Shake.Builder> {
  private CCSUsrMsg_Shake() { }
  private static readonly CCSUsrMsg_Shake defaultInstance = new CCSUsrMsg_Shake().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgShakeFieldNames = new string[] { "command", "duration", "frequency", "local_amplitude" };
  private static readonly uint[] _cCSUsrMsgShakeFieldTags = new uint[] { 8, 37, 29, 21 };
  public static CCSUsrMsg_Shake DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_Shake DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_Shake ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Shake__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_Shake, CCSUsrMsg_Shake.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Shake__FieldAccessorTable; }
  }
  
  public const int CommandFieldNumber = 1;
  private bool hasCommand;
  private int command_;
  public bool HasCommand {
    get { return hasCommand; }
  }
  public int Command {
    get { return command_; }
  }
  
  public const int LocalAmplitudeFieldNumber = 2;
  private bool hasLocalAmplitude;
  private float localAmplitude_;
  public bool HasLocalAmplitude {
    get { return hasLocalAmplitude; }
  }
  public float LocalAmplitude {
    get { return localAmplitude_; }
  }
  
  public const int FrequencyFieldNumber = 3;
  private bool hasFrequency;
  private float frequency_;
  public bool HasFrequency {
    get { return hasFrequency; }
  }
  public float Frequency {
    get { return frequency_; }
  }
  
  public const int DurationFieldNumber = 4;
  private bool hasDuration;
  private float duration_;
  public bool HasDuration {
    get { return hasDuration; }
  }
  public float Duration {
    get { return duration_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgShakeFieldNames;
    if (hasCommand) {
      output.WriteInt32(1, field_names[0], Command);
    }
    if (hasLocalAmplitude) {
      output.WriteFloat(2, field_names[3], LocalAmplitude);
    }
    if (hasFrequency) {
      output.WriteFloat(3, field_names[2], Frequency);
    }
    if (hasDuration) {
      output.WriteFloat(4, field_names[1], Duration);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCommand) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Command);
      }
      if (hasLocalAmplitude) {
        size += pb::CodedOutputStream.ComputeFloatSize(2, LocalAmplitude);
      }
      if (hasFrequency) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Frequency);
      }
      if (hasDuration) {
        size += pb::CodedOutputStream.ComputeFloatSize(4, Duration);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_Shake ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Shake ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Shake ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Shake ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Shake ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Shake ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Shake ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_Shake ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_Shake ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Shake ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_Shake MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_Shake prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_Shake, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_Shake cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_Shake result;
    
    private CCSUsrMsg_Shake PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_Shake original = result;
        result = new CCSUsrMsg_Shake();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_Shake MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_Shake.Descriptor; }
    }
    
    public override CCSUsrMsg_Shake DefaultInstanceForType {
      get { return global::CCSUsrMsg_Shake.DefaultInstance; }
    }
    
    public override CCSUsrMsg_Shake BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_Shake) {
        return MergeFrom((CCSUsrMsg_Shake) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_Shake other) {
      if (other == global::CCSUsrMsg_Shake.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCommand) {
        Command = other.Command;
      }
      if (other.HasLocalAmplitude) {
        LocalAmplitude = other.LocalAmplitude;
      }
      if (other.HasFrequency) {
        Frequency = other.Frequency;
      }
      if (other.HasDuration) {
        Duration = other.Duration;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgShakeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgShakeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasCommand = input.ReadInt32(ref result.command_);
            break;
          }
          case 21: {
            result.hasLocalAmplitude = input.ReadFloat(ref result.localAmplitude_);
            break;
          }
          case 29: {
            result.hasFrequency = input.ReadFloat(ref result.frequency_);
            break;
          }
          case 37: {
            result.hasDuration = input.ReadFloat(ref result.duration_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCommand {
      get { return result.hasCommand; }
    }
    public int Command {
      get { return result.Command; }
      set { SetCommand(value); }
    }
    public Builder SetCommand(int value) {
      PrepareBuilder();
      result.hasCommand = true;
      result.command_ = value;
      return this;
    }
    public Builder ClearCommand() {
      PrepareBuilder();
      result.hasCommand = false;
      result.command_ = 0;
      return this;
    }
    
    public bool HasLocalAmplitude {
      get { return result.hasLocalAmplitude; }
    }
    public float LocalAmplitude {
      get { return result.LocalAmplitude; }
      set { SetLocalAmplitude(value); }
    }
    public Builder SetLocalAmplitude(float value) {
      PrepareBuilder();
      result.hasLocalAmplitude = true;
      result.localAmplitude_ = value;
      return this;
    }
    public Builder ClearLocalAmplitude() {
      PrepareBuilder();
      result.hasLocalAmplitude = false;
      result.localAmplitude_ = 0F;
      return this;
    }
    
    public bool HasFrequency {
      get { return result.hasFrequency; }
    }
    public float Frequency {
      get { return result.Frequency; }
      set { SetFrequency(value); }
    }
    public Builder SetFrequency(float value) {
      PrepareBuilder();
      result.hasFrequency = true;
      result.frequency_ = value;
      return this;
    }
    public Builder ClearFrequency() {
      PrepareBuilder();
      result.hasFrequency = false;
      result.frequency_ = 0F;
      return this;
    }
    
    public bool HasDuration {
      get { return result.hasDuration; }
    }
    public float Duration {
      get { return result.Duration; }
      set { SetDuration(value); }
    }
    public Builder SetDuration(float value) {
      PrepareBuilder();
      result.hasDuration = true;
      result.duration_ = value;
      return this;
    }
    public Builder ClearDuration() {
      PrepareBuilder();
      result.hasDuration = false;
      result.duration_ = 0F;
      return this;
    }
  }
  static CCSUsrMsg_Shake() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_Fade : pb::GeneratedMessage<CCSUsrMsg_Fade, CCSUsrMsg_Fade.Builder> {
  private CCSUsrMsg_Fade() { }
  private static readonly CCSUsrMsg_Fade defaultInstance = new CCSUsrMsg_Fade().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgFadeFieldNames = new string[] { "clr", "duration", "flags", "hold_time" };
  private static readonly uint[] _cCSUsrMsgFadeFieldTags = new uint[] { 34, 8, 24, 16 };
  public static CCSUsrMsg_Fade DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_Fade DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_Fade ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Fade__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_Fade, CCSUsrMsg_Fade.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Fade__FieldAccessorTable; }
  }
  
  public const int DurationFieldNumber = 1;
  private bool hasDuration;
  private int duration_;
  public bool HasDuration {
    get { return hasDuration; }
  }
  public int Duration {
    get { return duration_; }
  }
  
  public const int HoldTimeFieldNumber = 2;
  private bool hasHoldTime;
  private int holdTime_;
  public bool HasHoldTime {
    get { return hasHoldTime; }
  }
  public int HoldTime {
    get { return holdTime_; }
  }
  
  public const int FlagsFieldNumber = 3;
  private bool hasFlags;
  private int flags_;
  public bool HasFlags {
    get { return hasFlags; }
  }
  public int Flags {
    get { return flags_; }
  }
  
  public const int ClrFieldNumber = 4;
  private bool hasClr;
  private global::CMsgRGBA clr_;
  public bool HasClr {
    get { return hasClr; }
  }
  public global::CMsgRGBA Clr {
    get { return clr_ ?? global::CMsgRGBA.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgFadeFieldNames;
    if (hasDuration) {
      output.WriteInt32(1, field_names[1], Duration);
    }
    if (hasHoldTime) {
      output.WriteInt32(2, field_names[3], HoldTime);
    }
    if (hasFlags) {
      output.WriteInt32(3, field_names[2], Flags);
    }
    if (hasClr) {
      output.WriteMessage(4, field_names[0], Clr);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDuration) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Duration);
      }
      if (hasHoldTime) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, HoldTime);
      }
      if (hasFlags) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Flags);
      }
      if (hasClr) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Clr);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_Fade ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Fade ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Fade ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Fade ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Fade ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Fade ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Fade ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_Fade ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_Fade ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Fade ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_Fade MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_Fade prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_Fade, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_Fade cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_Fade result;
    
    private CCSUsrMsg_Fade PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_Fade original = result;
        result = new CCSUsrMsg_Fade();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_Fade MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_Fade.Descriptor; }
    }
    
    public override CCSUsrMsg_Fade DefaultInstanceForType {
      get { return global::CCSUsrMsg_Fade.DefaultInstance; }
    }
    
    public override CCSUsrMsg_Fade BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_Fade) {
        return MergeFrom((CCSUsrMsg_Fade) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_Fade other) {
      if (other == global::CCSUsrMsg_Fade.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDuration) {
        Duration = other.Duration;
      }
      if (other.HasHoldTime) {
        HoldTime = other.HoldTime;
      }
      if (other.HasFlags) {
        Flags = other.Flags;
      }
      if (other.HasClr) {
        MergeClr(other.Clr);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgFadeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgFadeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDuration = input.ReadInt32(ref result.duration_);
            break;
          }
          case 16: {
            result.hasHoldTime = input.ReadInt32(ref result.holdTime_);
            break;
          }
          case 24: {
            result.hasFlags = input.ReadInt32(ref result.flags_);
            break;
          }
          case 34: {
            global::CMsgRGBA.Builder subBuilder = global::CMsgRGBA.CreateBuilder();
            if (result.hasClr) {
              subBuilder.MergeFrom(Clr);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Clr = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDuration {
      get { return result.hasDuration; }
    }
    public int Duration {
      get { return result.Duration; }
      set { SetDuration(value); }
    }
    public Builder SetDuration(int value) {
      PrepareBuilder();
      result.hasDuration = true;
      result.duration_ = value;
      return this;
    }
    public Builder ClearDuration() {
      PrepareBuilder();
      result.hasDuration = false;
      result.duration_ = 0;
      return this;
    }
    
    public bool HasHoldTime {
      get { return result.hasHoldTime; }
    }
    public int HoldTime {
      get { return result.HoldTime; }
      set { SetHoldTime(value); }
    }
    public Builder SetHoldTime(int value) {
      PrepareBuilder();
      result.hasHoldTime = true;
      result.holdTime_ = value;
      return this;
    }
    public Builder ClearHoldTime() {
      PrepareBuilder();
      result.hasHoldTime = false;
      result.holdTime_ = 0;
      return this;
    }
    
    public bool HasFlags {
      get { return result.hasFlags; }
    }
    public int Flags {
      get { return result.Flags; }
      set { SetFlags(value); }
    }
    public Builder SetFlags(int value) {
      PrepareBuilder();
      result.hasFlags = true;
      result.flags_ = value;
      return this;
    }
    public Builder ClearFlags() {
      PrepareBuilder();
      result.hasFlags = false;
      result.flags_ = 0;
      return this;
    }
    
    public bool HasClr {
     get { return result.hasClr; }
    }
    public global::CMsgRGBA Clr {
      get { return result.Clr; }
      set { SetClr(value); }
    }
    public Builder SetClr(global::CMsgRGBA value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasClr = true;
      result.clr_ = value;
      return this;
    }
    public Builder SetClr(global::CMsgRGBA.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasClr = true;
      result.clr_ = builderForValue.Build();
      return this;
    }
    public Builder MergeClr(global::CMsgRGBA value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasClr &&
          result.clr_ != global::CMsgRGBA.DefaultInstance) {
          result.clr_ = global::CMsgRGBA.CreateBuilder(result.clr_).MergeFrom(value).BuildPartial();
      } else {
        result.clr_ = value;
      }
      result.hasClr = true;
      return this;
    }
    public Builder ClearClr() {
      PrepareBuilder();
      result.hasClr = false;
      result.clr_ = null;
      return this;
    }
  }
  static CCSUsrMsg_Fade() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_Rumble : pb::GeneratedMessage<CCSUsrMsg_Rumble, CCSUsrMsg_Rumble.Builder> {
  private CCSUsrMsg_Rumble() { }
  private static readonly CCSUsrMsg_Rumble defaultInstance = new CCSUsrMsg_Rumble().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgRumbleFieldNames = new string[] { "data", "flags", "index" };
  private static readonly uint[] _cCSUsrMsgRumbleFieldTags = new uint[] { 16, 24, 8 };
  public static CCSUsrMsg_Rumble DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_Rumble DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_Rumble ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Rumble__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_Rumble, CCSUsrMsg_Rumble.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Rumble__FieldAccessorTable; }
  }
  
  public const int IndexFieldNumber = 1;
  private bool hasIndex;
  private int index_;
  public bool HasIndex {
    get { return hasIndex; }
  }
  public int Index {
    get { return index_; }
  }
  
  public const int DataFieldNumber = 2;
  private bool hasData;
  private int data_;
  public bool HasData {
    get { return hasData; }
  }
  public int Data {
    get { return data_; }
  }
  
  public const int FlagsFieldNumber = 3;
  private bool hasFlags;
  private int flags_;
  public bool HasFlags {
    get { return hasFlags; }
  }
  public int Flags {
    get { return flags_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgRumbleFieldNames;
    if (hasIndex) {
      output.WriteInt32(1, field_names[2], Index);
    }
    if (hasData) {
      output.WriteInt32(2, field_names[0], Data);
    }
    if (hasFlags) {
      output.WriteInt32(3, field_names[1], Flags);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIndex) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Index);
      }
      if (hasData) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Data);
      }
      if (hasFlags) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Flags);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_Rumble ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Rumble ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Rumble ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Rumble ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Rumble ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Rumble ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Rumble ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_Rumble ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_Rumble ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Rumble ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_Rumble MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_Rumble prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_Rumble, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_Rumble cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_Rumble result;
    
    private CCSUsrMsg_Rumble PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_Rumble original = result;
        result = new CCSUsrMsg_Rumble();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_Rumble MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_Rumble.Descriptor; }
    }
    
    public override CCSUsrMsg_Rumble DefaultInstanceForType {
      get { return global::CCSUsrMsg_Rumble.DefaultInstance; }
    }
    
    public override CCSUsrMsg_Rumble BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_Rumble) {
        return MergeFrom((CCSUsrMsg_Rumble) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_Rumble other) {
      if (other == global::CCSUsrMsg_Rumble.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasIndex) {
        Index = other.Index;
      }
      if (other.HasData) {
        Data = other.Data;
      }
      if (other.HasFlags) {
        Flags = other.Flags;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgRumbleFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgRumbleFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasIndex = input.ReadInt32(ref result.index_);
            break;
          }
          case 16: {
            result.hasData = input.ReadInt32(ref result.data_);
            break;
          }
          case 24: {
            result.hasFlags = input.ReadInt32(ref result.flags_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasIndex {
      get { return result.hasIndex; }
    }
    public int Index {
      get { return result.Index; }
      set { SetIndex(value); }
    }
    public Builder SetIndex(int value) {
      PrepareBuilder();
      result.hasIndex = true;
      result.index_ = value;
      return this;
    }
    public Builder ClearIndex() {
      PrepareBuilder();
      result.hasIndex = false;
      result.index_ = 0;
      return this;
    }
    
    public bool HasData {
      get { return result.hasData; }
    }
    public int Data {
      get { return result.Data; }
      set { SetData(value); }
    }
    public Builder SetData(int value) {
      PrepareBuilder();
      result.hasData = true;
      result.data_ = value;
      return this;
    }
    public Builder ClearData() {
      PrepareBuilder();
      result.hasData = false;
      result.data_ = 0;
      return this;
    }
    
    public bool HasFlags {
      get { return result.hasFlags; }
    }
    public int Flags {
      get { return result.Flags; }
      set { SetFlags(value); }
    }
    public Builder SetFlags(int value) {
      PrepareBuilder();
      result.hasFlags = true;
      result.flags_ = value;
      return this;
    }
    public Builder ClearFlags() {
      PrepareBuilder();
      result.hasFlags = false;
      result.flags_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_Rumble() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_CloseCaption : pb::GeneratedMessage<CCSUsrMsg_CloseCaption, CCSUsrMsg_CloseCaption.Builder> {
  private CCSUsrMsg_CloseCaption() { }
  private static readonly CCSUsrMsg_CloseCaption defaultInstance = new CCSUsrMsg_CloseCaption().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgCloseCaptionFieldNames = new string[] { "duration", "from_player", "hash" };
  private static readonly uint[] _cCSUsrMsgCloseCaptionFieldTags = new uint[] { 16, 24, 8 };
  public static CCSUsrMsg_CloseCaption DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_CloseCaption DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_CloseCaption ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_CloseCaption__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_CloseCaption, CCSUsrMsg_CloseCaption.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_CloseCaption__FieldAccessorTable; }
  }
  
  public const int HashFieldNumber = 1;
  private bool hasHash;
  private uint hash_;
  public bool HasHash {
    get { return hasHash; }
  }
  [global::System.CLSCompliant(false)]
  public uint Hash {
    get { return hash_; }
  }
  
  public const int DurationFieldNumber = 2;
  private bool hasDuration;
  private int duration_;
  public bool HasDuration {
    get { return hasDuration; }
  }
  public int Duration {
    get { return duration_; }
  }
  
  public const int FromPlayerFieldNumber = 3;
  private bool hasFromPlayer;
  private bool fromPlayer_;
  public bool HasFromPlayer {
    get { return hasFromPlayer; }
  }
  public bool FromPlayer {
    get { return fromPlayer_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgCloseCaptionFieldNames;
    if (hasHash) {
      output.WriteUInt32(1, field_names[2], Hash);
    }
    if (hasDuration) {
      output.WriteInt32(2, field_names[0], Duration);
    }
    if (hasFromPlayer) {
      output.WriteBool(3, field_names[1], FromPlayer);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasHash) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Hash);
      }
      if (hasDuration) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Duration);
      }
      if (hasFromPlayer) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, FromPlayer);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_CloseCaption ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaption ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaption ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaption ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaption ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaption ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaption ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaption ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaption ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaption ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_CloseCaption MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_CloseCaption prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_CloseCaption, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_CloseCaption cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_CloseCaption result;
    
    private CCSUsrMsg_CloseCaption PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_CloseCaption original = result;
        result = new CCSUsrMsg_CloseCaption();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_CloseCaption MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_CloseCaption.Descriptor; }
    }
    
    public override CCSUsrMsg_CloseCaption DefaultInstanceForType {
      get { return global::CCSUsrMsg_CloseCaption.DefaultInstance; }
    }
    
    public override CCSUsrMsg_CloseCaption BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_CloseCaption) {
        return MergeFrom((CCSUsrMsg_CloseCaption) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_CloseCaption other) {
      if (other == global::CCSUsrMsg_CloseCaption.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasHash) {
        Hash = other.Hash;
      }
      if (other.HasDuration) {
        Duration = other.Duration;
      }
      if (other.HasFromPlayer) {
        FromPlayer = other.FromPlayer;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgCloseCaptionFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgCloseCaptionFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasHash = input.ReadUInt32(ref result.hash_);
            break;
          }
          case 16: {
            result.hasDuration = input.ReadInt32(ref result.duration_);
            break;
          }
          case 24: {
            result.hasFromPlayer = input.ReadBool(ref result.fromPlayer_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasHash {
      get { return result.hasHash; }
    }
    [global::System.CLSCompliant(false)]
    public uint Hash {
      get { return result.Hash; }
      set { SetHash(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetHash(uint value) {
      PrepareBuilder();
      result.hasHash = true;
      result.hash_ = value;
      return this;
    }
    public Builder ClearHash() {
      PrepareBuilder();
      result.hasHash = false;
      result.hash_ = 0;
      return this;
    }
    
    public bool HasDuration {
      get { return result.hasDuration; }
    }
    public int Duration {
      get { return result.Duration; }
      set { SetDuration(value); }
    }
    public Builder SetDuration(int value) {
      PrepareBuilder();
      result.hasDuration = true;
      result.duration_ = value;
      return this;
    }
    public Builder ClearDuration() {
      PrepareBuilder();
      result.hasDuration = false;
      result.duration_ = 0;
      return this;
    }
    
    public bool HasFromPlayer {
      get { return result.hasFromPlayer; }
    }
    public bool FromPlayer {
      get { return result.FromPlayer; }
      set { SetFromPlayer(value); }
    }
    public Builder SetFromPlayer(bool value) {
      PrepareBuilder();
      result.hasFromPlayer = true;
      result.fromPlayer_ = value;
      return this;
    }
    public Builder ClearFromPlayer() {
      PrepareBuilder();
      result.hasFromPlayer = false;
      result.fromPlayer_ = false;
      return this;
    }
  }
  static CCSUsrMsg_CloseCaption() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_CloseCaptionDirect : pb::GeneratedMessage<CCSUsrMsg_CloseCaptionDirect, CCSUsrMsg_CloseCaptionDirect.Builder> {
  private CCSUsrMsg_CloseCaptionDirect() { }
  private static readonly CCSUsrMsg_CloseCaptionDirect defaultInstance = new CCSUsrMsg_CloseCaptionDirect().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgCloseCaptionDirectFieldNames = new string[] { "duration", "from_player", "hash" };
  private static readonly uint[] _cCSUsrMsgCloseCaptionDirectFieldTags = new uint[] { 16, 24, 8 };
  public static CCSUsrMsg_CloseCaptionDirect DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_CloseCaptionDirect DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_CloseCaptionDirect ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_CloseCaptionDirect__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_CloseCaptionDirect, CCSUsrMsg_CloseCaptionDirect.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_CloseCaptionDirect__FieldAccessorTable; }
  }
  
  public const int HashFieldNumber = 1;
  private bool hasHash;
  private uint hash_;
  public bool HasHash {
    get { return hasHash; }
  }
  [global::System.CLSCompliant(false)]
  public uint Hash {
    get { return hash_; }
  }
  
  public const int DurationFieldNumber = 2;
  private bool hasDuration;
  private int duration_;
  public bool HasDuration {
    get { return hasDuration; }
  }
  public int Duration {
    get { return duration_; }
  }
  
  public const int FromPlayerFieldNumber = 3;
  private bool hasFromPlayer;
  private bool fromPlayer_;
  public bool HasFromPlayer {
    get { return hasFromPlayer; }
  }
  public bool FromPlayer {
    get { return fromPlayer_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgCloseCaptionDirectFieldNames;
    if (hasHash) {
      output.WriteUInt32(1, field_names[2], Hash);
    }
    if (hasDuration) {
      output.WriteInt32(2, field_names[0], Duration);
    }
    if (hasFromPlayer) {
      output.WriteBool(3, field_names[1], FromPlayer);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasHash) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Hash);
      }
      if (hasDuration) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Duration);
      }
      if (hasFromPlayer) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, FromPlayer);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_CloseCaptionDirect ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaptionDirect ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaptionDirect ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaptionDirect ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaptionDirect ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaptionDirect ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaptionDirect ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaptionDirect ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaptionDirect ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_CloseCaptionDirect ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_CloseCaptionDirect MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_CloseCaptionDirect prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_CloseCaptionDirect, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_CloseCaptionDirect cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_CloseCaptionDirect result;
    
    private CCSUsrMsg_CloseCaptionDirect PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_CloseCaptionDirect original = result;
        result = new CCSUsrMsg_CloseCaptionDirect();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_CloseCaptionDirect MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_CloseCaptionDirect.Descriptor; }
    }
    
    public override CCSUsrMsg_CloseCaptionDirect DefaultInstanceForType {
      get { return global::CCSUsrMsg_CloseCaptionDirect.DefaultInstance; }
    }
    
    public override CCSUsrMsg_CloseCaptionDirect BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_CloseCaptionDirect) {
        return MergeFrom((CCSUsrMsg_CloseCaptionDirect) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_CloseCaptionDirect other) {
      if (other == global::CCSUsrMsg_CloseCaptionDirect.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasHash) {
        Hash = other.Hash;
      }
      if (other.HasDuration) {
        Duration = other.Duration;
      }
      if (other.HasFromPlayer) {
        FromPlayer = other.FromPlayer;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgCloseCaptionDirectFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgCloseCaptionDirectFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasHash = input.ReadUInt32(ref result.hash_);
            break;
          }
          case 16: {
            result.hasDuration = input.ReadInt32(ref result.duration_);
            break;
          }
          case 24: {
            result.hasFromPlayer = input.ReadBool(ref result.fromPlayer_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasHash {
      get { return result.hasHash; }
    }
    [global::System.CLSCompliant(false)]
    public uint Hash {
      get { return result.Hash; }
      set { SetHash(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetHash(uint value) {
      PrepareBuilder();
      result.hasHash = true;
      result.hash_ = value;
      return this;
    }
    public Builder ClearHash() {
      PrepareBuilder();
      result.hasHash = false;
      result.hash_ = 0;
      return this;
    }
    
    public bool HasDuration {
      get { return result.hasDuration; }
    }
    public int Duration {
      get { return result.Duration; }
      set { SetDuration(value); }
    }
    public Builder SetDuration(int value) {
      PrepareBuilder();
      result.hasDuration = true;
      result.duration_ = value;
      return this;
    }
    public Builder ClearDuration() {
      PrepareBuilder();
      result.hasDuration = false;
      result.duration_ = 0;
      return this;
    }
    
    public bool HasFromPlayer {
      get { return result.hasFromPlayer; }
    }
    public bool FromPlayer {
      get { return result.FromPlayer; }
      set { SetFromPlayer(value); }
    }
    public Builder SetFromPlayer(bool value) {
      PrepareBuilder();
      result.hasFromPlayer = true;
      result.fromPlayer_ = value;
      return this;
    }
    public Builder ClearFromPlayer() {
      PrepareBuilder();
      result.hasFromPlayer = false;
      result.fromPlayer_ = false;
      return this;
    }
  }
  static CCSUsrMsg_CloseCaptionDirect() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_SendAudio : pb::GeneratedMessage<CCSUsrMsg_SendAudio, CCSUsrMsg_SendAudio.Builder> {
  private CCSUsrMsg_SendAudio() { }
  private static readonly CCSUsrMsg_SendAudio defaultInstance = new CCSUsrMsg_SendAudio().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgSendAudioFieldNames = new string[] { "radio_sound" };
  private static readonly uint[] _cCSUsrMsgSendAudioFieldTags = new uint[] { 10 };
  public static CCSUsrMsg_SendAudio DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_SendAudio DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_SendAudio ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SendAudio__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_SendAudio, CCSUsrMsg_SendAudio.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SendAudio__FieldAccessorTable; }
  }
  
  public const int RadioSoundFieldNumber = 1;
  private bool hasRadioSound;
  private string radioSound_ = "";
  public bool HasRadioSound {
    get { return hasRadioSound; }
  }
  public string RadioSound {
    get { return radioSound_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgSendAudioFieldNames;
    if (hasRadioSound) {
      output.WriteString(1, field_names[0], RadioSound);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRadioSound) {
        size += pb::CodedOutputStream.ComputeStringSize(1, RadioSound);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_SendAudio ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SendAudio ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendAudio ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SendAudio ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendAudio ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SendAudio ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendAudio ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_SendAudio ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_SendAudio ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SendAudio ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_SendAudio MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_SendAudio prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_SendAudio, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_SendAudio cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_SendAudio result;
    
    private CCSUsrMsg_SendAudio PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_SendAudio original = result;
        result = new CCSUsrMsg_SendAudio();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_SendAudio MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_SendAudio.Descriptor; }
    }
    
    public override CCSUsrMsg_SendAudio DefaultInstanceForType {
      get { return global::CCSUsrMsg_SendAudio.DefaultInstance; }
    }
    
    public override CCSUsrMsg_SendAudio BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_SendAudio) {
        return MergeFrom((CCSUsrMsg_SendAudio) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_SendAudio other) {
      if (other == global::CCSUsrMsg_SendAudio.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasRadioSound) {
        RadioSound = other.RadioSound;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgSendAudioFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgSendAudioFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasRadioSound = input.ReadString(ref result.radioSound_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasRadioSound {
      get { return result.hasRadioSound; }
    }
    public string RadioSound {
      get { return result.RadioSound; }
      set { SetRadioSound(value); }
    }
    public Builder SetRadioSound(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasRadioSound = true;
      result.radioSound_ = value;
      return this;
    }
    public Builder ClearRadioSound() {
      PrepareBuilder();
      result.hasRadioSound = false;
      result.radioSound_ = "";
      return this;
    }
  }
  static CCSUsrMsg_SendAudio() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_RawAudio : pb::GeneratedMessage<CCSUsrMsg_RawAudio, CCSUsrMsg_RawAudio.Builder> {
  private CCSUsrMsg_RawAudio() { }
  private static readonly CCSUsrMsg_RawAudio defaultInstance = new CCSUsrMsg_RawAudio().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgRawAudioFieldNames = new string[] { "duration", "entidx", "pitch", "voice_filename" };
  private static readonly uint[] _cCSUsrMsgRawAudioFieldTags = new uint[] { 29, 16, 8, 34 };
  public static CCSUsrMsg_RawAudio DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_RawAudio DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_RawAudio ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_RawAudio__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_RawAudio, CCSUsrMsg_RawAudio.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_RawAudio__FieldAccessorTable; }
  }
  
  public const int PitchFieldNumber = 1;
  private bool hasPitch;
  private int pitch_;
  public bool HasPitch {
    get { return hasPitch; }
  }
  public int Pitch {
    get { return pitch_; }
  }
  
  public const int EntidxFieldNumber = 2;
  private bool hasEntidx;
  private int entidx_;
  public bool HasEntidx {
    get { return hasEntidx; }
  }
  public int Entidx {
    get { return entidx_; }
  }
  
  public const int DurationFieldNumber = 3;
  private bool hasDuration;
  private float duration_;
  public bool HasDuration {
    get { return hasDuration; }
  }
  public float Duration {
    get { return duration_; }
  }
  
  public const int VoiceFilenameFieldNumber = 4;
  private bool hasVoiceFilename;
  private string voiceFilename_ = "";
  public bool HasVoiceFilename {
    get { return hasVoiceFilename; }
  }
  public string VoiceFilename {
    get { return voiceFilename_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgRawAudioFieldNames;
    if (hasPitch) {
      output.WriteInt32(1, field_names[2], Pitch);
    }
    if (hasEntidx) {
      output.WriteInt32(2, field_names[1], Entidx);
    }
    if (hasDuration) {
      output.WriteFloat(3, field_names[0], Duration);
    }
    if (hasVoiceFilename) {
      output.WriteString(4, field_names[3], VoiceFilename);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPitch) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Pitch);
      }
      if (hasEntidx) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Entidx);
      }
      if (hasDuration) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Duration);
      }
      if (hasVoiceFilename) {
        size += pb::CodedOutputStream.ComputeStringSize(4, VoiceFilename);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_RawAudio ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_RawAudio ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RawAudio ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_RawAudio ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RawAudio ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_RawAudio ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RawAudio ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_RawAudio ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_RawAudio ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_RawAudio ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_RawAudio MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_RawAudio prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_RawAudio, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_RawAudio cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_RawAudio result;
    
    private CCSUsrMsg_RawAudio PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_RawAudio original = result;
        result = new CCSUsrMsg_RawAudio();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_RawAudio MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_RawAudio.Descriptor; }
    }
    
    public override CCSUsrMsg_RawAudio DefaultInstanceForType {
      get { return global::CCSUsrMsg_RawAudio.DefaultInstance; }
    }
    
    public override CCSUsrMsg_RawAudio BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_RawAudio) {
        return MergeFrom((CCSUsrMsg_RawAudio) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_RawAudio other) {
      if (other == global::CCSUsrMsg_RawAudio.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPitch) {
        Pitch = other.Pitch;
      }
      if (other.HasEntidx) {
        Entidx = other.Entidx;
      }
      if (other.HasDuration) {
        Duration = other.Duration;
      }
      if (other.HasVoiceFilename) {
        VoiceFilename = other.VoiceFilename;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgRawAudioFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgRawAudioFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasPitch = input.ReadInt32(ref result.pitch_);
            break;
          }
          case 16: {
            result.hasEntidx = input.ReadInt32(ref result.entidx_);
            break;
          }
          case 29: {
            result.hasDuration = input.ReadFloat(ref result.duration_);
            break;
          }
          case 34: {
            result.hasVoiceFilename = input.ReadString(ref result.voiceFilename_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPitch {
      get { return result.hasPitch; }
    }
    public int Pitch {
      get { return result.Pitch; }
      set { SetPitch(value); }
    }
    public Builder SetPitch(int value) {
      PrepareBuilder();
      result.hasPitch = true;
      result.pitch_ = value;
      return this;
    }
    public Builder ClearPitch() {
      PrepareBuilder();
      result.hasPitch = false;
      result.pitch_ = 0;
      return this;
    }
    
    public bool HasEntidx {
      get { return result.hasEntidx; }
    }
    public int Entidx {
      get { return result.Entidx; }
      set { SetEntidx(value); }
    }
    public Builder SetEntidx(int value) {
      PrepareBuilder();
      result.hasEntidx = true;
      result.entidx_ = value;
      return this;
    }
    public Builder ClearEntidx() {
      PrepareBuilder();
      result.hasEntidx = false;
      result.entidx_ = 0;
      return this;
    }
    
    public bool HasDuration {
      get { return result.hasDuration; }
    }
    public float Duration {
      get { return result.Duration; }
      set { SetDuration(value); }
    }
    public Builder SetDuration(float value) {
      PrepareBuilder();
      result.hasDuration = true;
      result.duration_ = value;
      return this;
    }
    public Builder ClearDuration() {
      PrepareBuilder();
      result.hasDuration = false;
      result.duration_ = 0F;
      return this;
    }
    
    public bool HasVoiceFilename {
      get { return result.hasVoiceFilename; }
    }
    public string VoiceFilename {
      get { return result.VoiceFilename; }
      set { SetVoiceFilename(value); }
    }
    public Builder SetVoiceFilename(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasVoiceFilename = true;
      result.voiceFilename_ = value;
      return this;
    }
    public Builder ClearVoiceFilename() {
      PrepareBuilder();
      result.hasVoiceFilename = false;
      result.voiceFilename_ = "";
      return this;
    }
  }
  static CCSUsrMsg_RawAudio() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_VoiceMask : pb::GeneratedMessage<CCSUsrMsg_VoiceMask, CCSUsrMsg_VoiceMask.Builder> {
  private CCSUsrMsg_VoiceMask() { }
  private static readonly CCSUsrMsg_VoiceMask defaultInstance = new CCSUsrMsg_VoiceMask().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgVoiceMaskFieldNames = new string[] { "player_masks", "player_mod_enable" };
  private static readonly uint[] _cCSUsrMsgVoiceMaskFieldTags = new uint[] { 10, 16 };
  public static CCSUsrMsg_VoiceMask DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_VoiceMask DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_VoiceMask ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VoiceMask__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_VoiceMask, CCSUsrMsg_VoiceMask.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VoiceMask__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class PlayerMask : pb::GeneratedMessage<PlayerMask, PlayerMask.Builder> {
      private PlayerMask() { }
      private static readonly PlayerMask defaultInstance = new PlayerMask().MakeReadOnly();
      private static readonly string[] _playerMaskFieldNames = new string[] { "ban_masks", "game_rules_mask" };
      private static readonly uint[] _playerMaskFieldTags = new uint[] { 16, 8 };
      public static PlayerMask DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override PlayerMask DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override PlayerMask ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VoiceMask_PlayerMask__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<PlayerMask, PlayerMask.Builder> InternalFieldAccessors {
        get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VoiceMask_PlayerMask__FieldAccessorTable; }
      }
      
      public const int GameRulesMaskFieldNumber = 1;
      private bool hasGameRulesMask;
      private int gameRulesMask_;
      public bool HasGameRulesMask {
        get { return hasGameRulesMask; }
      }
      public int GameRulesMask {
        get { return gameRulesMask_; }
      }
      
      public const int BanMasksFieldNumber = 2;
      private bool hasBanMasks;
      private int banMasks_;
      public bool HasBanMasks {
        get { return hasBanMasks; }
      }
      public int BanMasks {
        get { return banMasks_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _playerMaskFieldNames;
        if (hasGameRulesMask) {
          output.WriteInt32(1, field_names[1], GameRulesMask);
        }
        if (hasBanMasks) {
          output.WriteInt32(2, field_names[0], BanMasks);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasGameRulesMask) {
            size += pb::CodedOutputStream.ComputeInt32Size(1, GameRulesMask);
          }
          if (hasBanMasks) {
            size += pb::CodedOutputStream.ComputeInt32Size(2, BanMasks);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static PlayerMask ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static PlayerMask ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static PlayerMask ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static PlayerMask ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static PlayerMask ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static PlayerMask ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static PlayerMask ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static PlayerMask ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static PlayerMask ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static PlayerMask ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private PlayerMask MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(PlayerMask prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<PlayerMask, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(PlayerMask cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private PlayerMask result;
        
        private PlayerMask PrepareBuilder() {
          if (resultIsReadOnly) {
            PlayerMask original = result;
            result = new PlayerMask();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override PlayerMask MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CCSUsrMsg_VoiceMask.Types.PlayerMask.Descriptor; }
        }
        
        public override PlayerMask DefaultInstanceForType {
          get { return global::CCSUsrMsg_VoiceMask.Types.PlayerMask.DefaultInstance; }
        }
        
        public override PlayerMask BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is PlayerMask) {
            return MergeFrom((PlayerMask) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(PlayerMask other) {
          if (other == global::CCSUsrMsg_VoiceMask.Types.PlayerMask.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasGameRulesMask) {
            GameRulesMask = other.GameRulesMask;
          }
          if (other.HasBanMasks) {
            BanMasks = other.BanMasks;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_playerMaskFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _playerMaskFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasGameRulesMask = input.ReadInt32(ref result.gameRulesMask_);
                break;
              }
              case 16: {
                result.hasBanMasks = input.ReadInt32(ref result.banMasks_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasGameRulesMask {
          get { return result.hasGameRulesMask; }
        }
        public int GameRulesMask {
          get { return result.GameRulesMask; }
          set { SetGameRulesMask(value); }
        }
        public Builder SetGameRulesMask(int value) {
          PrepareBuilder();
          result.hasGameRulesMask = true;
          result.gameRulesMask_ = value;
          return this;
        }
        public Builder ClearGameRulesMask() {
          PrepareBuilder();
          result.hasGameRulesMask = false;
          result.gameRulesMask_ = 0;
          return this;
        }
        
        public bool HasBanMasks {
          get { return result.hasBanMasks; }
        }
        public int BanMasks {
          get { return result.BanMasks; }
          set { SetBanMasks(value); }
        }
        public Builder SetBanMasks(int value) {
          PrepareBuilder();
          result.hasBanMasks = true;
          result.banMasks_ = value;
          return this;
        }
        public Builder ClearBanMasks() {
          PrepareBuilder();
          result.hasBanMasks = false;
          result.banMasks_ = 0;
          return this;
        }
      }
      static PlayerMask() {
        object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int PlayerMasksFieldNumber = 1;
  private pbc::PopsicleList<global::CCSUsrMsg_VoiceMask.Types.PlayerMask> playerMasks_ = new pbc::PopsicleList<global::CCSUsrMsg_VoiceMask.Types.PlayerMask>();
  public scg::IList<global::CCSUsrMsg_VoiceMask.Types.PlayerMask> PlayerMasksList {
    get { return playerMasks_; }
  }
  public int PlayerMasksCount {
    get { return playerMasks_.Count; }
  }
  public global::CCSUsrMsg_VoiceMask.Types.PlayerMask GetPlayerMasks(int index) {
    return playerMasks_[index];
  }
  
  public const int PlayerModEnableFieldNumber = 2;
  private bool hasPlayerModEnable;
  private bool playerModEnable_;
  public bool HasPlayerModEnable {
    get { return hasPlayerModEnable; }
  }
  public bool PlayerModEnable {
    get { return playerModEnable_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgVoiceMaskFieldNames;
    if (playerMasks_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], playerMasks_);
    }
    if (hasPlayerModEnable) {
      output.WriteBool(2, field_names[1], PlayerModEnable);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CCSUsrMsg_VoiceMask.Types.PlayerMask element in PlayerMasksList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasPlayerModEnable) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, PlayerModEnable);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_VoiceMask ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VoiceMask ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoiceMask ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VoiceMask ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoiceMask ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VoiceMask ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoiceMask ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_VoiceMask ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_VoiceMask ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VoiceMask ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_VoiceMask MakeReadOnly() {
    playerMasks_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_VoiceMask prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_VoiceMask, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_VoiceMask cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_VoiceMask result;
    
    private CCSUsrMsg_VoiceMask PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_VoiceMask original = result;
        result = new CCSUsrMsg_VoiceMask();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_VoiceMask MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_VoiceMask.Descriptor; }
    }
    
    public override CCSUsrMsg_VoiceMask DefaultInstanceForType {
      get { return global::CCSUsrMsg_VoiceMask.DefaultInstance; }
    }
    
    public override CCSUsrMsg_VoiceMask BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_VoiceMask) {
        return MergeFrom((CCSUsrMsg_VoiceMask) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_VoiceMask other) {
      if (other == global::CCSUsrMsg_VoiceMask.DefaultInstance) return this;
      PrepareBuilder();
      if (other.playerMasks_.Count != 0) {
        result.playerMasks_.Add(other.playerMasks_);
      }
      if (other.HasPlayerModEnable) {
        PlayerModEnable = other.PlayerModEnable;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgVoiceMaskFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgVoiceMaskFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.playerMasks_, global::CCSUsrMsg_VoiceMask.Types.PlayerMask.DefaultInstance, extensionRegistry);
            break;
          }
          case 16: {
            result.hasPlayerModEnable = input.ReadBool(ref result.playerModEnable_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CCSUsrMsg_VoiceMask.Types.PlayerMask> PlayerMasksList {
      get { return PrepareBuilder().playerMasks_; }
    }
    public int PlayerMasksCount {
      get { return result.PlayerMasksCount; }
    }
    public global::CCSUsrMsg_VoiceMask.Types.PlayerMask GetPlayerMasks(int index) {
      return result.GetPlayerMasks(index);
    }
    public Builder SetPlayerMasks(int index, global::CCSUsrMsg_VoiceMask.Types.PlayerMask value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.playerMasks_[index] = value;
      return this;
    }
    public Builder SetPlayerMasks(int index, global::CCSUsrMsg_VoiceMask.Types.PlayerMask.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.playerMasks_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddPlayerMasks(global::CCSUsrMsg_VoiceMask.Types.PlayerMask value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.playerMasks_.Add(value);
      return this;
    }
    public Builder AddPlayerMasks(global::CCSUsrMsg_VoiceMask.Types.PlayerMask.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.playerMasks_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangePlayerMasks(scg::IEnumerable<global::CCSUsrMsg_VoiceMask.Types.PlayerMask> values) {
      PrepareBuilder();
      result.playerMasks_.Add(values);
      return this;
    }
    public Builder ClearPlayerMasks() {
      PrepareBuilder();
      result.playerMasks_.Clear();
      return this;
    }
    
    public bool HasPlayerModEnable {
      get { return result.hasPlayerModEnable; }
    }
    public bool PlayerModEnable {
      get { return result.PlayerModEnable; }
      set { SetPlayerModEnable(value); }
    }
    public Builder SetPlayerModEnable(bool value) {
      PrepareBuilder();
      result.hasPlayerModEnable = true;
      result.playerModEnable_ = value;
      return this;
    }
    public Builder ClearPlayerModEnable() {
      PrepareBuilder();
      result.hasPlayerModEnable = false;
      result.playerModEnable_ = false;
      return this;
    }
  }
  static CCSUsrMsg_VoiceMask() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_Damage : pb::GeneratedMessage<CCSUsrMsg_Damage, CCSUsrMsg_Damage.Builder> {
  private CCSUsrMsg_Damage() { }
  private static readonly CCSUsrMsg_Damage defaultInstance = new CCSUsrMsg_Damage().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgDamageFieldNames = new string[] { "amount", "inflictor_world_pos" };
  private static readonly uint[] _cCSUsrMsgDamageFieldTags = new uint[] { 8, 18 };
  public static CCSUsrMsg_Damage DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_Damage DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_Damage ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Damage__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_Damage, CCSUsrMsg_Damage.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_Damage__FieldAccessorTable; }
  }
  
  public const int AmountFieldNumber = 1;
  private bool hasAmount;
  private int amount_;
  public bool HasAmount {
    get { return hasAmount; }
  }
  public int Amount {
    get { return amount_; }
  }
  
  public const int InflictorWorldPosFieldNumber = 2;
  private bool hasInflictorWorldPos;
  private global::CMsgVector inflictorWorldPos_;
  public bool HasInflictorWorldPos {
    get { return hasInflictorWorldPos; }
  }
  public global::CMsgVector InflictorWorldPos {
    get { return inflictorWorldPos_ ?? global::CMsgVector.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgDamageFieldNames;
    if (hasAmount) {
      output.WriteInt32(1, field_names[0], Amount);
    }
    if (hasInflictorWorldPos) {
      output.WriteMessage(2, field_names[1], InflictorWorldPos);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAmount) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Amount);
      }
      if (hasInflictorWorldPos) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, InflictorWorldPos);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_Damage ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Damage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Damage ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_Damage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Damage ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Damage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_Damage ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_Damage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_Damage ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_Damage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_Damage MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_Damage prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_Damage, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_Damage cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_Damage result;
    
    private CCSUsrMsg_Damage PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_Damage original = result;
        result = new CCSUsrMsg_Damage();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_Damage MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_Damage.Descriptor; }
    }
    
    public override CCSUsrMsg_Damage DefaultInstanceForType {
      get { return global::CCSUsrMsg_Damage.DefaultInstance; }
    }
    
    public override CCSUsrMsg_Damage BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_Damage) {
        return MergeFrom((CCSUsrMsg_Damage) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_Damage other) {
      if (other == global::CCSUsrMsg_Damage.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      if (other.HasInflictorWorldPos) {
        MergeInflictorWorldPos(other.InflictorWorldPos);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgDamageFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgDamageFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAmount = input.ReadInt32(ref result.amount_);
            break;
          }
          case 18: {
            global::CMsgVector.Builder subBuilder = global::CMsgVector.CreateBuilder();
            if (result.hasInflictorWorldPos) {
              subBuilder.MergeFrom(InflictorWorldPos);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            InflictorWorldPos = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAmount {
      get { return result.hasAmount; }
    }
    public int Amount {
      get { return result.Amount; }
      set { SetAmount(value); }
    }
    public Builder SetAmount(int value) {
      PrepareBuilder();
      result.hasAmount = true;
      result.amount_ = value;
      return this;
    }
    public Builder ClearAmount() {
      PrepareBuilder();
      result.hasAmount = false;
      result.amount_ = 0;
      return this;
    }
    
    public bool HasInflictorWorldPos {
     get { return result.hasInflictorWorldPos; }
    }
    public global::CMsgVector InflictorWorldPos {
      get { return result.InflictorWorldPos; }
      set { SetInflictorWorldPos(value); }
    }
    public Builder SetInflictorWorldPos(global::CMsgVector value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasInflictorWorldPos = true;
      result.inflictorWorldPos_ = value;
      return this;
    }
    public Builder SetInflictorWorldPos(global::CMsgVector.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasInflictorWorldPos = true;
      result.inflictorWorldPos_ = builderForValue.Build();
      return this;
    }
    public Builder MergeInflictorWorldPos(global::CMsgVector value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasInflictorWorldPos &&
          result.inflictorWorldPos_ != global::CMsgVector.DefaultInstance) {
          result.inflictorWorldPos_ = global::CMsgVector.CreateBuilder(result.inflictorWorldPos_).MergeFrom(value).BuildPartial();
      } else {
        result.inflictorWorldPos_ = value;
      }
      result.hasInflictorWorldPos = true;
      return this;
    }
    public Builder ClearInflictorWorldPos() {
      PrepareBuilder();
      result.hasInflictorWorldPos = false;
      result.inflictorWorldPos_ = null;
      return this;
    }
  }
  static CCSUsrMsg_Damage() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_RadioText : pb::GeneratedMessage<CCSUsrMsg_RadioText, CCSUsrMsg_RadioText.Builder> {
  private CCSUsrMsg_RadioText() { }
  private static readonly CCSUsrMsg_RadioText defaultInstance = new CCSUsrMsg_RadioText().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgRadioTextFieldNames = new string[] { "client", "msg_dst", "msg_name", "params" };
  private static readonly uint[] _cCSUsrMsgRadioTextFieldTags = new uint[] { 16, 8, 26, 34 };
  public static CCSUsrMsg_RadioText DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_RadioText DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_RadioText ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_RadioText__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_RadioText, CCSUsrMsg_RadioText.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_RadioText__FieldAccessorTable; }
  }
  
  public const int MsgDstFieldNumber = 1;
  private bool hasMsgDst;
  private int msgDst_;
  public bool HasMsgDst {
    get { return hasMsgDst; }
  }
  public int MsgDst {
    get { return msgDst_; }
  }
  
  public const int ClientFieldNumber = 2;
  private bool hasClient;
  private int client_;
  public bool HasClient {
    get { return hasClient; }
  }
  public int Client {
    get { return client_; }
  }
  
  public const int MsgNameFieldNumber = 3;
  private bool hasMsgName;
  private string msgName_ = "";
  public bool HasMsgName {
    get { return hasMsgName; }
  }
  public string MsgName {
    get { return msgName_; }
  }
  
  public const int ParamsFieldNumber = 4;
  private pbc::PopsicleList<string> params_ = new pbc::PopsicleList<string>();
  public scg::IList<string> ParamsList {
    get { return pbc::Lists.AsReadOnly(params_); }
  }
  public int ParamsCount {
    get { return params_.Count; }
  }
  public string GetParams(int index) {
    return params_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgRadioTextFieldNames;
    if (hasMsgDst) {
      output.WriteInt32(1, field_names[1], MsgDst);
    }
    if (hasClient) {
      output.WriteInt32(2, field_names[0], Client);
    }
    if (hasMsgName) {
      output.WriteString(3, field_names[2], MsgName);
    }
    if (params_.Count > 0) {
      output.WriteStringArray(4, field_names[3], params_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMsgDst) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, MsgDst);
      }
      if (hasClient) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Client);
      }
      if (hasMsgName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, MsgName);
      }
      {
        int dataSize = 0;
        foreach (string element in ParamsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * params_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_RadioText ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_RadioText ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RadioText ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_RadioText ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RadioText ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_RadioText ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RadioText ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_RadioText ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_RadioText ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_RadioText ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_RadioText MakeReadOnly() {
    params_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_RadioText prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_RadioText, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_RadioText cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_RadioText result;
    
    private CCSUsrMsg_RadioText PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_RadioText original = result;
        result = new CCSUsrMsg_RadioText();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_RadioText MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_RadioText.Descriptor; }
    }
    
    public override CCSUsrMsg_RadioText DefaultInstanceForType {
      get { return global::CCSUsrMsg_RadioText.DefaultInstance; }
    }
    
    public override CCSUsrMsg_RadioText BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_RadioText) {
        return MergeFrom((CCSUsrMsg_RadioText) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_RadioText other) {
      if (other == global::CCSUsrMsg_RadioText.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasMsgDst) {
        MsgDst = other.MsgDst;
      }
      if (other.HasClient) {
        Client = other.Client;
      }
      if (other.HasMsgName) {
        MsgName = other.MsgName;
      }
      if (other.params_.Count != 0) {
        result.params_.Add(other.params_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgRadioTextFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgRadioTextFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasMsgDst = input.ReadInt32(ref result.msgDst_);
            break;
          }
          case 16: {
            result.hasClient = input.ReadInt32(ref result.client_);
            break;
          }
          case 26: {
            result.hasMsgName = input.ReadString(ref result.msgName_);
            break;
          }
          case 34: {
            input.ReadStringArray(tag, field_name, result.params_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasMsgDst {
      get { return result.hasMsgDst; }
    }
    public int MsgDst {
      get { return result.MsgDst; }
      set { SetMsgDst(value); }
    }
    public Builder SetMsgDst(int value) {
      PrepareBuilder();
      result.hasMsgDst = true;
      result.msgDst_ = value;
      return this;
    }
    public Builder ClearMsgDst() {
      PrepareBuilder();
      result.hasMsgDst = false;
      result.msgDst_ = 0;
      return this;
    }
    
    public bool HasClient {
      get { return result.hasClient; }
    }
    public int Client {
      get { return result.Client; }
      set { SetClient(value); }
    }
    public Builder SetClient(int value) {
      PrepareBuilder();
      result.hasClient = true;
      result.client_ = value;
      return this;
    }
    public Builder ClearClient() {
      PrepareBuilder();
      result.hasClient = false;
      result.client_ = 0;
      return this;
    }
    
    public bool HasMsgName {
      get { return result.hasMsgName; }
    }
    public string MsgName {
      get { return result.MsgName; }
      set { SetMsgName(value); }
    }
    public Builder SetMsgName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasMsgName = true;
      result.msgName_ = value;
      return this;
    }
    public Builder ClearMsgName() {
      PrepareBuilder();
      result.hasMsgName = false;
      result.msgName_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<string> ParamsList {
      get { return PrepareBuilder().params_; }
    }
    public int ParamsCount {
      get { return result.ParamsCount; }
    }
    public string GetParams(int index) {
      return result.GetParams(index);
    }
    public Builder SetParams(int index, string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.params_[index] = value;
      return this;
    }
    public Builder AddParams(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.params_.Add(value);
      return this;
    }
    public Builder AddRangeParams(scg::IEnumerable<string> values) {
      PrepareBuilder();
      result.params_.Add(values);
      return this;
    }
    public Builder ClearParams() {
      PrepareBuilder();
      result.params_.Clear();
      return this;
    }
  }
  static CCSUsrMsg_RadioText() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_HintText : pb::GeneratedMessage<CCSUsrMsg_HintText, CCSUsrMsg_HintText.Builder> {
  private CCSUsrMsg_HintText() { }
  private static readonly CCSUsrMsg_HintText defaultInstance = new CCSUsrMsg_HintText().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgHintTextFieldNames = new string[] { "text" };
  private static readonly uint[] _cCSUsrMsgHintTextFieldTags = new uint[] { 10 };
  public static CCSUsrMsg_HintText DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_HintText DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_HintText ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_HintText__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_HintText, CCSUsrMsg_HintText.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_HintText__FieldAccessorTable; }
  }
  
  public const int TextFieldNumber = 1;
  private bool hasText;
  private string text_ = "";
  public bool HasText {
    get { return hasText; }
  }
  public string Text {
    get { return text_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgHintTextFieldNames;
    if (hasText) {
      output.WriteString(1, field_names[0], Text);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Text);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_HintText ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_HintText ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_HintText ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_HintText ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_HintText ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_HintText ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_HintText ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_HintText ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_HintText ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_HintText ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_HintText MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_HintText prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_HintText, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_HintText cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_HintText result;
    
    private CCSUsrMsg_HintText PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_HintText original = result;
        result = new CCSUsrMsg_HintText();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_HintText MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_HintText.Descriptor; }
    }
    
    public override CCSUsrMsg_HintText DefaultInstanceForType {
      get { return global::CCSUsrMsg_HintText.DefaultInstance; }
    }
    
    public override CCSUsrMsg_HintText BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_HintText) {
        return MergeFrom((CCSUsrMsg_HintText) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_HintText other) {
      if (other == global::CCSUsrMsg_HintText.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasText) {
        Text = other.Text;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgHintTextFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgHintTextFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasText = input.ReadString(ref result.text_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasText {
      get { return result.hasText; }
    }
    public string Text {
      get { return result.Text; }
      set { SetText(value); }
    }
    public Builder SetText(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasText = true;
      result.text_ = value;
      return this;
    }
    public Builder ClearText() {
      PrepareBuilder();
      result.hasText = false;
      result.text_ = "";
      return this;
    }
  }
  static CCSUsrMsg_HintText() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_KeyHintText : pb::GeneratedMessage<CCSUsrMsg_KeyHintText, CCSUsrMsg_KeyHintText.Builder> {
  private CCSUsrMsg_KeyHintText() { }
  private static readonly CCSUsrMsg_KeyHintText defaultInstance = new CCSUsrMsg_KeyHintText().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgKeyHintTextFieldNames = new string[] { "hints" };
  private static readonly uint[] _cCSUsrMsgKeyHintTextFieldTags = new uint[] { 10 };
  public static CCSUsrMsg_KeyHintText DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_KeyHintText DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_KeyHintText ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_KeyHintText__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_KeyHintText, CCSUsrMsg_KeyHintText.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_KeyHintText__FieldAccessorTable; }
  }
  
  public const int HintsFieldNumber = 1;
  private pbc::PopsicleList<string> hints_ = new pbc::PopsicleList<string>();
  public scg::IList<string> HintsList {
    get { return pbc::Lists.AsReadOnly(hints_); }
  }
  public int HintsCount {
    get { return hints_.Count; }
  }
  public string GetHints(int index) {
    return hints_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgKeyHintTextFieldNames;
    if (hints_.Count > 0) {
      output.WriteStringArray(1, field_names[0], hints_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (string element in HintsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * hints_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_KeyHintText ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_KeyHintText ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_KeyHintText ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_KeyHintText ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_KeyHintText ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_KeyHintText ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_KeyHintText ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_KeyHintText ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_KeyHintText ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_KeyHintText ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_KeyHintText MakeReadOnly() {
    hints_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_KeyHintText prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_KeyHintText, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_KeyHintText cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_KeyHintText result;
    
    private CCSUsrMsg_KeyHintText PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_KeyHintText original = result;
        result = new CCSUsrMsg_KeyHintText();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_KeyHintText MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_KeyHintText.Descriptor; }
    }
    
    public override CCSUsrMsg_KeyHintText DefaultInstanceForType {
      get { return global::CCSUsrMsg_KeyHintText.DefaultInstance; }
    }
    
    public override CCSUsrMsg_KeyHintText BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_KeyHintText) {
        return MergeFrom((CCSUsrMsg_KeyHintText) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_KeyHintText other) {
      if (other == global::CCSUsrMsg_KeyHintText.DefaultInstance) return this;
      PrepareBuilder();
      if (other.hints_.Count != 0) {
        result.hints_.Add(other.hints_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgKeyHintTextFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgKeyHintTextFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadStringArray(tag, field_name, result.hints_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<string> HintsList {
      get { return PrepareBuilder().hints_; }
    }
    public int HintsCount {
      get { return result.HintsCount; }
    }
    public string GetHints(int index) {
      return result.GetHints(index);
    }
    public Builder SetHints(int index, string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hints_[index] = value;
      return this;
    }
    public Builder AddHints(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hints_.Add(value);
      return this;
    }
    public Builder AddRangeHints(scg::IEnumerable<string> values) {
      PrepareBuilder();
      result.hints_.Add(values);
      return this;
    }
    public Builder ClearHints() {
      PrepareBuilder();
      result.hints_.Clear();
      return this;
    }
  }
  static CCSUsrMsg_KeyHintText() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_ProcessSpottedEntityUpdate : pb::GeneratedMessage<CCSUsrMsg_ProcessSpottedEntityUpdate, CCSUsrMsg_ProcessSpottedEntityUpdate.Builder> {
  private CCSUsrMsg_ProcessSpottedEntityUpdate() { }
  private static readonly CCSUsrMsg_ProcessSpottedEntityUpdate defaultInstance = new CCSUsrMsg_ProcessSpottedEntityUpdate().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgProcessSpottedEntityUpdateFieldNames = new string[] { "entity_updates", "new_update" };
  private static readonly uint[] _cCSUsrMsgProcessSpottedEntityUpdateFieldTags = new uint[] { 18, 8 };
  public static CCSUsrMsg_ProcessSpottedEntityUpdate DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_ProcessSpottedEntityUpdate DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_ProcessSpottedEntityUpdate ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_ProcessSpottedEntityUpdate, CCSUsrMsg_ProcessSpottedEntityUpdate.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class SpottedEntityUpdate : pb::GeneratedMessage<SpottedEntityUpdate, SpottedEntityUpdate.Builder> {
      private SpottedEntityUpdate() { }
      private static readonly SpottedEntityUpdate defaultInstance = new SpottedEntityUpdate().MakeReadOnly();
      private static readonly string[] _spottedEntityUpdateFieldNames = new string[] { "angle_y", "class_id", "defuser", "entity_idx", "origin_x", "origin_y", "origin_z", "player_has_c4", "player_has_defuser" };
      private static readonly uint[] _spottedEntityUpdateFieldTags = new uint[] { 48, 16, 56, 8, 24, 32, 40, 72, 64 };
      public static SpottedEntityUpdate DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override SpottedEntityUpdate DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override SpottedEntityUpdate ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<SpottedEntityUpdate, SpottedEntityUpdate.Builder> InternalFieldAccessors {
        get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ProcessSpottedEntityUpdate_SpottedEntityUpdate__FieldAccessorTable; }
      }
      
      public const int EntityIdxFieldNumber = 1;
      private bool hasEntityIdx;
      private int entityIdx_;
      public bool HasEntityIdx {
        get { return hasEntityIdx; }
      }
      public int EntityIdx {
        get { return entityIdx_; }
      }
      
      public const int ClassIdFieldNumber = 2;
      private bool hasClassId;
      private int classId_;
      public bool HasClassId {
        get { return hasClassId; }
      }
      public int ClassId {
        get { return classId_; }
      }
      
      public const int OriginXFieldNumber = 3;
      private bool hasOriginX;
      private int originX_;
      public bool HasOriginX {
        get { return hasOriginX; }
      }
      public int OriginX {
        get { return originX_; }
      }
      
      public const int OriginYFieldNumber = 4;
      private bool hasOriginY;
      private int originY_;
      public bool HasOriginY {
        get { return hasOriginY; }
      }
      public int OriginY {
        get { return originY_; }
      }
      
      public const int OriginZFieldNumber = 5;
      private bool hasOriginZ;
      private int originZ_;
      public bool HasOriginZ {
        get { return hasOriginZ; }
      }
      public int OriginZ {
        get { return originZ_; }
      }
      
      public const int AngleYFieldNumber = 6;
      private bool hasAngleY;
      private int angleY_;
      public bool HasAngleY {
        get { return hasAngleY; }
      }
      public int AngleY {
        get { return angleY_; }
      }
      
      public const int DefuserFieldNumber = 7;
      private bool hasDefuser;
      private bool defuser_;
      public bool HasDefuser {
        get { return hasDefuser; }
      }
      public bool Defuser {
        get { return defuser_; }
      }
      
      public const int PlayerHasDefuserFieldNumber = 8;
      private bool hasPlayerHasDefuser;
      private bool playerHasDefuser_;
      public bool HasPlayerHasDefuser {
        get { return hasPlayerHasDefuser; }
      }
      public bool PlayerHasDefuser {
        get { return playerHasDefuser_; }
      }
      
      public const int PlayerHasC4FieldNumber = 9;
      private bool hasPlayerHasC4;
      private bool playerHasC4_;
      public bool HasPlayerHasC4 {
        get { return hasPlayerHasC4; }
      }
      public bool PlayerHasC4 {
        get { return playerHasC4_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _spottedEntityUpdateFieldNames;
        if (hasEntityIdx) {
          output.WriteInt32(1, field_names[3], EntityIdx);
        }
        if (hasClassId) {
          output.WriteInt32(2, field_names[1], ClassId);
        }
        if (hasOriginX) {
          output.WriteInt32(3, field_names[4], OriginX);
        }
        if (hasOriginY) {
          output.WriteInt32(4, field_names[5], OriginY);
        }
        if (hasOriginZ) {
          output.WriteInt32(5, field_names[6], OriginZ);
        }
        if (hasAngleY) {
          output.WriteInt32(6, field_names[0], AngleY);
        }
        if (hasDefuser) {
          output.WriteBool(7, field_names[2], Defuser);
        }
        if (hasPlayerHasDefuser) {
          output.WriteBool(8, field_names[8], PlayerHasDefuser);
        }
        if (hasPlayerHasC4) {
          output.WriteBool(9, field_names[7], PlayerHasC4);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasEntityIdx) {
            size += pb::CodedOutputStream.ComputeInt32Size(1, EntityIdx);
          }
          if (hasClassId) {
            size += pb::CodedOutputStream.ComputeInt32Size(2, ClassId);
          }
          if (hasOriginX) {
            size += pb::CodedOutputStream.ComputeInt32Size(3, OriginX);
          }
          if (hasOriginY) {
            size += pb::CodedOutputStream.ComputeInt32Size(4, OriginY);
          }
          if (hasOriginZ) {
            size += pb::CodedOutputStream.ComputeInt32Size(5, OriginZ);
          }
          if (hasAngleY) {
            size += pb::CodedOutputStream.ComputeInt32Size(6, AngleY);
          }
          if (hasDefuser) {
            size += pb::CodedOutputStream.ComputeBoolSize(7, Defuser);
          }
          if (hasPlayerHasDefuser) {
            size += pb::CodedOutputStream.ComputeBoolSize(8, PlayerHasDefuser);
          }
          if (hasPlayerHasC4) {
            size += pb::CodedOutputStream.ComputeBoolSize(9, PlayerHasC4);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static SpottedEntityUpdate ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SpottedEntityUpdate ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SpottedEntityUpdate ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SpottedEntityUpdate ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SpottedEntityUpdate ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SpottedEntityUpdate ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static SpottedEntityUpdate ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static SpottedEntityUpdate ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static SpottedEntityUpdate ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SpottedEntityUpdate ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private SpottedEntityUpdate MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(SpottedEntityUpdate prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<SpottedEntityUpdate, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(SpottedEntityUpdate cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private SpottedEntityUpdate result;
        
        private SpottedEntityUpdate PrepareBuilder() {
          if (resultIsReadOnly) {
            SpottedEntityUpdate original = result;
            result = new SpottedEntityUpdate();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override SpottedEntityUpdate MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate.Descriptor; }
        }
        
        public override SpottedEntityUpdate DefaultInstanceForType {
          get { return global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate.DefaultInstance; }
        }
        
        public override SpottedEntityUpdate BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is SpottedEntityUpdate) {
            return MergeFrom((SpottedEntityUpdate) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(SpottedEntityUpdate other) {
          if (other == global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasEntityIdx) {
            EntityIdx = other.EntityIdx;
          }
          if (other.HasClassId) {
            ClassId = other.ClassId;
          }
          if (other.HasOriginX) {
            OriginX = other.OriginX;
          }
          if (other.HasOriginY) {
            OriginY = other.OriginY;
          }
          if (other.HasOriginZ) {
            OriginZ = other.OriginZ;
          }
          if (other.HasAngleY) {
            AngleY = other.AngleY;
          }
          if (other.HasDefuser) {
            Defuser = other.Defuser;
          }
          if (other.HasPlayerHasDefuser) {
            PlayerHasDefuser = other.PlayerHasDefuser;
          }
          if (other.HasPlayerHasC4) {
            PlayerHasC4 = other.PlayerHasC4;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_spottedEntityUpdateFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _spottedEntityUpdateFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasEntityIdx = input.ReadInt32(ref result.entityIdx_);
                break;
              }
              case 16: {
                result.hasClassId = input.ReadInt32(ref result.classId_);
                break;
              }
              case 24: {
                result.hasOriginX = input.ReadInt32(ref result.originX_);
                break;
              }
              case 32: {
                result.hasOriginY = input.ReadInt32(ref result.originY_);
                break;
              }
              case 40: {
                result.hasOriginZ = input.ReadInt32(ref result.originZ_);
                break;
              }
              case 48: {
                result.hasAngleY = input.ReadInt32(ref result.angleY_);
                break;
              }
              case 56: {
                result.hasDefuser = input.ReadBool(ref result.defuser_);
                break;
              }
              case 64: {
                result.hasPlayerHasDefuser = input.ReadBool(ref result.playerHasDefuser_);
                break;
              }
              case 72: {
                result.hasPlayerHasC4 = input.ReadBool(ref result.playerHasC4_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasEntityIdx {
          get { return result.hasEntityIdx; }
        }
        public int EntityIdx {
          get { return result.EntityIdx; }
          set { SetEntityIdx(value); }
        }
        public Builder SetEntityIdx(int value) {
          PrepareBuilder();
          result.hasEntityIdx = true;
          result.entityIdx_ = value;
          return this;
        }
        public Builder ClearEntityIdx() {
          PrepareBuilder();
          result.hasEntityIdx = false;
          result.entityIdx_ = 0;
          return this;
        }
        
        public bool HasClassId {
          get { return result.hasClassId; }
        }
        public int ClassId {
          get { return result.ClassId; }
          set { SetClassId(value); }
        }
        public Builder SetClassId(int value) {
          PrepareBuilder();
          result.hasClassId = true;
          result.classId_ = value;
          return this;
        }
        public Builder ClearClassId() {
          PrepareBuilder();
          result.hasClassId = false;
          result.classId_ = 0;
          return this;
        }
        
        public bool HasOriginX {
          get { return result.hasOriginX; }
        }
        public int OriginX {
          get { return result.OriginX; }
          set { SetOriginX(value); }
        }
        public Builder SetOriginX(int value) {
          PrepareBuilder();
          result.hasOriginX = true;
          result.originX_ = value;
          return this;
        }
        public Builder ClearOriginX() {
          PrepareBuilder();
          result.hasOriginX = false;
          result.originX_ = 0;
          return this;
        }
        
        public bool HasOriginY {
          get { return result.hasOriginY; }
        }
        public int OriginY {
          get { return result.OriginY; }
          set { SetOriginY(value); }
        }
        public Builder SetOriginY(int value) {
          PrepareBuilder();
          result.hasOriginY = true;
          result.originY_ = value;
          return this;
        }
        public Builder ClearOriginY() {
          PrepareBuilder();
          result.hasOriginY = false;
          result.originY_ = 0;
          return this;
        }
        
        public bool HasOriginZ {
          get { return result.hasOriginZ; }
        }
        public int OriginZ {
          get { return result.OriginZ; }
          set { SetOriginZ(value); }
        }
        public Builder SetOriginZ(int value) {
          PrepareBuilder();
          result.hasOriginZ = true;
          result.originZ_ = value;
          return this;
        }
        public Builder ClearOriginZ() {
          PrepareBuilder();
          result.hasOriginZ = false;
          result.originZ_ = 0;
          return this;
        }
        
        public bool HasAngleY {
          get { return result.hasAngleY; }
        }
        public int AngleY {
          get { return result.AngleY; }
          set { SetAngleY(value); }
        }
        public Builder SetAngleY(int value) {
          PrepareBuilder();
          result.hasAngleY = true;
          result.angleY_ = value;
          return this;
        }
        public Builder ClearAngleY() {
          PrepareBuilder();
          result.hasAngleY = false;
          result.angleY_ = 0;
          return this;
        }
        
        public bool HasDefuser {
          get { return result.hasDefuser; }
        }
        public bool Defuser {
          get { return result.Defuser; }
          set { SetDefuser(value); }
        }
        public Builder SetDefuser(bool value) {
          PrepareBuilder();
          result.hasDefuser = true;
          result.defuser_ = value;
          return this;
        }
        public Builder ClearDefuser() {
          PrepareBuilder();
          result.hasDefuser = false;
          result.defuser_ = false;
          return this;
        }
        
        public bool HasPlayerHasDefuser {
          get { return result.hasPlayerHasDefuser; }
        }
        public bool PlayerHasDefuser {
          get { return result.PlayerHasDefuser; }
          set { SetPlayerHasDefuser(value); }
        }
        public Builder SetPlayerHasDefuser(bool value) {
          PrepareBuilder();
          result.hasPlayerHasDefuser = true;
          result.playerHasDefuser_ = value;
          return this;
        }
        public Builder ClearPlayerHasDefuser() {
          PrepareBuilder();
          result.hasPlayerHasDefuser = false;
          result.playerHasDefuser_ = false;
          return this;
        }
        
        public bool HasPlayerHasC4 {
          get { return result.hasPlayerHasC4; }
        }
        public bool PlayerHasC4 {
          get { return result.PlayerHasC4; }
          set { SetPlayerHasC4(value); }
        }
        public Builder SetPlayerHasC4(bool value) {
          PrepareBuilder();
          result.hasPlayerHasC4 = true;
          result.playerHasC4_ = value;
          return this;
        }
        public Builder ClearPlayerHasC4() {
          PrepareBuilder();
          result.hasPlayerHasC4 = false;
          result.playerHasC4_ = false;
          return this;
        }
      }
      static SpottedEntityUpdate() {
        object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int NewUpdateFieldNumber = 1;
  private bool hasNewUpdate;
  private bool newUpdate_;
  public bool HasNewUpdate {
    get { return hasNewUpdate; }
  }
  public bool NewUpdate {
    get { return newUpdate_; }
  }
  
  public const int EntityUpdatesFieldNumber = 2;
  private pbc::PopsicleList<global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate> entityUpdates_ = new pbc::PopsicleList<global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate>();
  public scg::IList<global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate> EntityUpdatesList {
    get { return entityUpdates_; }
  }
  public int EntityUpdatesCount {
    get { return entityUpdates_.Count; }
  }
  public global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate GetEntityUpdates(int index) {
    return entityUpdates_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgProcessSpottedEntityUpdateFieldNames;
    if (hasNewUpdate) {
      output.WriteBool(1, field_names[1], NewUpdate);
    }
    if (entityUpdates_.Count > 0) {
      output.WriteMessageArray(2, field_names[0], entityUpdates_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNewUpdate) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, NewUpdate);
      }
      foreach (global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate element in EntityUpdatesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_ProcessSpottedEntityUpdate ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ProcessSpottedEntityUpdate ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ProcessSpottedEntityUpdate ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ProcessSpottedEntityUpdate ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ProcessSpottedEntityUpdate ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ProcessSpottedEntityUpdate ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ProcessSpottedEntityUpdate ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_ProcessSpottedEntityUpdate ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_ProcessSpottedEntityUpdate ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ProcessSpottedEntityUpdate ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_ProcessSpottedEntityUpdate MakeReadOnly() {
    entityUpdates_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_ProcessSpottedEntityUpdate prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_ProcessSpottedEntityUpdate, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_ProcessSpottedEntityUpdate cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_ProcessSpottedEntityUpdate result;
    
    private CCSUsrMsg_ProcessSpottedEntityUpdate PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_ProcessSpottedEntityUpdate original = result;
        result = new CCSUsrMsg_ProcessSpottedEntityUpdate();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_ProcessSpottedEntityUpdate MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_ProcessSpottedEntityUpdate.Descriptor; }
    }
    
    public override CCSUsrMsg_ProcessSpottedEntityUpdate DefaultInstanceForType {
      get { return global::CCSUsrMsg_ProcessSpottedEntityUpdate.DefaultInstance; }
    }
    
    public override CCSUsrMsg_ProcessSpottedEntityUpdate BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_ProcessSpottedEntityUpdate) {
        return MergeFrom((CCSUsrMsg_ProcessSpottedEntityUpdate) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_ProcessSpottedEntityUpdate other) {
      if (other == global::CCSUsrMsg_ProcessSpottedEntityUpdate.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasNewUpdate) {
        NewUpdate = other.NewUpdate;
      }
      if (other.entityUpdates_.Count != 0) {
        result.entityUpdates_.Add(other.entityUpdates_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgProcessSpottedEntityUpdateFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgProcessSpottedEntityUpdateFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasNewUpdate = input.ReadBool(ref result.newUpdate_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.entityUpdates_, global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasNewUpdate {
      get { return result.hasNewUpdate; }
    }
    public bool NewUpdate {
      get { return result.NewUpdate; }
      set { SetNewUpdate(value); }
    }
    public Builder SetNewUpdate(bool value) {
      PrepareBuilder();
      result.hasNewUpdate = true;
      result.newUpdate_ = value;
      return this;
    }
    public Builder ClearNewUpdate() {
      PrepareBuilder();
      result.hasNewUpdate = false;
      result.newUpdate_ = false;
      return this;
    }
    
    public pbc::IPopsicleList<global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate> EntityUpdatesList {
      get { return PrepareBuilder().entityUpdates_; }
    }
    public int EntityUpdatesCount {
      get { return result.EntityUpdatesCount; }
    }
    public global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate GetEntityUpdates(int index) {
      return result.GetEntityUpdates(index);
    }
    public Builder SetEntityUpdates(int index, global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.entityUpdates_[index] = value;
      return this;
    }
    public Builder SetEntityUpdates(int index, global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.entityUpdates_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddEntityUpdates(global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.entityUpdates_.Add(value);
      return this;
    }
    public Builder AddEntityUpdates(global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.entityUpdates_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeEntityUpdates(scg::IEnumerable<global::CCSUsrMsg_ProcessSpottedEntityUpdate.Types.SpottedEntityUpdate> values) {
      PrepareBuilder();
      result.entityUpdates_.Add(values);
      return this;
    }
    public Builder ClearEntityUpdates() {
      PrepareBuilder();
      result.entityUpdates_.Clear();
      return this;
    }
  }
  static CCSUsrMsg_ProcessSpottedEntityUpdate() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_SendPlayerItemDrops : pb::GeneratedMessage<CCSUsrMsg_SendPlayerItemDrops, CCSUsrMsg_SendPlayerItemDrops.Builder> {
  private CCSUsrMsg_SendPlayerItemDrops() { }
  private static readonly CCSUsrMsg_SendPlayerItemDrops defaultInstance = new CCSUsrMsg_SendPlayerItemDrops().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgSendPlayerItemDropsFieldNames = new string[] { "entity_updates" };
  private static readonly uint[] _cCSUsrMsgSendPlayerItemDropsFieldTags = new uint[] { 10 };
  public static CCSUsrMsg_SendPlayerItemDrops DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_SendPlayerItemDrops DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_SendPlayerItemDrops ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SendPlayerItemDrops__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_SendPlayerItemDrops, CCSUsrMsg_SendPlayerItemDrops.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SendPlayerItemDrops__FieldAccessorTable; }
  }
  
  public const int EntityUpdatesFieldNumber = 1;
  private pbc::PopsicleList<global::CEconItemPreviewDataBlock> entityUpdates_ = new pbc::PopsicleList<global::CEconItemPreviewDataBlock>();
  public scg::IList<global::CEconItemPreviewDataBlock> EntityUpdatesList {
    get { return entityUpdates_; }
  }
  public int EntityUpdatesCount {
    get { return entityUpdates_.Count; }
  }
  public global::CEconItemPreviewDataBlock GetEntityUpdates(int index) {
    return entityUpdates_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgSendPlayerItemDropsFieldNames;
    if (entityUpdates_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], entityUpdates_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CEconItemPreviewDataBlock element in EntityUpdatesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_SendPlayerItemDrops ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemDrops ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemDrops ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemDrops ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemDrops ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemDrops ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemDrops ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemDrops ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemDrops ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemDrops ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_SendPlayerItemDrops MakeReadOnly() {
    entityUpdates_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_SendPlayerItemDrops prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_SendPlayerItemDrops, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_SendPlayerItemDrops cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_SendPlayerItemDrops result;
    
    private CCSUsrMsg_SendPlayerItemDrops PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_SendPlayerItemDrops original = result;
        result = new CCSUsrMsg_SendPlayerItemDrops();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_SendPlayerItemDrops MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_SendPlayerItemDrops.Descriptor; }
    }
    
    public override CCSUsrMsg_SendPlayerItemDrops DefaultInstanceForType {
      get { return global::CCSUsrMsg_SendPlayerItemDrops.DefaultInstance; }
    }
    
    public override CCSUsrMsg_SendPlayerItemDrops BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_SendPlayerItemDrops) {
        return MergeFrom((CCSUsrMsg_SendPlayerItemDrops) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_SendPlayerItemDrops other) {
      if (other == global::CCSUsrMsg_SendPlayerItemDrops.DefaultInstance) return this;
      PrepareBuilder();
      if (other.entityUpdates_.Count != 0) {
        result.entityUpdates_.Add(other.entityUpdates_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgSendPlayerItemDropsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgSendPlayerItemDropsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.entityUpdates_, global::CEconItemPreviewDataBlock.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CEconItemPreviewDataBlock> EntityUpdatesList {
      get { return PrepareBuilder().entityUpdates_; }
    }
    public int EntityUpdatesCount {
      get { return result.EntityUpdatesCount; }
    }
    public global::CEconItemPreviewDataBlock GetEntityUpdates(int index) {
      return result.GetEntityUpdates(index);
    }
    public Builder SetEntityUpdates(int index, global::CEconItemPreviewDataBlock value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.entityUpdates_[index] = value;
      return this;
    }
    public Builder SetEntityUpdates(int index, global::CEconItemPreviewDataBlock.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.entityUpdates_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddEntityUpdates(global::CEconItemPreviewDataBlock value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.entityUpdates_.Add(value);
      return this;
    }
    public Builder AddEntityUpdates(global::CEconItemPreviewDataBlock.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.entityUpdates_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeEntityUpdates(scg::IEnumerable<global::CEconItemPreviewDataBlock> values) {
      PrepareBuilder();
      result.entityUpdates_.Add(values);
      return this;
    }
    public Builder ClearEntityUpdates() {
      PrepareBuilder();
      result.entityUpdates_.Clear();
      return this;
    }
  }
  static CCSUsrMsg_SendPlayerItemDrops() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_SendPlayerItemFound : pb::GeneratedMessage<CCSUsrMsg_SendPlayerItemFound, CCSUsrMsg_SendPlayerItemFound.Builder> {
  private CCSUsrMsg_SendPlayerItemFound() { }
  private static readonly CCSUsrMsg_SendPlayerItemFound defaultInstance = new CCSUsrMsg_SendPlayerItemFound().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgSendPlayerItemFoundFieldNames = new string[] { "entindex", "iteminfo" };
  private static readonly uint[] _cCSUsrMsgSendPlayerItemFoundFieldTags = new uint[] { 16, 10 };
  public static CCSUsrMsg_SendPlayerItemFound DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_SendPlayerItemFound DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_SendPlayerItemFound ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SendPlayerItemFound__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_SendPlayerItemFound, CCSUsrMsg_SendPlayerItemFound.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SendPlayerItemFound__FieldAccessorTable; }
  }
  
  public const int IteminfoFieldNumber = 1;
  private bool hasIteminfo;
  private global::CEconItemPreviewDataBlock iteminfo_;
  public bool HasIteminfo {
    get { return hasIteminfo; }
  }
  public global::CEconItemPreviewDataBlock Iteminfo {
    get { return iteminfo_ ?? global::CEconItemPreviewDataBlock.DefaultInstance; }
  }
  
  public const int EntindexFieldNumber = 2;
  private bool hasEntindex;
  private int entindex_;
  public bool HasEntindex {
    get { return hasEntindex; }
  }
  public int Entindex {
    get { return entindex_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgSendPlayerItemFoundFieldNames;
    if (hasIteminfo) {
      output.WriteMessage(1, field_names[1], Iteminfo);
    }
    if (hasEntindex) {
      output.WriteInt32(2, field_names[0], Entindex);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIteminfo) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Iteminfo);
      }
      if (hasEntindex) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Entindex);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_SendPlayerItemFound ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemFound ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemFound ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemFound ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemFound ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemFound ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemFound ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemFound ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemFound ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SendPlayerItemFound ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_SendPlayerItemFound MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_SendPlayerItemFound prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_SendPlayerItemFound, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_SendPlayerItemFound cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_SendPlayerItemFound result;
    
    private CCSUsrMsg_SendPlayerItemFound PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_SendPlayerItemFound original = result;
        result = new CCSUsrMsg_SendPlayerItemFound();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_SendPlayerItemFound MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_SendPlayerItemFound.Descriptor; }
    }
    
    public override CCSUsrMsg_SendPlayerItemFound DefaultInstanceForType {
      get { return global::CCSUsrMsg_SendPlayerItemFound.DefaultInstance; }
    }
    
    public override CCSUsrMsg_SendPlayerItemFound BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_SendPlayerItemFound) {
        return MergeFrom((CCSUsrMsg_SendPlayerItemFound) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_SendPlayerItemFound other) {
      if (other == global::CCSUsrMsg_SendPlayerItemFound.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasIteminfo) {
        MergeIteminfo(other.Iteminfo);
      }
      if (other.HasEntindex) {
        Entindex = other.Entindex;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgSendPlayerItemFoundFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgSendPlayerItemFoundFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CEconItemPreviewDataBlock.Builder subBuilder = global::CEconItemPreviewDataBlock.CreateBuilder();
            if (result.hasIteminfo) {
              subBuilder.MergeFrom(Iteminfo);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Iteminfo = subBuilder.BuildPartial();
            break;
          }
          case 16: {
            result.hasEntindex = input.ReadInt32(ref result.entindex_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasIteminfo {
     get { return result.hasIteminfo; }
    }
    public global::CEconItemPreviewDataBlock Iteminfo {
      get { return result.Iteminfo; }
      set { SetIteminfo(value); }
    }
    public Builder SetIteminfo(global::CEconItemPreviewDataBlock value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasIteminfo = true;
      result.iteminfo_ = value;
      return this;
    }
    public Builder SetIteminfo(global::CEconItemPreviewDataBlock.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasIteminfo = true;
      result.iteminfo_ = builderForValue.Build();
      return this;
    }
    public Builder MergeIteminfo(global::CEconItemPreviewDataBlock value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasIteminfo &&
          result.iteminfo_ != global::CEconItemPreviewDataBlock.DefaultInstance) {
          result.iteminfo_ = global::CEconItemPreviewDataBlock.CreateBuilder(result.iteminfo_).MergeFrom(value).BuildPartial();
      } else {
        result.iteminfo_ = value;
      }
      result.hasIteminfo = true;
      return this;
    }
    public Builder ClearIteminfo() {
      PrepareBuilder();
      result.hasIteminfo = false;
      result.iteminfo_ = null;
      return this;
    }
    
    public bool HasEntindex {
      get { return result.hasEntindex; }
    }
    public int Entindex {
      get { return result.Entindex; }
      set { SetEntindex(value); }
    }
    public Builder SetEntindex(int value) {
      PrepareBuilder();
      result.hasEntindex = true;
      result.entindex_ = value;
      return this;
    }
    public Builder ClearEntindex() {
      PrepareBuilder();
      result.hasEntindex = false;
      result.entindex_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_SendPlayerItemFound() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_ReloadEffect : pb::GeneratedMessage<CCSUsrMsg_ReloadEffect, CCSUsrMsg_ReloadEffect.Builder> {
  private CCSUsrMsg_ReloadEffect() { }
  private static readonly CCSUsrMsg_ReloadEffect defaultInstance = new CCSUsrMsg_ReloadEffect().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgReloadEffectFieldNames = new string[] { "actanim", "entidx" };
  private static readonly uint[] _cCSUsrMsgReloadEffectFieldTags = new uint[] { 16, 8 };
  public static CCSUsrMsg_ReloadEffect DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_ReloadEffect DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_ReloadEffect ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ReloadEffect__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_ReloadEffect, CCSUsrMsg_ReloadEffect.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ReloadEffect__FieldAccessorTable; }
  }
  
  public const int EntidxFieldNumber = 1;
  private bool hasEntidx;
  private int entidx_;
  public bool HasEntidx {
    get { return hasEntidx; }
  }
  public int Entidx {
    get { return entidx_; }
  }
  
  public const int ActanimFieldNumber = 2;
  private bool hasActanim;
  private int actanim_;
  public bool HasActanim {
    get { return hasActanim; }
  }
  public int Actanim {
    get { return actanim_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgReloadEffectFieldNames;
    if (hasEntidx) {
      output.WriteInt32(1, field_names[1], Entidx);
    }
    if (hasActanim) {
      output.WriteInt32(2, field_names[0], Actanim);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEntidx) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Entidx);
      }
      if (hasActanim) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Actanim);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_ReloadEffect ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ReloadEffect ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ReloadEffect ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ReloadEffect ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ReloadEffect ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ReloadEffect ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ReloadEffect ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_ReloadEffect ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_ReloadEffect ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ReloadEffect ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_ReloadEffect MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_ReloadEffect prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_ReloadEffect, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_ReloadEffect cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_ReloadEffect result;
    
    private CCSUsrMsg_ReloadEffect PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_ReloadEffect original = result;
        result = new CCSUsrMsg_ReloadEffect();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_ReloadEffect MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_ReloadEffect.Descriptor; }
    }
    
    public override CCSUsrMsg_ReloadEffect DefaultInstanceForType {
      get { return global::CCSUsrMsg_ReloadEffect.DefaultInstance; }
    }
    
    public override CCSUsrMsg_ReloadEffect BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_ReloadEffect) {
        return MergeFrom((CCSUsrMsg_ReloadEffect) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_ReloadEffect other) {
      if (other == global::CCSUsrMsg_ReloadEffect.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEntidx) {
        Entidx = other.Entidx;
      }
      if (other.HasActanim) {
        Actanim = other.Actanim;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgReloadEffectFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgReloadEffectFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEntidx = input.ReadInt32(ref result.entidx_);
            break;
          }
          case 16: {
            result.hasActanim = input.ReadInt32(ref result.actanim_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEntidx {
      get { return result.hasEntidx; }
    }
    public int Entidx {
      get { return result.Entidx; }
      set { SetEntidx(value); }
    }
    public Builder SetEntidx(int value) {
      PrepareBuilder();
      result.hasEntidx = true;
      result.entidx_ = value;
      return this;
    }
    public Builder ClearEntidx() {
      PrepareBuilder();
      result.hasEntidx = false;
      result.entidx_ = 0;
      return this;
    }
    
    public bool HasActanim {
      get { return result.hasActanim; }
    }
    public int Actanim {
      get { return result.Actanim; }
      set { SetActanim(value); }
    }
    public Builder SetActanim(int value) {
      PrepareBuilder();
      result.hasActanim = true;
      result.actanim_ = value;
      return this;
    }
    public Builder ClearActanim() {
      PrepareBuilder();
      result.hasActanim = false;
      result.actanim_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_ReloadEffect() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_AdjustMoney : pb::GeneratedMessage<CCSUsrMsg_AdjustMoney, CCSUsrMsg_AdjustMoney.Builder> {
  private CCSUsrMsg_AdjustMoney() { }
  private static readonly CCSUsrMsg_AdjustMoney defaultInstance = new CCSUsrMsg_AdjustMoney().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgAdjustMoneyFieldNames = new string[] { "amount" };
  private static readonly uint[] _cCSUsrMsgAdjustMoneyFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_AdjustMoney DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_AdjustMoney DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_AdjustMoney ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_AdjustMoney__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_AdjustMoney, CCSUsrMsg_AdjustMoney.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_AdjustMoney__FieldAccessorTable; }
  }
  
  public const int AmountFieldNumber = 1;
  private bool hasAmount;
  private int amount_;
  public bool HasAmount {
    get { return hasAmount; }
  }
  public int Amount {
    get { return amount_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgAdjustMoneyFieldNames;
    if (hasAmount) {
      output.WriteInt32(1, field_names[0], Amount);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAmount) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Amount);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_AdjustMoney ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_AdjustMoney ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_AdjustMoney ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_AdjustMoney ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_AdjustMoney ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_AdjustMoney ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_AdjustMoney ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_AdjustMoney ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_AdjustMoney ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_AdjustMoney ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_AdjustMoney MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_AdjustMoney prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_AdjustMoney, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_AdjustMoney cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_AdjustMoney result;
    
    private CCSUsrMsg_AdjustMoney PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_AdjustMoney original = result;
        result = new CCSUsrMsg_AdjustMoney();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_AdjustMoney MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_AdjustMoney.Descriptor; }
    }
    
    public override CCSUsrMsg_AdjustMoney DefaultInstanceForType {
      get { return global::CCSUsrMsg_AdjustMoney.DefaultInstance; }
    }
    
    public override CCSUsrMsg_AdjustMoney BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_AdjustMoney) {
        return MergeFrom((CCSUsrMsg_AdjustMoney) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_AdjustMoney other) {
      if (other == global::CCSUsrMsg_AdjustMoney.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgAdjustMoneyFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgAdjustMoneyFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAmount = input.ReadInt32(ref result.amount_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAmount {
      get { return result.hasAmount; }
    }
    public int Amount {
      get { return result.Amount; }
      set { SetAmount(value); }
    }
    public Builder SetAmount(int value) {
      PrepareBuilder();
      result.hasAmount = true;
      result.amount_ = value;
      return this;
    }
    public Builder ClearAmount() {
      PrepareBuilder();
      result.hasAmount = false;
      result.amount_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_AdjustMoney() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_KillCam : pb::GeneratedMessage<CCSUsrMsg_KillCam, CCSUsrMsg_KillCam.Builder> {
  private CCSUsrMsg_KillCam() { }
  private static readonly CCSUsrMsg_KillCam defaultInstance = new CCSUsrMsg_KillCam().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgKillCamFieldNames = new string[] { "first_target", "obs_mode", "second_target" };
  private static readonly uint[] _cCSUsrMsgKillCamFieldTags = new uint[] { 16, 8, 24 };
  public static CCSUsrMsg_KillCam DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_KillCam DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_KillCam ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_KillCam__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_KillCam, CCSUsrMsg_KillCam.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_KillCam__FieldAccessorTable; }
  }
  
  public const int ObsModeFieldNumber = 1;
  private bool hasObsMode;
  private int obsMode_;
  public bool HasObsMode {
    get { return hasObsMode; }
  }
  public int ObsMode {
    get { return obsMode_; }
  }
  
  public const int FirstTargetFieldNumber = 2;
  private bool hasFirstTarget;
  private int firstTarget_;
  public bool HasFirstTarget {
    get { return hasFirstTarget; }
  }
  public int FirstTarget {
    get { return firstTarget_; }
  }
  
  public const int SecondTargetFieldNumber = 3;
  private bool hasSecondTarget;
  private int secondTarget_;
  public bool HasSecondTarget {
    get { return hasSecondTarget; }
  }
  public int SecondTarget {
    get { return secondTarget_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgKillCamFieldNames;
    if (hasObsMode) {
      output.WriteInt32(1, field_names[1], ObsMode);
    }
    if (hasFirstTarget) {
      output.WriteInt32(2, field_names[0], FirstTarget);
    }
    if (hasSecondTarget) {
      output.WriteInt32(3, field_names[2], SecondTarget);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasObsMode) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ObsMode);
      }
      if (hasFirstTarget) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, FirstTarget);
      }
      if (hasSecondTarget) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, SecondTarget);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_KillCam ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_KillCam ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_KillCam ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_KillCam ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_KillCam ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_KillCam ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_KillCam ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_KillCam ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_KillCam ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_KillCam ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_KillCam MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_KillCam prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_KillCam, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_KillCam cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_KillCam result;
    
    private CCSUsrMsg_KillCam PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_KillCam original = result;
        result = new CCSUsrMsg_KillCam();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_KillCam MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_KillCam.Descriptor; }
    }
    
    public override CCSUsrMsg_KillCam DefaultInstanceForType {
      get { return global::CCSUsrMsg_KillCam.DefaultInstance; }
    }
    
    public override CCSUsrMsg_KillCam BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_KillCam) {
        return MergeFrom((CCSUsrMsg_KillCam) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_KillCam other) {
      if (other == global::CCSUsrMsg_KillCam.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasObsMode) {
        ObsMode = other.ObsMode;
      }
      if (other.HasFirstTarget) {
        FirstTarget = other.FirstTarget;
      }
      if (other.HasSecondTarget) {
        SecondTarget = other.SecondTarget;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgKillCamFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgKillCamFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasObsMode = input.ReadInt32(ref result.obsMode_);
            break;
          }
          case 16: {
            result.hasFirstTarget = input.ReadInt32(ref result.firstTarget_);
            break;
          }
          case 24: {
            result.hasSecondTarget = input.ReadInt32(ref result.secondTarget_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasObsMode {
      get { return result.hasObsMode; }
    }
    public int ObsMode {
      get { return result.ObsMode; }
      set { SetObsMode(value); }
    }
    public Builder SetObsMode(int value) {
      PrepareBuilder();
      result.hasObsMode = true;
      result.obsMode_ = value;
      return this;
    }
    public Builder ClearObsMode() {
      PrepareBuilder();
      result.hasObsMode = false;
      result.obsMode_ = 0;
      return this;
    }
    
    public bool HasFirstTarget {
      get { return result.hasFirstTarget; }
    }
    public int FirstTarget {
      get { return result.FirstTarget; }
      set { SetFirstTarget(value); }
    }
    public Builder SetFirstTarget(int value) {
      PrepareBuilder();
      result.hasFirstTarget = true;
      result.firstTarget_ = value;
      return this;
    }
    public Builder ClearFirstTarget() {
      PrepareBuilder();
      result.hasFirstTarget = false;
      result.firstTarget_ = 0;
      return this;
    }
    
    public bool HasSecondTarget {
      get { return result.hasSecondTarget; }
    }
    public int SecondTarget {
      get { return result.SecondTarget; }
      set { SetSecondTarget(value); }
    }
    public Builder SetSecondTarget(int value) {
      PrepareBuilder();
      result.hasSecondTarget = true;
      result.secondTarget_ = value;
      return this;
    }
    public Builder ClearSecondTarget() {
      PrepareBuilder();
      result.hasSecondTarget = false;
      result.secondTarget_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_KillCam() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_DesiredTimescale : pb::GeneratedMessage<CCSUsrMsg_DesiredTimescale, CCSUsrMsg_DesiredTimescale.Builder> {
  private CCSUsrMsg_DesiredTimescale() { }
  private static readonly CCSUsrMsg_DesiredTimescale defaultInstance = new CCSUsrMsg_DesiredTimescale().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgDesiredTimescaleFieldNames = new string[] { "desired_timescale", "duration_realtime_sec", "interpolator_type", "start_blend_time" };
  private static readonly uint[] _cCSUsrMsgDesiredTimescaleFieldTags = new uint[] { 13, 21, 24, 37 };
  public static CCSUsrMsg_DesiredTimescale DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_DesiredTimescale DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_DesiredTimescale ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_DesiredTimescale__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_DesiredTimescale, CCSUsrMsg_DesiredTimescale.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_DesiredTimescale__FieldAccessorTable; }
  }
  
  public const int DesiredTimescaleFieldNumber = 1;
  private bool hasDesiredTimescale;
  private float desiredTimescale_;
  public bool HasDesiredTimescale {
    get { return hasDesiredTimescale; }
  }
  public float DesiredTimescale {
    get { return desiredTimescale_; }
  }
  
  public const int DurationRealtimeSecFieldNumber = 2;
  private bool hasDurationRealtimeSec;
  private float durationRealtimeSec_;
  public bool HasDurationRealtimeSec {
    get { return hasDurationRealtimeSec; }
  }
  public float DurationRealtimeSec {
    get { return durationRealtimeSec_; }
  }
  
  public const int InterpolatorTypeFieldNumber = 3;
  private bool hasInterpolatorType;
  private int interpolatorType_;
  public bool HasInterpolatorType {
    get { return hasInterpolatorType; }
  }
  public int InterpolatorType {
    get { return interpolatorType_; }
  }
  
  public const int StartBlendTimeFieldNumber = 4;
  private bool hasStartBlendTime;
  private float startBlendTime_;
  public bool HasStartBlendTime {
    get { return hasStartBlendTime; }
  }
  public float StartBlendTime {
    get { return startBlendTime_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgDesiredTimescaleFieldNames;
    if (hasDesiredTimescale) {
      output.WriteFloat(1, field_names[0], DesiredTimescale);
    }
    if (hasDurationRealtimeSec) {
      output.WriteFloat(2, field_names[1], DurationRealtimeSec);
    }
    if (hasInterpolatorType) {
      output.WriteInt32(3, field_names[2], InterpolatorType);
    }
    if (hasStartBlendTime) {
      output.WriteFloat(4, field_names[3], StartBlendTime);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDesiredTimescale) {
        size += pb::CodedOutputStream.ComputeFloatSize(1, DesiredTimescale);
      }
      if (hasDurationRealtimeSec) {
        size += pb::CodedOutputStream.ComputeFloatSize(2, DurationRealtimeSec);
      }
      if (hasInterpolatorType) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, InterpolatorType);
      }
      if (hasStartBlendTime) {
        size += pb::CodedOutputStream.ComputeFloatSize(4, StartBlendTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_DesiredTimescale ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_DesiredTimescale ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_DesiredTimescale ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_DesiredTimescale ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_DesiredTimescale ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_DesiredTimescale ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_DesiredTimescale ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_DesiredTimescale ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_DesiredTimescale ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_DesiredTimescale ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_DesiredTimescale MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_DesiredTimescale prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_DesiredTimescale, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_DesiredTimescale cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_DesiredTimescale result;
    
    private CCSUsrMsg_DesiredTimescale PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_DesiredTimescale original = result;
        result = new CCSUsrMsg_DesiredTimescale();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_DesiredTimescale MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_DesiredTimescale.Descriptor; }
    }
    
    public override CCSUsrMsg_DesiredTimescale DefaultInstanceForType {
      get { return global::CCSUsrMsg_DesiredTimescale.DefaultInstance; }
    }
    
    public override CCSUsrMsg_DesiredTimescale BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_DesiredTimescale) {
        return MergeFrom((CCSUsrMsg_DesiredTimescale) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_DesiredTimescale other) {
      if (other == global::CCSUsrMsg_DesiredTimescale.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDesiredTimescale) {
        DesiredTimescale = other.DesiredTimescale;
      }
      if (other.HasDurationRealtimeSec) {
        DurationRealtimeSec = other.DurationRealtimeSec;
      }
      if (other.HasInterpolatorType) {
        InterpolatorType = other.InterpolatorType;
      }
      if (other.HasStartBlendTime) {
        StartBlendTime = other.StartBlendTime;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgDesiredTimescaleFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgDesiredTimescaleFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 13: {
            result.hasDesiredTimescale = input.ReadFloat(ref result.desiredTimescale_);
            break;
          }
          case 21: {
            result.hasDurationRealtimeSec = input.ReadFloat(ref result.durationRealtimeSec_);
            break;
          }
          case 24: {
            result.hasInterpolatorType = input.ReadInt32(ref result.interpolatorType_);
            break;
          }
          case 37: {
            result.hasStartBlendTime = input.ReadFloat(ref result.startBlendTime_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDesiredTimescale {
      get { return result.hasDesiredTimescale; }
    }
    public float DesiredTimescale {
      get { return result.DesiredTimescale; }
      set { SetDesiredTimescale(value); }
    }
    public Builder SetDesiredTimescale(float value) {
      PrepareBuilder();
      result.hasDesiredTimescale = true;
      result.desiredTimescale_ = value;
      return this;
    }
    public Builder ClearDesiredTimescale() {
      PrepareBuilder();
      result.hasDesiredTimescale = false;
      result.desiredTimescale_ = 0F;
      return this;
    }
    
    public bool HasDurationRealtimeSec {
      get { return result.hasDurationRealtimeSec; }
    }
    public float DurationRealtimeSec {
      get { return result.DurationRealtimeSec; }
      set { SetDurationRealtimeSec(value); }
    }
    public Builder SetDurationRealtimeSec(float value) {
      PrepareBuilder();
      result.hasDurationRealtimeSec = true;
      result.durationRealtimeSec_ = value;
      return this;
    }
    public Builder ClearDurationRealtimeSec() {
      PrepareBuilder();
      result.hasDurationRealtimeSec = false;
      result.durationRealtimeSec_ = 0F;
      return this;
    }
    
    public bool HasInterpolatorType {
      get { return result.hasInterpolatorType; }
    }
    public int InterpolatorType {
      get { return result.InterpolatorType; }
      set { SetInterpolatorType(value); }
    }
    public Builder SetInterpolatorType(int value) {
      PrepareBuilder();
      result.hasInterpolatorType = true;
      result.interpolatorType_ = value;
      return this;
    }
    public Builder ClearInterpolatorType() {
      PrepareBuilder();
      result.hasInterpolatorType = false;
      result.interpolatorType_ = 0;
      return this;
    }
    
    public bool HasStartBlendTime {
      get { return result.hasStartBlendTime; }
    }
    public float StartBlendTime {
      get { return result.StartBlendTime; }
      set { SetStartBlendTime(value); }
    }
    public Builder SetStartBlendTime(float value) {
      PrepareBuilder();
      result.hasStartBlendTime = true;
      result.startBlendTime_ = value;
      return this;
    }
    public Builder ClearStartBlendTime() {
      PrepareBuilder();
      result.hasStartBlendTime = false;
      result.startBlendTime_ = 0F;
      return this;
    }
  }
  static CCSUsrMsg_DesiredTimescale() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_CurrentTimescale : pb::GeneratedMessage<CCSUsrMsg_CurrentTimescale, CCSUsrMsg_CurrentTimescale.Builder> {
  private CCSUsrMsg_CurrentTimescale() { }
  private static readonly CCSUsrMsg_CurrentTimescale defaultInstance = new CCSUsrMsg_CurrentTimescale().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgCurrentTimescaleFieldNames = new string[] { "cur_timescale" };
  private static readonly uint[] _cCSUsrMsgCurrentTimescaleFieldTags = new uint[] { 13 };
  public static CCSUsrMsg_CurrentTimescale DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_CurrentTimescale DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_CurrentTimescale ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_CurrentTimescale__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_CurrentTimescale, CCSUsrMsg_CurrentTimescale.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_CurrentTimescale__FieldAccessorTable; }
  }
  
  public const int CurTimescaleFieldNumber = 1;
  private bool hasCurTimescale;
  private float curTimescale_;
  public bool HasCurTimescale {
    get { return hasCurTimescale; }
  }
  public float CurTimescale {
    get { return curTimescale_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgCurrentTimescaleFieldNames;
    if (hasCurTimescale) {
      output.WriteFloat(1, field_names[0], CurTimescale);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCurTimescale) {
        size += pb::CodedOutputStream.ComputeFloatSize(1, CurTimescale);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_CurrentTimescale ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_CurrentTimescale ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CurrentTimescale ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_CurrentTimescale ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CurrentTimescale ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_CurrentTimescale ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CurrentTimescale ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_CurrentTimescale ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_CurrentTimescale ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_CurrentTimescale ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_CurrentTimescale MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_CurrentTimescale prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_CurrentTimescale, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_CurrentTimescale cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_CurrentTimescale result;
    
    private CCSUsrMsg_CurrentTimescale PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_CurrentTimescale original = result;
        result = new CCSUsrMsg_CurrentTimescale();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_CurrentTimescale MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_CurrentTimescale.Descriptor; }
    }
    
    public override CCSUsrMsg_CurrentTimescale DefaultInstanceForType {
      get { return global::CCSUsrMsg_CurrentTimescale.DefaultInstance; }
    }
    
    public override CCSUsrMsg_CurrentTimescale BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_CurrentTimescale) {
        return MergeFrom((CCSUsrMsg_CurrentTimescale) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_CurrentTimescale other) {
      if (other == global::CCSUsrMsg_CurrentTimescale.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCurTimescale) {
        CurTimescale = other.CurTimescale;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgCurrentTimescaleFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgCurrentTimescaleFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 13: {
            result.hasCurTimescale = input.ReadFloat(ref result.curTimescale_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCurTimescale {
      get { return result.hasCurTimescale; }
    }
    public float CurTimescale {
      get { return result.CurTimescale; }
      set { SetCurTimescale(value); }
    }
    public Builder SetCurTimescale(float value) {
      PrepareBuilder();
      result.hasCurTimescale = true;
      result.curTimescale_ = value;
      return this;
    }
    public Builder ClearCurTimescale() {
      PrepareBuilder();
      result.hasCurTimescale = false;
      result.curTimescale_ = 0F;
      return this;
    }
  }
  static CCSUsrMsg_CurrentTimescale() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_AchievementEvent : pb::GeneratedMessage<CCSUsrMsg_AchievementEvent, CCSUsrMsg_AchievementEvent.Builder> {
  private CCSUsrMsg_AchievementEvent() { }
  private static readonly CCSUsrMsg_AchievementEvent defaultInstance = new CCSUsrMsg_AchievementEvent().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgAchievementEventFieldNames = new string[] { "achievement", "count", "user_id" };
  private static readonly uint[] _cCSUsrMsgAchievementEventFieldTags = new uint[] { 8, 16, 24 };
  public static CCSUsrMsg_AchievementEvent DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_AchievementEvent DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_AchievementEvent ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_AchievementEvent__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_AchievementEvent, CCSUsrMsg_AchievementEvent.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_AchievementEvent__FieldAccessorTable; }
  }
  
  public const int AchievementFieldNumber = 1;
  private bool hasAchievement;
  private int achievement_;
  public bool HasAchievement {
    get { return hasAchievement; }
  }
  public int Achievement {
    get { return achievement_; }
  }
  
  public const int CountFieldNumber = 2;
  private bool hasCount;
  private int count_;
  public bool HasCount {
    get { return hasCount; }
  }
  public int Count {
    get { return count_; }
  }
  
  public const int UserIdFieldNumber = 3;
  private bool hasUserId;
  private int userId_;
  public bool HasUserId {
    get { return hasUserId; }
  }
  public int UserId {
    get { return userId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgAchievementEventFieldNames;
    if (hasAchievement) {
      output.WriteInt32(1, field_names[0], Achievement);
    }
    if (hasCount) {
      output.WriteInt32(2, field_names[1], Count);
    }
    if (hasUserId) {
      output.WriteInt32(3, field_names[2], UserId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAchievement) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Achievement);
      }
      if (hasCount) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Count);
      }
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, UserId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_AchievementEvent ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_AchievementEvent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_AchievementEvent ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_AchievementEvent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_AchievementEvent ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_AchievementEvent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_AchievementEvent ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_AchievementEvent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_AchievementEvent ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_AchievementEvent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_AchievementEvent MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_AchievementEvent prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_AchievementEvent, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_AchievementEvent cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_AchievementEvent result;
    
    private CCSUsrMsg_AchievementEvent PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_AchievementEvent original = result;
        result = new CCSUsrMsg_AchievementEvent();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_AchievementEvent MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_AchievementEvent.Descriptor; }
    }
    
    public override CCSUsrMsg_AchievementEvent DefaultInstanceForType {
      get { return global::CCSUsrMsg_AchievementEvent.DefaultInstance; }
    }
    
    public override CCSUsrMsg_AchievementEvent BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_AchievementEvent) {
        return MergeFrom((CCSUsrMsg_AchievementEvent) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_AchievementEvent other) {
      if (other == global::CCSUsrMsg_AchievementEvent.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAchievement) {
        Achievement = other.Achievement;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgAchievementEventFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgAchievementEventFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAchievement = input.ReadInt32(ref result.achievement_);
            break;
          }
          case 16: {
            result.hasCount = input.ReadInt32(ref result.count_);
            break;
          }
          case 24: {
            result.hasUserId = input.ReadInt32(ref result.userId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAchievement {
      get { return result.hasAchievement; }
    }
    public int Achievement {
      get { return result.Achievement; }
      set { SetAchievement(value); }
    }
    public Builder SetAchievement(int value) {
      PrepareBuilder();
      result.hasAchievement = true;
      result.achievement_ = value;
      return this;
    }
    public Builder ClearAchievement() {
      PrepareBuilder();
      result.hasAchievement = false;
      result.achievement_ = 0;
      return this;
    }
    
    public bool HasCount {
      get { return result.hasCount; }
    }
    public int Count {
      get { return result.Count; }
      set { SetCount(value); }
    }
    public Builder SetCount(int value) {
      PrepareBuilder();
      result.hasCount = true;
      result.count_ = value;
      return this;
    }
    public Builder ClearCount() {
      PrepareBuilder();
      result.hasCount = false;
      result.count_ = 0;
      return this;
    }
    
    public bool HasUserId {
      get { return result.hasUserId; }
    }
    public int UserId {
      get { return result.UserId; }
      set { SetUserId(value); }
    }
    public Builder SetUserId(int value) {
      PrepareBuilder();
      result.hasUserId = true;
      result.userId_ = value;
      return this;
    }
    public Builder ClearUserId() {
      PrepareBuilder();
      result.hasUserId = false;
      result.userId_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_AchievementEvent() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_MatchEndConditions : pb::GeneratedMessage<CCSUsrMsg_MatchEndConditions, CCSUsrMsg_MatchEndConditions.Builder> {
  private CCSUsrMsg_MatchEndConditions() { }
  private static readonly CCSUsrMsg_MatchEndConditions defaultInstance = new CCSUsrMsg_MatchEndConditions().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgMatchEndConditionsFieldNames = new string[] { "fraglimit", "mp_maxrounds", "mp_timelimit", "mp_winlimit" };
  private static readonly uint[] _cCSUsrMsgMatchEndConditionsFieldTags = new uint[] { 8, 16, 32, 24 };
  public static CCSUsrMsg_MatchEndConditions DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_MatchEndConditions DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_MatchEndConditions ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_MatchEndConditions__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_MatchEndConditions, CCSUsrMsg_MatchEndConditions.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_MatchEndConditions__FieldAccessorTable; }
  }
  
  public const int FraglimitFieldNumber = 1;
  private bool hasFraglimit;
  private int fraglimit_;
  public bool HasFraglimit {
    get { return hasFraglimit; }
  }
  public int Fraglimit {
    get { return fraglimit_; }
  }
  
  public const int MpMaxroundsFieldNumber = 2;
  private bool hasMpMaxrounds;
  private int mpMaxrounds_;
  public bool HasMpMaxrounds {
    get { return hasMpMaxrounds; }
  }
  public int MpMaxrounds {
    get { return mpMaxrounds_; }
  }
  
  public const int MpWinlimitFieldNumber = 3;
  private bool hasMpWinlimit;
  private int mpWinlimit_;
  public bool HasMpWinlimit {
    get { return hasMpWinlimit; }
  }
  public int MpWinlimit {
    get { return mpWinlimit_; }
  }
  
  public const int MpTimelimitFieldNumber = 4;
  private bool hasMpTimelimit;
  private int mpTimelimit_;
  public bool HasMpTimelimit {
    get { return hasMpTimelimit; }
  }
  public int MpTimelimit {
    get { return mpTimelimit_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgMatchEndConditionsFieldNames;
    if (hasFraglimit) {
      output.WriteInt32(1, field_names[0], Fraglimit);
    }
    if (hasMpMaxrounds) {
      output.WriteInt32(2, field_names[1], MpMaxrounds);
    }
    if (hasMpWinlimit) {
      output.WriteInt32(3, field_names[3], MpWinlimit);
    }
    if (hasMpTimelimit) {
      output.WriteInt32(4, field_names[2], MpTimelimit);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasFraglimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Fraglimit);
      }
      if (hasMpMaxrounds) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, MpMaxrounds);
      }
      if (hasMpWinlimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, MpWinlimit);
      }
      if (hasMpTimelimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, MpTimelimit);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_MatchEndConditions ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_MatchEndConditions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_MatchEndConditions ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_MatchEndConditions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_MatchEndConditions ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_MatchEndConditions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_MatchEndConditions ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_MatchEndConditions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_MatchEndConditions ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_MatchEndConditions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_MatchEndConditions MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_MatchEndConditions prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_MatchEndConditions, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_MatchEndConditions cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_MatchEndConditions result;
    
    private CCSUsrMsg_MatchEndConditions PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_MatchEndConditions original = result;
        result = new CCSUsrMsg_MatchEndConditions();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_MatchEndConditions MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_MatchEndConditions.Descriptor; }
    }
    
    public override CCSUsrMsg_MatchEndConditions DefaultInstanceForType {
      get { return global::CCSUsrMsg_MatchEndConditions.DefaultInstance; }
    }
    
    public override CCSUsrMsg_MatchEndConditions BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_MatchEndConditions) {
        return MergeFrom((CCSUsrMsg_MatchEndConditions) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_MatchEndConditions other) {
      if (other == global::CCSUsrMsg_MatchEndConditions.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFraglimit) {
        Fraglimit = other.Fraglimit;
      }
      if (other.HasMpMaxrounds) {
        MpMaxrounds = other.MpMaxrounds;
      }
      if (other.HasMpWinlimit) {
        MpWinlimit = other.MpWinlimit;
      }
      if (other.HasMpTimelimit) {
        MpTimelimit = other.MpTimelimit;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgMatchEndConditionsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgMatchEndConditionsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasFraglimit = input.ReadInt32(ref result.fraglimit_);
            break;
          }
          case 16: {
            result.hasMpMaxrounds = input.ReadInt32(ref result.mpMaxrounds_);
            break;
          }
          case 24: {
            result.hasMpWinlimit = input.ReadInt32(ref result.mpWinlimit_);
            break;
          }
          case 32: {
            result.hasMpTimelimit = input.ReadInt32(ref result.mpTimelimit_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFraglimit {
      get { return result.hasFraglimit; }
    }
    public int Fraglimit {
      get { return result.Fraglimit; }
      set { SetFraglimit(value); }
    }
    public Builder SetFraglimit(int value) {
      PrepareBuilder();
      result.hasFraglimit = true;
      result.fraglimit_ = value;
      return this;
    }
    public Builder ClearFraglimit() {
      PrepareBuilder();
      result.hasFraglimit = false;
      result.fraglimit_ = 0;
      return this;
    }
    
    public bool HasMpMaxrounds {
      get { return result.hasMpMaxrounds; }
    }
    public int MpMaxrounds {
      get { return result.MpMaxrounds; }
      set { SetMpMaxrounds(value); }
    }
    public Builder SetMpMaxrounds(int value) {
      PrepareBuilder();
      result.hasMpMaxrounds = true;
      result.mpMaxrounds_ = value;
      return this;
    }
    public Builder ClearMpMaxrounds() {
      PrepareBuilder();
      result.hasMpMaxrounds = false;
      result.mpMaxrounds_ = 0;
      return this;
    }
    
    public bool HasMpWinlimit {
      get { return result.hasMpWinlimit; }
    }
    public int MpWinlimit {
      get { return result.MpWinlimit; }
      set { SetMpWinlimit(value); }
    }
    public Builder SetMpWinlimit(int value) {
      PrepareBuilder();
      result.hasMpWinlimit = true;
      result.mpWinlimit_ = value;
      return this;
    }
    public Builder ClearMpWinlimit() {
      PrepareBuilder();
      result.hasMpWinlimit = false;
      result.mpWinlimit_ = 0;
      return this;
    }
    
    public bool HasMpTimelimit {
      get { return result.hasMpTimelimit; }
    }
    public int MpTimelimit {
      get { return result.MpTimelimit; }
      set { SetMpTimelimit(value); }
    }
    public Builder SetMpTimelimit(int value) {
      PrepareBuilder();
      result.hasMpTimelimit = true;
      result.mpTimelimit_ = value;
      return this;
    }
    public Builder ClearMpTimelimit() {
      PrepareBuilder();
      result.hasMpTimelimit = false;
      result.mpTimelimit_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_MatchEndConditions() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_PlayerStatsUpdate : pb::GeneratedMessage<CCSUsrMsg_PlayerStatsUpdate, CCSUsrMsg_PlayerStatsUpdate.Builder> {
  private CCSUsrMsg_PlayerStatsUpdate() { }
  private static readonly CCSUsrMsg_PlayerStatsUpdate defaultInstance = new CCSUsrMsg_PlayerStatsUpdate().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgPlayerStatsUpdateFieldNames = new string[] { "crc", "stats", "user_id", "version" };
  private static readonly uint[] _cCSUsrMsgPlayerStatsUpdateFieldTags = new uint[] { 48, 34, 40, 8 };
  public static CCSUsrMsg_PlayerStatsUpdate DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_PlayerStatsUpdate DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_PlayerStatsUpdate ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_PlayerStatsUpdate__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_PlayerStatsUpdate, CCSUsrMsg_PlayerStatsUpdate.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_PlayerStatsUpdate__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Stat : pb::GeneratedMessage<Stat, Stat.Builder> {
      private Stat() { }
      private static readonly Stat defaultInstance = new Stat().MakeReadOnly();
      private static readonly string[] _statFieldNames = new string[] { "delta", "idx" };
      private static readonly uint[] _statFieldTags = new uint[] { 16, 8 };
      public static Stat DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Stat DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Stat ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_PlayerStatsUpdate_Stat__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Stat, Stat.Builder> InternalFieldAccessors {
        get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_PlayerStatsUpdate_Stat__FieldAccessorTable; }
      }
      
      public const int IdxFieldNumber = 1;
      private bool hasIdx;
      private int idx_;
      public bool HasIdx {
        get { return hasIdx; }
      }
      public int Idx {
        get { return idx_; }
      }
      
      public const int DeltaFieldNumber = 2;
      private bool hasDelta;
      private int delta_;
      public bool HasDelta {
        get { return hasDelta; }
      }
      public int Delta {
        get { return delta_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _statFieldNames;
        if (hasIdx) {
          output.WriteInt32(1, field_names[1], Idx);
        }
        if (hasDelta) {
          output.WriteInt32(2, field_names[0], Delta);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasIdx) {
            size += pb::CodedOutputStream.ComputeInt32Size(1, Idx);
          }
          if (hasDelta) {
            size += pb::CodedOutputStream.ComputeInt32Size(2, Delta);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static Stat ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Stat ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Stat ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Stat ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Stat ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Stat ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Stat ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Stat ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Stat ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Stat ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Stat MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Stat prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Stat, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Stat cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Stat result;
        
        private Stat PrepareBuilder() {
          if (resultIsReadOnly) {
            Stat original = result;
            result = new Stat();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Stat MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat.Descriptor; }
        }
        
        public override Stat DefaultInstanceForType {
          get { return global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat.DefaultInstance; }
        }
        
        public override Stat BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Stat) {
            return MergeFrom((Stat) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Stat other) {
          if (other == global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasIdx) {
            Idx = other.Idx;
          }
          if (other.HasDelta) {
            Delta = other.Delta;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_statFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _statFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasIdx = input.ReadInt32(ref result.idx_);
                break;
              }
              case 16: {
                result.hasDelta = input.ReadInt32(ref result.delta_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasIdx {
          get { return result.hasIdx; }
        }
        public int Idx {
          get { return result.Idx; }
          set { SetIdx(value); }
        }
        public Builder SetIdx(int value) {
          PrepareBuilder();
          result.hasIdx = true;
          result.idx_ = value;
          return this;
        }
        public Builder ClearIdx() {
          PrepareBuilder();
          result.hasIdx = false;
          result.idx_ = 0;
          return this;
        }
        
        public bool HasDelta {
          get { return result.hasDelta; }
        }
        public int Delta {
          get { return result.Delta; }
          set { SetDelta(value); }
        }
        public Builder SetDelta(int value) {
          PrepareBuilder();
          result.hasDelta = true;
          result.delta_ = value;
          return this;
        }
        public Builder ClearDelta() {
          PrepareBuilder();
          result.hasDelta = false;
          result.delta_ = 0;
          return this;
        }
      }
      static Stat() {
        object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int VersionFieldNumber = 1;
  private bool hasVersion;
  private int version_;
  public bool HasVersion {
    get { return hasVersion; }
  }
  public int Version {
    get { return version_; }
  }
  
  public const int StatsFieldNumber = 4;
  private pbc::PopsicleList<global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat> stats_ = new pbc::PopsicleList<global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat>();
  public scg::IList<global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat> StatsList {
    get { return stats_; }
  }
  public int StatsCount {
    get { return stats_.Count; }
  }
  public global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat GetStats(int index) {
    return stats_[index];
  }
  
  public const int UserIdFieldNumber = 5;
  private bool hasUserId;
  private int userId_;
  public bool HasUserId {
    get { return hasUserId; }
  }
  public int UserId {
    get { return userId_; }
  }
  
  public const int CrcFieldNumber = 6;
  private bool hasCrc;
  private int crc_;
  public bool HasCrc {
    get { return hasCrc; }
  }
  public int Crc {
    get { return crc_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgPlayerStatsUpdateFieldNames;
    if (hasVersion) {
      output.WriteInt32(1, field_names[3], Version);
    }
    if (stats_.Count > 0) {
      output.WriteMessageArray(4, field_names[1], stats_);
    }
    if (hasUserId) {
      output.WriteInt32(5, field_names[2], UserId);
    }
    if (hasCrc) {
      output.WriteInt32(6, field_names[0], Crc);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Version);
      }
      foreach (global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat element in StatsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, UserId);
      }
      if (hasCrc) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, Crc);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_PlayerStatsUpdate ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_PlayerStatsUpdate ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_PlayerStatsUpdate ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_PlayerStatsUpdate ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_PlayerStatsUpdate ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_PlayerStatsUpdate ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_PlayerStatsUpdate ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_PlayerStatsUpdate ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_PlayerStatsUpdate ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_PlayerStatsUpdate ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_PlayerStatsUpdate MakeReadOnly() {
    stats_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_PlayerStatsUpdate prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_PlayerStatsUpdate, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_PlayerStatsUpdate cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_PlayerStatsUpdate result;
    
    private CCSUsrMsg_PlayerStatsUpdate PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_PlayerStatsUpdate original = result;
        result = new CCSUsrMsg_PlayerStatsUpdate();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_PlayerStatsUpdate MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_PlayerStatsUpdate.Descriptor; }
    }
    
    public override CCSUsrMsg_PlayerStatsUpdate DefaultInstanceForType {
      get { return global::CCSUsrMsg_PlayerStatsUpdate.DefaultInstance; }
    }
    
    public override CCSUsrMsg_PlayerStatsUpdate BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_PlayerStatsUpdate) {
        return MergeFrom((CCSUsrMsg_PlayerStatsUpdate) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_PlayerStatsUpdate other) {
      if (other == global::CCSUsrMsg_PlayerStatsUpdate.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.stats_.Count != 0) {
        result.stats_.Add(other.stats_);
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      if (other.HasCrc) {
        Crc = other.Crc;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgPlayerStatsUpdateFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgPlayerStatsUpdateFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasVersion = input.ReadInt32(ref result.version_);
            break;
          }
          case 34: {
            input.ReadMessageArray(tag, field_name, result.stats_, global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat.DefaultInstance, extensionRegistry);
            break;
          }
          case 40: {
            result.hasUserId = input.ReadInt32(ref result.userId_);
            break;
          }
          case 48: {
            result.hasCrc = input.ReadInt32(ref result.crc_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    public int Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    public Builder SetVersion(int value) {
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat> StatsList {
      get { return PrepareBuilder().stats_; }
    }
    public int StatsCount {
      get { return result.StatsCount; }
    }
    public global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat GetStats(int index) {
      return result.GetStats(index);
    }
    public Builder SetStats(int index, global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.stats_[index] = value;
      return this;
    }
    public Builder SetStats(int index, global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.stats_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddStats(global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.stats_.Add(value);
      return this;
    }
    public Builder AddStats(global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.stats_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeStats(scg::IEnumerable<global::CCSUsrMsg_PlayerStatsUpdate.Types.Stat> values) {
      PrepareBuilder();
      result.stats_.Add(values);
      return this;
    }
    public Builder ClearStats() {
      PrepareBuilder();
      result.stats_.Clear();
      return this;
    }
    
    public bool HasUserId {
      get { return result.hasUserId; }
    }
    public int UserId {
      get { return result.UserId; }
      set { SetUserId(value); }
    }
    public Builder SetUserId(int value) {
      PrepareBuilder();
      result.hasUserId = true;
      result.userId_ = value;
      return this;
    }
    public Builder ClearUserId() {
      PrepareBuilder();
      result.hasUserId = false;
      result.userId_ = 0;
      return this;
    }
    
    public bool HasCrc {
      get { return result.hasCrc; }
    }
    public int Crc {
      get { return result.Crc; }
      set { SetCrc(value); }
    }
    public Builder SetCrc(int value) {
      PrepareBuilder();
      result.hasCrc = true;
      result.crc_ = value;
      return this;
    }
    public Builder ClearCrc() {
      PrepareBuilder();
      result.hasCrc = false;
      result.crc_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_PlayerStatsUpdate() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_DisplayInventory : pb::GeneratedMessage<CCSUsrMsg_DisplayInventory, CCSUsrMsg_DisplayInventory.Builder> {
  private CCSUsrMsg_DisplayInventory() { }
  private static readonly CCSUsrMsg_DisplayInventory defaultInstance = new CCSUsrMsg_DisplayInventory().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgDisplayInventoryFieldNames = new string[] { "display", "user_id" };
  private static readonly uint[] _cCSUsrMsgDisplayInventoryFieldTags = new uint[] { 8, 16 };
  public static CCSUsrMsg_DisplayInventory DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_DisplayInventory DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_DisplayInventory ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_DisplayInventory__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_DisplayInventory, CCSUsrMsg_DisplayInventory.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_DisplayInventory__FieldAccessorTable; }
  }
  
  public const int DisplayFieldNumber = 1;
  private bool hasDisplay;
  private bool display_;
  public bool HasDisplay {
    get { return hasDisplay; }
  }
  public bool Display {
    get { return display_; }
  }
  
  public const int UserIdFieldNumber = 2;
  private bool hasUserId;
  private int userId_;
  public bool HasUserId {
    get { return hasUserId; }
  }
  public int UserId {
    get { return userId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgDisplayInventoryFieldNames;
    if (hasDisplay) {
      output.WriteBool(1, field_names[0], Display);
    }
    if (hasUserId) {
      output.WriteInt32(2, field_names[1], UserId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDisplay) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, Display);
      }
      if (hasUserId) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, UserId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_DisplayInventory ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_DisplayInventory ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_DisplayInventory ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_DisplayInventory ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_DisplayInventory ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_DisplayInventory ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_DisplayInventory ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_DisplayInventory ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_DisplayInventory ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_DisplayInventory ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_DisplayInventory MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_DisplayInventory prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_DisplayInventory, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_DisplayInventory cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_DisplayInventory result;
    
    private CCSUsrMsg_DisplayInventory PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_DisplayInventory original = result;
        result = new CCSUsrMsg_DisplayInventory();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_DisplayInventory MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_DisplayInventory.Descriptor; }
    }
    
    public override CCSUsrMsg_DisplayInventory DefaultInstanceForType {
      get { return global::CCSUsrMsg_DisplayInventory.DefaultInstance; }
    }
    
    public override CCSUsrMsg_DisplayInventory BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_DisplayInventory) {
        return MergeFrom((CCSUsrMsg_DisplayInventory) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_DisplayInventory other) {
      if (other == global::CCSUsrMsg_DisplayInventory.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDisplay) {
        Display = other.Display;
      }
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgDisplayInventoryFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgDisplayInventoryFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDisplay = input.ReadBool(ref result.display_);
            break;
          }
          case 16: {
            result.hasUserId = input.ReadInt32(ref result.userId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDisplay {
      get { return result.hasDisplay; }
    }
    public bool Display {
      get { return result.Display; }
      set { SetDisplay(value); }
    }
    public Builder SetDisplay(bool value) {
      PrepareBuilder();
      result.hasDisplay = true;
      result.display_ = value;
      return this;
    }
    public Builder ClearDisplay() {
      PrepareBuilder();
      result.hasDisplay = false;
      result.display_ = false;
      return this;
    }
    
    public bool HasUserId {
      get { return result.hasUserId; }
    }
    public int UserId {
      get { return result.UserId; }
      set { SetUserId(value); }
    }
    public Builder SetUserId(int value) {
      PrepareBuilder();
      result.hasUserId = true;
      result.userId_ = value;
      return this;
    }
    public Builder ClearUserId() {
      PrepareBuilder();
      result.hasUserId = false;
      result.userId_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_DisplayInventory() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_XRankGet : pb::GeneratedMessage<CCSUsrMsg_XRankGet, CCSUsrMsg_XRankGet.Builder> {
  private CCSUsrMsg_XRankGet() { }
  private static readonly CCSUsrMsg_XRankGet defaultInstance = new CCSUsrMsg_XRankGet().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgXRankGetFieldNames = new string[] { "controller", "mode_idx" };
  private static readonly uint[] _cCSUsrMsgXRankGetFieldTags = new uint[] { 16, 8 };
  public static CCSUsrMsg_XRankGet DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_XRankGet DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_XRankGet ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_XRankGet__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_XRankGet, CCSUsrMsg_XRankGet.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_XRankGet__FieldAccessorTable; }
  }
  
  public const int ModeIdxFieldNumber = 1;
  private bool hasModeIdx;
  private int modeIdx_;
  public bool HasModeIdx {
    get { return hasModeIdx; }
  }
  public int ModeIdx {
    get { return modeIdx_; }
  }
  
  public const int ControllerFieldNumber = 2;
  private bool hasController;
  private int controller_;
  public bool HasController {
    get { return hasController; }
  }
  public int Controller {
    get { return controller_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgXRankGetFieldNames;
    if (hasModeIdx) {
      output.WriteInt32(1, field_names[1], ModeIdx);
    }
    if (hasController) {
      output.WriteInt32(2, field_names[0], Controller);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasModeIdx) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ModeIdx);
      }
      if (hasController) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Controller);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_XRankGet ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_XRankGet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_XRankGet ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_XRankGet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_XRankGet ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_XRankGet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_XRankGet ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_XRankGet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_XRankGet ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_XRankGet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_XRankGet MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_XRankGet prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_XRankGet, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_XRankGet cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_XRankGet result;
    
    private CCSUsrMsg_XRankGet PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_XRankGet original = result;
        result = new CCSUsrMsg_XRankGet();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_XRankGet MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_XRankGet.Descriptor; }
    }
    
    public override CCSUsrMsg_XRankGet DefaultInstanceForType {
      get { return global::CCSUsrMsg_XRankGet.DefaultInstance; }
    }
    
    public override CCSUsrMsg_XRankGet BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_XRankGet) {
        return MergeFrom((CCSUsrMsg_XRankGet) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_XRankGet other) {
      if (other == global::CCSUsrMsg_XRankGet.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasModeIdx) {
        ModeIdx = other.ModeIdx;
      }
      if (other.HasController) {
        Controller = other.Controller;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgXRankGetFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgXRankGetFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasModeIdx = input.ReadInt32(ref result.modeIdx_);
            break;
          }
          case 16: {
            result.hasController = input.ReadInt32(ref result.controller_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasModeIdx {
      get { return result.hasModeIdx; }
    }
    public int ModeIdx {
      get { return result.ModeIdx; }
      set { SetModeIdx(value); }
    }
    public Builder SetModeIdx(int value) {
      PrepareBuilder();
      result.hasModeIdx = true;
      result.modeIdx_ = value;
      return this;
    }
    public Builder ClearModeIdx() {
      PrepareBuilder();
      result.hasModeIdx = false;
      result.modeIdx_ = 0;
      return this;
    }
    
    public bool HasController {
      get { return result.hasController; }
    }
    public int Controller {
      get { return result.Controller; }
      set { SetController(value); }
    }
    public Builder SetController(int value) {
      PrepareBuilder();
      result.hasController = true;
      result.controller_ = value;
      return this;
    }
    public Builder ClearController() {
      PrepareBuilder();
      result.hasController = false;
      result.controller_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_XRankGet() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_XRankUpd : pb::GeneratedMessage<CCSUsrMsg_XRankUpd, CCSUsrMsg_XRankUpd.Builder> {
  private CCSUsrMsg_XRankUpd() { }
  private static readonly CCSUsrMsg_XRankUpd defaultInstance = new CCSUsrMsg_XRankUpd().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgXRankUpdFieldNames = new string[] { "controller", "mode_idx", "ranking" };
  private static readonly uint[] _cCSUsrMsgXRankUpdFieldTags = new uint[] { 16, 8, 24 };
  public static CCSUsrMsg_XRankUpd DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_XRankUpd DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_XRankUpd ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_XRankUpd__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_XRankUpd, CCSUsrMsg_XRankUpd.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_XRankUpd__FieldAccessorTable; }
  }
  
  public const int ModeIdxFieldNumber = 1;
  private bool hasModeIdx;
  private int modeIdx_;
  public bool HasModeIdx {
    get { return hasModeIdx; }
  }
  public int ModeIdx {
    get { return modeIdx_; }
  }
  
  public const int ControllerFieldNumber = 2;
  private bool hasController;
  private int controller_;
  public bool HasController {
    get { return hasController; }
  }
  public int Controller {
    get { return controller_; }
  }
  
  public const int RankingFieldNumber = 3;
  private bool hasRanking;
  private int ranking_;
  public bool HasRanking {
    get { return hasRanking; }
  }
  public int Ranking {
    get { return ranking_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgXRankUpdFieldNames;
    if (hasModeIdx) {
      output.WriteInt32(1, field_names[1], ModeIdx);
    }
    if (hasController) {
      output.WriteInt32(2, field_names[0], Controller);
    }
    if (hasRanking) {
      output.WriteInt32(3, field_names[2], Ranking);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasModeIdx) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ModeIdx);
      }
      if (hasController) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Controller);
      }
      if (hasRanking) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Ranking);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_XRankUpd ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_XRankUpd ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_XRankUpd ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_XRankUpd ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_XRankUpd ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_XRankUpd ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_XRankUpd ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_XRankUpd ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_XRankUpd ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_XRankUpd ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_XRankUpd MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_XRankUpd prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_XRankUpd, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_XRankUpd cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_XRankUpd result;
    
    private CCSUsrMsg_XRankUpd PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_XRankUpd original = result;
        result = new CCSUsrMsg_XRankUpd();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_XRankUpd MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_XRankUpd.Descriptor; }
    }
    
    public override CCSUsrMsg_XRankUpd DefaultInstanceForType {
      get { return global::CCSUsrMsg_XRankUpd.DefaultInstance; }
    }
    
    public override CCSUsrMsg_XRankUpd BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_XRankUpd) {
        return MergeFrom((CCSUsrMsg_XRankUpd) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_XRankUpd other) {
      if (other == global::CCSUsrMsg_XRankUpd.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasModeIdx) {
        ModeIdx = other.ModeIdx;
      }
      if (other.HasController) {
        Controller = other.Controller;
      }
      if (other.HasRanking) {
        Ranking = other.Ranking;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgXRankUpdFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgXRankUpdFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasModeIdx = input.ReadInt32(ref result.modeIdx_);
            break;
          }
          case 16: {
            result.hasController = input.ReadInt32(ref result.controller_);
            break;
          }
          case 24: {
            result.hasRanking = input.ReadInt32(ref result.ranking_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasModeIdx {
      get { return result.hasModeIdx; }
    }
    public int ModeIdx {
      get { return result.ModeIdx; }
      set { SetModeIdx(value); }
    }
    public Builder SetModeIdx(int value) {
      PrepareBuilder();
      result.hasModeIdx = true;
      result.modeIdx_ = value;
      return this;
    }
    public Builder ClearModeIdx() {
      PrepareBuilder();
      result.hasModeIdx = false;
      result.modeIdx_ = 0;
      return this;
    }
    
    public bool HasController {
      get { return result.hasController; }
    }
    public int Controller {
      get { return result.Controller; }
      set { SetController(value); }
    }
    public Builder SetController(int value) {
      PrepareBuilder();
      result.hasController = true;
      result.controller_ = value;
      return this;
    }
    public Builder ClearController() {
      PrepareBuilder();
      result.hasController = false;
      result.controller_ = 0;
      return this;
    }
    
    public bool HasRanking {
      get { return result.hasRanking; }
    }
    public int Ranking {
      get { return result.Ranking; }
      set { SetRanking(value); }
    }
    public Builder SetRanking(int value) {
      PrepareBuilder();
      result.hasRanking = true;
      result.ranking_ = value;
      return this;
    }
    public Builder ClearRanking() {
      PrepareBuilder();
      result.hasRanking = false;
      result.ranking_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_XRankUpd() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_CallVoteFailed : pb::GeneratedMessage<CCSUsrMsg_CallVoteFailed, CCSUsrMsg_CallVoteFailed.Builder> {
  private CCSUsrMsg_CallVoteFailed() { }
  private static readonly CCSUsrMsg_CallVoteFailed defaultInstance = new CCSUsrMsg_CallVoteFailed().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgCallVoteFailedFieldNames = new string[] { "reason", "time" };
  private static readonly uint[] _cCSUsrMsgCallVoteFailedFieldTags = new uint[] { 8, 16 };
  public static CCSUsrMsg_CallVoteFailed DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_CallVoteFailed DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_CallVoteFailed ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_CallVoteFailed__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_CallVoteFailed, CCSUsrMsg_CallVoteFailed.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_CallVoteFailed__FieldAccessorTable; }
  }
  
  public const int ReasonFieldNumber = 1;
  private bool hasReason;
  private int reason_;
  public bool HasReason {
    get { return hasReason; }
  }
  public int Reason {
    get { return reason_; }
  }
  
  public const int TimeFieldNumber = 2;
  private bool hasTime;
  private int time_;
  public bool HasTime {
    get { return hasTime; }
  }
  public int Time {
    get { return time_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgCallVoteFailedFieldNames;
    if (hasReason) {
      output.WriteInt32(1, field_names[0], Reason);
    }
    if (hasTime) {
      output.WriteInt32(2, field_names[1], Time);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasReason) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Reason);
      }
      if (hasTime) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Time);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_CallVoteFailed ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_CallVoteFailed ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CallVoteFailed ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_CallVoteFailed ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CallVoteFailed ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_CallVoteFailed ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_CallVoteFailed ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_CallVoteFailed ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_CallVoteFailed ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_CallVoteFailed ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_CallVoteFailed MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_CallVoteFailed prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_CallVoteFailed, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_CallVoteFailed cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_CallVoteFailed result;
    
    private CCSUsrMsg_CallVoteFailed PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_CallVoteFailed original = result;
        result = new CCSUsrMsg_CallVoteFailed();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_CallVoteFailed MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_CallVoteFailed.Descriptor; }
    }
    
    public override CCSUsrMsg_CallVoteFailed DefaultInstanceForType {
      get { return global::CCSUsrMsg_CallVoteFailed.DefaultInstance; }
    }
    
    public override CCSUsrMsg_CallVoteFailed BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_CallVoteFailed) {
        return MergeFrom((CCSUsrMsg_CallVoteFailed) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_CallVoteFailed other) {
      if (other == global::CCSUsrMsg_CallVoteFailed.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasReason) {
        Reason = other.Reason;
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgCallVoteFailedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgCallVoteFailedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasReason = input.ReadInt32(ref result.reason_);
            break;
          }
          case 16: {
            result.hasTime = input.ReadInt32(ref result.time_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasReason {
      get { return result.hasReason; }
    }
    public int Reason {
      get { return result.Reason; }
      set { SetReason(value); }
    }
    public Builder SetReason(int value) {
      PrepareBuilder();
      result.hasReason = true;
      result.reason_ = value;
      return this;
    }
    public Builder ClearReason() {
      PrepareBuilder();
      result.hasReason = false;
      result.reason_ = 0;
      return this;
    }
    
    public bool HasTime {
      get { return result.hasTime; }
    }
    public int Time {
      get { return result.Time; }
      set { SetTime(value); }
    }
    public Builder SetTime(int value) {
      PrepareBuilder();
      result.hasTime = true;
      result.time_ = value;
      return this;
    }
    public Builder ClearTime() {
      PrepareBuilder();
      result.hasTime = false;
      result.time_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_CallVoteFailed() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_VoteStart : pb::GeneratedMessage<CCSUsrMsg_VoteStart, CCSUsrMsg_VoteStart.Builder> {
  private CCSUsrMsg_VoteStart() { }
  private static readonly CCSUsrMsg_VoteStart defaultInstance = new CCSUsrMsg_VoteStart().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgVoteStartFieldNames = new string[] { "details_str", "disp_str", "ent_idx", "is_yes_no_vote", "other_team_str", "team", "vote_type" };
  private static readonly uint[] _cCSUsrMsgVoteStartFieldTags = new uint[] { 42, 34, 16, 56, 50, 8, 24 };
  public static CCSUsrMsg_VoteStart DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_VoteStart DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_VoteStart ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VoteStart__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_VoteStart, CCSUsrMsg_VoteStart.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VoteStart__FieldAccessorTable; }
  }
  
  public const int TeamFieldNumber = 1;
  private bool hasTeam;
  private int team_;
  public bool HasTeam {
    get { return hasTeam; }
  }
  public int Team {
    get { return team_; }
  }
  
  public const int EntIdxFieldNumber = 2;
  private bool hasEntIdx;
  private int entIdx_;
  public bool HasEntIdx {
    get { return hasEntIdx; }
  }
  public int EntIdx {
    get { return entIdx_; }
  }
  
  public const int VoteTypeFieldNumber = 3;
  private bool hasVoteType;
  private int voteType_;
  public bool HasVoteType {
    get { return hasVoteType; }
  }
  public int VoteType {
    get { return voteType_; }
  }
  
  public const int DispStrFieldNumber = 4;
  private bool hasDispStr;
  private string dispStr_ = "";
  public bool HasDispStr {
    get { return hasDispStr; }
  }
  public string DispStr {
    get { return dispStr_; }
  }
  
  public const int DetailsStrFieldNumber = 5;
  private bool hasDetailsStr;
  private string detailsStr_ = "";
  public bool HasDetailsStr {
    get { return hasDetailsStr; }
  }
  public string DetailsStr {
    get { return detailsStr_; }
  }
  
  public const int OtherTeamStrFieldNumber = 6;
  private bool hasOtherTeamStr;
  private string otherTeamStr_ = "";
  public bool HasOtherTeamStr {
    get { return hasOtherTeamStr; }
  }
  public string OtherTeamStr {
    get { return otherTeamStr_; }
  }
  
  public const int IsYesNoVoteFieldNumber = 7;
  private bool hasIsYesNoVote;
  private bool isYesNoVote_;
  public bool HasIsYesNoVote {
    get { return hasIsYesNoVote; }
  }
  public bool IsYesNoVote {
    get { return isYesNoVote_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgVoteStartFieldNames;
    if (hasTeam) {
      output.WriteInt32(1, field_names[5], Team);
    }
    if (hasEntIdx) {
      output.WriteInt32(2, field_names[2], EntIdx);
    }
    if (hasVoteType) {
      output.WriteInt32(3, field_names[6], VoteType);
    }
    if (hasDispStr) {
      output.WriteString(4, field_names[1], DispStr);
    }
    if (hasDetailsStr) {
      output.WriteString(5, field_names[0], DetailsStr);
    }
    if (hasOtherTeamStr) {
      output.WriteString(6, field_names[4], OtherTeamStr);
    }
    if (hasIsYesNoVote) {
      output.WriteBool(7, field_names[3], IsYesNoVote);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTeam) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Team);
      }
      if (hasEntIdx) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, EntIdx);
      }
      if (hasVoteType) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, VoteType);
      }
      if (hasDispStr) {
        size += pb::CodedOutputStream.ComputeStringSize(4, DispStr);
      }
      if (hasDetailsStr) {
        size += pb::CodedOutputStream.ComputeStringSize(5, DetailsStr);
      }
      if (hasOtherTeamStr) {
        size += pb::CodedOutputStream.ComputeStringSize(6, OtherTeamStr);
      }
      if (hasIsYesNoVote) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, IsYesNoVote);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_VoteStart ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VoteStart ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoteStart ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VoteStart ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoteStart ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VoteStart ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoteStart ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_VoteStart ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_VoteStart ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VoteStart ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_VoteStart MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_VoteStart prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_VoteStart, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_VoteStart cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_VoteStart result;
    
    private CCSUsrMsg_VoteStart PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_VoteStart original = result;
        result = new CCSUsrMsg_VoteStart();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_VoteStart MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_VoteStart.Descriptor; }
    }
    
    public override CCSUsrMsg_VoteStart DefaultInstanceForType {
      get { return global::CCSUsrMsg_VoteStart.DefaultInstance; }
    }
    
    public override CCSUsrMsg_VoteStart BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_VoteStart) {
        return MergeFrom((CCSUsrMsg_VoteStart) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_VoteStart other) {
      if (other == global::CCSUsrMsg_VoteStart.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTeam) {
        Team = other.Team;
      }
      if (other.HasEntIdx) {
        EntIdx = other.EntIdx;
      }
      if (other.HasVoteType) {
        VoteType = other.VoteType;
      }
      if (other.HasDispStr) {
        DispStr = other.DispStr;
      }
      if (other.HasDetailsStr) {
        DetailsStr = other.DetailsStr;
      }
      if (other.HasOtherTeamStr) {
        OtherTeamStr = other.OtherTeamStr;
      }
      if (other.HasIsYesNoVote) {
        IsYesNoVote = other.IsYesNoVote;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgVoteStartFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgVoteStartFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasTeam = input.ReadInt32(ref result.team_);
            break;
          }
          case 16: {
            result.hasEntIdx = input.ReadInt32(ref result.entIdx_);
            break;
          }
          case 24: {
            result.hasVoteType = input.ReadInt32(ref result.voteType_);
            break;
          }
          case 34: {
            result.hasDispStr = input.ReadString(ref result.dispStr_);
            break;
          }
          case 42: {
            result.hasDetailsStr = input.ReadString(ref result.detailsStr_);
            break;
          }
          case 50: {
            result.hasOtherTeamStr = input.ReadString(ref result.otherTeamStr_);
            break;
          }
          case 56: {
            result.hasIsYesNoVote = input.ReadBool(ref result.isYesNoVote_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTeam {
      get { return result.hasTeam; }
    }
    public int Team {
      get { return result.Team; }
      set { SetTeam(value); }
    }
    public Builder SetTeam(int value) {
      PrepareBuilder();
      result.hasTeam = true;
      result.team_ = value;
      return this;
    }
    public Builder ClearTeam() {
      PrepareBuilder();
      result.hasTeam = false;
      result.team_ = 0;
      return this;
    }
    
    public bool HasEntIdx {
      get { return result.hasEntIdx; }
    }
    public int EntIdx {
      get { return result.EntIdx; }
      set { SetEntIdx(value); }
    }
    public Builder SetEntIdx(int value) {
      PrepareBuilder();
      result.hasEntIdx = true;
      result.entIdx_ = value;
      return this;
    }
    public Builder ClearEntIdx() {
      PrepareBuilder();
      result.hasEntIdx = false;
      result.entIdx_ = 0;
      return this;
    }
    
    public bool HasVoteType {
      get { return result.hasVoteType; }
    }
    public int VoteType {
      get { return result.VoteType; }
      set { SetVoteType(value); }
    }
    public Builder SetVoteType(int value) {
      PrepareBuilder();
      result.hasVoteType = true;
      result.voteType_ = value;
      return this;
    }
    public Builder ClearVoteType() {
      PrepareBuilder();
      result.hasVoteType = false;
      result.voteType_ = 0;
      return this;
    }
    
    public bool HasDispStr {
      get { return result.hasDispStr; }
    }
    public string DispStr {
      get { return result.DispStr; }
      set { SetDispStr(value); }
    }
    public Builder SetDispStr(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDispStr = true;
      result.dispStr_ = value;
      return this;
    }
    public Builder ClearDispStr() {
      PrepareBuilder();
      result.hasDispStr = false;
      result.dispStr_ = "";
      return this;
    }
    
    public bool HasDetailsStr {
      get { return result.hasDetailsStr; }
    }
    public string DetailsStr {
      get { return result.DetailsStr; }
      set { SetDetailsStr(value); }
    }
    public Builder SetDetailsStr(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDetailsStr = true;
      result.detailsStr_ = value;
      return this;
    }
    public Builder ClearDetailsStr() {
      PrepareBuilder();
      result.hasDetailsStr = false;
      result.detailsStr_ = "";
      return this;
    }
    
    public bool HasOtherTeamStr {
      get { return result.hasOtherTeamStr; }
    }
    public string OtherTeamStr {
      get { return result.OtherTeamStr; }
      set { SetOtherTeamStr(value); }
    }
    public Builder SetOtherTeamStr(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOtherTeamStr = true;
      result.otherTeamStr_ = value;
      return this;
    }
    public Builder ClearOtherTeamStr() {
      PrepareBuilder();
      result.hasOtherTeamStr = false;
      result.otherTeamStr_ = "";
      return this;
    }
    
    public bool HasIsYesNoVote {
      get { return result.hasIsYesNoVote; }
    }
    public bool IsYesNoVote {
      get { return result.IsYesNoVote; }
      set { SetIsYesNoVote(value); }
    }
    public Builder SetIsYesNoVote(bool value) {
      PrepareBuilder();
      result.hasIsYesNoVote = true;
      result.isYesNoVote_ = value;
      return this;
    }
    public Builder ClearIsYesNoVote() {
      PrepareBuilder();
      result.hasIsYesNoVote = false;
      result.isYesNoVote_ = false;
      return this;
    }
  }
  static CCSUsrMsg_VoteStart() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_VotePass : pb::GeneratedMessage<CCSUsrMsg_VotePass, CCSUsrMsg_VotePass.Builder> {
  private CCSUsrMsg_VotePass() { }
  private static readonly CCSUsrMsg_VotePass defaultInstance = new CCSUsrMsg_VotePass().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgVotePassFieldNames = new string[] { "details_str", "disp_str", "team", "vote_type" };
  private static readonly uint[] _cCSUsrMsgVotePassFieldTags = new uint[] { 34, 26, 8, 16 };
  public static CCSUsrMsg_VotePass DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_VotePass DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_VotePass ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VotePass__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_VotePass, CCSUsrMsg_VotePass.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VotePass__FieldAccessorTable; }
  }
  
  public const int TeamFieldNumber = 1;
  private bool hasTeam;
  private int team_;
  public bool HasTeam {
    get { return hasTeam; }
  }
  public int Team {
    get { return team_; }
  }
  
  public const int VoteTypeFieldNumber = 2;
  private bool hasVoteType;
  private int voteType_;
  public bool HasVoteType {
    get { return hasVoteType; }
  }
  public int VoteType {
    get { return voteType_; }
  }
  
  public const int DispStrFieldNumber = 3;
  private bool hasDispStr;
  private string dispStr_ = "";
  public bool HasDispStr {
    get { return hasDispStr; }
  }
  public string DispStr {
    get { return dispStr_; }
  }
  
  public const int DetailsStrFieldNumber = 4;
  private bool hasDetailsStr;
  private string detailsStr_ = "";
  public bool HasDetailsStr {
    get { return hasDetailsStr; }
  }
  public string DetailsStr {
    get { return detailsStr_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgVotePassFieldNames;
    if (hasTeam) {
      output.WriteInt32(1, field_names[2], Team);
    }
    if (hasVoteType) {
      output.WriteInt32(2, field_names[3], VoteType);
    }
    if (hasDispStr) {
      output.WriteString(3, field_names[1], DispStr);
    }
    if (hasDetailsStr) {
      output.WriteString(4, field_names[0], DetailsStr);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTeam) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Team);
      }
      if (hasVoteType) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, VoteType);
      }
      if (hasDispStr) {
        size += pb::CodedOutputStream.ComputeStringSize(3, DispStr);
      }
      if (hasDetailsStr) {
        size += pb::CodedOutputStream.ComputeStringSize(4, DetailsStr);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_VotePass ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VotePass ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VotePass ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VotePass ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VotePass ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VotePass ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VotePass ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_VotePass ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_VotePass ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VotePass ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_VotePass MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_VotePass prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_VotePass, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_VotePass cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_VotePass result;
    
    private CCSUsrMsg_VotePass PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_VotePass original = result;
        result = new CCSUsrMsg_VotePass();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_VotePass MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_VotePass.Descriptor; }
    }
    
    public override CCSUsrMsg_VotePass DefaultInstanceForType {
      get { return global::CCSUsrMsg_VotePass.DefaultInstance; }
    }
    
    public override CCSUsrMsg_VotePass BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_VotePass) {
        return MergeFrom((CCSUsrMsg_VotePass) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_VotePass other) {
      if (other == global::CCSUsrMsg_VotePass.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTeam) {
        Team = other.Team;
      }
      if (other.HasVoteType) {
        VoteType = other.VoteType;
      }
      if (other.HasDispStr) {
        DispStr = other.DispStr;
      }
      if (other.HasDetailsStr) {
        DetailsStr = other.DetailsStr;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgVotePassFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgVotePassFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasTeam = input.ReadInt32(ref result.team_);
            break;
          }
          case 16: {
            result.hasVoteType = input.ReadInt32(ref result.voteType_);
            break;
          }
          case 26: {
            result.hasDispStr = input.ReadString(ref result.dispStr_);
            break;
          }
          case 34: {
            result.hasDetailsStr = input.ReadString(ref result.detailsStr_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTeam {
      get { return result.hasTeam; }
    }
    public int Team {
      get { return result.Team; }
      set { SetTeam(value); }
    }
    public Builder SetTeam(int value) {
      PrepareBuilder();
      result.hasTeam = true;
      result.team_ = value;
      return this;
    }
    public Builder ClearTeam() {
      PrepareBuilder();
      result.hasTeam = false;
      result.team_ = 0;
      return this;
    }
    
    public bool HasVoteType {
      get { return result.hasVoteType; }
    }
    public int VoteType {
      get { return result.VoteType; }
      set { SetVoteType(value); }
    }
    public Builder SetVoteType(int value) {
      PrepareBuilder();
      result.hasVoteType = true;
      result.voteType_ = value;
      return this;
    }
    public Builder ClearVoteType() {
      PrepareBuilder();
      result.hasVoteType = false;
      result.voteType_ = 0;
      return this;
    }
    
    public bool HasDispStr {
      get { return result.hasDispStr; }
    }
    public string DispStr {
      get { return result.DispStr; }
      set { SetDispStr(value); }
    }
    public Builder SetDispStr(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDispStr = true;
      result.dispStr_ = value;
      return this;
    }
    public Builder ClearDispStr() {
      PrepareBuilder();
      result.hasDispStr = false;
      result.dispStr_ = "";
      return this;
    }
    
    public bool HasDetailsStr {
      get { return result.hasDetailsStr; }
    }
    public string DetailsStr {
      get { return result.DetailsStr; }
      set { SetDetailsStr(value); }
    }
    public Builder SetDetailsStr(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDetailsStr = true;
      result.detailsStr_ = value;
      return this;
    }
    public Builder ClearDetailsStr() {
      PrepareBuilder();
      result.hasDetailsStr = false;
      result.detailsStr_ = "";
      return this;
    }
  }
  static CCSUsrMsg_VotePass() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_VoteFailed : pb::GeneratedMessage<CCSUsrMsg_VoteFailed, CCSUsrMsg_VoteFailed.Builder> {
  private CCSUsrMsg_VoteFailed() { }
  private static readonly CCSUsrMsg_VoteFailed defaultInstance = new CCSUsrMsg_VoteFailed().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgVoteFailedFieldNames = new string[] { "reason", "team" };
  private static readonly uint[] _cCSUsrMsgVoteFailedFieldTags = new uint[] { 16, 8 };
  public static CCSUsrMsg_VoteFailed DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_VoteFailed DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_VoteFailed ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VoteFailed__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_VoteFailed, CCSUsrMsg_VoteFailed.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VoteFailed__FieldAccessorTable; }
  }
  
  public const int TeamFieldNumber = 1;
  private bool hasTeam;
  private int team_;
  public bool HasTeam {
    get { return hasTeam; }
  }
  public int Team {
    get { return team_; }
  }
  
  public const int ReasonFieldNumber = 2;
  private bool hasReason;
  private int reason_;
  public bool HasReason {
    get { return hasReason; }
  }
  public int Reason {
    get { return reason_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgVoteFailedFieldNames;
    if (hasTeam) {
      output.WriteInt32(1, field_names[1], Team);
    }
    if (hasReason) {
      output.WriteInt32(2, field_names[0], Reason);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTeam) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Team);
      }
      if (hasReason) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Reason);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_VoteFailed ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VoteFailed ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoteFailed ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VoteFailed ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoteFailed ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VoteFailed ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoteFailed ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_VoteFailed ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_VoteFailed ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VoteFailed ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_VoteFailed MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_VoteFailed prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_VoteFailed, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_VoteFailed cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_VoteFailed result;
    
    private CCSUsrMsg_VoteFailed PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_VoteFailed original = result;
        result = new CCSUsrMsg_VoteFailed();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_VoteFailed MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_VoteFailed.Descriptor; }
    }
    
    public override CCSUsrMsg_VoteFailed DefaultInstanceForType {
      get { return global::CCSUsrMsg_VoteFailed.DefaultInstance; }
    }
    
    public override CCSUsrMsg_VoteFailed BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_VoteFailed) {
        return MergeFrom((CCSUsrMsg_VoteFailed) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_VoteFailed other) {
      if (other == global::CCSUsrMsg_VoteFailed.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTeam) {
        Team = other.Team;
      }
      if (other.HasReason) {
        Reason = other.Reason;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgVoteFailedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgVoteFailedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasTeam = input.ReadInt32(ref result.team_);
            break;
          }
          case 16: {
            result.hasReason = input.ReadInt32(ref result.reason_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTeam {
      get { return result.hasTeam; }
    }
    public int Team {
      get { return result.Team; }
      set { SetTeam(value); }
    }
    public Builder SetTeam(int value) {
      PrepareBuilder();
      result.hasTeam = true;
      result.team_ = value;
      return this;
    }
    public Builder ClearTeam() {
      PrepareBuilder();
      result.hasTeam = false;
      result.team_ = 0;
      return this;
    }
    
    public bool HasReason {
      get { return result.hasReason; }
    }
    public int Reason {
      get { return result.Reason; }
      set { SetReason(value); }
    }
    public Builder SetReason(int value) {
      PrepareBuilder();
      result.hasReason = true;
      result.reason_ = value;
      return this;
    }
    public Builder ClearReason() {
      PrepareBuilder();
      result.hasReason = false;
      result.reason_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_VoteFailed() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_VoteSetup : pb::GeneratedMessage<CCSUsrMsg_VoteSetup, CCSUsrMsg_VoteSetup.Builder> {
  private CCSUsrMsg_VoteSetup() { }
  private static readonly CCSUsrMsg_VoteSetup defaultInstance = new CCSUsrMsg_VoteSetup().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgVoteSetupFieldNames = new string[] { "potential_issues" };
  private static readonly uint[] _cCSUsrMsgVoteSetupFieldTags = new uint[] { 10 };
  public static CCSUsrMsg_VoteSetup DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_VoteSetup DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_VoteSetup ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VoteSetup__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_VoteSetup, CCSUsrMsg_VoteSetup.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_VoteSetup__FieldAccessorTable; }
  }
  
  public const int PotentialIssuesFieldNumber = 1;
  private pbc::PopsicleList<string> potentialIssues_ = new pbc::PopsicleList<string>();
  public scg::IList<string> PotentialIssuesList {
    get { return pbc::Lists.AsReadOnly(potentialIssues_); }
  }
  public int PotentialIssuesCount {
    get { return potentialIssues_.Count; }
  }
  public string GetPotentialIssues(int index) {
    return potentialIssues_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgVoteSetupFieldNames;
    if (potentialIssues_.Count > 0) {
      output.WriteStringArray(1, field_names[0], potentialIssues_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (string element in PotentialIssuesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * potentialIssues_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_VoteSetup ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VoteSetup ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoteSetup ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_VoteSetup ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoteSetup ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VoteSetup ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_VoteSetup ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_VoteSetup ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_VoteSetup ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_VoteSetup ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_VoteSetup MakeReadOnly() {
    potentialIssues_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_VoteSetup prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_VoteSetup, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_VoteSetup cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_VoteSetup result;
    
    private CCSUsrMsg_VoteSetup PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_VoteSetup original = result;
        result = new CCSUsrMsg_VoteSetup();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_VoteSetup MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_VoteSetup.Descriptor; }
    }
    
    public override CCSUsrMsg_VoteSetup DefaultInstanceForType {
      get { return global::CCSUsrMsg_VoteSetup.DefaultInstance; }
    }
    
    public override CCSUsrMsg_VoteSetup BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_VoteSetup) {
        return MergeFrom((CCSUsrMsg_VoteSetup) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_VoteSetup other) {
      if (other == global::CCSUsrMsg_VoteSetup.DefaultInstance) return this;
      PrepareBuilder();
      if (other.potentialIssues_.Count != 0) {
        result.potentialIssues_.Add(other.potentialIssues_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgVoteSetupFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgVoteSetupFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadStringArray(tag, field_name, result.potentialIssues_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<string> PotentialIssuesList {
      get { return PrepareBuilder().potentialIssues_; }
    }
    public int PotentialIssuesCount {
      get { return result.PotentialIssuesCount; }
    }
    public string GetPotentialIssues(int index) {
      return result.GetPotentialIssues(index);
    }
    public Builder SetPotentialIssues(int index, string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.potentialIssues_[index] = value;
      return this;
    }
    public Builder AddPotentialIssues(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.potentialIssues_.Add(value);
      return this;
    }
    public Builder AddRangePotentialIssues(scg::IEnumerable<string> values) {
      PrepareBuilder();
      result.potentialIssues_.Add(values);
      return this;
    }
    public Builder ClearPotentialIssues() {
      PrepareBuilder();
      result.potentialIssues_.Clear();
      return this;
    }
  }
  static CCSUsrMsg_VoteSetup() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_SendLastKillerDamageToClient : pb::GeneratedMessage<CCSUsrMsg_SendLastKillerDamageToClient, CCSUsrMsg_SendLastKillerDamageToClient.Builder> {
  private CCSUsrMsg_SendLastKillerDamageToClient() { }
  private static readonly CCSUsrMsg_SendLastKillerDamageToClient defaultInstance = new CCSUsrMsg_SendLastKillerDamageToClient().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgSendLastKillerDamageToClientFieldNames = new string[] { "damage_given", "damage_taken", "num_hits_given", "num_hits_taken" };
  private static readonly uint[] _cCSUsrMsgSendLastKillerDamageToClientFieldTags = new uint[] { 16, 32, 8, 24 };
  public static CCSUsrMsg_SendLastKillerDamageToClient DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_SendLastKillerDamageToClient DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_SendLastKillerDamageToClient ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SendLastKillerDamageToClient__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_SendLastKillerDamageToClient, CCSUsrMsg_SendLastKillerDamageToClient.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_SendLastKillerDamageToClient__FieldAccessorTable; }
  }
  
  public const int NumHitsGivenFieldNumber = 1;
  private bool hasNumHitsGiven;
  private int numHitsGiven_;
  public bool HasNumHitsGiven {
    get { return hasNumHitsGiven; }
  }
  public int NumHitsGiven {
    get { return numHitsGiven_; }
  }
  
  public const int DamageGivenFieldNumber = 2;
  private bool hasDamageGiven;
  private int damageGiven_;
  public bool HasDamageGiven {
    get { return hasDamageGiven; }
  }
  public int DamageGiven {
    get { return damageGiven_; }
  }
  
  public const int NumHitsTakenFieldNumber = 3;
  private bool hasNumHitsTaken;
  private int numHitsTaken_;
  public bool HasNumHitsTaken {
    get { return hasNumHitsTaken; }
  }
  public int NumHitsTaken {
    get { return numHitsTaken_; }
  }
  
  public const int DamageTakenFieldNumber = 4;
  private bool hasDamageTaken;
  private int damageTaken_;
  public bool HasDamageTaken {
    get { return hasDamageTaken; }
  }
  public int DamageTaken {
    get { return damageTaken_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgSendLastKillerDamageToClientFieldNames;
    if (hasNumHitsGiven) {
      output.WriteInt32(1, field_names[2], NumHitsGiven);
    }
    if (hasDamageGiven) {
      output.WriteInt32(2, field_names[0], DamageGiven);
    }
    if (hasNumHitsTaken) {
      output.WriteInt32(3, field_names[3], NumHitsTaken);
    }
    if (hasDamageTaken) {
      output.WriteInt32(4, field_names[1], DamageTaken);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNumHitsGiven) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, NumHitsGiven);
      }
      if (hasDamageGiven) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, DamageGiven);
      }
      if (hasNumHitsTaken) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, NumHitsTaken);
      }
      if (hasDamageTaken) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, DamageTaken);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_SendLastKillerDamageToClient ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SendLastKillerDamageToClient ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendLastKillerDamageToClient ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_SendLastKillerDamageToClient ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendLastKillerDamageToClient ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SendLastKillerDamageToClient ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_SendLastKillerDamageToClient ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_SendLastKillerDamageToClient ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_SendLastKillerDamageToClient ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_SendLastKillerDamageToClient ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_SendLastKillerDamageToClient MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_SendLastKillerDamageToClient prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_SendLastKillerDamageToClient, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_SendLastKillerDamageToClient cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_SendLastKillerDamageToClient result;
    
    private CCSUsrMsg_SendLastKillerDamageToClient PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_SendLastKillerDamageToClient original = result;
        result = new CCSUsrMsg_SendLastKillerDamageToClient();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_SendLastKillerDamageToClient MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_SendLastKillerDamageToClient.Descriptor; }
    }
    
    public override CCSUsrMsg_SendLastKillerDamageToClient DefaultInstanceForType {
      get { return global::CCSUsrMsg_SendLastKillerDamageToClient.DefaultInstance; }
    }
    
    public override CCSUsrMsg_SendLastKillerDamageToClient BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_SendLastKillerDamageToClient) {
        return MergeFrom((CCSUsrMsg_SendLastKillerDamageToClient) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_SendLastKillerDamageToClient other) {
      if (other == global::CCSUsrMsg_SendLastKillerDamageToClient.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasNumHitsGiven) {
        NumHitsGiven = other.NumHitsGiven;
      }
      if (other.HasDamageGiven) {
        DamageGiven = other.DamageGiven;
      }
      if (other.HasNumHitsTaken) {
        NumHitsTaken = other.NumHitsTaken;
      }
      if (other.HasDamageTaken) {
        DamageTaken = other.DamageTaken;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgSendLastKillerDamageToClientFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgSendLastKillerDamageToClientFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasNumHitsGiven = input.ReadInt32(ref result.numHitsGiven_);
            break;
          }
          case 16: {
            result.hasDamageGiven = input.ReadInt32(ref result.damageGiven_);
            break;
          }
          case 24: {
            result.hasNumHitsTaken = input.ReadInt32(ref result.numHitsTaken_);
            break;
          }
          case 32: {
            result.hasDamageTaken = input.ReadInt32(ref result.damageTaken_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasNumHitsGiven {
      get { return result.hasNumHitsGiven; }
    }
    public int NumHitsGiven {
      get { return result.NumHitsGiven; }
      set { SetNumHitsGiven(value); }
    }
    public Builder SetNumHitsGiven(int value) {
      PrepareBuilder();
      result.hasNumHitsGiven = true;
      result.numHitsGiven_ = value;
      return this;
    }
    public Builder ClearNumHitsGiven() {
      PrepareBuilder();
      result.hasNumHitsGiven = false;
      result.numHitsGiven_ = 0;
      return this;
    }
    
    public bool HasDamageGiven {
      get { return result.hasDamageGiven; }
    }
    public int DamageGiven {
      get { return result.DamageGiven; }
      set { SetDamageGiven(value); }
    }
    public Builder SetDamageGiven(int value) {
      PrepareBuilder();
      result.hasDamageGiven = true;
      result.damageGiven_ = value;
      return this;
    }
    public Builder ClearDamageGiven() {
      PrepareBuilder();
      result.hasDamageGiven = false;
      result.damageGiven_ = 0;
      return this;
    }
    
    public bool HasNumHitsTaken {
      get { return result.hasNumHitsTaken; }
    }
    public int NumHitsTaken {
      get { return result.NumHitsTaken; }
      set { SetNumHitsTaken(value); }
    }
    public Builder SetNumHitsTaken(int value) {
      PrepareBuilder();
      result.hasNumHitsTaken = true;
      result.numHitsTaken_ = value;
      return this;
    }
    public Builder ClearNumHitsTaken() {
      PrepareBuilder();
      result.hasNumHitsTaken = false;
      result.numHitsTaken_ = 0;
      return this;
    }
    
    public bool HasDamageTaken {
      get { return result.hasDamageTaken; }
    }
    public int DamageTaken {
      get { return result.DamageTaken; }
      set { SetDamageTaken(value); }
    }
    public Builder SetDamageTaken(int value) {
      PrepareBuilder();
      result.hasDamageTaken = true;
      result.damageTaken_ = value;
      return this;
    }
    public Builder ClearDamageTaken() {
      PrepareBuilder();
      result.hasDamageTaken = false;
      result.damageTaken_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_SendLastKillerDamageToClient() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_ServerRankUpdate : pb::GeneratedMessage<CCSUsrMsg_ServerRankUpdate, CCSUsrMsg_ServerRankUpdate.Builder> {
  private CCSUsrMsg_ServerRankUpdate() { }
  private static readonly CCSUsrMsg_ServerRankUpdate defaultInstance = new CCSUsrMsg_ServerRankUpdate().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgServerRankUpdateFieldNames = new string[] { "rank_update" };
  private static readonly uint[] _cCSUsrMsgServerRankUpdateFieldTags = new uint[] { 10 };
  public static CCSUsrMsg_ServerRankUpdate DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_ServerRankUpdate DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_ServerRankUpdate ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ServerRankUpdate__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_ServerRankUpdate, CCSUsrMsg_ServerRankUpdate.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ServerRankUpdate__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class RankUpdate : pb::GeneratedMessage<RankUpdate, RankUpdate.Builder> {
      private RankUpdate() { }
      private static readonly RankUpdate defaultInstance = new RankUpdate().MakeReadOnly();
      private static readonly string[] _rankUpdateFieldNames = new string[] { "account_id", "num_wins", "rank_change", "rank_new", "rank_old" };
      private static readonly uint[] _rankUpdateFieldTags = new uint[] { 8, 32, 45, 24, 16 };
      public static RankUpdate DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override RankUpdate DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override RankUpdate ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ServerRankUpdate_RankUpdate__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<RankUpdate, RankUpdate.Builder> InternalFieldAccessors {
        get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ServerRankUpdate_RankUpdate__FieldAccessorTable; }
      }
      
      public const int AccountIdFieldNumber = 1;
      private bool hasAccountId;
      private int accountId_;
      public bool HasAccountId {
        get { return hasAccountId; }
      }
      public int AccountId {
        get { return accountId_; }
      }
      
      public const int RankOldFieldNumber = 2;
      private bool hasRankOld;
      private int rankOld_;
      public bool HasRankOld {
        get { return hasRankOld; }
      }
      public int RankOld {
        get { return rankOld_; }
      }
      
      public const int RankNewFieldNumber = 3;
      private bool hasRankNew;
      private int rankNew_;
      public bool HasRankNew {
        get { return hasRankNew; }
      }
      public int RankNew {
        get { return rankNew_; }
      }
      
      public const int NumWinsFieldNumber = 4;
      private bool hasNumWins;
      private int numWins_;
      public bool HasNumWins {
        get { return hasNumWins; }
      }
      public int NumWins {
        get { return numWins_; }
      }
      
      public const int RankChangeFieldNumber = 5;
      private bool hasRankChange;
      private float rankChange_;
      public bool HasRankChange {
        get { return hasRankChange; }
      }
      public float RankChange {
        get { return rankChange_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _rankUpdateFieldNames;
        if (hasAccountId) {
          output.WriteInt32(1, field_names[0], AccountId);
        }
        if (hasRankOld) {
          output.WriteInt32(2, field_names[4], RankOld);
        }
        if (hasRankNew) {
          output.WriteInt32(3, field_names[3], RankNew);
        }
        if (hasNumWins) {
          output.WriteInt32(4, field_names[1], NumWins);
        }
        if (hasRankChange) {
          output.WriteFloat(5, field_names[2], RankChange);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasAccountId) {
            size += pb::CodedOutputStream.ComputeInt32Size(1, AccountId);
          }
          if (hasRankOld) {
            size += pb::CodedOutputStream.ComputeInt32Size(2, RankOld);
          }
          if (hasRankNew) {
            size += pb::CodedOutputStream.ComputeInt32Size(3, RankNew);
          }
          if (hasNumWins) {
            size += pb::CodedOutputStream.ComputeInt32Size(4, NumWins);
          }
          if (hasRankChange) {
            size += pb::CodedOutputStream.ComputeFloatSize(5, RankChange);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static RankUpdate ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static RankUpdate ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static RankUpdate ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static RankUpdate ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static RankUpdate ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static RankUpdate ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static RankUpdate ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static RankUpdate ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static RankUpdate ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static RankUpdate ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private RankUpdate MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(RankUpdate prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<RankUpdate, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(RankUpdate cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private RankUpdate result;
        
        private RankUpdate PrepareBuilder() {
          if (resultIsReadOnly) {
            RankUpdate original = result;
            result = new RankUpdate();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override RankUpdate MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate.Descriptor; }
        }
        
        public override RankUpdate DefaultInstanceForType {
          get { return global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate.DefaultInstance; }
        }
        
        public override RankUpdate BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is RankUpdate) {
            return MergeFrom((RankUpdate) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(RankUpdate other) {
          if (other == global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasAccountId) {
            AccountId = other.AccountId;
          }
          if (other.HasRankOld) {
            RankOld = other.RankOld;
          }
          if (other.HasRankNew) {
            RankNew = other.RankNew;
          }
          if (other.HasNumWins) {
            NumWins = other.NumWins;
          }
          if (other.HasRankChange) {
            RankChange = other.RankChange;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_rankUpdateFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _rankUpdateFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasAccountId = input.ReadInt32(ref result.accountId_);
                break;
              }
              case 16: {
                result.hasRankOld = input.ReadInt32(ref result.rankOld_);
                break;
              }
              case 24: {
                result.hasRankNew = input.ReadInt32(ref result.rankNew_);
                break;
              }
              case 32: {
                result.hasNumWins = input.ReadInt32(ref result.numWins_);
                break;
              }
              case 45: {
                result.hasRankChange = input.ReadFloat(ref result.rankChange_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasAccountId {
          get { return result.hasAccountId; }
        }
        public int AccountId {
          get { return result.AccountId; }
          set { SetAccountId(value); }
        }
        public Builder SetAccountId(int value) {
          PrepareBuilder();
          result.hasAccountId = true;
          result.accountId_ = value;
          return this;
        }
        public Builder ClearAccountId() {
          PrepareBuilder();
          result.hasAccountId = false;
          result.accountId_ = 0;
          return this;
        }
        
        public bool HasRankOld {
          get { return result.hasRankOld; }
        }
        public int RankOld {
          get { return result.RankOld; }
          set { SetRankOld(value); }
        }
        public Builder SetRankOld(int value) {
          PrepareBuilder();
          result.hasRankOld = true;
          result.rankOld_ = value;
          return this;
        }
        public Builder ClearRankOld() {
          PrepareBuilder();
          result.hasRankOld = false;
          result.rankOld_ = 0;
          return this;
        }
        
        public bool HasRankNew {
          get { return result.hasRankNew; }
        }
        public int RankNew {
          get { return result.RankNew; }
          set { SetRankNew(value); }
        }
        public Builder SetRankNew(int value) {
          PrepareBuilder();
          result.hasRankNew = true;
          result.rankNew_ = value;
          return this;
        }
        public Builder ClearRankNew() {
          PrepareBuilder();
          result.hasRankNew = false;
          result.rankNew_ = 0;
          return this;
        }
        
        public bool HasNumWins {
          get { return result.hasNumWins; }
        }
        public int NumWins {
          get { return result.NumWins; }
          set { SetNumWins(value); }
        }
        public Builder SetNumWins(int value) {
          PrepareBuilder();
          result.hasNumWins = true;
          result.numWins_ = value;
          return this;
        }
        public Builder ClearNumWins() {
          PrepareBuilder();
          result.hasNumWins = false;
          result.numWins_ = 0;
          return this;
        }
        
        public bool HasRankChange {
          get { return result.hasRankChange; }
        }
        public float RankChange {
          get { return result.RankChange; }
          set { SetRankChange(value); }
        }
        public Builder SetRankChange(float value) {
          PrepareBuilder();
          result.hasRankChange = true;
          result.rankChange_ = value;
          return this;
        }
        public Builder ClearRankChange() {
          PrepareBuilder();
          result.hasRankChange = false;
          result.rankChange_ = 0F;
          return this;
        }
      }
      static RankUpdate() {
        object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int RankUpdateFieldNumber = 1;
  private pbc::PopsicleList<global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate> rankUpdate_ = new pbc::PopsicleList<global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate>();
  public scg::IList<global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate> RankUpdateList {
    get { return rankUpdate_; }
  }
  public int RankUpdateCount {
    get { return rankUpdate_.Count; }
  }
  public global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate GetRankUpdate(int index) {
    return rankUpdate_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgServerRankUpdateFieldNames;
    if (rankUpdate_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], rankUpdate_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate element in RankUpdateList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_ServerRankUpdate ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankUpdate ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankUpdate ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankUpdate ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankUpdate ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankUpdate ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankUpdate ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankUpdate ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankUpdate ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankUpdate ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_ServerRankUpdate MakeReadOnly() {
    rankUpdate_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_ServerRankUpdate prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_ServerRankUpdate, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_ServerRankUpdate cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_ServerRankUpdate result;
    
    private CCSUsrMsg_ServerRankUpdate PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_ServerRankUpdate original = result;
        result = new CCSUsrMsg_ServerRankUpdate();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_ServerRankUpdate MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_ServerRankUpdate.Descriptor; }
    }
    
    public override CCSUsrMsg_ServerRankUpdate DefaultInstanceForType {
      get { return global::CCSUsrMsg_ServerRankUpdate.DefaultInstance; }
    }
    
    public override CCSUsrMsg_ServerRankUpdate BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_ServerRankUpdate) {
        return MergeFrom((CCSUsrMsg_ServerRankUpdate) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_ServerRankUpdate other) {
      if (other == global::CCSUsrMsg_ServerRankUpdate.DefaultInstance) return this;
      PrepareBuilder();
      if (other.rankUpdate_.Count != 0) {
        result.rankUpdate_.Add(other.rankUpdate_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgServerRankUpdateFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgServerRankUpdateFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.rankUpdate_, global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate> RankUpdateList {
      get { return PrepareBuilder().rankUpdate_; }
    }
    public int RankUpdateCount {
      get { return result.RankUpdateCount; }
    }
    public global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate GetRankUpdate(int index) {
      return result.GetRankUpdate(index);
    }
    public Builder SetRankUpdate(int index, global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.rankUpdate_[index] = value;
      return this;
    }
    public Builder SetRankUpdate(int index, global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.rankUpdate_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddRankUpdate(global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.rankUpdate_.Add(value);
      return this;
    }
    public Builder AddRankUpdate(global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.rankUpdate_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeRankUpdate(scg::IEnumerable<global::CCSUsrMsg_ServerRankUpdate.Types.RankUpdate> values) {
      PrepareBuilder();
      result.rankUpdate_.Add(values);
      return this;
    }
    public Builder ClearRankUpdate() {
      PrepareBuilder();
      result.rankUpdate_.Clear();
      return this;
    }
  }
  static CCSUsrMsg_ServerRankUpdate() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_ItemPickup : pb::GeneratedMessage<CCSUsrMsg_ItemPickup, CCSUsrMsg_ItemPickup.Builder> {
  private CCSUsrMsg_ItemPickup() { }
  private static readonly CCSUsrMsg_ItemPickup defaultInstance = new CCSUsrMsg_ItemPickup().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgItemPickupFieldNames = new string[] { "item" };
  private static readonly uint[] _cCSUsrMsgItemPickupFieldTags = new uint[] { 10 };
  public static CCSUsrMsg_ItemPickup DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_ItemPickup DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_ItemPickup ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ItemPickup__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_ItemPickup, CCSUsrMsg_ItemPickup.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ItemPickup__FieldAccessorTable; }
  }
  
  public const int ItemFieldNumber = 1;
  private bool hasItem;
  private string item_ = "";
  public bool HasItem {
    get { return hasItem; }
  }
  public string Item {
    get { return item_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgItemPickupFieldNames;
    if (hasItem) {
      output.WriteString(1, field_names[0], Item);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasItem) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Item);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_ItemPickup ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ItemPickup ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ItemPickup ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ItemPickup ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ItemPickup ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ItemPickup ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ItemPickup ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_ItemPickup ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_ItemPickup ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ItemPickup ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_ItemPickup MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_ItemPickup prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_ItemPickup, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_ItemPickup cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_ItemPickup result;
    
    private CCSUsrMsg_ItemPickup PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_ItemPickup original = result;
        result = new CCSUsrMsg_ItemPickup();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_ItemPickup MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_ItemPickup.Descriptor; }
    }
    
    public override CCSUsrMsg_ItemPickup DefaultInstanceForType {
      get { return global::CCSUsrMsg_ItemPickup.DefaultInstance; }
    }
    
    public override CCSUsrMsg_ItemPickup BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_ItemPickup) {
        return MergeFrom((CCSUsrMsg_ItemPickup) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_ItemPickup other) {
      if (other == global::CCSUsrMsg_ItemPickup.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItem) {
        Item = other.Item;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgItemPickupFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgItemPickupFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasItem = input.ReadString(ref result.item_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItem {
      get { return result.hasItem; }
    }
    public string Item {
      get { return result.Item; }
      set { SetItem(value); }
    }
    public Builder SetItem(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasItem = true;
      result.item_ = value;
      return this;
    }
    public Builder ClearItem() {
      PrepareBuilder();
      result.hasItem = false;
      result.item_ = "";
      return this;
    }
  }
  static CCSUsrMsg_ItemPickup() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_ShowMenu : pb::GeneratedMessage<CCSUsrMsg_ShowMenu, CCSUsrMsg_ShowMenu.Builder> {
  private CCSUsrMsg_ShowMenu() { }
  private static readonly CCSUsrMsg_ShowMenu defaultInstance = new CCSUsrMsg_ShowMenu().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgShowMenuFieldNames = new string[] { "bits_valid_slots", "display_time", "menu_string" };
  private static readonly uint[] _cCSUsrMsgShowMenuFieldTags = new uint[] { 8, 16, 26 };
  public static CCSUsrMsg_ShowMenu DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_ShowMenu DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_ShowMenu ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ShowMenu__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_ShowMenu, CCSUsrMsg_ShowMenu.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ShowMenu__FieldAccessorTable; }
  }
  
  public const int BitsValidSlotsFieldNumber = 1;
  private bool hasBitsValidSlots;
  private int bitsValidSlots_;
  public bool HasBitsValidSlots {
    get { return hasBitsValidSlots; }
  }
  public int BitsValidSlots {
    get { return bitsValidSlots_; }
  }
  
  public const int DisplayTimeFieldNumber = 2;
  private bool hasDisplayTime;
  private int displayTime_;
  public bool HasDisplayTime {
    get { return hasDisplayTime; }
  }
  public int DisplayTime {
    get { return displayTime_; }
  }
  
  public const int MenuStringFieldNumber = 3;
  private bool hasMenuString;
  private string menuString_ = "";
  public bool HasMenuString {
    get { return hasMenuString; }
  }
  public string MenuString {
    get { return menuString_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgShowMenuFieldNames;
    if (hasBitsValidSlots) {
      output.WriteInt32(1, field_names[0], BitsValidSlots);
    }
    if (hasDisplayTime) {
      output.WriteInt32(2, field_names[1], DisplayTime);
    }
    if (hasMenuString) {
      output.WriteString(3, field_names[2], MenuString);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBitsValidSlots) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, BitsValidSlots);
      }
      if (hasDisplayTime) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, DisplayTime);
      }
      if (hasMenuString) {
        size += pb::CodedOutputStream.ComputeStringSize(3, MenuString);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_ShowMenu ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ShowMenu ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ShowMenu ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ShowMenu ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ShowMenu ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ShowMenu ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ShowMenu ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_ShowMenu ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_ShowMenu ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ShowMenu ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_ShowMenu MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_ShowMenu prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_ShowMenu, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_ShowMenu cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_ShowMenu result;
    
    private CCSUsrMsg_ShowMenu PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_ShowMenu original = result;
        result = new CCSUsrMsg_ShowMenu();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_ShowMenu MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_ShowMenu.Descriptor; }
    }
    
    public override CCSUsrMsg_ShowMenu DefaultInstanceForType {
      get { return global::CCSUsrMsg_ShowMenu.DefaultInstance; }
    }
    
    public override CCSUsrMsg_ShowMenu BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_ShowMenu) {
        return MergeFrom((CCSUsrMsg_ShowMenu) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_ShowMenu other) {
      if (other == global::CCSUsrMsg_ShowMenu.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasBitsValidSlots) {
        BitsValidSlots = other.BitsValidSlots;
      }
      if (other.HasDisplayTime) {
        DisplayTime = other.DisplayTime;
      }
      if (other.HasMenuString) {
        MenuString = other.MenuString;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgShowMenuFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgShowMenuFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasBitsValidSlots = input.ReadInt32(ref result.bitsValidSlots_);
            break;
          }
          case 16: {
            result.hasDisplayTime = input.ReadInt32(ref result.displayTime_);
            break;
          }
          case 26: {
            result.hasMenuString = input.ReadString(ref result.menuString_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasBitsValidSlots {
      get { return result.hasBitsValidSlots; }
    }
    public int BitsValidSlots {
      get { return result.BitsValidSlots; }
      set { SetBitsValidSlots(value); }
    }
    public Builder SetBitsValidSlots(int value) {
      PrepareBuilder();
      result.hasBitsValidSlots = true;
      result.bitsValidSlots_ = value;
      return this;
    }
    public Builder ClearBitsValidSlots() {
      PrepareBuilder();
      result.hasBitsValidSlots = false;
      result.bitsValidSlots_ = 0;
      return this;
    }
    
    public bool HasDisplayTime {
      get { return result.hasDisplayTime; }
    }
    public int DisplayTime {
      get { return result.DisplayTime; }
      set { SetDisplayTime(value); }
    }
    public Builder SetDisplayTime(int value) {
      PrepareBuilder();
      result.hasDisplayTime = true;
      result.displayTime_ = value;
      return this;
    }
    public Builder ClearDisplayTime() {
      PrepareBuilder();
      result.hasDisplayTime = false;
      result.displayTime_ = 0;
      return this;
    }
    
    public bool HasMenuString {
      get { return result.hasMenuString; }
    }
    public string MenuString {
      get { return result.MenuString; }
      set { SetMenuString(value); }
    }
    public Builder SetMenuString(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasMenuString = true;
      result.menuString_ = value;
      return this;
    }
    public Builder ClearMenuString() {
      PrepareBuilder();
      result.hasMenuString = false;
      result.menuString_ = "";
      return this;
    }
  }
  static CCSUsrMsg_ShowMenu() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_BarTime : pb::GeneratedMessage<CCSUsrMsg_BarTime, CCSUsrMsg_BarTime.Builder> {
  private CCSUsrMsg_BarTime() { }
  private static readonly CCSUsrMsg_BarTime defaultInstance = new CCSUsrMsg_BarTime().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgBarTimeFieldNames = new string[] { "time" };
  private static readonly uint[] _cCSUsrMsgBarTimeFieldTags = new uint[] { 10 };
  public static CCSUsrMsg_BarTime DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_BarTime DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_BarTime ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_BarTime__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_BarTime, CCSUsrMsg_BarTime.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_BarTime__FieldAccessorTable; }
  }
  
  public const int TimeFieldNumber = 1;
  private bool hasTime;
  private string time_ = "";
  public bool HasTime {
    get { return hasTime; }
  }
  public string Time {
    get { return time_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgBarTimeFieldNames;
    if (hasTime) {
      output.WriteString(1, field_names[0], Time);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTime) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Time);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_BarTime ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_BarTime ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_BarTime ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_BarTime ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_BarTime ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_BarTime ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_BarTime ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_BarTime ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_BarTime ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_BarTime ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_BarTime MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_BarTime prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_BarTime, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_BarTime cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_BarTime result;
    
    private CCSUsrMsg_BarTime PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_BarTime original = result;
        result = new CCSUsrMsg_BarTime();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_BarTime MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_BarTime.Descriptor; }
    }
    
    public override CCSUsrMsg_BarTime DefaultInstanceForType {
      get { return global::CCSUsrMsg_BarTime.DefaultInstance; }
    }
    
    public override CCSUsrMsg_BarTime BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_BarTime) {
        return MergeFrom((CCSUsrMsg_BarTime) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_BarTime other) {
      if (other == global::CCSUsrMsg_BarTime.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTime) {
        Time = other.Time;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgBarTimeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgBarTimeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasTime = input.ReadString(ref result.time_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTime {
      get { return result.hasTime; }
    }
    public string Time {
      get { return result.Time; }
      set { SetTime(value); }
    }
    public Builder SetTime(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasTime = true;
      result.time_ = value;
      return this;
    }
    public Builder ClearTime() {
      PrepareBuilder();
      result.hasTime = false;
      result.time_ = "";
      return this;
    }
  }
  static CCSUsrMsg_BarTime() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_AmmoDenied : pb::GeneratedMessage<CCSUsrMsg_AmmoDenied, CCSUsrMsg_AmmoDenied.Builder> {
  private CCSUsrMsg_AmmoDenied() { }
  private static readonly CCSUsrMsg_AmmoDenied defaultInstance = new CCSUsrMsg_AmmoDenied().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgAmmoDeniedFieldNames = new string[] { "ammoIdx" };
  private static readonly uint[] _cCSUsrMsgAmmoDeniedFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_AmmoDenied DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_AmmoDenied DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_AmmoDenied ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_AmmoDenied__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_AmmoDenied, CCSUsrMsg_AmmoDenied.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_AmmoDenied__FieldAccessorTable; }
  }
  
  public const int AmmoIdxFieldNumber = 1;
  private bool hasAmmoIdx;
  private int ammoIdx_;
  public bool HasAmmoIdx {
    get { return hasAmmoIdx; }
  }
  public int AmmoIdx {
    get { return ammoIdx_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgAmmoDeniedFieldNames;
    if (hasAmmoIdx) {
      output.WriteInt32(1, field_names[0], AmmoIdx);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAmmoIdx) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, AmmoIdx);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_AmmoDenied ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_AmmoDenied ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_AmmoDenied ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_AmmoDenied ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_AmmoDenied ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_AmmoDenied ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_AmmoDenied ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_AmmoDenied ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_AmmoDenied ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_AmmoDenied ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_AmmoDenied MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_AmmoDenied prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_AmmoDenied, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_AmmoDenied cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_AmmoDenied result;
    
    private CCSUsrMsg_AmmoDenied PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_AmmoDenied original = result;
        result = new CCSUsrMsg_AmmoDenied();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_AmmoDenied MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_AmmoDenied.Descriptor; }
    }
    
    public override CCSUsrMsg_AmmoDenied DefaultInstanceForType {
      get { return global::CCSUsrMsg_AmmoDenied.DefaultInstance; }
    }
    
    public override CCSUsrMsg_AmmoDenied BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_AmmoDenied) {
        return MergeFrom((CCSUsrMsg_AmmoDenied) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_AmmoDenied other) {
      if (other == global::CCSUsrMsg_AmmoDenied.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAmmoIdx) {
        AmmoIdx = other.AmmoIdx;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgAmmoDeniedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgAmmoDeniedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAmmoIdx = input.ReadInt32(ref result.ammoIdx_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAmmoIdx {
      get { return result.hasAmmoIdx; }
    }
    public int AmmoIdx {
      get { return result.AmmoIdx; }
      set { SetAmmoIdx(value); }
    }
    public Builder SetAmmoIdx(int value) {
      PrepareBuilder();
      result.hasAmmoIdx = true;
      result.ammoIdx_ = value;
      return this;
    }
    public Builder ClearAmmoIdx() {
      PrepareBuilder();
      result.hasAmmoIdx = false;
      result.ammoIdx_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_AmmoDenied() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_MarkAchievement : pb::GeneratedMessage<CCSUsrMsg_MarkAchievement, CCSUsrMsg_MarkAchievement.Builder> {
  private CCSUsrMsg_MarkAchievement() { }
  private static readonly CCSUsrMsg_MarkAchievement defaultInstance = new CCSUsrMsg_MarkAchievement().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgMarkAchievementFieldNames = new string[] { "achievement" };
  private static readonly uint[] _cCSUsrMsgMarkAchievementFieldTags = new uint[] { 10 };
  public static CCSUsrMsg_MarkAchievement DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_MarkAchievement DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_MarkAchievement ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_MarkAchievement__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_MarkAchievement, CCSUsrMsg_MarkAchievement.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_MarkAchievement__FieldAccessorTable; }
  }
  
  public const int AchievementFieldNumber = 1;
  private bool hasAchievement;
  private string achievement_ = "";
  public bool HasAchievement {
    get { return hasAchievement; }
  }
  public string Achievement {
    get { return achievement_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgMarkAchievementFieldNames;
    if (hasAchievement) {
      output.WriteString(1, field_names[0], Achievement);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAchievement) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Achievement);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_MarkAchievement ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_MarkAchievement ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_MarkAchievement ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_MarkAchievement ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_MarkAchievement ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_MarkAchievement ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_MarkAchievement ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_MarkAchievement ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_MarkAchievement ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_MarkAchievement ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_MarkAchievement MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_MarkAchievement prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_MarkAchievement, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_MarkAchievement cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_MarkAchievement result;
    
    private CCSUsrMsg_MarkAchievement PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_MarkAchievement original = result;
        result = new CCSUsrMsg_MarkAchievement();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_MarkAchievement MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_MarkAchievement.Descriptor; }
    }
    
    public override CCSUsrMsg_MarkAchievement DefaultInstanceForType {
      get { return global::CCSUsrMsg_MarkAchievement.DefaultInstance; }
    }
    
    public override CCSUsrMsg_MarkAchievement BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_MarkAchievement) {
        return MergeFrom((CCSUsrMsg_MarkAchievement) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_MarkAchievement other) {
      if (other == global::CCSUsrMsg_MarkAchievement.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAchievement) {
        Achievement = other.Achievement;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgMarkAchievementFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgMarkAchievementFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasAchievement = input.ReadString(ref result.achievement_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAchievement {
      get { return result.hasAchievement; }
    }
    public string Achievement {
      get { return result.Achievement; }
      set { SetAchievement(value); }
    }
    public Builder SetAchievement(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAchievement = true;
      result.achievement_ = value;
      return this;
    }
    public Builder ClearAchievement() {
      PrepareBuilder();
      result.hasAchievement = false;
      result.achievement_ = "";
      return this;
    }
  }
  static CCSUsrMsg_MarkAchievement() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_MatchStatsUpdate : pb::GeneratedMessage<CCSUsrMsg_MatchStatsUpdate, CCSUsrMsg_MatchStatsUpdate.Builder> {
  private CCSUsrMsg_MatchStatsUpdate() { }
  private static readonly CCSUsrMsg_MatchStatsUpdate defaultInstance = new CCSUsrMsg_MatchStatsUpdate().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgMatchStatsUpdateFieldNames = new string[] { "update" };
  private static readonly uint[] _cCSUsrMsgMatchStatsUpdateFieldTags = new uint[] { 10 };
  public static CCSUsrMsg_MatchStatsUpdate DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_MatchStatsUpdate DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_MatchStatsUpdate ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_MatchStatsUpdate__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_MatchStatsUpdate, CCSUsrMsg_MatchStatsUpdate.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_MatchStatsUpdate__FieldAccessorTable; }
  }
  
  public const int UpdateFieldNumber = 1;
  private bool hasUpdate;
  private string update_ = "";
  public bool HasUpdate {
    get { return hasUpdate; }
  }
  public string Update {
    get { return update_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgMatchStatsUpdateFieldNames;
    if (hasUpdate) {
      output.WriteString(1, field_names[0], Update);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUpdate) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Update);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_MatchStatsUpdate ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_MatchStatsUpdate ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_MatchStatsUpdate ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_MatchStatsUpdate ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_MatchStatsUpdate ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_MatchStatsUpdate ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_MatchStatsUpdate ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_MatchStatsUpdate ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_MatchStatsUpdate ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_MatchStatsUpdate ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_MatchStatsUpdate MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_MatchStatsUpdate prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_MatchStatsUpdate, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_MatchStatsUpdate cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_MatchStatsUpdate result;
    
    private CCSUsrMsg_MatchStatsUpdate PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_MatchStatsUpdate original = result;
        result = new CCSUsrMsg_MatchStatsUpdate();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_MatchStatsUpdate MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_MatchStatsUpdate.Descriptor; }
    }
    
    public override CCSUsrMsg_MatchStatsUpdate DefaultInstanceForType {
      get { return global::CCSUsrMsg_MatchStatsUpdate.DefaultInstance; }
    }
    
    public override CCSUsrMsg_MatchStatsUpdate BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_MatchStatsUpdate) {
        return MergeFrom((CCSUsrMsg_MatchStatsUpdate) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_MatchStatsUpdate other) {
      if (other == global::CCSUsrMsg_MatchStatsUpdate.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUpdate) {
        Update = other.Update;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgMatchStatsUpdateFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgMatchStatsUpdateFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasUpdate = input.ReadString(ref result.update_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUpdate {
      get { return result.hasUpdate; }
    }
    public string Update {
      get { return result.Update; }
      set { SetUpdate(value); }
    }
    public Builder SetUpdate(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasUpdate = true;
      result.update_ = value;
      return this;
    }
    public Builder ClearUpdate() {
      PrepareBuilder();
      result.hasUpdate = false;
      result.update_ = "";
      return this;
    }
  }
  static CCSUsrMsg_MatchStatsUpdate() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_ItemDrop : pb::GeneratedMessage<CCSUsrMsg_ItemDrop, CCSUsrMsg_ItemDrop.Builder> {
  private CCSUsrMsg_ItemDrop() { }
  private static readonly CCSUsrMsg_ItemDrop defaultInstance = new CCSUsrMsg_ItemDrop().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgItemDropFieldNames = new string[] { "death", "itemid" };
  private static readonly uint[] _cCSUsrMsgItemDropFieldTags = new uint[] { 16, 8 };
  public static CCSUsrMsg_ItemDrop DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_ItemDrop DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_ItemDrop ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ItemDrop__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_ItemDrop, CCSUsrMsg_ItemDrop.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ItemDrop__FieldAccessorTable; }
  }
  
  public const int ItemidFieldNumber = 1;
  private bool hasItemid;
  private long itemid_;
  public bool HasItemid {
    get { return hasItemid; }
  }
  public long Itemid {
    get { return itemid_; }
  }
  
  public const int DeathFieldNumber = 2;
  private bool hasDeath;
  private bool death_;
  public bool HasDeath {
    get { return hasDeath; }
  }
  public bool Death {
    get { return death_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgItemDropFieldNames;
    if (hasItemid) {
      output.WriteInt64(1, field_names[1], Itemid);
    }
    if (hasDeath) {
      output.WriteBool(2, field_names[0], Death);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasItemid) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, Itemid);
      }
      if (hasDeath) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, Death);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_ItemDrop ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ItemDrop ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ItemDrop ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ItemDrop ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ItemDrop ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ItemDrop ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ItemDrop ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_ItemDrop ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_ItemDrop ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ItemDrop ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_ItemDrop MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_ItemDrop prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_ItemDrop, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_ItemDrop cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_ItemDrop result;
    
    private CCSUsrMsg_ItemDrop PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_ItemDrop original = result;
        result = new CCSUsrMsg_ItemDrop();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_ItemDrop MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_ItemDrop.Descriptor; }
    }
    
    public override CCSUsrMsg_ItemDrop DefaultInstanceForType {
      get { return global::CCSUsrMsg_ItemDrop.DefaultInstance; }
    }
    
    public override CCSUsrMsg_ItemDrop BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_ItemDrop) {
        return MergeFrom((CCSUsrMsg_ItemDrop) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_ItemDrop other) {
      if (other == global::CCSUsrMsg_ItemDrop.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemid) {
        Itemid = other.Itemid;
      }
      if (other.HasDeath) {
        Death = other.Death;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgItemDropFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgItemDropFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasItemid = input.ReadInt64(ref result.itemid_);
            break;
          }
          case 16: {
            result.hasDeath = input.ReadBool(ref result.death_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemid {
      get { return result.hasItemid; }
    }
    public long Itemid {
      get { return result.Itemid; }
      set { SetItemid(value); }
    }
    public Builder SetItemid(long value) {
      PrepareBuilder();
      result.hasItemid = true;
      result.itemid_ = value;
      return this;
    }
    public Builder ClearItemid() {
      PrepareBuilder();
      result.hasItemid = false;
      result.itemid_ = 0L;
      return this;
    }
    
    public bool HasDeath {
      get { return result.hasDeath; }
    }
    public bool Death {
      get { return result.Death; }
      set { SetDeath(value); }
    }
    public Builder SetDeath(bool value) {
      PrepareBuilder();
      result.hasDeath = true;
      result.death_ = value;
      return this;
    }
    public Builder ClearDeath() {
      PrepareBuilder();
      result.hasDeath = false;
      result.death_ = false;
      return this;
    }
  }
  static CCSUsrMsg_ItemDrop() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_GlowPropTurnOff : pb::GeneratedMessage<CCSUsrMsg_GlowPropTurnOff, CCSUsrMsg_GlowPropTurnOff.Builder> {
  private CCSUsrMsg_GlowPropTurnOff() { }
  private static readonly CCSUsrMsg_GlowPropTurnOff defaultInstance = new CCSUsrMsg_GlowPropTurnOff().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgGlowPropTurnOffFieldNames = new string[] { "entidx" };
  private static readonly uint[] _cCSUsrMsgGlowPropTurnOffFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_GlowPropTurnOff DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_GlowPropTurnOff DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_GlowPropTurnOff ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_GlowPropTurnOff__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_GlowPropTurnOff, CCSUsrMsg_GlowPropTurnOff.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_GlowPropTurnOff__FieldAccessorTable; }
  }
  
  public const int EntidxFieldNumber = 1;
  private bool hasEntidx;
  private int entidx_;
  public bool HasEntidx {
    get { return hasEntidx; }
  }
  public int Entidx {
    get { return entidx_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgGlowPropTurnOffFieldNames;
    if (hasEntidx) {
      output.WriteInt32(1, field_names[0], Entidx);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEntidx) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Entidx);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_GlowPropTurnOff ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_GlowPropTurnOff ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_GlowPropTurnOff ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_GlowPropTurnOff ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_GlowPropTurnOff ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_GlowPropTurnOff ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_GlowPropTurnOff ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_GlowPropTurnOff ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_GlowPropTurnOff ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_GlowPropTurnOff ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_GlowPropTurnOff MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_GlowPropTurnOff prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_GlowPropTurnOff, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_GlowPropTurnOff cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_GlowPropTurnOff result;
    
    private CCSUsrMsg_GlowPropTurnOff PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_GlowPropTurnOff original = result;
        result = new CCSUsrMsg_GlowPropTurnOff();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_GlowPropTurnOff MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_GlowPropTurnOff.Descriptor; }
    }
    
    public override CCSUsrMsg_GlowPropTurnOff DefaultInstanceForType {
      get { return global::CCSUsrMsg_GlowPropTurnOff.DefaultInstance; }
    }
    
    public override CCSUsrMsg_GlowPropTurnOff BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_GlowPropTurnOff) {
        return MergeFrom((CCSUsrMsg_GlowPropTurnOff) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_GlowPropTurnOff other) {
      if (other == global::CCSUsrMsg_GlowPropTurnOff.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEntidx) {
        Entidx = other.Entidx;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgGlowPropTurnOffFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgGlowPropTurnOffFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEntidx = input.ReadInt32(ref result.entidx_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEntidx {
      get { return result.hasEntidx; }
    }
    public int Entidx {
      get { return result.Entidx; }
      set { SetEntidx(value); }
    }
    public Builder SetEntidx(int value) {
      PrepareBuilder();
      result.hasEntidx = true;
      result.entidx_ = value;
      return this;
    }
    public Builder ClearEntidx() {
      PrepareBuilder();
      result.hasEntidx = false;
      result.entidx_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_GlowPropTurnOff() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_RoundBackupFilenames : pb::GeneratedMessage<CCSUsrMsg_RoundBackupFilenames, CCSUsrMsg_RoundBackupFilenames.Builder> {
  private CCSUsrMsg_RoundBackupFilenames() { }
  private static readonly CCSUsrMsg_RoundBackupFilenames defaultInstance = new CCSUsrMsg_RoundBackupFilenames().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgRoundBackupFilenamesFieldNames = new string[] { "count", "filename", "index", "nicename" };
  private static readonly uint[] _cCSUsrMsgRoundBackupFilenamesFieldTags = new uint[] { 8, 26, 16, 34 };
  public static CCSUsrMsg_RoundBackupFilenames DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_RoundBackupFilenames DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_RoundBackupFilenames ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_RoundBackupFilenames__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_RoundBackupFilenames, CCSUsrMsg_RoundBackupFilenames.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_RoundBackupFilenames__FieldAccessorTable; }
  }
  
  public const int CountFieldNumber = 1;
  private bool hasCount;
  private int count_;
  public bool HasCount {
    get { return hasCount; }
  }
  public int Count {
    get { return count_; }
  }
  
  public const int IndexFieldNumber = 2;
  private bool hasIndex;
  private int index_;
  public bool HasIndex {
    get { return hasIndex; }
  }
  public int Index {
    get { return index_; }
  }
  
  public const int FilenameFieldNumber = 3;
  private bool hasFilename;
  private string filename_ = "";
  public bool HasFilename {
    get { return hasFilename; }
  }
  public string Filename {
    get { return filename_; }
  }
  
  public const int NicenameFieldNumber = 4;
  private bool hasNicename;
  private string nicename_ = "";
  public bool HasNicename {
    get { return hasNicename; }
  }
  public string Nicename {
    get { return nicename_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgRoundBackupFilenamesFieldNames;
    if (hasCount) {
      output.WriteInt32(1, field_names[0], Count);
    }
    if (hasIndex) {
      output.WriteInt32(2, field_names[2], Index);
    }
    if (hasFilename) {
      output.WriteString(3, field_names[1], Filename);
    }
    if (hasNicename) {
      output.WriteString(4, field_names[3], Nicename);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCount) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Count);
      }
      if (hasIndex) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Index);
      }
      if (hasFilename) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Filename);
      }
      if (hasNicename) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Nicename);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_RoundBackupFilenames ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_RoundBackupFilenames ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RoundBackupFilenames ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_RoundBackupFilenames ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RoundBackupFilenames ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_RoundBackupFilenames ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RoundBackupFilenames ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_RoundBackupFilenames ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_RoundBackupFilenames ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_RoundBackupFilenames ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_RoundBackupFilenames MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_RoundBackupFilenames prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_RoundBackupFilenames, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_RoundBackupFilenames cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_RoundBackupFilenames result;
    
    private CCSUsrMsg_RoundBackupFilenames PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_RoundBackupFilenames original = result;
        result = new CCSUsrMsg_RoundBackupFilenames();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_RoundBackupFilenames MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_RoundBackupFilenames.Descriptor; }
    }
    
    public override CCSUsrMsg_RoundBackupFilenames DefaultInstanceForType {
      get { return global::CCSUsrMsg_RoundBackupFilenames.DefaultInstance; }
    }
    
    public override CCSUsrMsg_RoundBackupFilenames BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_RoundBackupFilenames) {
        return MergeFrom((CCSUsrMsg_RoundBackupFilenames) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_RoundBackupFilenames other) {
      if (other == global::CCSUsrMsg_RoundBackupFilenames.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCount) {
        Count = other.Count;
      }
      if (other.HasIndex) {
        Index = other.Index;
      }
      if (other.HasFilename) {
        Filename = other.Filename;
      }
      if (other.HasNicename) {
        Nicename = other.Nicename;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgRoundBackupFilenamesFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgRoundBackupFilenamesFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasCount = input.ReadInt32(ref result.count_);
            break;
          }
          case 16: {
            result.hasIndex = input.ReadInt32(ref result.index_);
            break;
          }
          case 26: {
            result.hasFilename = input.ReadString(ref result.filename_);
            break;
          }
          case 34: {
            result.hasNicename = input.ReadString(ref result.nicename_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCount {
      get { return result.hasCount; }
    }
    public int Count {
      get { return result.Count; }
      set { SetCount(value); }
    }
    public Builder SetCount(int value) {
      PrepareBuilder();
      result.hasCount = true;
      result.count_ = value;
      return this;
    }
    public Builder ClearCount() {
      PrepareBuilder();
      result.hasCount = false;
      result.count_ = 0;
      return this;
    }
    
    public bool HasIndex {
      get { return result.hasIndex; }
    }
    public int Index {
      get { return result.Index; }
      set { SetIndex(value); }
    }
    public Builder SetIndex(int value) {
      PrepareBuilder();
      result.hasIndex = true;
      result.index_ = value;
      return this;
    }
    public Builder ClearIndex() {
      PrepareBuilder();
      result.hasIndex = false;
      result.index_ = 0;
      return this;
    }
    
    public bool HasFilename {
      get { return result.hasFilename; }
    }
    public string Filename {
      get { return result.Filename; }
      set { SetFilename(value); }
    }
    public Builder SetFilename(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasFilename = true;
      result.filename_ = value;
      return this;
    }
    public Builder ClearFilename() {
      PrepareBuilder();
      result.hasFilename = false;
      result.filename_ = "";
      return this;
    }
    
    public bool HasNicename {
      get { return result.hasNicename; }
    }
    public string Nicename {
      get { return result.Nicename; }
      set { SetNicename(value); }
    }
    public Builder SetNicename(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasNicename = true;
      result.nicename_ = value;
      return this;
    }
    public Builder ClearNicename() {
      PrepareBuilder();
      result.hasNicename = false;
      result.nicename_ = "";
      return this;
    }
  }
  static CCSUsrMsg_RoundBackupFilenames() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_ResetHud : pb::GeneratedMessage<CCSUsrMsg_ResetHud, CCSUsrMsg_ResetHud.Builder> {
  private CCSUsrMsg_ResetHud() { }
  private static readonly CCSUsrMsg_ResetHud defaultInstance = new CCSUsrMsg_ResetHud().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgResetHudFieldNames = new string[] { "reset" };
  private static readonly uint[] _cCSUsrMsgResetHudFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_ResetHud DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_ResetHud DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_ResetHud ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ResetHud__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_ResetHud, CCSUsrMsg_ResetHud.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ResetHud__FieldAccessorTable; }
  }
  
  public const int ResetFieldNumber = 1;
  private bool hasReset;
  private bool reset_;
  public bool HasReset {
    get { return hasReset; }
  }
  public bool Reset {
    get { return reset_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgResetHudFieldNames;
    if (hasReset) {
      output.WriteBool(1, field_names[0], Reset);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasReset) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, Reset);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_ResetHud ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ResetHud ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ResetHud ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ResetHud ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ResetHud ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ResetHud ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ResetHud ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_ResetHud ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_ResetHud ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ResetHud ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_ResetHud MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_ResetHud prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_ResetHud, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_ResetHud cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_ResetHud result;
    
    private CCSUsrMsg_ResetHud PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_ResetHud original = result;
        result = new CCSUsrMsg_ResetHud();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_ResetHud MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_ResetHud.Descriptor; }
    }
    
    public override CCSUsrMsg_ResetHud DefaultInstanceForType {
      get { return global::CCSUsrMsg_ResetHud.DefaultInstance; }
    }
    
    public override CCSUsrMsg_ResetHud BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_ResetHud) {
        return MergeFrom((CCSUsrMsg_ResetHud) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_ResetHud other) {
      if (other == global::CCSUsrMsg_ResetHud.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasReset) {
        Reset = other.Reset;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgResetHudFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgResetHudFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasReset = input.ReadBool(ref result.reset_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasReset {
      get { return result.hasReset; }
    }
    public bool Reset {
      get { return result.Reset; }
      set { SetReset(value); }
    }
    public Builder SetReset(bool value) {
      PrepareBuilder();
      result.hasReset = true;
      result.reset_ = value;
      return this;
    }
    public Builder ClearReset() {
      PrepareBuilder();
      result.hasReset = false;
      result.reset_ = false;
      return this;
    }
  }
  static CCSUsrMsg_ResetHud() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_GameTitle : pb::GeneratedMessage<CCSUsrMsg_GameTitle, CCSUsrMsg_GameTitle.Builder> {
  private CCSUsrMsg_GameTitle() { }
  private static readonly CCSUsrMsg_GameTitle defaultInstance = new CCSUsrMsg_GameTitle().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgGameTitleFieldNames = new string[] { "dummy" };
  private static readonly uint[] _cCSUsrMsgGameTitleFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_GameTitle DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_GameTitle DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_GameTitle ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_GameTitle__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_GameTitle, CCSUsrMsg_GameTitle.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_GameTitle__FieldAccessorTable; }
  }
  
  public const int DummyFieldNumber = 1;
  private bool hasDummy;
  private int dummy_;
  public bool HasDummy {
    get { return hasDummy; }
  }
  public int Dummy {
    get { return dummy_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgGameTitleFieldNames;
    if (hasDummy) {
      output.WriteInt32(1, field_names[0], Dummy);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDummy) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Dummy);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_GameTitle ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_GameTitle ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_GameTitle ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_GameTitle ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_GameTitle ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_GameTitle ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_GameTitle ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_GameTitle ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_GameTitle ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_GameTitle ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_GameTitle MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_GameTitle prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_GameTitle, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_GameTitle cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_GameTitle result;
    
    private CCSUsrMsg_GameTitle PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_GameTitle original = result;
        result = new CCSUsrMsg_GameTitle();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_GameTitle MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_GameTitle.Descriptor; }
    }
    
    public override CCSUsrMsg_GameTitle DefaultInstanceForType {
      get { return global::CCSUsrMsg_GameTitle.DefaultInstance; }
    }
    
    public override CCSUsrMsg_GameTitle BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_GameTitle) {
        return MergeFrom((CCSUsrMsg_GameTitle) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_GameTitle other) {
      if (other == global::CCSUsrMsg_GameTitle.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDummy) {
        Dummy = other.Dummy;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgGameTitleFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgGameTitleFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDummy = input.ReadInt32(ref result.dummy_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDummy {
      get { return result.hasDummy; }
    }
    public int Dummy {
      get { return result.Dummy; }
      set { SetDummy(value); }
    }
    public Builder SetDummy(int value) {
      PrepareBuilder();
      result.hasDummy = true;
      result.dummy_ = value;
      return this;
    }
    public Builder ClearDummy() {
      PrepareBuilder();
      result.hasDummy = false;
      result.dummy_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_GameTitle() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_RequestState : pb::GeneratedMessage<CCSUsrMsg_RequestState, CCSUsrMsg_RequestState.Builder> {
  private CCSUsrMsg_RequestState() { }
  private static readonly CCSUsrMsg_RequestState defaultInstance = new CCSUsrMsg_RequestState().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgRequestStateFieldNames = new string[] { "dummy" };
  private static readonly uint[] _cCSUsrMsgRequestStateFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_RequestState DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_RequestState DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_RequestState ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_RequestState__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_RequestState, CCSUsrMsg_RequestState.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_RequestState__FieldAccessorTable; }
  }
  
  public const int DummyFieldNumber = 1;
  private bool hasDummy;
  private int dummy_;
  public bool HasDummy {
    get { return hasDummy; }
  }
  public int Dummy {
    get { return dummy_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgRequestStateFieldNames;
    if (hasDummy) {
      output.WriteInt32(1, field_names[0], Dummy);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDummy) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Dummy);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_RequestState ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_RequestState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RequestState ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_RequestState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RequestState ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_RequestState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_RequestState ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_RequestState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_RequestState ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_RequestState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_RequestState MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_RequestState prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_RequestState, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_RequestState cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_RequestState result;
    
    private CCSUsrMsg_RequestState PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_RequestState original = result;
        result = new CCSUsrMsg_RequestState();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_RequestState MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_RequestState.Descriptor; }
    }
    
    public override CCSUsrMsg_RequestState DefaultInstanceForType {
      get { return global::CCSUsrMsg_RequestState.DefaultInstance; }
    }
    
    public override CCSUsrMsg_RequestState BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_RequestState) {
        return MergeFrom((CCSUsrMsg_RequestState) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_RequestState other) {
      if (other == global::CCSUsrMsg_RequestState.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDummy) {
        Dummy = other.Dummy;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgRequestStateFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgRequestStateFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDummy = input.ReadInt32(ref result.dummy_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDummy {
      get { return result.hasDummy; }
    }
    public int Dummy {
      get { return result.Dummy; }
      set { SetDummy(value); }
    }
    public Builder SetDummy(int value) {
      PrepareBuilder();
      result.hasDummy = true;
      result.dummy_ = value;
      return this;
    }
    public Builder ClearDummy() {
      PrepareBuilder();
      result.hasDummy = false;
      result.dummy_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_RequestState() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_StopSpectatorMode : pb::GeneratedMessage<CCSUsrMsg_StopSpectatorMode, CCSUsrMsg_StopSpectatorMode.Builder> {
  private CCSUsrMsg_StopSpectatorMode() { }
  private static readonly CCSUsrMsg_StopSpectatorMode defaultInstance = new CCSUsrMsg_StopSpectatorMode().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgStopSpectatorModeFieldNames = new string[] { "dummy" };
  private static readonly uint[] _cCSUsrMsgStopSpectatorModeFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_StopSpectatorMode DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_StopSpectatorMode DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_StopSpectatorMode ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_StopSpectatorMode__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_StopSpectatorMode, CCSUsrMsg_StopSpectatorMode.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_StopSpectatorMode__FieldAccessorTable; }
  }
  
  public const int DummyFieldNumber = 1;
  private bool hasDummy;
  private int dummy_;
  public bool HasDummy {
    get { return hasDummy; }
  }
  public int Dummy {
    get { return dummy_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgStopSpectatorModeFieldNames;
    if (hasDummy) {
      output.WriteInt32(1, field_names[0], Dummy);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDummy) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Dummy);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_StopSpectatorMode ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_StopSpectatorMode ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_StopSpectatorMode ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_StopSpectatorMode ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_StopSpectatorMode ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_StopSpectatorMode ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_StopSpectatorMode ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_StopSpectatorMode ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_StopSpectatorMode ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_StopSpectatorMode ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_StopSpectatorMode MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_StopSpectatorMode prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_StopSpectatorMode, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_StopSpectatorMode cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_StopSpectatorMode result;
    
    private CCSUsrMsg_StopSpectatorMode PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_StopSpectatorMode original = result;
        result = new CCSUsrMsg_StopSpectatorMode();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_StopSpectatorMode MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_StopSpectatorMode.Descriptor; }
    }
    
    public override CCSUsrMsg_StopSpectatorMode DefaultInstanceForType {
      get { return global::CCSUsrMsg_StopSpectatorMode.DefaultInstance; }
    }
    
    public override CCSUsrMsg_StopSpectatorMode BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_StopSpectatorMode) {
        return MergeFrom((CCSUsrMsg_StopSpectatorMode) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_StopSpectatorMode other) {
      if (other == global::CCSUsrMsg_StopSpectatorMode.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDummy) {
        Dummy = other.Dummy;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgStopSpectatorModeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgStopSpectatorModeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDummy = input.ReadInt32(ref result.dummy_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDummy {
      get { return result.hasDummy; }
    }
    public int Dummy {
      get { return result.Dummy; }
      set { SetDummy(value); }
    }
    public Builder SetDummy(int value) {
      PrepareBuilder();
      result.hasDummy = true;
      result.dummy_ = value;
      return this;
    }
    public Builder ClearDummy() {
      PrepareBuilder();
      result.hasDummy = false;
      result.dummy_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_StopSpectatorMode() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_DisconnectToLobby : pb::GeneratedMessage<CCSUsrMsg_DisconnectToLobby, CCSUsrMsg_DisconnectToLobby.Builder> {
  private CCSUsrMsg_DisconnectToLobby() { }
  private static readonly CCSUsrMsg_DisconnectToLobby defaultInstance = new CCSUsrMsg_DisconnectToLobby().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgDisconnectToLobbyFieldNames = new string[] { "dummy" };
  private static readonly uint[] _cCSUsrMsgDisconnectToLobbyFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_DisconnectToLobby DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_DisconnectToLobby DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_DisconnectToLobby ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_DisconnectToLobby__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_DisconnectToLobby, CCSUsrMsg_DisconnectToLobby.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_DisconnectToLobby__FieldAccessorTable; }
  }
  
  public const int DummyFieldNumber = 1;
  private bool hasDummy;
  private int dummy_;
  public bool HasDummy {
    get { return hasDummy; }
  }
  public int Dummy {
    get { return dummy_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgDisconnectToLobbyFieldNames;
    if (hasDummy) {
      output.WriteInt32(1, field_names[0], Dummy);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDummy) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Dummy);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_DisconnectToLobby ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_DisconnectToLobby ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_DisconnectToLobby ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_DisconnectToLobby ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_DisconnectToLobby ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_DisconnectToLobby ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_DisconnectToLobby ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_DisconnectToLobby ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_DisconnectToLobby ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_DisconnectToLobby ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_DisconnectToLobby MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_DisconnectToLobby prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_DisconnectToLobby, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_DisconnectToLobby cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_DisconnectToLobby result;
    
    private CCSUsrMsg_DisconnectToLobby PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_DisconnectToLobby original = result;
        result = new CCSUsrMsg_DisconnectToLobby();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_DisconnectToLobby MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_DisconnectToLobby.Descriptor; }
    }
    
    public override CCSUsrMsg_DisconnectToLobby DefaultInstanceForType {
      get { return global::CCSUsrMsg_DisconnectToLobby.DefaultInstance; }
    }
    
    public override CCSUsrMsg_DisconnectToLobby BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_DisconnectToLobby) {
        return MergeFrom((CCSUsrMsg_DisconnectToLobby) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_DisconnectToLobby other) {
      if (other == global::CCSUsrMsg_DisconnectToLobby.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDummy) {
        Dummy = other.Dummy;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgDisconnectToLobbyFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgDisconnectToLobbyFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDummy = input.ReadInt32(ref result.dummy_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDummy {
      get { return result.hasDummy; }
    }
    public int Dummy {
      get { return result.Dummy; }
      set { SetDummy(value); }
    }
    public Builder SetDummy(int value) {
      PrepareBuilder();
      result.hasDummy = true;
      result.dummy_ = value;
      return this;
    }
    public Builder ClearDummy() {
      PrepareBuilder();
      result.hasDummy = false;
      result.dummy_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_DisconnectToLobby() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_WarmupHasEnded : pb::GeneratedMessage<CCSUsrMsg_WarmupHasEnded, CCSUsrMsg_WarmupHasEnded.Builder> {
  private CCSUsrMsg_WarmupHasEnded() { }
  private static readonly CCSUsrMsg_WarmupHasEnded defaultInstance = new CCSUsrMsg_WarmupHasEnded().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgWarmupHasEndedFieldNames = new string[] { "dummy" };
  private static readonly uint[] _cCSUsrMsgWarmupHasEndedFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_WarmupHasEnded DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_WarmupHasEnded DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_WarmupHasEnded ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_WarmupHasEnded__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_WarmupHasEnded, CCSUsrMsg_WarmupHasEnded.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_WarmupHasEnded__FieldAccessorTable; }
  }
  
  public const int DummyFieldNumber = 1;
  private bool hasDummy;
  private int dummy_;
  public bool HasDummy {
    get { return hasDummy; }
  }
  public int Dummy {
    get { return dummy_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgWarmupHasEndedFieldNames;
    if (hasDummy) {
      output.WriteInt32(1, field_names[0], Dummy);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDummy) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Dummy);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_WarmupHasEnded ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_WarmupHasEnded ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_WarmupHasEnded ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_WarmupHasEnded ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_WarmupHasEnded ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_WarmupHasEnded ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_WarmupHasEnded ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_WarmupHasEnded ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_WarmupHasEnded ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_WarmupHasEnded ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_WarmupHasEnded MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_WarmupHasEnded prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_WarmupHasEnded, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_WarmupHasEnded cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_WarmupHasEnded result;
    
    private CCSUsrMsg_WarmupHasEnded PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_WarmupHasEnded original = result;
        result = new CCSUsrMsg_WarmupHasEnded();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_WarmupHasEnded MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_WarmupHasEnded.Descriptor; }
    }
    
    public override CCSUsrMsg_WarmupHasEnded DefaultInstanceForType {
      get { return global::CCSUsrMsg_WarmupHasEnded.DefaultInstance; }
    }
    
    public override CCSUsrMsg_WarmupHasEnded BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_WarmupHasEnded) {
        return MergeFrom((CCSUsrMsg_WarmupHasEnded) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_WarmupHasEnded other) {
      if (other == global::CCSUsrMsg_WarmupHasEnded.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDummy) {
        Dummy = other.Dummy;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgWarmupHasEndedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgWarmupHasEndedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDummy = input.ReadInt32(ref result.dummy_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDummy {
      get { return result.hasDummy; }
    }
    public int Dummy {
      get { return result.Dummy; }
      set { SetDummy(value); }
    }
    public Builder SetDummy(int value) {
      PrepareBuilder();
      result.hasDummy = true;
      result.dummy_ = value;
      return this;
    }
    public Builder ClearDummy() {
      PrepareBuilder();
      result.hasDummy = false;
      result.dummy_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_WarmupHasEnded() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_ClientInfo : pb::GeneratedMessage<CCSUsrMsg_ClientInfo, CCSUsrMsg_ClientInfo.Builder> {
  private CCSUsrMsg_ClientInfo() { }
  private static readonly CCSUsrMsg_ClientInfo defaultInstance = new CCSUsrMsg_ClientInfo().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgClientInfoFieldNames = new string[] { "dummy" };
  private static readonly uint[] _cCSUsrMsgClientInfoFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_ClientInfo DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_ClientInfo DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_ClientInfo ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ClientInfo__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_ClientInfo, CCSUsrMsg_ClientInfo.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ClientInfo__FieldAccessorTable; }
  }
  
  public const int DummyFieldNumber = 1;
  private bool hasDummy;
  private int dummy_;
  public bool HasDummy {
    get { return hasDummy; }
  }
  public int Dummy {
    get { return dummy_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgClientInfoFieldNames;
    if (hasDummy) {
      output.WriteInt32(1, field_names[0], Dummy);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDummy) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Dummy);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_ClientInfo ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ClientInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ClientInfo ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ClientInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ClientInfo ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ClientInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ClientInfo ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_ClientInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_ClientInfo ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ClientInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_ClientInfo MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_ClientInfo prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_ClientInfo, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_ClientInfo cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_ClientInfo result;
    
    private CCSUsrMsg_ClientInfo PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_ClientInfo original = result;
        result = new CCSUsrMsg_ClientInfo();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_ClientInfo MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_ClientInfo.Descriptor; }
    }
    
    public override CCSUsrMsg_ClientInfo DefaultInstanceForType {
      get { return global::CCSUsrMsg_ClientInfo.DefaultInstance; }
    }
    
    public override CCSUsrMsg_ClientInfo BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_ClientInfo) {
        return MergeFrom((CCSUsrMsg_ClientInfo) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_ClientInfo other) {
      if (other == global::CCSUsrMsg_ClientInfo.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDummy) {
        Dummy = other.Dummy;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgClientInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgClientInfoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDummy = input.ReadInt32(ref result.dummy_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDummy {
      get { return result.hasDummy; }
    }
    public int Dummy {
      get { return result.Dummy; }
      set { SetDummy(value); }
    }
    public Builder SetDummy(int value) {
      PrepareBuilder();
      result.hasDummy = true;
      result.dummy_ = value;
      return this;
    }
    public Builder ClearDummy() {
      PrepareBuilder();
      result.hasDummy = false;
      result.dummy_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_ClientInfo() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CCSUsrMsg_ServerRankRevealAll : pb::GeneratedMessage<CCSUsrMsg_ServerRankRevealAll, CCSUsrMsg_ServerRankRevealAll.Builder> {
  private CCSUsrMsg_ServerRankRevealAll() { }
  private static readonly CCSUsrMsg_ServerRankRevealAll defaultInstance = new CCSUsrMsg_ServerRankRevealAll().MakeReadOnly();
  private static readonly string[] _cCSUsrMsgServerRankRevealAllFieldNames = new string[] { "seconds_till_shutdown" };
  private static readonly uint[] _cCSUsrMsgServerRankRevealAllFieldTags = new uint[] { 8 };
  public static CCSUsrMsg_ServerRankRevealAll DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CCSUsrMsg_ServerRankRevealAll DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CCSUsrMsg_ServerRankRevealAll ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ServerRankRevealAll__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CCSUsrMsg_ServerRankRevealAll, CCSUsrMsg_ServerRankRevealAll.Builder> InternalFieldAccessors {
    get { return global::Cstrike15Usermessages.internal__static_CCSUsrMsg_ServerRankRevealAll__FieldAccessorTable; }
  }
  
  public const int SecondsTillShutdownFieldNumber = 1;
  private bool hasSecondsTillShutdown;
  private int secondsTillShutdown_;
  public bool HasSecondsTillShutdown {
    get { return hasSecondsTillShutdown; }
  }
  public int SecondsTillShutdown {
    get { return secondsTillShutdown_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cCSUsrMsgServerRankRevealAllFieldNames;
    if (hasSecondsTillShutdown) {
      output.WriteInt32(1, field_names[0], SecondsTillShutdown);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSecondsTillShutdown) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, SecondsTillShutdown);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CCSUsrMsg_ServerRankRevealAll ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankRevealAll ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankRevealAll ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankRevealAll ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankRevealAll ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankRevealAll ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankRevealAll ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankRevealAll ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankRevealAll ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CCSUsrMsg_ServerRankRevealAll ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CCSUsrMsg_ServerRankRevealAll MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CCSUsrMsg_ServerRankRevealAll prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CCSUsrMsg_ServerRankRevealAll, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CCSUsrMsg_ServerRankRevealAll cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CCSUsrMsg_ServerRankRevealAll result;
    
    private CCSUsrMsg_ServerRankRevealAll PrepareBuilder() {
      if (resultIsReadOnly) {
        CCSUsrMsg_ServerRankRevealAll original = result;
        result = new CCSUsrMsg_ServerRankRevealAll();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CCSUsrMsg_ServerRankRevealAll MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CCSUsrMsg_ServerRankRevealAll.Descriptor; }
    }
    
    public override CCSUsrMsg_ServerRankRevealAll DefaultInstanceForType {
      get { return global::CCSUsrMsg_ServerRankRevealAll.DefaultInstance; }
    }
    
    public override CCSUsrMsg_ServerRankRevealAll BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CCSUsrMsg_ServerRankRevealAll) {
        return MergeFrom((CCSUsrMsg_ServerRankRevealAll) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CCSUsrMsg_ServerRankRevealAll other) {
      if (other == global::CCSUsrMsg_ServerRankRevealAll.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSecondsTillShutdown) {
        SecondsTillShutdown = other.SecondsTillShutdown;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cCSUsrMsgServerRankRevealAllFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cCSUsrMsgServerRankRevealAllFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSecondsTillShutdown = input.ReadInt32(ref result.secondsTillShutdown_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSecondsTillShutdown {
      get { return result.hasSecondsTillShutdown; }
    }
    public int SecondsTillShutdown {
      get { return result.SecondsTillShutdown; }
      set { SetSecondsTillShutdown(value); }
    }
    public Builder SetSecondsTillShutdown(int value) {
      PrepareBuilder();
      result.hasSecondsTillShutdown = true;
      result.secondsTillShutdown_ = value;
      return this;
    }
    public Builder ClearSecondsTillShutdown() {
      PrepareBuilder();
      result.hasSecondsTillShutdown = false;
      result.secondsTillShutdown_ = 0;
      return this;
    }
  }
  static CCSUsrMsg_ServerRankRevealAll() {
    object.ReferenceEquals(global::Cstrike15Usermessages.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
