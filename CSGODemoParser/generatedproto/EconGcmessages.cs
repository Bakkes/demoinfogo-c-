// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class EconGcmessages {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_CMsgGCGiftedItems__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCGiftedItems, global::CMsgGCGiftedItems.Builder> internal__static_CMsgGCGiftedItems__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgApplyAutograph__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgApplyAutograph, global::CMsgApplyAutograph.Builder> internal__static_CMsgApplyAutograph__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static EconGcmessages() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        "ChVlY29uX2djbWVzc2FnZXMucHJvdG8aE3N0ZWFtbWVzc2FnZXMucHJvdG8i" + 
        "mAEKEUNNc2dHQ0dpZnRlZEl0ZW1zEhEKCWFjY291bnRpZBgBIAEoDRIUCgxn" + 
        "aWZ0ZGVmaW5kZXgYAiABKA0SGgoSbWF4X2dpZnRzX3Bvc3NpYmxlGAMgASgN" + 
        "Eh8KF251bV9lbGlnaWJsZV9yZWNpcGllbnRzGAQgASgNEh0KFXJlY2lwaWVu" + 
        "dHNfYWNjb3VudGlkcxgFIAMoDSJFChJDTXNnQXBwbHlBdXRvZ3JhcGgSGQoR" + 
        "YXV0b2dyYXBoX2l0ZW1faWQYASABKAQSFAoMaXRlbV9pdGVtX2lkGAIgASgE" + 
        "KromCgpFR0NJdGVtTXNnEhEKDGtfRU1zZ0dDQmFzZRDoBxIcChdrX0VNc2dH" + 
        "Q1NldEl0ZW1Qb3NpdGlvbhDpBxISCg1rX0VNc2dHQ0NyYWZ0EOoHEhoKFWtf" + 
        "RU1zZ0dDQ3JhZnRSZXNwb25zZRDrBxITCg5rX0VNc2dHQ0RlbGV0ZRDsBxIk" + 
        "Ch9rX0VNc2dHQ1ZlcmlmeUNhY2hlU3Vic2NyaXB0aW9uEO0HEhUKEGtfRU1z" + 
        "Z0dDTmFtZUl0ZW0Q7gcSGAoTa19FTXNnR0NVbmxvY2tDcmF0ZRDvBxIgChtr" + 
        "X0VNc2dHQ1VubG9ja0NyYXRlUmVzcG9uc2UQ8AcSFgoRa19FTXNnR0NQYWlu" + 
        "dEl0ZW0Q8QcSHgoZa19FTXNnR0NQYWludEl0ZW1SZXNwb25zZRDyBxIiCh1r" + 
        "X0VNc2dHQ0dvbGRlbldyZW5jaEJyb2FkY2FzdBDzBxIYChNrX0VNc2dHQ01P" + 
        "VERSZXF1ZXN0EPQHEiAKG2tfRU1zZ0dDTU9URFJlcXVlc3RSZXNwb25zZRD1" + 
        "BxInCiJrX0VNc2dHQ0FkZEl0ZW1Ub1NvY2tldF9ERVBSRUNBVEVEEPYHEi8K" + 
        "KmtfRU1zZ0dDQWRkSXRlbVRvU29ja2V0UmVzcG9uc2VfREVQUkVDQVRFRBD3" + 
        "BxIrCiZrX0VNc2dHQ0FkZFNvY2tldFRvQmFzZUl0ZW1fREVQUkVDQVRFRBD4" + 
        "BxInCiJrX0VNc2dHQ0FkZFNvY2tldFRvSXRlbV9ERVBSRUNBVEVEEPkHEi8K" + 
        "KmtfRU1zZ0dDQWRkU29ja2V0VG9JdGVtUmVzcG9uc2VfREVQUkVDQVRFRBD6" + 
        "BxIZChRrX0VNc2dHQ05hbWVCYXNlSXRlbRD7BxIhChxrX0VNc2dHQ05hbWVC" + 
        "YXNlSXRlbVJlc3BvbnNlEPwHEigKI2tfRU1zZ0dDUmVtb3ZlU29ja2V0SXRl" + 
        "bV9ERVBSRUNBVEVEEP0HEjAKK2tfRU1zZ0dDUmVtb3ZlU29ja2V0SXRlbVJl" + 
        "c3BvbnNlX0RFUFJFQ0FURUQQ/gcSIQoca19FTXNnR0NDdXN0b21pemVJdGVt" + 
        "VGV4dHVyZRD/BxIpCiRrX0VNc2dHQ0N1c3RvbWl6ZUl0ZW1UZXh0dXJlUmVz" + 
        "cG9uc2UQgAgSGwoWa19FTXNnR0NVc2VJdGVtUmVxdWVzdBCBCBIcChdrX0VN" + 
        "c2dHQ1VzZUl0ZW1SZXNwb25zZRCCCBIjCh5rX0VNc2dHQ0dpZnRlZEl0ZW1z" + 
        "X0RFUFJFQ0FURUQQgwgSGwoWa19FTXNnR0NSZW1vdmVJdGVtTmFtZRCGCBIc" + 
        "ChdrX0VNc2dHQ1JlbW92ZUl0ZW1QYWludBCHCBIZChRrX0VNc2dHQ0dpZnRX" + 
        "cmFwSXRlbRCICBIhChxrX0VNc2dHQ0dpZnRXcmFwSXRlbVJlc3BvbnNlEIkI" + 
        "EhgKE2tfRU1zZ0dDRGVsaXZlckdpZnQQiggSJQoga19FTXNnR0NEZWxpdmVy" + 
        "R2lmdFJlc3BvbnNlR2l2ZXIQiwgSKAoja19FTXNnR0NEZWxpdmVyR2lmdFJl" + 
        "c3BvbnNlUmVjZWl2ZXIQjAgSHgoZa19FTXNnR0NVbndyYXBHaWZ0UmVxdWVz" + 
        "dBCNCBIfChprX0VNc2dHQ1Vud3JhcEdpZnRSZXNwb25zZRCOCBIZChRrX0VN" + 
        "c2dHQ1NldEl0ZW1TdHlsZRCPCBIeChlrX0VNc2dHQ1VzZWRDbGFpbUNvZGVJ" + 
        "dGVtEJAIEhYKEWtfRU1zZ0dDU29ydEl0ZW1zEJEIEioKJWtfRU1zZ0dDX1Jl" + 
        "dm9sdmluZ0xvb3RMaXN0X0RFUFJFQ0FURUQQkggSGgoVa19FTXNnR0NMb29r" + 
        "dXBBY2NvdW50EJMIEiIKHWtfRU1zZ0dDTG9va3VwQWNjb3VudFJlc3BvbnNl" + 
        "EJQIEh4KGWtfRU1zZ0dDTG9va3VwQWNjb3VudE5hbWUQlQgSJgoha19FTXNn" + 
        "R0NMb29rdXBBY2NvdW50TmFtZVJlc3BvbnNlEJYIEh0KGGtfRU1zZ0dDVXBk" + 
        "YXRlSXRlbVNjaGVtYRCZCBIgChtrX0VNc2dHQ1JlbW92ZUN1c3RvbVRleHR1" + 
        "cmUQmwgSKAoja19FTXNnR0NSZW1vdmVDdXN0b21UZXh0dXJlUmVzcG9uc2UQ" + 
        "nAgSHQoYa19FTXNnR0NSZW1vdmVNYWtlcnNNYXJrEJ0IEiUKIGtfRU1zZ0dD" + 
        "UmVtb3ZlTWFrZXJzTWFya1Jlc3BvbnNlEJ4IEiMKHmtfRU1zZ0dDUmVtb3Zl" + 
        "VW5pcXVlQ3JhZnRJbmRleBCfCBIrCiZrX0VNc2dHQ1JlbW92ZVVuaXF1ZUNy" + 
        "YWZ0SW5kZXhSZXNwb25zZRCgCBIbChZrX0VNc2dHQ1NheHh5QnJvYWRjYXN0" + 
        "EKEIEiEKHGtfRU1zZ0dDQmFja3BhY2tTb3J0RmluaXNoZWQQoggSJAofa19F" + 
        "TXNnR0NBZGp1c3RJdGVtRXF1aXBwZWRTdGF0ZRCjCBIYChNrX0VNc2dHQ0Nv" + 
        "bGxlY3RJdGVtEKUIEikKJGtfRU1zZ0dDSXRlbUFja25vd2xlZGdlZF9fREVQ" + 
        "UkVDQVRFRBCmCBIpCiRrX0VNc2dHQ1ByZXNldHNfU2VsZWN0UHJlc2V0Rm9y" + 
        "Q2xhc3MQpwgSJAofa19FTXNnR0NQcmVzZXRzX1NldEl0ZW1Qb3NpdGlvbhCo" + 
        "CBIZChRrX0VNc2dHQ19SZXBvcnRBYnVzZRCpCBIhChxrX0VNc2dHQ19SZXBv" + 
        "cnRBYnVzZVJlc3BvbnNlEKoIEi4KKWtfRU1zZ0dDUHJlc2V0c19TZWxlY3RQ" + 
        "cmVzZXRGb3JDbGFzc1JlcGx5EKsIEiEKHGtfRU1zZ0dDTmFtZUl0ZW1Ob3Rp" + 
        "ZmljYXRpb24QrAgSIwoea19FTXNnR0NBcHBseUNvbnN1bWFibGVFZmZlY3Rz" + 
        "EK0IEiAKG2tfRU1zZ0dDQ29uc3VtYWJsZUV4aGF1c3RlZBCuCBIeChlrX0VN" + 
        "c2dHQ1Nob3dJdGVtc1BpY2tlZFVwEK8IEiYKIWtfRU1zZ0dDQ2xpZW50RGlz" + 
        "cGxheU5vdGlmaWNhdGlvbhCwCBIdChhrX0VNc2dHQ0FwcGx5U3RyYW5nZVBh" + 
        "cnQQsQgSKQoka19FTXNnR0NfSW5jcmVtZW50S2lsbENvdW50QXR0cmlidXRl" + 
        "ELIIEigKI2tfRU1zZ0dDX0luY3JlbWVudEtpbGxDb3VudFJlc3BvbnNlELMI" + 
        "EiAKG2tfRU1zZ0dDQXBwbHlQZW5uYW50VXBncmFkZRC0CBIdChhrX0VNc2dH" + 
        "Q1NldEl0ZW1Qb3NpdGlvbnMQtQgSHAoXa19FTXNnR0NBcHBseUVnZ0Vzc2Vu" + 
        "Y2UQtggSIwoea19FTXNnR0NOYW1lRWdnRXNzZW5jZVJlc3BvbnNlELcIEhkK" + 
        "FGtfRU1zZ0dDUGFpbnRLaXRJdGVtELgIEh0KGGtfRU1zZ0dDUGFpbnRLaXRC" + 
        "YXNlSXRlbRC5CBIhChxrX0VNc2dHQ1BhaW50S2l0SXRlbVJlc3BvbnNlELoI" + 
        "EhgKE2tfRU1zZ0dDR2lmdGVkSXRlbXMQuwgSHAoXa19FTXNnR0NVbmxvY2tJ" + 
        "dGVtU3R5bGUQvAgSJAofa19FTXNnR0NVbmxvY2tJdGVtU3R5bGVSZXNwb25z" + 
        "ZRC9CBIZChRrX0VNc2dHQ0FwcGx5U3RpY2tlchC+CBIdChhrX0VNc2dHQ0l0" + 
        "ZW1BY2tub3dsZWRnZWQQvwgSGAoTa19FTXNnR0NUcmFkaW5nQmFzZRDcCxIp" + 
        "CiRrX0VNc2dHQ1RyYWRpbmdfSW5pdGlhdGVUcmFkZVJlcXVlc3QQ3QsSKgol" + 
        "a19FTXNnR0NUcmFkaW5nX0luaXRpYXRlVHJhZGVSZXNwb25zZRDeCxIhChxr" + 
        "X0VNc2dHQ1RyYWRpbmdfU3RhcnRTZXNzaW9uEN8LEhwKF2tfRU1zZ0dDVHJh" + 
        "ZGluZ19TZXRJdGVtEOALEh8KGmtfRU1zZ0dDVHJhZGluZ19SZW1vdmVJdGVt" + 
        "EOELEiQKH2tfRU1zZ0dDVHJhZGluZ19VcGRhdGVUcmFkZUluZm8Q4gsSIQoc" + 
        "a19FTXNnR0NUcmFkaW5nX1NldFJlYWRpbmVzcxDjCxImCiFrX0VNc2dHQ1Ry" + 
        "YWRpbmdfUmVhZGluZXNzUmVzcG9uc2UQ5AsSIgoda19FTXNnR0NUcmFkaW5n" + 
        "X1Nlc3Npb25DbG9zZWQQ5QsSIgoda19FTXNnR0NUcmFkaW5nX0NhbmNlbFNl" + 
        "c3Npb24Q5gsSIQoca19FTXNnR0NUcmFkaW5nX1RyYWRlQ2hhdE1zZxDnCxIh" + 
        "ChxrX0VNc2dHQ1RyYWRpbmdfQ29uZmlybU9mZmVyEOgLEicKImtfRU1zZ0dD" + 
        "VHJhZGluZ19UcmFkZVR5cGluZ0NoYXRNc2cQ6QsSKQoka19FTXNnR0NTZXJ2" + 
        "ZXJCcm93c2VyX0Zhdm9yaXRlU2VydmVyEMEMEioKJWtfRU1zZ0dDU2VydmVy" + 
        "QnJvd3Nlcl9CbGFja2xpc3RTZXJ2ZXIQwgwSHgoZa19FTXNnR0NTZXJ2ZXJS" + 
        "ZW50YWxzQmFzZRCkDRIjCh5rX0VNc2dHQ0l0ZW1QcmV2aWV3Q2hlY2tTdGF0" + 
        "dXMQpQ0SJgoha19FTXNnR0NJdGVtUHJldmlld1N0YXR1c1Jlc3BvbnNlEKYN" + 
        "Eh8KGmtfRU1zZ0dDSXRlbVByZXZpZXdSZXF1ZXN0EKcNEicKImtfRU1zZ0dD" + 
        "SXRlbVByZXZpZXdSZXF1ZXN0UmVzcG9uc2UQqA0SHgoZa19FTXNnR0NJdGVt" + 
        "UHJldmlld0V4cGlyZRCpDRIqCiVrX0VNc2dHQ0l0ZW1QcmV2aWV3RXhwaXJl" + 
        "Tm90aWZpY2F0aW9uEKoNEi4KKWtfRU1zZ0dDSXRlbVByZXZpZXdJdGVtQm91" + 
        "Z2h0Tm90aWZpY2F0aW9uEKsNEh8KGmtfRU1zZ0dDRGV2X05ld0l0ZW1SZXF1" + 
        "ZXN0ENEPEicKImtfRU1zZ0dDRGV2X05ld0l0ZW1SZXF1ZXN0UmVzcG9uc2UQ" + 
        "0g8SIQoca19FTXNnR0NEZXZfUGFpbnRLaXREcm9wSXRlbRDTDxIdChhrX0VN" + 
        "c2dHQ1N0b3JlR2V0VXNlckRhdGEQxBMSJQoga19FTXNnR0NTdG9yZUdldFVz" + 
        "ZXJEYXRhUmVzcG9uc2UQxRMSKQoka19FTXNnR0NTdG9yZVB1cmNoYXNlSW5p" + 
        "dF9ERVBSRUNBVEVEEMYTEjEKLGtfRU1zZ0dDU3RvcmVQdXJjaGFzZUluaXRS" + 
        "ZXNwb25zZV9ERVBSRUNBVEVEEMcTEiIKHWtfRU1zZ0dDU3RvcmVQdXJjaGFz" + 
        "ZUZpbmFsaXplEMgTEioKJWtfRU1zZ0dDU3RvcmVQdXJjaGFzZUZpbmFsaXpl" + 
        "UmVzcG9uc2UQyRMSIAoba19FTXNnR0NTdG9yZVB1cmNoYXNlQ2FuY2VsEMoT" + 
        "EigKI2tfRU1zZ0dDU3RvcmVQdXJjaGFzZUNhbmNlbFJlc3BvbnNlEMsTEiIK" + 
        "HWtfRU1zZ0dDU3RvcmVQdXJjaGFzZVF1ZXJ5VHhuEMwTEioKJWtfRU1zZ0dD" + 
        "U3RvcmVQdXJjaGFzZVF1ZXJ5VHhuUmVzcG9uc2UQzRMSHgoZa19FTXNnR0NT" + 
        "dG9yZVB1cmNoYXNlSW5pdBDOExImCiFrX0VNc2dHQ1N0b3JlUHVyY2hhc2VJ" + 
        "bml0UmVzcG9uc2UQzxMSIgoda19FTXNnR0NCYW5uZWRXb3JkTGlzdFJlcXVl" + 
        "c3QQ0BMSIwoea19FTXNnR0NCYW5uZWRXb3JkTGlzdFJlc3BvbnNlENETEigK" + 
        "I2tfRU1zZ0dDVG9HQ0Jhbm5lZFdvcmRMaXN0QnJvYWRjYXN0ENITEiYKIWtf" + 
        "RU1zZ0dDVG9HQ0Jhbm5lZFdvcmRMaXN0VXBkYXRlZBDTExIeChlrX0VNc2dH" + 
        "Q1RvR0NEaXJ0eVNET0NhY2hlENQTEiYKIWtfRU1zZ0dDVG9HQ0RpcnR5TXVs" + 
        "dGlwbGVTRE9DYWNoZRDVExIiCh1rX0VNc2dHQ1RvR0NVcGRhdGVTUUxLZXlW" + 
        "YWx1ZRDWExIgChtrX0VNc2dHQ1RvR0NJc1RydXN0ZWRTZXJ2ZXIQ1xMSKAoj" + 
        "a19FTXNnR0NUb0dDSXNUcnVzdGVkU2VydmVyUmVzcG9uc2UQ2BMSKAoja19F" + 
        "TXNnR0NUb0dDQnJvYWRjYXN0Q29uc29sZUNvbW1hbmQQ2RMSIQoca19FTXNn" + 
        "R0NTZXJ2ZXJWZXJzaW9uVXBkYXRlZBDaExIbChZrX0VNc2dHQ0FwcGx5QXV0" + 
        "b2dyYXBoENsTEiUKIGtfRU1zZ0dDVG9HQ1dlYkFQSUFjY291bnRDaGFuZ2Vk" + 
        "ENwTEiEKHGtfRU1zZ0dDUmVxdWVzdEFubm91bmNlbWVudHMQ3RMSKQoka19F" + 
        "TXNnR0NSZXF1ZXN0QW5ub3VuY2VtZW50c1Jlc3BvbnNlEN4TEiUKIGtfRU1z" + 
        "Z0dDUmVxdWVzdFBhc3Nwb3J0SXRlbUdyYW50EN8TEiEKHGtfRU1zZ0dDQ2xp" + 
        "ZW50VmVyc2lvblVwZGF0ZWQQ4BMqmwIKDkVHQ01zZ1Jlc3BvbnNlEhYKEmtf" + 
        "RUdDTXNnUmVzcG9uc2VPSxAAEhoKFmtfRUdDTXNnUmVzcG9uc2VEZW5pZWQQ" + 
        "ARIfChtrX0VHQ01zZ1Jlc3BvbnNlU2VydmVyRXJyb3IQAhIbChdrX0VHQ01z" + 
        "Z1Jlc3BvbnNlVGltZW91dBADEhsKF2tfRUdDTXNnUmVzcG9uc2VJbnZhbGlk" + 
        "EAQSGwoXa19FR0NNc2dSZXNwb25zZU5vTWF0Y2gQBRIgChxrX0VHQ01zZ1Jl" + 
        "c3BvbnNlVW5rbm93bkVycm9yEAYSHwoba19FR0NNc2dSZXNwb25zZU5vdExv" + 
        "Z2dlZE9uEAcSGgoWa19FR0NNc2dGYWlsZWRUb0NyZWF0ZRAIKukBCgxFVW5s" + 
        "b2NrU3R5bGUSGwoXa19VbmxvY2tTdHlsZV9TdWNjZWVkZWQQABIfChtrX1Vu" + 
        "bG9ja1N0eWxlX0ZhaWxlZF9QcmVSZXEQARIjCh9rX1VubG9ja1N0eWxlX0Zh" + 
        "aWxlZF9DYW50QWZmb3JkEAISIwofa19VbmxvY2tTdHlsZV9GYWlsZWRfQ2Fu" + 
        "dENvbW1pdBADEiYKImtfVW5sb2NrU3R5bGVfRmFpbGVkX0NhbnRMb2NrQ2Fj" + 
        "aGUQBBIpCiVrX1VubG9ja1N0eWxlX0ZhaWxlZF9DYW50QWZmb3JkQXR0cmli" + 
        "EAU=");
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_CMsgGCGiftedItems__Descriptor = Descriptor.MessageTypes[0];
      internal__static_CMsgGCGiftedItems__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCGiftedItems, global::CMsgGCGiftedItems.Builder>(internal__static_CMsgGCGiftedItems__Descriptor,
              new string[] { "Accountid", "Giftdefindex", "MaxGiftsPossible", "NumEligibleRecipients", "RecipientsAccountids", });
      internal__static_CMsgApplyAutograph__Descriptor = Descriptor.MessageTypes[1];
      internal__static_CMsgApplyAutograph__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgApplyAutograph, global::CMsgApplyAutograph.Builder>(internal__static_CMsgApplyAutograph__Descriptor,
              new string[] { "AutographItemId", "ItemItemId", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        global::Steammessages.Descriptor, 
        }, assigner);
  }
  #endregion
  
}
#region Enums
public enum EGCItemMsg {
  k_EMsgGCBase = 1000,
  k_EMsgGCSetItemPosition = 1001,
  k_EMsgGCCraft = 1002,
  k_EMsgGCCraftResponse = 1003,
  k_EMsgGCDelete = 1004,
  k_EMsgGCVerifyCacheSubscription = 1005,
  k_EMsgGCNameItem = 1006,
  k_EMsgGCUnlockCrate = 1007,
  k_EMsgGCUnlockCrateResponse = 1008,
  k_EMsgGCPaintItem = 1009,
  k_EMsgGCPaintItemResponse = 1010,
  k_EMsgGCGoldenWrenchBroadcast = 1011,
  k_EMsgGCMOTDRequest = 1012,
  k_EMsgGCMOTDRequestResponse = 1013,
  k_EMsgGCAddItemToSocket_DEPRECATED = 1014,
  k_EMsgGCAddItemToSocketResponse_DEPRECATED = 1015,
  k_EMsgGCAddSocketToBaseItem_DEPRECATED = 1016,
  k_EMsgGCAddSocketToItem_DEPRECATED = 1017,
  k_EMsgGCAddSocketToItemResponse_DEPRECATED = 1018,
  k_EMsgGCNameBaseItem = 1019,
  k_EMsgGCNameBaseItemResponse = 1020,
  k_EMsgGCRemoveSocketItem_DEPRECATED = 1021,
  k_EMsgGCRemoveSocketItemResponse_DEPRECATED = 1022,
  k_EMsgGCCustomizeItemTexture = 1023,
  k_EMsgGCCustomizeItemTextureResponse = 1024,
  k_EMsgGCUseItemRequest = 1025,
  k_EMsgGCUseItemResponse = 1026,
  k_EMsgGCGiftedItems_DEPRECATED = 1027,
  k_EMsgGCRemoveItemName = 1030,
  k_EMsgGCRemoveItemPaint = 1031,
  k_EMsgGCGiftWrapItem = 1032,
  k_EMsgGCGiftWrapItemResponse = 1033,
  k_EMsgGCDeliverGift = 1034,
  k_EMsgGCDeliverGiftResponseGiver = 1035,
  k_EMsgGCDeliverGiftResponseReceiver = 1036,
  k_EMsgGCUnwrapGiftRequest = 1037,
  k_EMsgGCUnwrapGiftResponse = 1038,
  k_EMsgGCSetItemStyle = 1039,
  k_EMsgGCUsedClaimCodeItem = 1040,
  k_EMsgGCSortItems = 1041,
  k_EMsgGC_RevolvingLootList_DEPRECATED = 1042,
  k_EMsgGCLookupAccount = 1043,
  k_EMsgGCLookupAccountResponse = 1044,
  k_EMsgGCLookupAccountName = 1045,
  k_EMsgGCLookupAccountNameResponse = 1046,
  k_EMsgGCUpdateItemSchema = 1049,
  k_EMsgGCRemoveCustomTexture = 1051,
  k_EMsgGCRemoveCustomTextureResponse = 1052,
  k_EMsgGCRemoveMakersMark = 1053,
  k_EMsgGCRemoveMakersMarkResponse = 1054,
  k_EMsgGCRemoveUniqueCraftIndex = 1055,
  k_EMsgGCRemoveUniqueCraftIndexResponse = 1056,
  k_EMsgGCSaxxyBroadcast = 1057,
  k_EMsgGCBackpackSortFinished = 1058,
  k_EMsgGCAdjustItemEquippedState = 1059,
  k_EMsgGCCollectItem = 1061,
  k_EMsgGCItemAcknowledged__DEPRECATED = 1062,
  k_EMsgGCPresets_SelectPresetForClass = 1063,
  k_EMsgGCPresets_SetItemPosition = 1064,
  k_EMsgGC_ReportAbuse = 1065,
  k_EMsgGC_ReportAbuseResponse = 1066,
  k_EMsgGCPresets_SelectPresetForClassReply = 1067,
  k_EMsgGCNameItemNotification = 1068,
  k_EMsgGCApplyConsumableEffects = 1069,
  k_EMsgGCConsumableExhausted = 1070,
  k_EMsgGCShowItemsPickedUp = 1071,
  k_EMsgGCClientDisplayNotification = 1072,
  k_EMsgGCApplyStrangePart = 1073,
  k_EMsgGC_IncrementKillCountAttribute = 1074,
  k_EMsgGC_IncrementKillCountResponse = 1075,
  k_EMsgGCApplyPennantUpgrade = 1076,
  k_EMsgGCSetItemPositions = 1077,
  k_EMsgGCApplyEggEssence = 1078,
  k_EMsgGCNameEggEssenceResponse = 1079,
  k_EMsgGCPaintKitItem = 1080,
  k_EMsgGCPaintKitBaseItem = 1081,
  k_EMsgGCPaintKitItemResponse = 1082,
  k_EMsgGCGiftedItems = 1083,
  k_EMsgGCUnlockItemStyle = 1084,
  k_EMsgGCUnlockItemStyleResponse = 1085,
  k_EMsgGCApplySticker = 1086,
  k_EMsgGCItemAcknowledged = 1087,
  k_EMsgGCTradingBase = 1500,
  k_EMsgGCTrading_InitiateTradeRequest = 1501,
  k_EMsgGCTrading_InitiateTradeResponse = 1502,
  k_EMsgGCTrading_StartSession = 1503,
  k_EMsgGCTrading_SetItem = 1504,
  k_EMsgGCTrading_RemoveItem = 1505,
  k_EMsgGCTrading_UpdateTradeInfo = 1506,
  k_EMsgGCTrading_SetReadiness = 1507,
  k_EMsgGCTrading_ReadinessResponse = 1508,
  k_EMsgGCTrading_SessionClosed = 1509,
  k_EMsgGCTrading_CancelSession = 1510,
  k_EMsgGCTrading_TradeChatMsg = 1511,
  k_EMsgGCTrading_ConfirmOffer = 1512,
  k_EMsgGCTrading_TradeTypingChatMsg = 1513,
  k_EMsgGCServerBrowser_FavoriteServer = 1601,
  k_EMsgGCServerBrowser_BlacklistServer = 1602,
  k_EMsgGCServerRentalsBase = 1700,
  k_EMsgGCItemPreviewCheckStatus = 1701,
  k_EMsgGCItemPreviewStatusResponse = 1702,
  k_EMsgGCItemPreviewRequest = 1703,
  k_EMsgGCItemPreviewRequestResponse = 1704,
  k_EMsgGCItemPreviewExpire = 1705,
  k_EMsgGCItemPreviewExpireNotification = 1706,
  k_EMsgGCItemPreviewItemBoughtNotification = 1707,
  k_EMsgGCDev_NewItemRequest = 2001,
  k_EMsgGCDev_NewItemRequestResponse = 2002,
  k_EMsgGCDev_PaintKitDropItem = 2003,
  k_EMsgGCStoreGetUserData = 2500,
  k_EMsgGCStoreGetUserDataResponse = 2501,
  k_EMsgGCStorePurchaseInit_DEPRECATED = 2502,
  k_EMsgGCStorePurchaseInitResponse_DEPRECATED = 2503,
  k_EMsgGCStorePurchaseFinalize = 2504,
  k_EMsgGCStorePurchaseFinalizeResponse = 2505,
  k_EMsgGCStorePurchaseCancel = 2506,
  k_EMsgGCStorePurchaseCancelResponse = 2507,
  k_EMsgGCStorePurchaseQueryTxn = 2508,
  k_EMsgGCStorePurchaseQueryTxnResponse = 2509,
  k_EMsgGCStorePurchaseInit = 2510,
  k_EMsgGCStorePurchaseInitResponse = 2511,
  k_EMsgGCBannedWordListRequest = 2512,
  k_EMsgGCBannedWordListResponse = 2513,
  k_EMsgGCToGCBannedWordListBroadcast = 2514,
  k_EMsgGCToGCBannedWordListUpdated = 2515,
  k_EMsgGCToGCDirtySDOCache = 2516,
  k_EMsgGCToGCDirtyMultipleSDOCache = 2517,
  k_EMsgGCToGCUpdateSQLKeyValue = 2518,
  k_EMsgGCToGCIsTrustedServer = 2519,
  k_EMsgGCToGCIsTrustedServerResponse = 2520,
  k_EMsgGCToGCBroadcastConsoleCommand = 2521,
  k_EMsgGCServerVersionUpdated = 2522,
  k_EMsgGCApplyAutograph = 2523,
  k_EMsgGCToGCWebAPIAccountChanged = 2524,
  k_EMsgGCRequestAnnouncements = 2525,
  k_EMsgGCRequestAnnouncementsResponse = 2526,
  k_EMsgGCRequestPassportItemGrant = 2527,
  k_EMsgGCClientVersionUpdated = 2528,
}

public enum EGCMsgResponse {
  k_EGCMsgResponseOK = 0,
  k_EGCMsgResponseDenied = 1,
  k_EGCMsgResponseServerError = 2,
  k_EGCMsgResponseTimeout = 3,
  k_EGCMsgResponseInvalid = 4,
  k_EGCMsgResponseNoMatch = 5,
  k_EGCMsgResponseUnknownError = 6,
  k_EGCMsgResponseNotLoggedOn = 7,
  k_EGCMsgFailedToCreate = 8,
}

public enum EUnlockStyle {
  k_UnlockStyle_Succeeded = 0,
  k_UnlockStyle_Failed_PreReq = 1,
  k_UnlockStyle_Failed_CantAfford = 2,
  k_UnlockStyle_Failed_CantCommit = 3,
  k_UnlockStyle_Failed_CantLockCache = 4,
  k_UnlockStyle_Failed_CantAffordAttrib = 5,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCGiftedItems : pb::GeneratedMessage<CMsgGCGiftedItems, CMsgGCGiftedItems.Builder> {
  private CMsgGCGiftedItems() { }
  private static readonly CMsgGCGiftedItems defaultInstance = new CMsgGCGiftedItems().MakeReadOnly();
  private static readonly string[] _cMsgGCGiftedItemsFieldNames = new string[] { "accountid", "giftdefindex", "max_gifts_possible", "num_eligible_recipients", "recipients_accountids" };
  private static readonly uint[] _cMsgGCGiftedItemsFieldTags = new uint[] { 8, 16, 24, 32, 40 };
  public static CMsgGCGiftedItems DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCGiftedItems DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCGiftedItems ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::EconGcmessages.internal__static_CMsgGCGiftedItems__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCGiftedItems, CMsgGCGiftedItems.Builder> InternalFieldAccessors {
    get { return global::EconGcmessages.internal__static_CMsgGCGiftedItems__FieldAccessorTable; }
  }
  
  public const int AccountidFieldNumber = 1;
  private bool hasAccountid;
  private uint accountid_;
  public bool HasAccountid {
    get { return hasAccountid; }
  }
  [global::System.CLSCompliant(false)]
  public uint Accountid {
    get { return accountid_; }
  }
  
  public const int GiftdefindexFieldNumber = 2;
  private bool hasGiftdefindex;
  private uint giftdefindex_;
  public bool HasGiftdefindex {
    get { return hasGiftdefindex; }
  }
  [global::System.CLSCompliant(false)]
  public uint Giftdefindex {
    get { return giftdefindex_; }
  }
  
  public const int MaxGiftsPossibleFieldNumber = 3;
  private bool hasMaxGiftsPossible;
  private uint maxGiftsPossible_;
  public bool HasMaxGiftsPossible {
    get { return hasMaxGiftsPossible; }
  }
  [global::System.CLSCompliant(false)]
  public uint MaxGiftsPossible {
    get { return maxGiftsPossible_; }
  }
  
  public const int NumEligibleRecipientsFieldNumber = 4;
  private bool hasNumEligibleRecipients;
  private uint numEligibleRecipients_;
  public bool HasNumEligibleRecipients {
    get { return hasNumEligibleRecipients; }
  }
  [global::System.CLSCompliant(false)]
  public uint NumEligibleRecipients {
    get { return numEligibleRecipients_; }
  }
  
  public const int RecipientsAccountidsFieldNumber = 5;
  private pbc::PopsicleList<uint> recipientsAccountids_ = new pbc::PopsicleList<uint>();
  [global::System.CLSCompliant(false)]
  public scg::IList<uint> RecipientsAccountidsList {
    get { return pbc::Lists.AsReadOnly(recipientsAccountids_); }
  }
  public int RecipientsAccountidsCount {
    get { return recipientsAccountids_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public uint GetRecipientsAccountids(int index) {
    return recipientsAccountids_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCGiftedItemsFieldNames;
    if (hasAccountid) {
      output.WriteUInt32(1, field_names[0], Accountid);
    }
    if (hasGiftdefindex) {
      output.WriteUInt32(2, field_names[1], Giftdefindex);
    }
    if (hasMaxGiftsPossible) {
      output.WriteUInt32(3, field_names[2], MaxGiftsPossible);
    }
    if (hasNumEligibleRecipients) {
      output.WriteUInt32(4, field_names[3], NumEligibleRecipients);
    }
    if (recipientsAccountids_.Count > 0) {
      output.WriteUInt32Array(5, field_names[4], recipientsAccountids_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Accountid);
      }
      if (hasGiftdefindex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Giftdefindex);
      }
      if (hasMaxGiftsPossible) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, MaxGiftsPossible);
      }
      if (hasNumEligibleRecipients) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, NumEligibleRecipients);
      }
      {
        int dataSize = 0;
        foreach (uint element in RecipientsAccountidsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * recipientsAccountids_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCGiftedItems ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGiftedItems ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGiftedItems ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGiftedItems ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGiftedItems ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGiftedItems ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGiftedItems ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCGiftedItems ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCGiftedItems ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGiftedItems ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCGiftedItems MakeReadOnly() {
    recipientsAccountids_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCGiftedItems prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCGiftedItems, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCGiftedItems cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCGiftedItems result;
    
    private CMsgGCGiftedItems PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCGiftedItems original = result;
        result = new CMsgGCGiftedItems();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCGiftedItems MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCGiftedItems.Descriptor; }
    }
    
    public override CMsgGCGiftedItems DefaultInstanceForType {
      get { return global::CMsgGCGiftedItems.DefaultInstance; }
    }
    
    public override CMsgGCGiftedItems BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCGiftedItems) {
        return MergeFrom((CMsgGCGiftedItems) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCGiftedItems other) {
      if (other == global::CMsgGCGiftedItems.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAccountid) {
        Accountid = other.Accountid;
      }
      if (other.HasGiftdefindex) {
        Giftdefindex = other.Giftdefindex;
      }
      if (other.HasMaxGiftsPossible) {
        MaxGiftsPossible = other.MaxGiftsPossible;
      }
      if (other.HasNumEligibleRecipients) {
        NumEligibleRecipients = other.NumEligibleRecipients;
      }
      if (other.recipientsAccountids_.Count != 0) {
        result.recipientsAccountids_.Add(other.recipientsAccountids_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCGiftedItemsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCGiftedItemsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAccountid = input.ReadUInt32(ref result.accountid_);
            break;
          }
          case 16: {
            result.hasGiftdefindex = input.ReadUInt32(ref result.giftdefindex_);
            break;
          }
          case 24: {
            result.hasMaxGiftsPossible = input.ReadUInt32(ref result.maxGiftsPossible_);
            break;
          }
          case 32: {
            result.hasNumEligibleRecipients = input.ReadUInt32(ref result.numEligibleRecipients_);
            break;
          }
          case 42:
          case 40: {
            input.ReadUInt32Array(tag, field_name, result.recipientsAccountids_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAccountid {
      get { return result.hasAccountid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Accountid {
      get { return result.Accountid; }
      set { SetAccountid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAccountid(uint value) {
      PrepareBuilder();
      result.hasAccountid = true;
      result.accountid_ = value;
      return this;
    }
    public Builder ClearAccountid() {
      PrepareBuilder();
      result.hasAccountid = false;
      result.accountid_ = 0;
      return this;
    }
    
    public bool HasGiftdefindex {
      get { return result.hasGiftdefindex; }
    }
    [global::System.CLSCompliant(false)]
    public uint Giftdefindex {
      get { return result.Giftdefindex; }
      set { SetGiftdefindex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGiftdefindex(uint value) {
      PrepareBuilder();
      result.hasGiftdefindex = true;
      result.giftdefindex_ = value;
      return this;
    }
    public Builder ClearGiftdefindex() {
      PrepareBuilder();
      result.hasGiftdefindex = false;
      result.giftdefindex_ = 0;
      return this;
    }
    
    public bool HasMaxGiftsPossible {
      get { return result.hasMaxGiftsPossible; }
    }
    [global::System.CLSCompliant(false)]
    public uint MaxGiftsPossible {
      get { return result.MaxGiftsPossible; }
      set { SetMaxGiftsPossible(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetMaxGiftsPossible(uint value) {
      PrepareBuilder();
      result.hasMaxGiftsPossible = true;
      result.maxGiftsPossible_ = value;
      return this;
    }
    public Builder ClearMaxGiftsPossible() {
      PrepareBuilder();
      result.hasMaxGiftsPossible = false;
      result.maxGiftsPossible_ = 0;
      return this;
    }
    
    public bool HasNumEligibleRecipients {
      get { return result.hasNumEligibleRecipients; }
    }
    [global::System.CLSCompliant(false)]
    public uint NumEligibleRecipients {
      get { return result.NumEligibleRecipients; }
      set { SetNumEligibleRecipients(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetNumEligibleRecipients(uint value) {
      PrepareBuilder();
      result.hasNumEligibleRecipients = true;
      result.numEligibleRecipients_ = value;
      return this;
    }
    public Builder ClearNumEligibleRecipients() {
      PrepareBuilder();
      result.hasNumEligibleRecipients = false;
      result.numEligibleRecipients_ = 0;
      return this;
    }
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<uint> RecipientsAccountidsList {
      get { return PrepareBuilder().recipientsAccountids_; }
    }
    public int RecipientsAccountidsCount {
      get { return result.RecipientsAccountidsCount; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetRecipientsAccountids(int index) {
      return result.GetRecipientsAccountids(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetRecipientsAccountids(int index, uint value) {
      PrepareBuilder();
      result.recipientsAccountids_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRecipientsAccountids(uint value) {
      PrepareBuilder();
      result.recipientsAccountids_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeRecipientsAccountids(scg::IEnumerable<uint> values) {
      PrepareBuilder();
      result.recipientsAccountids_.Add(values);
      return this;
    }
    public Builder ClearRecipientsAccountids() {
      PrepareBuilder();
      result.recipientsAccountids_.Clear();
      return this;
    }
  }
  static CMsgGCGiftedItems() {
    object.ReferenceEquals(global::EconGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgApplyAutograph : pb::GeneratedMessage<CMsgApplyAutograph, CMsgApplyAutograph.Builder> {
  private CMsgApplyAutograph() { }
  private static readonly CMsgApplyAutograph defaultInstance = new CMsgApplyAutograph().MakeReadOnly();
  private static readonly string[] _cMsgApplyAutographFieldNames = new string[] { "autograph_item_id", "item_item_id" };
  private static readonly uint[] _cMsgApplyAutographFieldTags = new uint[] { 8, 16 };
  public static CMsgApplyAutograph DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgApplyAutograph DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgApplyAutograph ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::EconGcmessages.internal__static_CMsgApplyAutograph__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgApplyAutograph, CMsgApplyAutograph.Builder> InternalFieldAccessors {
    get { return global::EconGcmessages.internal__static_CMsgApplyAutograph__FieldAccessorTable; }
  }
  
  public const int AutographItemIdFieldNumber = 1;
  private bool hasAutographItemId;
  private ulong autographItemId_;
  public bool HasAutographItemId {
    get { return hasAutographItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong AutographItemId {
    get { return autographItemId_; }
  }
  
  public const int ItemItemIdFieldNumber = 2;
  private bool hasItemItemId;
  private ulong itemItemId_;
  public bool HasItemItemId {
    get { return hasItemItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ItemItemId {
    get { return itemItemId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgApplyAutographFieldNames;
    if (hasAutographItemId) {
      output.WriteUInt64(1, field_names[0], AutographItemId);
    }
    if (hasItemItemId) {
      output.WriteUInt64(2, field_names[1], ItemItemId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAutographItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, AutographItemId);
      }
      if (hasItemItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, ItemItemId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgApplyAutograph ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgApplyAutograph ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyAutograph ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgApplyAutograph ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyAutograph ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgApplyAutograph ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyAutograph ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgApplyAutograph ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgApplyAutograph ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgApplyAutograph ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgApplyAutograph MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgApplyAutograph prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgApplyAutograph, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgApplyAutograph cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgApplyAutograph result;
    
    private CMsgApplyAutograph PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgApplyAutograph original = result;
        result = new CMsgApplyAutograph();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgApplyAutograph MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgApplyAutograph.Descriptor; }
    }
    
    public override CMsgApplyAutograph DefaultInstanceForType {
      get { return global::CMsgApplyAutograph.DefaultInstance; }
    }
    
    public override CMsgApplyAutograph BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgApplyAutograph) {
        return MergeFrom((CMsgApplyAutograph) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgApplyAutograph other) {
      if (other == global::CMsgApplyAutograph.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAutographItemId) {
        AutographItemId = other.AutographItemId;
      }
      if (other.HasItemItemId) {
        ItemItemId = other.ItemItemId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgApplyAutographFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgApplyAutographFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAutographItemId = input.ReadUInt64(ref result.autographItemId_);
            break;
          }
          case 16: {
            result.hasItemItemId = input.ReadUInt64(ref result.itemItemId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAutographItemId {
      get { return result.hasAutographItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong AutographItemId {
      get { return result.AutographItemId; }
      set { SetAutographItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAutographItemId(ulong value) {
      PrepareBuilder();
      result.hasAutographItemId = true;
      result.autographItemId_ = value;
      return this;
    }
    public Builder ClearAutographItemId() {
      PrepareBuilder();
      result.hasAutographItemId = false;
      result.autographItemId_ = 0UL;
      return this;
    }
    
    public bool HasItemItemId {
      get { return result.hasItemItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ItemItemId {
      get { return result.ItemItemId; }
      set { SetItemItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemItemId(ulong value) {
      PrepareBuilder();
      result.hasItemItemId = true;
      result.itemItemId_ = value;
      return this;
    }
    public Builder ClearItemItemId() {
      PrepareBuilder();
      result.hasItemItemId = false;
      result.itemItemId_ = 0UL;
      return this;
    }
  }
  static CMsgApplyAutograph() {
    object.ReferenceEquals(global::EconGcmessages.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
