// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class Steammessages {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    registry.Add(global::Steammessages.KeyField);
    registry.Add(global::Steammessages.MsgpoolSoftLimit);
    registry.Add(global::Steammessages.MsgpoolHardLimit);
  }
  #endregion
  #region Extensions
  public const int KeyFieldFieldNumber = 60000;
  public static pb::GeneratedExtensionBase<bool> KeyField;
  public const int MsgpoolSoftLimitFieldNumber = 60000;
  public static pb::GeneratedExtensionBase<int> MsgpoolSoftLimit;
  public const int MsgpoolHardLimitFieldNumber = 60001;
  public static pb::GeneratedExtensionBase<int> MsgpoolHardLimit;
  #endregion
  
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_CMsgProtoBufHeader__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgProtoBufHeader, global::CMsgProtoBufHeader.Builder> internal__static_CMsgProtoBufHeader__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgWebAPIKey__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgWebAPIKey, global::CMsgWebAPIKey.Builder> internal__static_CMsgWebAPIKey__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgHttpRequest__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgHttpRequest, global::CMsgHttpRequest.Builder> internal__static_CMsgHttpRequest__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgHttpRequest_RequestHeader__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgHttpRequest.Types.RequestHeader, global::CMsgHttpRequest.Types.RequestHeader.Builder> internal__static_CMsgHttpRequest_RequestHeader__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgHttpRequest_QueryParam__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgHttpRequest.Types.QueryParam, global::CMsgHttpRequest.Types.QueryParam.Builder> internal__static_CMsgHttpRequest_QueryParam__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgWebAPIRequest__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgWebAPIRequest, global::CMsgWebAPIRequest.Builder> internal__static_CMsgWebAPIRequest__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgHttpResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgHttpResponse, global::CMsgHttpResponse.Builder> internal__static_CMsgHttpResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgHttpResponse_ResponseHeader__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgHttpResponse.Types.ResponseHeader, global::CMsgHttpResponse.Types.ResponseHeader.Builder> internal__static_CMsgHttpResponse_ResponseHeader__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMFindAccounts__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMFindAccounts, global::CMsgAMFindAccounts.Builder> internal__static_CMsgAMFindAccounts__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMFindAccountsResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMFindAccountsResponse, global::CMsgAMFindAccountsResponse.Builder> internal__static_CMsgAMFindAccountsResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgNotifyWatchdog__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgNotifyWatchdog, global::CMsgNotifyWatchdog.Builder> internal__static_CMsgNotifyWatchdog__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMGetLicenses__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetLicenses, global::CMsgAMGetLicenses.Builder> internal__static_CMsgAMGetLicenses__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgPackageLicense__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgPackageLicense, global::CMsgPackageLicense.Builder> internal__static_CMsgPackageLicense__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMGetLicensesResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetLicensesResponse, global::CMsgAMGetLicensesResponse.Builder> internal__static_CMsgAMGetLicensesResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMGetUserGameStats__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetUserGameStats, global::CMsgAMGetUserGameStats.Builder> internal__static_CMsgAMGetUserGameStats__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMGetUserGameStatsResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetUserGameStatsResponse, global::CMsgAMGetUserGameStatsResponse.Builder> internal__static_CMsgAMGetUserGameStatsResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMGetUserGameStatsResponse_Stats__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetUserGameStatsResponse.Types.Stats, global::CMsgAMGetUserGameStatsResponse.Types.Stats.Builder> internal__static_CMsgAMGetUserGameStatsResponse_Stats__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMGetUserGameStatsResponse_Achievement_Blocks__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks, global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks.Builder> internal__static_CMsgAMGetUserGameStatsResponse_Achievement_Blocks__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCGetCommandList__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetCommandList, global::CMsgGCGetCommandList.Builder> internal__static_CMsgGCGetCommandList__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCGetCommandListResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetCommandListResponse, global::CMsgGCGetCommandListResponse.Builder> internal__static_CMsgGCGetCommandListResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgMemCachedGet__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedGet, global::CGCMsgMemCachedGet.Builder> internal__static_CGCMsgMemCachedGet__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgMemCachedGetResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedGetResponse, global::CGCMsgMemCachedGetResponse.Builder> internal__static_CGCMsgMemCachedGetResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgMemCachedGetResponse_ValueTag__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedGetResponse.Types.ValueTag, global::CGCMsgMemCachedGetResponse.Types.ValueTag.Builder> internal__static_CGCMsgMemCachedGetResponse_ValueTag__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgMemCachedSet__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedSet, global::CGCMsgMemCachedSet.Builder> internal__static_CGCMsgMemCachedSet__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgMemCachedSet_KeyPair__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedSet.Types.KeyPair, global::CGCMsgMemCachedSet.Types.KeyPair.Builder> internal__static_CGCMsgMemCachedSet_KeyPair__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgMemCachedDelete__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedDelete, global::CGCMsgMemCachedDelete.Builder> internal__static_CGCMsgMemCachedDelete__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgMemCachedStats__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedStats, global::CGCMsgMemCachedStats.Builder> internal__static_CGCMsgMemCachedStats__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgMemCachedStatsResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedStatsResponse, global::CGCMsgMemCachedStatsResponse.Builder> internal__static_CGCMsgMemCachedStatsResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgSQLStats__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgSQLStats, global::CGCMsgSQLStats.Builder> internal__static_CGCMsgSQLStats__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgSQLStatsResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgSQLStatsResponse, global::CGCMsgSQLStatsResponse.Builder> internal__static_CGCMsgSQLStatsResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMAddFreeLicense__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMAddFreeLicense, global::CMsgAMAddFreeLicense.Builder> internal__static_CMsgAMAddFreeLicense__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMAddFreeLicenseResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMAddFreeLicenseResponse, global::CMsgAMAddFreeLicenseResponse.Builder> internal__static_CMsgAMAddFreeLicenseResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgGetIPLocation__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgGetIPLocation, global::CGCMsgGetIPLocation.Builder> internal__static_CGCMsgGetIPLocation__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CIPLocationInfo__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CIPLocationInfo, global::CIPLocationInfo.Builder> internal__static_CIPLocationInfo__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgGetIPLocationResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgGetIPLocationResponse, global::CGCMsgGetIPLocationResponse.Builder> internal__static_CGCMsgGetIPLocationResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgSystemStatsSchema__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgSystemStatsSchema, global::CGCMsgSystemStatsSchema.Builder> internal__static_CGCMsgSystemStatsSchema__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgGetSystemStats__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgGetSystemStats, global::CGCMsgGetSystemStats.Builder> internal__static_CGCMsgGetSystemStats__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCMsgGetSystemStatsResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCMsgGetSystemStatsResponse, global::CGCMsgGetSystemStatsResponse.Builder> internal__static_CGCMsgGetSystemStatsResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMSendEmail__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMSendEmail, global::CMsgAMSendEmail.Builder> internal__static_CMsgAMSendEmail__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMSendEmail_ReplacementToken__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMSendEmail.Types.ReplacementToken, global::CMsgAMSendEmail.Types.ReplacementToken.Builder> internal__static_CMsgAMSendEmail_ReplacementToken__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMSendEmail_PersonaNameReplacementToken__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMSendEmail.Types.PersonaNameReplacementToken, global::CMsgAMSendEmail.Types.PersonaNameReplacementToken.Builder> internal__static_CMsgAMSendEmail_PersonaNameReplacementToken__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMSendEmailResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMSendEmailResponse, global::CMsgAMSendEmailResponse.Builder> internal__static_CMsgAMSendEmailResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCGetEmailTemplate__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetEmailTemplate, global::CMsgGCGetEmailTemplate.Builder> internal__static_CMsgGCGetEmailTemplate__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCGetEmailTemplateResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetEmailTemplateResponse, global::CMsgGCGetEmailTemplateResponse.Builder> internal__static_CMsgGCGetEmailTemplateResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMGrantGuestPasses2__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMGrantGuestPasses2, global::CMsgAMGrantGuestPasses2.Builder> internal__static_CMsgAMGrantGuestPasses2__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAMGrantGuestPasses2Response__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAMGrantGuestPasses2Response, global::CMsgAMGrantGuestPasses2Response.Builder> internal__static_CMsgAMGrantGuestPasses2Response__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCSystemMsg_GetAccountDetails__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCSystemMsg_GetAccountDetails, global::CGCSystemMsg_GetAccountDetails.Builder> internal__static_CGCSystemMsg_GetAccountDetails__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCSystemMsg_GetAccountDetails_Response__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCSystemMsg_GetAccountDetails_Response, global::CGCSystemMsg_GetAccountDetails_Response.Builder> internal__static_CGCSystemMsg_GetAccountDetails_Response__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCGetPersonaNames__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetPersonaNames, global::CMsgGCGetPersonaNames.Builder> internal__static_CMsgGCGetPersonaNames__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCGetPersonaNames_Response__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetPersonaNames_Response, global::CMsgGCGetPersonaNames_Response.Builder> internal__static_CMsgGCGetPersonaNames_Response__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCGetPersonaNames_Response_PersonaName__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetPersonaNames_Response.Types.PersonaName, global::CMsgGCGetPersonaNames_Response.Types.PersonaName.Builder> internal__static_CMsgGCGetPersonaNames_Response_PersonaName__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCCheckFriendship__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCCheckFriendship, global::CMsgGCCheckFriendship.Builder> internal__static_CMsgGCCheckFriendship__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCCheckFriendship_Response__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCCheckFriendship_Response, global::CMsgGCCheckFriendship_Response.Builder> internal__static_CMsgGCCheckFriendship_Response__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgMasterSetDirectory__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetDirectory, global::CMsgGCMsgMasterSetDirectory.Builder> internal__static_CMsgGCMsgMasterSetDirectory__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgMasterSetDirectory_SubGC__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetDirectory.Types.SubGC, global::CMsgGCMsgMasterSetDirectory.Types.SubGC.Builder> internal__static_CMsgGCMsgMasterSetDirectory_SubGC__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgMasterSetDirectory_Response__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetDirectory_Response, global::CMsgGCMsgMasterSetDirectory_Response.Builder> internal__static_CMsgGCMsgMasterSetDirectory_Response__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgWebAPIJobRequestForwardResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgWebAPIJobRequestForwardResponse, global::CMsgGCMsgWebAPIJobRequestForwardResponse.Builder> internal__static_CMsgGCMsgWebAPIJobRequestForwardResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCSystemMsg_GetPurchaseTrust_Request__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCSystemMsg_GetPurchaseTrust_Request, global::CGCSystemMsg_GetPurchaseTrust_Request.Builder> internal__static_CGCSystemMsg_GetPurchaseTrust_Request__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCSystemMsg_GetPurchaseTrust_Response__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCSystemMsg_GetPurchaseTrust_Response, global::CGCSystemMsg_GetPurchaseTrust_Response.Builder> internal__static_CGCSystemMsg_GetPurchaseTrust_Response__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCHAccountVacStatusChange__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCHAccountVacStatusChange, global::CMsgGCHAccountVacStatusChange.Builder> internal__static_CMsgGCHAccountVacStatusChange__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCGetPartnerAccountLink__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetPartnerAccountLink, global::CMsgGCGetPartnerAccountLink.Builder> internal__static_CMsgGCGetPartnerAccountLink__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCGetPartnerAccountLink_Response__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetPartnerAccountLink_Response, global::CMsgGCGetPartnerAccountLink_Response.Builder> internal__static_CMsgGCGetPartnerAccountLink_Response__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCRoutingInfo__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCRoutingInfo, global::CMsgGCRoutingInfo.Builder> internal__static_CMsgGCRoutingInfo__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgMasterSetWebAPIRouting__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetWebAPIRouting, global::CMsgGCMsgMasterSetWebAPIRouting.Builder> internal__static_CMsgGCMsgMasterSetWebAPIRouting__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgMasterSetWebAPIRouting_Entry__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry, global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry.Builder> internal__static_CMsgGCMsgMasterSetWebAPIRouting_Entry__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgMasterSetClientMsgRouting__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetClientMsgRouting, global::CMsgGCMsgMasterSetClientMsgRouting.Builder> internal__static_CMsgGCMsgMasterSetClientMsgRouting__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgMasterSetClientMsgRouting_Entry__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry, global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry.Builder> internal__static_CMsgGCMsgMasterSetClientMsgRouting_Entry__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgMasterSetWebAPIRouting_Response__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetWebAPIRouting_Response, global::CMsgGCMsgMasterSetWebAPIRouting_Response.Builder> internal__static_CMsgGCMsgMasterSetWebAPIRouting_Response__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgMasterSetClientMsgRouting_Response__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetClientMsgRouting_Response, global::CMsgGCMsgMasterSetClientMsgRouting_Response.Builder> internal__static_CMsgGCMsgMasterSetClientMsgRouting_Response__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgSetOptions__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgSetOptions, global::CMsgGCMsgSetOptions.Builder> internal__static_CMsgGCMsgSetOptions__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMsgSetOptions_MessageRange__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgSetOptions.Types.MessageRange, global::CMsgGCMsgSetOptions.Types.MessageRange.Builder> internal__static_CMsgGCMsgSetOptions_MessageRange__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCHUpdateSession__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCHUpdateSession, global::CMsgGCHUpdateSession.Builder> internal__static_CMsgGCHUpdateSession__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCHUpdateSession_ExtraField__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCHUpdateSession.Types.ExtraField, global::CMsgGCHUpdateSession.Types.ExtraField.Builder> internal__static_CMsgGCHUpdateSession_ExtraField__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgNotificationOfSuspiciousActivity__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgNotificationOfSuspiciousActivity, global::CMsgNotificationOfSuspiciousActivity.Builder> internal__static_CMsgNotificationOfSuspiciousActivity__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances, global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances.Builder> internal__static_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static Steammessages() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        "ChNzdGVhbW1lc3NhZ2VzLnByb3RvGiBnb29nbGUvcHJvdG9idWYvZGVzY3Jp" + 
        "cHRvci5wcm90byLtAgoSQ01zZ1Byb3RvQnVmSGVhZGVyEhcKD2NsaWVudF9z" + 
        "dGVhbV9pZBgBIAEoBhIZChFjbGllbnRfc2Vzc2lvbl9pZBgCIAEoBRIVCg1z" + 
        "b3VyY2VfYXBwX2lkGAMgASgNEisKDWpvYl9pZF9zb3VyY2UYCiABKAY6FDE4" + 
        "NDQ2NzQ0MDczNzA5NTUxNjE1EisKDWpvYl9pZF90YXJnZXQYCyABKAY6FDE4" + 
        "NDQ2NzQ0MDczNzA5NTUxNjE1EhcKD3RhcmdldF9qb2JfbmFtZRgMIAEoCRIS" + 
        "CgdlcmVzdWx0GA0gASgFOgEyEhUKDWVycm9yX21lc3NhZ2UYDiABKAkSRAoK" + 
        "Z2NfbXNnX3NyYxjIASABKA4yES5HQ1Byb3RvQnVmTXNnU3JjOhxHQ1Byb3Rv" + 
        "QnVmTXNnU3JjX1Vuc3BlY2lmaWVkEhwKE2djX2Rpcl9pbmRleF9zb3VyY2UY" + 
        "yQEgASgNOgqAph2AAoimHYAIInoKDUNNc2dXZWJBUElLZXkSEwoGc3RhdHVz" + 
        "GAEgASgNOgMyNTUSFQoKYWNjb3VudF9pZBgCIAEoDToBMBIdChJwdWJsaXNo" + 
        "ZXJfZ3JvdXBfaWQYAyABKA06ATASDgoGa2V5X2lkGAQgASgNEg4KBmRvbWFp" + 
        "bhgFIAEoCSLdAgoPQ01zZ0h0dHBSZXF1ZXN0EhYKDnJlcXVlc3RfbWV0aG9k" + 
        "GAEgASgNEhAKCGhvc3RuYW1lGAIgASgJEgsKA3VybBgDIAEoCRIvCgdoZWFk" + 
        "ZXJzGAQgAygLMh4uQ01zZ0h0dHBSZXF1ZXN0LlJlcXVlc3RIZWFkZXISLwoK" + 
        "Z2V0X3BhcmFtcxgFIAMoCzIbLkNNc2dIdHRwUmVxdWVzdC5RdWVyeVBhcmFt" + 
        "EjAKC3Bvc3RfcGFyYW1zGAYgAygLMhsuQ01zZ0h0dHBSZXF1ZXN0LlF1ZXJ5" + 
        "UGFyYW0SDAoEYm9keRgHIAEoDBIYChBhYnNvbHV0ZV90aW1lb3V0GAggASgN" + 
        "GiwKDVJlcXVlc3RIZWFkZXISDAoEbmFtZRgBIAEoCRINCgV2YWx1ZRgCIAEo" + 
        "CRopCgpRdWVyeVBhcmFtEgwKBG5hbWUYASABKAkSDQoFdmFsdWUYAiABKAwi" + 
        "xgEKEUNNc2dXZWJBUElSZXF1ZXN0EhcKD1VOVVNFRF9qb2JfbmFtZRgBIAEo" + 
        "CRIWCg5pbnRlcmZhY2VfbmFtZRgCIAEoCRITCgttZXRob2RfbmFtZRgDIAEo" + 
        "CRIPCgd2ZXJzaW9uGAQgASgNEh8KB2FwaV9rZXkYBSABKAsyDi5DTXNnV2Vi" + 
        "QVBJS2V5EiEKB3JlcXVlc3QYBiABKAsyEC5DTXNnSHR0cFJlcXVlc3QSFgoO" + 
        "cm91dGluZ19hcHBfaWQYByABKA0ilwEKEENNc2dIdHRwUmVzcG9uc2USEwoL" + 
        "c3RhdHVzX2NvZGUYASABKA0SMQoHaGVhZGVycxgCIAMoCzIgLkNNc2dIdHRw" + 
        "UmVzcG9uc2UuUmVzcG9uc2VIZWFkZXISDAoEYm9keRgDIAEoDBotCg5SZXNw" + 
        "b25zZUhlYWRlchIMCgRuYW1lGAEgASgJEg0KBXZhbHVlGAIgASgJIkAKEkNN" + 
        "c2dBTUZpbmRBY2NvdW50cxITCgtzZWFyY2hfdHlwZRgBIAEoDRIVCg1zZWFy" + 
        "Y2hfc3RyaW5nGAIgASgJIi4KGkNNc2dBTUZpbmRBY2NvdW50c1Jlc3BvbnNl" + 
        "EhAKCHN0ZWFtX2lkGAEgAygGIpABChJDTXNnTm90aWZ5V2F0Y2hkb2cSDgoG" + 
        "c291cmNlGAEgASgNEhIKCmFsZXJ0X3R5cGUYAiABKA0SGQoRYWxlcnRfZGVz" + 
        "dGluYXRpb24YAyABKA0SEAoIY3JpdGljYWwYBCABKAgSDAoEdGltZRgFIAEo" + 
        "DRINCgVhcHBpZBgGIAEoDRIMCgR0ZXh0GAcgASgJIiQKEUNNc2dBTUdldExp" + 
        "Y2Vuc2VzEg8KB3N0ZWFtaWQYASABKAYiUAoSQ01zZ1BhY2thZ2VMaWNlbnNl" + 
        "EhIKCnBhY2thZ2VfaWQYASABKA0SFAoMdGltZV9jcmVhdGVkGAIgASgNEhAK" + 
        "CG93bmVyX2lkGAMgASgNIlEKGUNNc2dBTUdldExpY2Vuc2VzUmVzcG9uc2US" + 
        "JAoHbGljZW5zZRgBIAMoCzITLkNNc2dQYWNrYWdlTGljZW5zZRIOCgZyZXN1" + 
        "bHQYAiABKA0iSgoWQ01zZ0FNR2V0VXNlckdhbWVTdGF0cxIQCghzdGVhbV9p" + 
        "ZBgBIAEoBhIPCgdnYW1lX2lkGAIgASgGEg0KBXN0YXRzGAMgAygNIuoCCh5D" + 
        "TXNnQU1HZXRVc2VyR2FtZVN0YXRzUmVzcG9uc2USEAoIc3RlYW1faWQYASAB" + 
        "KAYSDwoHZ2FtZV9pZBgCIAEoBhISCgdlcmVzdWx0GAMgASgFOgEyEjQKBXN0" + 
        "YXRzGAQgAygLMiUuQ01zZ0FNR2V0VXNlckdhbWVTdGF0c1Jlc3BvbnNlLlN0" + 
        "YXRzEk4KEmFjaGlldmVtZW50X2Jsb2NrcxgFIAMoCzIyLkNNc2dBTUdldFVz" + 
        "ZXJHYW1lU3RhdHNSZXNwb25zZS5BY2hpZXZlbWVudF9CbG9ja3MaLAoFU3Rh" + 
        "dHMSDwoHc3RhdF9pZBgBIAEoDRISCgpzdGF0X3ZhbHVlGAIgASgNGl0KEkFj" + 
        "aGlldmVtZW50X0Jsb2NrcxIWCg5hY2hpZXZlbWVudF9pZBgBIAEoDRIaChJh" + 
        "Y2hpZXZlbWVudF9iaXRfaWQYAiABKA0SEwoLdW5sb2NrX3RpbWUYAyABKAci" + 
        "PgoUQ01zZ0dDR2V0Q29tbWFuZExpc3QSDgoGYXBwX2lkGAEgASgNEhYKDmNv" + 
        "bW1hbmRfcHJlZml4GAIgASgJIjQKHENNc2dHQ0dldENvbW1hbmRMaXN0UmVz" + 
        "cG9uc2USFAoMY29tbWFuZF9uYW1lGAEgAygJIiIKEkNHQ01zZ01lbUNhY2hl" + 
        "ZEdldBIMCgRrZXlzGAEgAygJInwKGkNHQ01zZ01lbUNhY2hlZEdldFJlc3Bv" + 
        "bnNlEjQKBnZhbHVlcxgBIAMoCzIkLkNHQ01zZ01lbUNhY2hlZEdldFJlc3Bv" + 
        "bnNlLlZhbHVlVGFnGigKCFZhbHVlVGFnEg0KBWZvdW5kGAEgASgIEg0KBXZh" + 
        "bHVlGAIgASgMImcKEkNHQ01zZ01lbUNhY2hlZFNldBIpCgRrZXlzGAEgAygL" + 
        "MhsuQ0dDTXNnTWVtQ2FjaGVkU2V0LktleVBhaXIaJgoHS2V5UGFpchIMCgRu" + 
        "YW1lGAEgASgJEg0KBXZhbHVlGAIgASgMIiUKFUNHQ01zZ01lbUNhY2hlZERl" + 
        "bGV0ZRIMCgRrZXlzGAEgAygJIhYKFENHQ01zZ01lbUNhY2hlZFN0YXRzIrgC" + 
        "ChxDR0NNc2dNZW1DYWNoZWRTdGF0c1Jlc3BvbnNlEhgKEGN1cnJfY29ubmVj" + 
        "dGlvbnMYASABKAQSDwoHY21kX2dldBgCIAEoBBIPCgdjbWRfc2V0GAMgASgE" + 
        "EhEKCWNtZF9mbHVzaBgEIAEoBBIQCghnZXRfaGl0cxgFIAEoBBISCgpnZXRf" + 
        "bWlzc2VzGAYgASgEEhMKC2RlbGV0ZV9oaXRzGAcgASgEEhUKDWRlbGV0ZV9t" + 
        "aXNzZXMYCCABKAQSEgoKYnl0ZXNfcmVhZBgJIAEoBBIVCg1ieXRlc193cml0" + 
        "dGVuGAogASgEEhYKDmxpbWl0X21heGJ5dGVzGAsgASgEEhIKCmN1cnJfaXRl" + 
        "bXMYDCABKAQSEQoJZXZpY3Rpb25zGA0gASgEEg0KBWJ5dGVzGA4gASgEIigK" + 
        "DkNHQ01zZ1NRTFN0YXRzEhYKDnNjaGVtYV9jYXRhbG9nGAEgASgNIpsCChZD" + 
        "R0NNc2dTUUxTdGF0c1Jlc3BvbnNlEg8KB3RocmVhZHMYASABKA0SGQoRdGhy" + 
        "ZWFkc19jb25uZWN0ZWQYAiABKA0SFgoOdGhyZWFkc19hY3RpdmUYAyABKA0S" + 
        "HAoUb3BlcmF0aW9uc19zdWJtaXR0ZWQYBCABKA0SJAoccHJlcGFyZWRfc3Rh" + 
        "dGVtZW50c19leGVjdXRlZBgFIAEoDRIoCiBub25fcHJlcGFyZWRfc3RhdGVt" + 
        "ZW50c19leGVjdXRlZBgGIAEoDRIYChBkZWFkbG9ja19yZXRyaWVzGAcgASgN" + 
        "EiUKHW9wZXJhdGlvbnNfdGltZWRfb3V0X2luX3F1ZXVlGAggASgNEg4KBmVy" + 
        "cm9ycxgJIAEoDSJpChRDTXNnQU1BZGRGcmVlTGljZW5zZRIPCgdzdGVhbWlk" + 
        "GAEgASgGEhEKCWlwX3B1YmxpYxgCIAEoDRIRCglwYWNrYWdlaWQYAyABKA0S" + 
        "GgoSc3RvcmVfY291bnRyeV9jb2RlGAQgASgJImMKHENNc2dBTUFkZEZyZWVM" + 
        "aWNlbnNlUmVzcG9uc2USEgoHZXJlc3VsdBgBIAEoBToBMhIeChZwdXJjaGFz" + 
        "ZV9yZXN1bHRfZGV0YWlsGAIgASgFEg8KB3RyYW5zaWQYAyABKAYiIgoTQ0dD" + 
        "TXNnR2V0SVBMb2NhdGlvbhILCgNpcHMYASADKAcicAoPQ0lQTG9jYXRpb25J" + 
        "bmZvEgoKAmlwGAEgASgNEhAKCGxhdGl0dWRlGAIgASgCEhEKCWxvbmdpdHVk" + 
        "ZRgDIAEoAhIPCgdjb3VudHJ5GAQgASgJEg0KBXN0YXRlGAUgASgJEgwKBGNp" + 
        "dHkYBiABKAkiPgobQ0dDTXNnR2V0SVBMb2NhdGlvblJlc3BvbnNlEh8KBWlu" + 
        "Zm9zGAEgAygLMhAuQ0lQTG9jYXRpb25JbmZvIj8KF0NHQ01zZ1N5c3RlbVN0" + 
        "YXRzU2NoZW1hEhEKCWdjX2FwcF9pZBgBIAEoDRIRCglzY2hlbWFfa3YYAiAB" + 
        "KAwiFgoUQ0dDTXNnR2V0U3lzdGVtU3RhdHMixQIKHENHQ01zZ0dldFN5c3Rl" + 
        "bVN0YXRzUmVzcG9uc2USEQoJZ2NfYXBwX2lkGAEgASgNEhAKCHN0YXRzX2t2" + 
        "GAIgASgMEhMKC2FjdGl2ZV9qb2JzGAMgASgNEhUKDXlpZWxkaW5nX2pvYnMY" + 
        "BCABKA0SFQoNdXNlcl9zZXNzaW9ucxgFIAEoDRIcChRnYW1lX3NlcnZlcl9z" + 
        "ZXNzaW9ucxgGIAEoDRIQCghzb2NhY2hlcxgHIAEoDRIaChJzb2NhY2hlc190" + 
        "b191bmxvYWQYCCABKA0SGAoQc29jYWNoZXNfbG9hZGluZxgJIAEoDRIXCg93" + 
        "cml0ZWJhY2tfcXVldWUYCiABKA0SFQoNc3RlYW1pZF9sb2NrcxgLIAEoDRIT" + 
        "Cgtsb2dvbl9xdWV1ZRgMIAEoDRISCgpsb2dvbl9qb2JzGA0gASgNIuICCg9D" + 
        "TXNnQU1TZW5kRW1haWwSDwoHc3RlYW1pZBgBIAEoBhIWCg5lbWFpbF9tc2df" + 
        "dHlwZRgCIAEoDRIUCgxlbWFpbF9mb3JtYXQYAyABKA0SSQoTcGVyc29uYV9u" + 
        "YW1lX3Rva2VucxgFIAMoCzIsLkNNc2dBTVNlbmRFbWFpbC5QZXJzb25hTmFt" + 
        "ZVJlcGxhY2VtZW50VG9rZW4SEQoJc291cmNlX2djGAYgASgNEjEKBnRva2Vu" + 
        "cxgHIAMoCzIhLkNNc2dBTVNlbmRFbWFpbC5SZXBsYWNlbWVudFRva2VuGjsK" + 
        "EFJlcGxhY2VtZW50VG9rZW4SEgoKdG9rZW5fbmFtZRgBIAEoCRITCgt0b2tl" + 
        "bl92YWx1ZRgCIAEoCRpCChtQZXJzb25hTmFtZVJlcGxhY2VtZW50VG9rZW4S" + 
        "DwoHc3RlYW1pZBgBIAEoBhISCgp0b2tlbl9uYW1lGAIgASgJIi0KF0NNc2dB" + 
        "TVNlbmRFbWFpbFJlc3BvbnNlEhIKB2VyZXN1bHQYASABKA06ATIiagoWQ01z" + 
        "Z0dDR2V0RW1haWxUZW1wbGF0ZRIOCgZhcHBfaWQYASABKA0SFgoOZW1haWxf" + 
        "bXNnX3R5cGUYAiABKA0SEgoKZW1haWxfbGFuZxgDIAEoBRIUCgxlbWFpbF9m" + 
        "b3JtYXQYBCABKAUiXwoeQ01zZ0dDR2V0RW1haWxUZW1wbGF0ZVJlc3BvbnNl" + 
        "EhIKB2VyZXN1bHQYASABKA06ATISFwoPdGVtcGxhdGVfZXhpc3RzGAIgASgI" + 
        "EhAKCHRlbXBsYXRlGAMgASgJIoQBChdDTXNnQU1HcmFudEd1ZXN0UGFzc2Vz" + 
        "MhIQCghzdGVhbV9pZBgBIAEoBhISCgpwYWNrYWdlX2lkGAIgASgNEhcKD3Bh" + 
        "c3Nlc190b19ncmFudBgDIAEoBRIaChJkYXlzX3RvX2V4cGlyYXRpb24YBCAB" + 
        "KAUSDgoGYWN0aW9uGAUgASgFIlAKH0NNc2dBTUdyYW50R3Vlc3RQYXNzZXMy" + 
        "UmVzcG9uc2USEgoHZXJlc3VsdBgBIAEoBToBMhIZCg5wYXNzZXNfZ3JhbnRl" + 
        "ZBgCIAEoBToBMCJMCh5DR0NTeXN0ZW1Nc2dfR2V0QWNjb3VudERldGFpbHMS" + 
        "DwoHc3RlYW1pZBgBIAEoBhINCgVhcHBpZBgCIAEoDToKgKYdgAGIph2ABCLf" + 
        "BAonQ0dDU3lzdGVtTXNnX0dldEFjY291bnREZXRhaWxzX1Jlc3BvbnNlEh0K" + 
        "EmVyZXN1bHRfZGVwcmVjYXRlZBgBIAEoDToBMhIUCgxhY2NvdW50X25hbWUY" + 
        "AiABKAkSFAoMcGVyc29uYV9uYW1lGAMgASgJEhkKEWlzX3Byb2ZpbGVfcHVi" + 
        "bGljGAQgASgIEhsKE2lzX2ludmVudG9yeV9wdWJsaWMYBSABKAgSFQoNaXNf" + 
        "dmFjX2Jhbm5lZBgHIAEoCBIVCg1pc19jeWJlcl9jYWZlGAggASgIEhkKEWlz" + 
        "X3NjaG9vbF9hY2NvdW50GAkgASgIEhIKCmlzX2xpbWl0ZWQYCiABKAgSFQoN" + 
        "aXNfc3Vic2NyaWJlZBgLIAEoCBIPCgdwYWNrYWdlGAwgASgNEh0KFWlzX2Zy" + 
        "ZWVfdHJpYWxfYWNjb3VudBgNIAEoCBIdChVmcmVlX3RyaWFsX2V4cGlyYXRp" + 
        "b24YDiABKA0SFwoPaXNfbG93X3Zpb2xlbmNlGA8gASgIEh4KFmlzX2FjY291" + 
        "bnRfbG9ja2VkX2Rvd24YECABKAgSGwoTaXNfY29tbXVuaXR5X2Jhbm5lZBgR" + 
        "IAEoCBIXCg9pc190cmFkZV9iYW5uZWQYEiABKAgSHAoUdHJhZGVfYmFuX2V4" + 
        "cGlyYXRpb24YEyABKA0SEQoJYWNjb3VudGlkGBQgASgNEhsKE3N1c3BlbnNp" + 
        "b25fZW5kX3RpbWUYFSABKA0SEAoIY3VycmVuY3kYFiABKAkSEwoLc3RlYW1f" + 
        "bGV2ZWwYFyABKA06CoCmHYABiKYdgAQiKQoVQ01zZ0dDR2V0UGVyc29uYU5h" + 
        "bWVzEhAKCHN0ZWFtaWRzGAEgAygGIr4BCh5DTXNnR0NHZXRQZXJzb25hTmFt" + 
        "ZXNfUmVzcG9uc2USRgoRc3VjY2VlZGVkX2xvb2t1cHMYASADKAsyKy5DTXNn" + 
        "R0NHZXRQZXJzb25hTmFtZXNfUmVzcG9uc2UuUGVyc29uYU5hbWUSHgoWZmFp" + 
        "bGVkX2xvb2t1cF9zdGVhbWlkcxgCIAMoBho0CgtQZXJzb25hTmFtZRIPCgdz" + 
        "dGVhbWlkGAEgASgGEhQKDHBlcnNvbmFfbmFtZRgCIAEoCSJEChVDTXNnR0ND" + 
        "aGVja0ZyaWVuZHNoaXASFAoMc3RlYW1pZF9sZWZ0GAEgASgGEhUKDXN0ZWFt" + 
        "aWRfcmlnaHQYAiABKAYiSwoeQ01zZ0dDQ2hlY2tGcmllbmRzaGlwX1Jlc3Bv" + 
        "bnNlEg8KB3N1Y2Nlc3MYASABKAgSGAoQZm91bmRfZnJpZW5kc2hpcBgCIAEo" + 
        "CCLIAQobQ01zZ0dDTXNnTWFzdGVyU2V0RGlyZWN0b3J5EhgKEG1hc3Rlcl9k" + 
        "aXJfaW5kZXgYASABKA0SLwoDZGlyGAIgAygLMiIuQ01zZ0dDTXNnTWFzdGVy" + 
        "U2V0RGlyZWN0b3J5LlN1YkdDGl4KBVN1YkdDEhEKCWRpcl9pbmRleBgBIAEo" + 
        "DRIMCgRuYW1lGAIgASgJEgsKA2JveBgDIAEoCRIUCgxjb21tYW5kX2xpbmUY" + 
        "BCABKAkSEQoJZ2NfYmluYXJ5GAUgASgJIjoKJENNc2dHQ01zZ01hc3RlclNl" + 
        "dERpcmVjdG9yeV9SZXNwb25zZRISCgdlcmVzdWx0GAEgASgFOgEyIj0KKENN" + 
        "c2dHQ01zZ1dlYkFQSUpvYlJlcXVlc3RGb3J3YXJkUmVzcG9uc2USEQoJZGly" + 
        "X2luZGV4GAEgASgNIjgKJUNHQ1N5c3RlbU1zZ19HZXRQdXJjaGFzZVRydXN0" + 
        "X1JlcXVlc3QSDwoHc3RlYW1pZBgBIAEoBiKtAQomQ0dDU3lzdGVtTXNnX0dl" + 
        "dFB1cmNoYXNlVHJ1c3RfUmVzcG9uc2USIgoaaGFzX3ByaW9yX3B1cmNoYXNl" + 
        "X2hpc3RvcnkYASABKAgSJQodaGFzX25vX3JlY2VudF9wYXNzd29yZF9yZXNl" + 
        "dHMYAiABKAgSHgoWaXNfd2FsbGV0X2Nhc2hfdHJ1c3RlZBgDIAEoCBIYChB0" + 
        "aW1lX2FsbF90cnVzdGVkGAQgASgNIo8BCh1DTXNnR0NIQWNjb3VudFZhY1N0" + 
        "YXR1c0NoYW5nZRIQCghzdGVhbV9pZBgBIAEoBhIOCgZhcHBfaWQYAiABKA0S" + 
        "GwoTcnRpbWVfdmFjYmFuX3N0YXJ0cxgDIAEoDRIVCg1pc19iYW5uZWRfbm93" + 
        "GAQgASgIEhgKEGlzX2Jhbm5lZF9mdXR1cmUYBSABKAgiLgobQ01zZ0dDR2V0" + 
        "UGFydG5lckFjY291bnRMaW5rEg8KB3N0ZWFtaWQYASABKAYiRQokQ01zZ0dD" + 
        "R2V0UGFydG5lckFjY291bnRMaW5rX1Jlc3BvbnNlEgwKBHB3aWQYASABKA0S" + 
        "DwoHbmV4b25pZBgCIAEoDSK9AgoRQ01zZ0dDUm91dGluZ0luZm8SEQoJZGly" + 
        "X2luZGV4GAEgAygNEjgKBm1ldGhvZBgCIAEoDjIgLkNNc2dHQ1JvdXRpbmdJ" + 
        "bmZvLlJvdXRpbmdNZXRob2Q6BlJBTkRPTRI7CghmYWxsYmFjaxgDIAEoDjIg" + 
        "LkNNc2dHQ1JvdXRpbmdJbmZvLlJvdXRpbmdNZXRob2Q6B0RJU0NBUkQSFgoO" + 
        "cHJvdG9idWZfZmllbGQYBCABKA0SFAoMd2ViYXBpX3BhcmFtGAUgASgJInAK" + 
        "DVJvdXRpbmdNZXRob2QSCgoGUkFORE9NEAASCwoHRElTQ0FSRBABEhIKDkNM" + 
        "SUVOVF9TVEVBTUlEEAISGQoVUFJPVE9CVUZfRklFTERfVUlOVDY0EAMSFwoT" + 
        "V0VCQVBJX1BBUkFNX1VJTlQ2NBAEIrUBCh9DTXNnR0NNc2dNYXN0ZXJTZXRX" + 
        "ZWJBUElSb3V0aW5nEjcKB2VudHJpZXMYASADKAsyJi5DTXNnR0NNc2dNYXN0" + 
        "ZXJTZXRXZWJBUElSb3V0aW5nLkVudHJ5GlkKBUVudHJ5EhYKDmludGVyZmFj" + 
        "ZV9uYW1lGAEgASgJEhMKC21ldGhvZF9uYW1lGAIgASgJEiMKB3JvdXRpbmcY" + 
        "AyABKAsyEi5DTXNnR0NSb3V0aW5nSW5mbyKgAQoiQ01zZ0dDTXNnTWFzdGVy" + 
        "U2V0Q2xpZW50TXNnUm91dGluZxI6CgdlbnRyaWVzGAEgAygLMikuQ01zZ0dD" + 
        "TXNnTWFzdGVyU2V0Q2xpZW50TXNnUm91dGluZy5FbnRyeRo+CgVFbnRyeRIQ" + 
        "Cghtc2dfdHlwZRgBIAEoDRIjCgdyb3V0aW5nGAIgASgLMhIuQ01zZ0dDUm91" + 
        "dGluZ0luZm8iPgooQ01zZ0dDTXNnTWFzdGVyU2V0V2ViQVBJUm91dGluZ19S" + 
        "ZXNwb25zZRISCgdlcmVzdWx0GAEgASgFOgEyIkEKK0NNc2dHQ01zZ01hc3Rl" + 
        "clNldENsaWVudE1zZ1JvdXRpbmdfUmVzcG9uc2USEgoHZXJlc3VsdBgBIAEo" + 
        "BToBMiKcAgoTQ01zZ0dDTXNnU2V0T3B0aW9ucxIsCgdvcHRpb25zGAEgAygO" + 
        "MhsuQ01zZ0dDTXNnU2V0T3B0aW9ucy5PcHRpb24SPAoRY2xpZW50X21zZ19y" + 
        "YW5nZXMYAiADKAsyIS5DTXNnR0NNc2dTZXRPcHRpb25zLk1lc3NhZ2VSYW5n" + 
        "ZRopCgxNZXNzYWdlUmFuZ2USCwoDbG93GAEgAigNEgwKBGhpZ2gYAiACKA0i" + 
        "bgoGT3B0aW9uEhgKFE5PVElGWV9VU0VSX1NFU1NJT05TEAASGgoWTk9USUZZ" + 
        "X1NFUlZFUl9TRVNTSU9OUxABEhcKE05PVElGWV9BQ0hJRVZFTUVOVFMQAhIV" + 
        "ChFOT1RJRllfVkFDX0FDVElPThADIpQCChRDTXNnR0NIVXBkYXRlU2Vzc2lv" + 
        "bhIQCghzdGVhbV9pZBgBIAEoBhIOCgZhcHBfaWQYAiABKA0SDgoGb25saW5l" + 
        "GAMgASgIEhcKD3NlcnZlcl9zdGVhbV9pZBgEIAEoBhITCgtzZXJ2ZXJfYWRk" + 
        "chgFIAEoDRITCgtzZXJ2ZXJfcG9ydBgGIAEoDRIPCgdvc190eXBlGAcgASgN" + 
        "EhMKC2NsaWVudF9hZGRyGAggASgNEjYKDGV4dHJhX2ZpZWxkcxgJIAMoCzIg" + 
        "LkNNc2dHQ0hVcGRhdGVTZXNzaW9uLkV4dHJhRmllbGQaKQoKRXh0cmFGaWVs" + 
        "ZBIMCgRuYW1lGAEgASgJEg0KBXZhbHVlGAIgASgJIuwBCiRDTXNnTm90aWZp" + 
        "Y2F0aW9uT2ZTdXNwaWNpb3VzQWN0aXZpdHkSDwoHc3RlYW1pZBgBIAEoBhIN" + 
        "CgVhcHBpZBgCIAEoDRJXChJtdWx0aXBsZV9pbnN0YW5jZXMYAyABKAsyOy5D" + 
        "TXNnTm90aWZpY2F0aW9uT2ZTdXNwaWNpb3VzQWN0aXZpdHkuTXVsdGlwbGVH" + 
        "YW1lSW5zdGFuY2VzGksKFU11bHRpcGxlR2FtZUluc3RhbmNlcxIaChJhcHBf" + 
        "aW5zdGFuY2VfY291bnQYASABKA0SFgoOb3RoZXJfc3RlYW1pZHMYAiADKAYq" + 
        "tgEKEEdDUHJvdG9CdWZNc2dTcmMSIAocR0NQcm90b0J1Zk1zZ1NyY19VbnNw" + 
        "ZWNpZmllZBAAEh8KG0dDUHJvdG9CdWZNc2dTcmNfRnJvbVN5c3RlbRABEiAK" + 
        "HEdDUHJvdG9CdWZNc2dTcmNfRnJvbVN0ZWFtSUQQAhIbChdHQ1Byb3RvQnVm" + 
        "TXNnU3JjX0Zyb21HQxADEiAKHEdDUHJvdG9CdWZNc2dTcmNfUmVwbHlTeXN0" + 
        "ZW0QBDo5CglrZXlfZmllbGQSHS5nb29nbGUucHJvdG9idWYuRmllbGRPcHRp" + 
        "b25zGODUAyABKAg6BWZhbHNlOkEKEm1zZ3Bvb2xfc29mdF9saW1pdBIfLmdv" + 
        "b2dsZS5wcm90b2J1Zi5NZXNzYWdlT3B0aW9ucxjg1AMgASgFOgIzMjpCChJt" + 
        "c2dwb29sX2hhcmRfbGltaXQSHy5nb29nbGUucHJvdG9idWYuTWVzc2FnZU9w" + 
        "dGlvbnMY4dQDIAEoBToDMzg0");
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_CMsgProtoBufHeader__Descriptor = Descriptor.MessageTypes[0];
      internal__static_CMsgProtoBufHeader__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgProtoBufHeader, global::CMsgProtoBufHeader.Builder>(internal__static_CMsgProtoBufHeader__Descriptor,
              new string[] { "ClientSteamId", "ClientSessionId", "SourceAppId", "JobIdSource", "JobIdTarget", "TargetJobName", "Eresult", "ErrorMessage", "GcMsgSrc", "GcDirIndexSource", });
      internal__static_CMsgWebAPIKey__Descriptor = Descriptor.MessageTypes[1];
      internal__static_CMsgWebAPIKey__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgWebAPIKey, global::CMsgWebAPIKey.Builder>(internal__static_CMsgWebAPIKey__Descriptor,
              new string[] { "Status", "AccountId", "PublisherGroupId", "KeyId", "Domain", });
      internal__static_CMsgHttpRequest__Descriptor = Descriptor.MessageTypes[2];
      internal__static_CMsgHttpRequest__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgHttpRequest, global::CMsgHttpRequest.Builder>(internal__static_CMsgHttpRequest__Descriptor,
              new string[] { "RequestMethod", "Hostname", "Url", "Headers", "GetParams", "PostParams", "Body", "AbsoluteTimeout", });
      internal__static_CMsgHttpRequest_RequestHeader__Descriptor = internal__static_CMsgHttpRequest__Descriptor.NestedTypes[0];
      internal__static_CMsgHttpRequest_RequestHeader__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgHttpRequest.Types.RequestHeader, global::CMsgHttpRequest.Types.RequestHeader.Builder>(internal__static_CMsgHttpRequest_RequestHeader__Descriptor,
              new string[] { "Name", "Value", });
      internal__static_CMsgHttpRequest_QueryParam__Descriptor = internal__static_CMsgHttpRequest__Descriptor.NestedTypes[1];
      internal__static_CMsgHttpRequest_QueryParam__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgHttpRequest.Types.QueryParam, global::CMsgHttpRequest.Types.QueryParam.Builder>(internal__static_CMsgHttpRequest_QueryParam__Descriptor,
              new string[] { "Name", "Value", });
      internal__static_CMsgWebAPIRequest__Descriptor = Descriptor.MessageTypes[3];
      internal__static_CMsgWebAPIRequest__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgWebAPIRequest, global::CMsgWebAPIRequest.Builder>(internal__static_CMsgWebAPIRequest__Descriptor,
              new string[] { "UNUSEDJobName", "InterfaceName", "MethodName", "Version", "ApiKey", "Request", "RoutingAppId", });
      internal__static_CMsgHttpResponse__Descriptor = Descriptor.MessageTypes[4];
      internal__static_CMsgHttpResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgHttpResponse, global::CMsgHttpResponse.Builder>(internal__static_CMsgHttpResponse__Descriptor,
              new string[] { "StatusCode", "Headers", "Body", });
      internal__static_CMsgHttpResponse_ResponseHeader__Descriptor = internal__static_CMsgHttpResponse__Descriptor.NestedTypes[0];
      internal__static_CMsgHttpResponse_ResponseHeader__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgHttpResponse.Types.ResponseHeader, global::CMsgHttpResponse.Types.ResponseHeader.Builder>(internal__static_CMsgHttpResponse_ResponseHeader__Descriptor,
              new string[] { "Name", "Value", });
      internal__static_CMsgAMFindAccounts__Descriptor = Descriptor.MessageTypes[5];
      internal__static_CMsgAMFindAccounts__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMFindAccounts, global::CMsgAMFindAccounts.Builder>(internal__static_CMsgAMFindAccounts__Descriptor,
              new string[] { "SearchType", "SearchString", });
      internal__static_CMsgAMFindAccountsResponse__Descriptor = Descriptor.MessageTypes[6];
      internal__static_CMsgAMFindAccountsResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMFindAccountsResponse, global::CMsgAMFindAccountsResponse.Builder>(internal__static_CMsgAMFindAccountsResponse__Descriptor,
              new string[] { "SteamId", });
      internal__static_CMsgNotifyWatchdog__Descriptor = Descriptor.MessageTypes[7];
      internal__static_CMsgNotifyWatchdog__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgNotifyWatchdog, global::CMsgNotifyWatchdog.Builder>(internal__static_CMsgNotifyWatchdog__Descriptor,
              new string[] { "Source", "AlertType", "AlertDestination", "Critical", "Time", "Appid", "Text", });
      internal__static_CMsgAMGetLicenses__Descriptor = Descriptor.MessageTypes[8];
      internal__static_CMsgAMGetLicenses__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetLicenses, global::CMsgAMGetLicenses.Builder>(internal__static_CMsgAMGetLicenses__Descriptor,
              new string[] { "Steamid", });
      internal__static_CMsgPackageLicense__Descriptor = Descriptor.MessageTypes[9];
      internal__static_CMsgPackageLicense__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgPackageLicense, global::CMsgPackageLicense.Builder>(internal__static_CMsgPackageLicense__Descriptor,
              new string[] { "PackageId", "TimeCreated", "OwnerId", });
      internal__static_CMsgAMGetLicensesResponse__Descriptor = Descriptor.MessageTypes[10];
      internal__static_CMsgAMGetLicensesResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetLicensesResponse, global::CMsgAMGetLicensesResponse.Builder>(internal__static_CMsgAMGetLicensesResponse__Descriptor,
              new string[] { "License", "Result", });
      internal__static_CMsgAMGetUserGameStats__Descriptor = Descriptor.MessageTypes[11];
      internal__static_CMsgAMGetUserGameStats__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetUserGameStats, global::CMsgAMGetUserGameStats.Builder>(internal__static_CMsgAMGetUserGameStats__Descriptor,
              new string[] { "SteamId", "GameId", "Stats", });
      internal__static_CMsgAMGetUserGameStatsResponse__Descriptor = Descriptor.MessageTypes[12];
      internal__static_CMsgAMGetUserGameStatsResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetUserGameStatsResponse, global::CMsgAMGetUserGameStatsResponse.Builder>(internal__static_CMsgAMGetUserGameStatsResponse__Descriptor,
              new string[] { "SteamId", "GameId", "Eresult", "Stats", "AchievementBlocks", });
      internal__static_CMsgAMGetUserGameStatsResponse_Stats__Descriptor = internal__static_CMsgAMGetUserGameStatsResponse__Descriptor.NestedTypes[0];
      internal__static_CMsgAMGetUserGameStatsResponse_Stats__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetUserGameStatsResponse.Types.Stats, global::CMsgAMGetUserGameStatsResponse.Types.Stats.Builder>(internal__static_CMsgAMGetUserGameStatsResponse_Stats__Descriptor,
              new string[] { "StatId", "StatValue", });
      internal__static_CMsgAMGetUserGameStatsResponse_Achievement_Blocks__Descriptor = internal__static_CMsgAMGetUserGameStatsResponse__Descriptor.NestedTypes[1];
      internal__static_CMsgAMGetUserGameStatsResponse_Achievement_Blocks__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks, global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks.Builder>(internal__static_CMsgAMGetUserGameStatsResponse_Achievement_Blocks__Descriptor,
              new string[] { "AchievementId", "AchievementBitId", "UnlockTime", });
      internal__static_CMsgGCGetCommandList__Descriptor = Descriptor.MessageTypes[13];
      internal__static_CMsgGCGetCommandList__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetCommandList, global::CMsgGCGetCommandList.Builder>(internal__static_CMsgGCGetCommandList__Descriptor,
              new string[] { "AppId", "CommandPrefix", });
      internal__static_CMsgGCGetCommandListResponse__Descriptor = Descriptor.MessageTypes[14];
      internal__static_CMsgGCGetCommandListResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetCommandListResponse, global::CMsgGCGetCommandListResponse.Builder>(internal__static_CMsgGCGetCommandListResponse__Descriptor,
              new string[] { "CommandName", });
      internal__static_CGCMsgMemCachedGet__Descriptor = Descriptor.MessageTypes[15];
      internal__static_CGCMsgMemCachedGet__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedGet, global::CGCMsgMemCachedGet.Builder>(internal__static_CGCMsgMemCachedGet__Descriptor,
              new string[] { "Keys", });
      internal__static_CGCMsgMemCachedGetResponse__Descriptor = Descriptor.MessageTypes[16];
      internal__static_CGCMsgMemCachedGetResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedGetResponse, global::CGCMsgMemCachedGetResponse.Builder>(internal__static_CGCMsgMemCachedGetResponse__Descriptor,
              new string[] { "Values", });
      internal__static_CGCMsgMemCachedGetResponse_ValueTag__Descriptor = internal__static_CGCMsgMemCachedGetResponse__Descriptor.NestedTypes[0];
      internal__static_CGCMsgMemCachedGetResponse_ValueTag__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedGetResponse.Types.ValueTag, global::CGCMsgMemCachedGetResponse.Types.ValueTag.Builder>(internal__static_CGCMsgMemCachedGetResponse_ValueTag__Descriptor,
              new string[] { "Found", "Value", });
      internal__static_CGCMsgMemCachedSet__Descriptor = Descriptor.MessageTypes[17];
      internal__static_CGCMsgMemCachedSet__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedSet, global::CGCMsgMemCachedSet.Builder>(internal__static_CGCMsgMemCachedSet__Descriptor,
              new string[] { "Keys", });
      internal__static_CGCMsgMemCachedSet_KeyPair__Descriptor = internal__static_CGCMsgMemCachedSet__Descriptor.NestedTypes[0];
      internal__static_CGCMsgMemCachedSet_KeyPair__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedSet.Types.KeyPair, global::CGCMsgMemCachedSet.Types.KeyPair.Builder>(internal__static_CGCMsgMemCachedSet_KeyPair__Descriptor,
              new string[] { "Name", "Value", });
      internal__static_CGCMsgMemCachedDelete__Descriptor = Descriptor.MessageTypes[18];
      internal__static_CGCMsgMemCachedDelete__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedDelete, global::CGCMsgMemCachedDelete.Builder>(internal__static_CGCMsgMemCachedDelete__Descriptor,
              new string[] { "Keys", });
      internal__static_CGCMsgMemCachedStats__Descriptor = Descriptor.MessageTypes[19];
      internal__static_CGCMsgMemCachedStats__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedStats, global::CGCMsgMemCachedStats.Builder>(internal__static_CGCMsgMemCachedStats__Descriptor,
              new string[] { });
      internal__static_CGCMsgMemCachedStatsResponse__Descriptor = Descriptor.MessageTypes[20];
      internal__static_CGCMsgMemCachedStatsResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgMemCachedStatsResponse, global::CGCMsgMemCachedStatsResponse.Builder>(internal__static_CGCMsgMemCachedStatsResponse__Descriptor,
              new string[] { "CurrConnections", "CmdGet", "CmdSet", "CmdFlush", "GetHits", "GetMisses", "DeleteHits", "DeleteMisses", "BytesRead", "BytesWritten", "LimitMaxbytes", "CurrItems", "Evictions", "Bytes", });
      internal__static_CGCMsgSQLStats__Descriptor = Descriptor.MessageTypes[21];
      internal__static_CGCMsgSQLStats__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgSQLStats, global::CGCMsgSQLStats.Builder>(internal__static_CGCMsgSQLStats__Descriptor,
              new string[] { "SchemaCatalog", });
      internal__static_CGCMsgSQLStatsResponse__Descriptor = Descriptor.MessageTypes[22];
      internal__static_CGCMsgSQLStatsResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgSQLStatsResponse, global::CGCMsgSQLStatsResponse.Builder>(internal__static_CGCMsgSQLStatsResponse__Descriptor,
              new string[] { "Threads", "ThreadsConnected", "ThreadsActive", "OperationsSubmitted", "PreparedStatementsExecuted", "NonPreparedStatementsExecuted", "DeadlockRetries", "OperationsTimedOutInQueue", "Errors", });
      internal__static_CMsgAMAddFreeLicense__Descriptor = Descriptor.MessageTypes[23];
      internal__static_CMsgAMAddFreeLicense__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMAddFreeLicense, global::CMsgAMAddFreeLicense.Builder>(internal__static_CMsgAMAddFreeLicense__Descriptor,
              new string[] { "Steamid", "IpPublic", "Packageid", "StoreCountryCode", });
      internal__static_CMsgAMAddFreeLicenseResponse__Descriptor = Descriptor.MessageTypes[24];
      internal__static_CMsgAMAddFreeLicenseResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMAddFreeLicenseResponse, global::CMsgAMAddFreeLicenseResponse.Builder>(internal__static_CMsgAMAddFreeLicenseResponse__Descriptor,
              new string[] { "Eresult", "PurchaseResultDetail", "Transid", });
      internal__static_CGCMsgGetIPLocation__Descriptor = Descriptor.MessageTypes[25];
      internal__static_CGCMsgGetIPLocation__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgGetIPLocation, global::CGCMsgGetIPLocation.Builder>(internal__static_CGCMsgGetIPLocation__Descriptor,
              new string[] { "Ips", });
      internal__static_CIPLocationInfo__Descriptor = Descriptor.MessageTypes[26];
      internal__static_CIPLocationInfo__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CIPLocationInfo, global::CIPLocationInfo.Builder>(internal__static_CIPLocationInfo__Descriptor,
              new string[] { "Ip", "Latitude", "Longitude", "Country", "State", "City", });
      internal__static_CGCMsgGetIPLocationResponse__Descriptor = Descriptor.MessageTypes[27];
      internal__static_CGCMsgGetIPLocationResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgGetIPLocationResponse, global::CGCMsgGetIPLocationResponse.Builder>(internal__static_CGCMsgGetIPLocationResponse__Descriptor,
              new string[] { "Infos", });
      internal__static_CGCMsgSystemStatsSchema__Descriptor = Descriptor.MessageTypes[28];
      internal__static_CGCMsgSystemStatsSchema__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgSystemStatsSchema, global::CGCMsgSystemStatsSchema.Builder>(internal__static_CGCMsgSystemStatsSchema__Descriptor,
              new string[] { "GcAppId", "SchemaKv", });
      internal__static_CGCMsgGetSystemStats__Descriptor = Descriptor.MessageTypes[29];
      internal__static_CGCMsgGetSystemStats__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgGetSystemStats, global::CGCMsgGetSystemStats.Builder>(internal__static_CGCMsgGetSystemStats__Descriptor,
              new string[] { });
      internal__static_CGCMsgGetSystemStatsResponse__Descriptor = Descriptor.MessageTypes[30];
      internal__static_CGCMsgGetSystemStatsResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCMsgGetSystemStatsResponse, global::CGCMsgGetSystemStatsResponse.Builder>(internal__static_CGCMsgGetSystemStatsResponse__Descriptor,
              new string[] { "GcAppId", "StatsKv", "ActiveJobs", "YieldingJobs", "UserSessions", "GameServerSessions", "Socaches", "SocachesToUnload", "SocachesLoading", "WritebackQueue", "SteamidLocks", "LogonQueue", "LogonJobs", });
      internal__static_CMsgAMSendEmail__Descriptor = Descriptor.MessageTypes[31];
      internal__static_CMsgAMSendEmail__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMSendEmail, global::CMsgAMSendEmail.Builder>(internal__static_CMsgAMSendEmail__Descriptor,
              new string[] { "Steamid", "EmailMsgType", "EmailFormat", "PersonaNameTokens", "SourceGc", "Tokens", });
      internal__static_CMsgAMSendEmail_ReplacementToken__Descriptor = internal__static_CMsgAMSendEmail__Descriptor.NestedTypes[0];
      internal__static_CMsgAMSendEmail_ReplacementToken__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMSendEmail.Types.ReplacementToken, global::CMsgAMSendEmail.Types.ReplacementToken.Builder>(internal__static_CMsgAMSendEmail_ReplacementToken__Descriptor,
              new string[] { "TokenName", "TokenValue", });
      internal__static_CMsgAMSendEmail_PersonaNameReplacementToken__Descriptor = internal__static_CMsgAMSendEmail__Descriptor.NestedTypes[1];
      internal__static_CMsgAMSendEmail_PersonaNameReplacementToken__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMSendEmail.Types.PersonaNameReplacementToken, global::CMsgAMSendEmail.Types.PersonaNameReplacementToken.Builder>(internal__static_CMsgAMSendEmail_PersonaNameReplacementToken__Descriptor,
              new string[] { "Steamid", "TokenName", });
      internal__static_CMsgAMSendEmailResponse__Descriptor = Descriptor.MessageTypes[32];
      internal__static_CMsgAMSendEmailResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMSendEmailResponse, global::CMsgAMSendEmailResponse.Builder>(internal__static_CMsgAMSendEmailResponse__Descriptor,
              new string[] { "Eresult", });
      internal__static_CMsgGCGetEmailTemplate__Descriptor = Descriptor.MessageTypes[33];
      internal__static_CMsgGCGetEmailTemplate__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetEmailTemplate, global::CMsgGCGetEmailTemplate.Builder>(internal__static_CMsgGCGetEmailTemplate__Descriptor,
              new string[] { "AppId", "EmailMsgType", "EmailLang", "EmailFormat", });
      internal__static_CMsgGCGetEmailTemplateResponse__Descriptor = Descriptor.MessageTypes[34];
      internal__static_CMsgGCGetEmailTemplateResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetEmailTemplateResponse, global::CMsgGCGetEmailTemplateResponse.Builder>(internal__static_CMsgGCGetEmailTemplateResponse__Descriptor,
              new string[] { "Eresult", "TemplateExists", "Template", });
      internal__static_CMsgAMGrantGuestPasses2__Descriptor = Descriptor.MessageTypes[35];
      internal__static_CMsgAMGrantGuestPasses2__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMGrantGuestPasses2, global::CMsgAMGrantGuestPasses2.Builder>(internal__static_CMsgAMGrantGuestPasses2__Descriptor,
              new string[] { "SteamId", "PackageId", "PassesToGrant", "DaysToExpiration", "Action", });
      internal__static_CMsgAMGrantGuestPasses2Response__Descriptor = Descriptor.MessageTypes[36];
      internal__static_CMsgAMGrantGuestPasses2Response__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAMGrantGuestPasses2Response, global::CMsgAMGrantGuestPasses2Response.Builder>(internal__static_CMsgAMGrantGuestPasses2Response__Descriptor,
              new string[] { "Eresult", "PassesGranted", });
      internal__static_CGCSystemMsg_GetAccountDetails__Descriptor = Descriptor.MessageTypes[37];
      internal__static_CGCSystemMsg_GetAccountDetails__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCSystemMsg_GetAccountDetails, global::CGCSystemMsg_GetAccountDetails.Builder>(internal__static_CGCSystemMsg_GetAccountDetails__Descriptor,
              new string[] { "Steamid", "Appid", });
      internal__static_CGCSystemMsg_GetAccountDetails_Response__Descriptor = Descriptor.MessageTypes[38];
      internal__static_CGCSystemMsg_GetAccountDetails_Response__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCSystemMsg_GetAccountDetails_Response, global::CGCSystemMsg_GetAccountDetails_Response.Builder>(internal__static_CGCSystemMsg_GetAccountDetails_Response__Descriptor,
              new string[] { "EresultDeprecated", "AccountName", "PersonaName", "IsProfilePublic", "IsInventoryPublic", "IsVacBanned", "IsCyberCafe", "IsSchoolAccount", "IsLimited", "IsSubscribed", "Package", "IsFreeTrialAccount", "FreeTrialExpiration", "IsLowViolence", "IsAccountLockedDown", "IsCommunityBanned", "IsTradeBanned", "TradeBanExpiration", "Accountid", "SuspensionEndTime", "Currency", "SteamLevel", });
      internal__static_CMsgGCGetPersonaNames__Descriptor = Descriptor.MessageTypes[39];
      internal__static_CMsgGCGetPersonaNames__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetPersonaNames, global::CMsgGCGetPersonaNames.Builder>(internal__static_CMsgGCGetPersonaNames__Descriptor,
              new string[] { "Steamids", });
      internal__static_CMsgGCGetPersonaNames_Response__Descriptor = Descriptor.MessageTypes[40];
      internal__static_CMsgGCGetPersonaNames_Response__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetPersonaNames_Response, global::CMsgGCGetPersonaNames_Response.Builder>(internal__static_CMsgGCGetPersonaNames_Response__Descriptor,
              new string[] { "SucceededLookups", "FailedLookupSteamids", });
      internal__static_CMsgGCGetPersonaNames_Response_PersonaName__Descriptor = internal__static_CMsgGCGetPersonaNames_Response__Descriptor.NestedTypes[0];
      internal__static_CMsgGCGetPersonaNames_Response_PersonaName__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetPersonaNames_Response.Types.PersonaName, global::CMsgGCGetPersonaNames_Response.Types.PersonaName.Builder>(internal__static_CMsgGCGetPersonaNames_Response_PersonaName__Descriptor,
              new string[] { "Steamid", "PersonaName_", });
      internal__static_CMsgGCCheckFriendship__Descriptor = Descriptor.MessageTypes[41];
      internal__static_CMsgGCCheckFriendship__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCCheckFriendship, global::CMsgGCCheckFriendship.Builder>(internal__static_CMsgGCCheckFriendship__Descriptor,
              new string[] { "SteamidLeft", "SteamidRight", });
      internal__static_CMsgGCCheckFriendship_Response__Descriptor = Descriptor.MessageTypes[42];
      internal__static_CMsgGCCheckFriendship_Response__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCCheckFriendship_Response, global::CMsgGCCheckFriendship_Response.Builder>(internal__static_CMsgGCCheckFriendship_Response__Descriptor,
              new string[] { "Success", "FoundFriendship", });
      internal__static_CMsgGCMsgMasterSetDirectory__Descriptor = Descriptor.MessageTypes[43];
      internal__static_CMsgGCMsgMasterSetDirectory__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetDirectory, global::CMsgGCMsgMasterSetDirectory.Builder>(internal__static_CMsgGCMsgMasterSetDirectory__Descriptor,
              new string[] { "MasterDirIndex", "Dir", });
      internal__static_CMsgGCMsgMasterSetDirectory_SubGC__Descriptor = internal__static_CMsgGCMsgMasterSetDirectory__Descriptor.NestedTypes[0];
      internal__static_CMsgGCMsgMasterSetDirectory_SubGC__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetDirectory.Types.SubGC, global::CMsgGCMsgMasterSetDirectory.Types.SubGC.Builder>(internal__static_CMsgGCMsgMasterSetDirectory_SubGC__Descriptor,
              new string[] { "DirIndex", "Name", "Box", "CommandLine", "GcBinary", });
      internal__static_CMsgGCMsgMasterSetDirectory_Response__Descriptor = Descriptor.MessageTypes[44];
      internal__static_CMsgGCMsgMasterSetDirectory_Response__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetDirectory_Response, global::CMsgGCMsgMasterSetDirectory_Response.Builder>(internal__static_CMsgGCMsgMasterSetDirectory_Response__Descriptor,
              new string[] { "Eresult", });
      internal__static_CMsgGCMsgWebAPIJobRequestForwardResponse__Descriptor = Descriptor.MessageTypes[45];
      internal__static_CMsgGCMsgWebAPIJobRequestForwardResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgWebAPIJobRequestForwardResponse, global::CMsgGCMsgWebAPIJobRequestForwardResponse.Builder>(internal__static_CMsgGCMsgWebAPIJobRequestForwardResponse__Descriptor,
              new string[] { "DirIndex", });
      internal__static_CGCSystemMsg_GetPurchaseTrust_Request__Descriptor = Descriptor.MessageTypes[46];
      internal__static_CGCSystemMsg_GetPurchaseTrust_Request__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCSystemMsg_GetPurchaseTrust_Request, global::CGCSystemMsg_GetPurchaseTrust_Request.Builder>(internal__static_CGCSystemMsg_GetPurchaseTrust_Request__Descriptor,
              new string[] { "Steamid", });
      internal__static_CGCSystemMsg_GetPurchaseTrust_Response__Descriptor = Descriptor.MessageTypes[47];
      internal__static_CGCSystemMsg_GetPurchaseTrust_Response__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCSystemMsg_GetPurchaseTrust_Response, global::CGCSystemMsg_GetPurchaseTrust_Response.Builder>(internal__static_CGCSystemMsg_GetPurchaseTrust_Response__Descriptor,
              new string[] { "HasPriorPurchaseHistory", "HasNoRecentPasswordResets", "IsWalletCashTrusted", "TimeAllTrusted", });
      internal__static_CMsgGCHAccountVacStatusChange__Descriptor = Descriptor.MessageTypes[48];
      internal__static_CMsgGCHAccountVacStatusChange__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCHAccountVacStatusChange, global::CMsgGCHAccountVacStatusChange.Builder>(internal__static_CMsgGCHAccountVacStatusChange__Descriptor,
              new string[] { "SteamId", "AppId", "RtimeVacbanStarts", "IsBannedNow", "IsBannedFuture", });
      internal__static_CMsgGCGetPartnerAccountLink__Descriptor = Descriptor.MessageTypes[49];
      internal__static_CMsgGCGetPartnerAccountLink__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetPartnerAccountLink, global::CMsgGCGetPartnerAccountLink.Builder>(internal__static_CMsgGCGetPartnerAccountLink__Descriptor,
              new string[] { "Steamid", });
      internal__static_CMsgGCGetPartnerAccountLink_Response__Descriptor = Descriptor.MessageTypes[50];
      internal__static_CMsgGCGetPartnerAccountLink_Response__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCGetPartnerAccountLink_Response, global::CMsgGCGetPartnerAccountLink_Response.Builder>(internal__static_CMsgGCGetPartnerAccountLink_Response__Descriptor,
              new string[] { "Pwid", "Nexonid", });
      internal__static_CMsgGCRoutingInfo__Descriptor = Descriptor.MessageTypes[51];
      internal__static_CMsgGCRoutingInfo__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCRoutingInfo, global::CMsgGCRoutingInfo.Builder>(internal__static_CMsgGCRoutingInfo__Descriptor,
              new string[] { "DirIndex", "Method", "Fallback", "ProtobufField", "WebapiParam", });
      internal__static_CMsgGCMsgMasterSetWebAPIRouting__Descriptor = Descriptor.MessageTypes[52];
      internal__static_CMsgGCMsgMasterSetWebAPIRouting__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetWebAPIRouting, global::CMsgGCMsgMasterSetWebAPIRouting.Builder>(internal__static_CMsgGCMsgMasterSetWebAPIRouting__Descriptor,
              new string[] { "Entries", });
      internal__static_CMsgGCMsgMasterSetWebAPIRouting_Entry__Descriptor = internal__static_CMsgGCMsgMasterSetWebAPIRouting__Descriptor.NestedTypes[0];
      internal__static_CMsgGCMsgMasterSetWebAPIRouting_Entry__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry, global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry.Builder>(internal__static_CMsgGCMsgMasterSetWebAPIRouting_Entry__Descriptor,
              new string[] { "InterfaceName", "MethodName", "Routing", });
      internal__static_CMsgGCMsgMasterSetClientMsgRouting__Descriptor = Descriptor.MessageTypes[53];
      internal__static_CMsgGCMsgMasterSetClientMsgRouting__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetClientMsgRouting, global::CMsgGCMsgMasterSetClientMsgRouting.Builder>(internal__static_CMsgGCMsgMasterSetClientMsgRouting__Descriptor,
              new string[] { "Entries", });
      internal__static_CMsgGCMsgMasterSetClientMsgRouting_Entry__Descriptor = internal__static_CMsgGCMsgMasterSetClientMsgRouting__Descriptor.NestedTypes[0];
      internal__static_CMsgGCMsgMasterSetClientMsgRouting_Entry__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry, global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry.Builder>(internal__static_CMsgGCMsgMasterSetClientMsgRouting_Entry__Descriptor,
              new string[] { "MsgType", "Routing", });
      internal__static_CMsgGCMsgMasterSetWebAPIRouting_Response__Descriptor = Descriptor.MessageTypes[54];
      internal__static_CMsgGCMsgMasterSetWebAPIRouting_Response__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetWebAPIRouting_Response, global::CMsgGCMsgMasterSetWebAPIRouting_Response.Builder>(internal__static_CMsgGCMsgMasterSetWebAPIRouting_Response__Descriptor,
              new string[] { "Eresult", });
      internal__static_CMsgGCMsgMasterSetClientMsgRouting_Response__Descriptor = Descriptor.MessageTypes[55];
      internal__static_CMsgGCMsgMasterSetClientMsgRouting_Response__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgMasterSetClientMsgRouting_Response, global::CMsgGCMsgMasterSetClientMsgRouting_Response.Builder>(internal__static_CMsgGCMsgMasterSetClientMsgRouting_Response__Descriptor,
              new string[] { "Eresult", });
      internal__static_CMsgGCMsgSetOptions__Descriptor = Descriptor.MessageTypes[56];
      internal__static_CMsgGCMsgSetOptions__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgSetOptions, global::CMsgGCMsgSetOptions.Builder>(internal__static_CMsgGCMsgSetOptions__Descriptor,
              new string[] { "Options", "ClientMsgRanges", });
      internal__static_CMsgGCMsgSetOptions_MessageRange__Descriptor = internal__static_CMsgGCMsgSetOptions__Descriptor.NestedTypes[0];
      internal__static_CMsgGCMsgSetOptions_MessageRange__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMsgSetOptions.Types.MessageRange, global::CMsgGCMsgSetOptions.Types.MessageRange.Builder>(internal__static_CMsgGCMsgSetOptions_MessageRange__Descriptor,
              new string[] { "Low", "High", });
      internal__static_CMsgGCHUpdateSession__Descriptor = Descriptor.MessageTypes[57];
      internal__static_CMsgGCHUpdateSession__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCHUpdateSession, global::CMsgGCHUpdateSession.Builder>(internal__static_CMsgGCHUpdateSession__Descriptor,
              new string[] { "SteamId", "AppId", "Online", "ServerSteamId", "ServerAddr", "ServerPort", "OsType", "ClientAddr", "ExtraFields", });
      internal__static_CMsgGCHUpdateSession_ExtraField__Descriptor = internal__static_CMsgGCHUpdateSession__Descriptor.NestedTypes[0];
      internal__static_CMsgGCHUpdateSession_ExtraField__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCHUpdateSession.Types.ExtraField, global::CMsgGCHUpdateSession.Types.ExtraField.Builder>(internal__static_CMsgGCHUpdateSession_ExtraField__Descriptor,
              new string[] { "Name", "Value", });
      internal__static_CMsgNotificationOfSuspiciousActivity__Descriptor = Descriptor.MessageTypes[58];
      internal__static_CMsgNotificationOfSuspiciousActivity__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgNotificationOfSuspiciousActivity, global::CMsgNotificationOfSuspiciousActivity.Builder>(internal__static_CMsgNotificationOfSuspiciousActivity__Descriptor,
              new string[] { "Steamid", "Appid", "MultipleInstances", });
      internal__static_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances__Descriptor = internal__static_CMsgNotificationOfSuspiciousActivity__Descriptor.NestedTypes[0];
      internal__static_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances, global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances.Builder>(internal__static_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances__Descriptor,
              new string[] { "AppInstanceCount", "OtherSteamids", });
      global::Steammessages.KeyField = pb::GeneratedSingleExtension<bool>.CreateInstance(global::Steammessages.Descriptor.Extensions[0]);
      global::Steammessages.MsgpoolSoftLimit = pb::GeneratedSingleExtension<int>.CreateInstance(global::Steammessages.Descriptor.Extensions[1]);
      global::Steammessages.MsgpoolHardLimit = pb::GeneratedSingleExtension<int>.CreateInstance(global::Steammessages.Descriptor.Extensions[2]);
      pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
      RegisterAllExtensions(registry);
      global::Google.ProtocolBuffers.DescriptorProtos.DescriptorProtoFile.RegisterAllExtensions(registry);
      return registry;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        global::Google.ProtocolBuffers.DescriptorProtos.DescriptorProtoFile.Descriptor, 
        }, assigner);
  }
  #endregion
  
}
#region Enums
public enum GCProtoBufMsgSrc {
  GCProtoBufMsgSrc_Unspecified = 0,
  GCProtoBufMsgSrc_FromSystem = 1,
  GCProtoBufMsgSrc_FromSteamID = 2,
  GCProtoBufMsgSrc_FromGC = 3,
  GCProtoBufMsgSrc_ReplySystem = 4,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgProtoBufHeader : pb::GeneratedMessage<CMsgProtoBufHeader, CMsgProtoBufHeader.Builder> {
  private CMsgProtoBufHeader() { }
  private static readonly CMsgProtoBufHeader defaultInstance = new CMsgProtoBufHeader().MakeReadOnly();
  private static readonly string[] _cMsgProtoBufHeaderFieldNames = new string[] { "client_session_id", "client_steam_id", "eresult", "error_message", "gc_dir_index_source", "gc_msg_src", "job_id_source", "job_id_target", "source_app_id", "target_job_name" };
  private static readonly uint[] _cMsgProtoBufHeaderFieldTags = new uint[] { 16, 9, 104, 114, 1608, 1600, 81, 89, 24, 98 };
  public static CMsgProtoBufHeader DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgProtoBufHeader DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgProtoBufHeader ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgProtoBufHeader__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgProtoBufHeader, CMsgProtoBufHeader.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgProtoBufHeader__FieldAccessorTable; }
  }
  
  public const int ClientSteamIdFieldNumber = 1;
  private bool hasClientSteamId;
  private ulong clientSteamId_;
  public bool HasClientSteamId {
    get { return hasClientSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ClientSteamId {
    get { return clientSteamId_; }
  }
  
  public const int ClientSessionIdFieldNumber = 2;
  private bool hasClientSessionId;
  private int clientSessionId_;
  public bool HasClientSessionId {
    get { return hasClientSessionId; }
  }
  public int ClientSessionId {
    get { return clientSessionId_; }
  }
  
  public const int SourceAppIdFieldNumber = 3;
  private bool hasSourceAppId;
  private uint sourceAppId_;
  public bool HasSourceAppId {
    get { return hasSourceAppId; }
  }
  [global::System.CLSCompliant(false)]
  public uint SourceAppId {
    get { return sourceAppId_; }
  }
  
  public const int JobIdSourceFieldNumber = 10;
  private bool hasJobIdSource;
  private ulong jobIdSource_ = 18446744073709551615;
  public bool HasJobIdSource {
    get { return hasJobIdSource; }
  }
  [global::System.CLSCompliant(false)]
  public ulong JobIdSource {
    get { return jobIdSource_; }
  }
  
  public const int JobIdTargetFieldNumber = 11;
  private bool hasJobIdTarget;
  private ulong jobIdTarget_ = 18446744073709551615;
  public bool HasJobIdTarget {
    get { return hasJobIdTarget; }
  }
  [global::System.CLSCompliant(false)]
  public ulong JobIdTarget {
    get { return jobIdTarget_; }
  }
  
  public const int TargetJobNameFieldNumber = 12;
  private bool hasTargetJobName;
  private string targetJobName_ = "";
  public bool HasTargetJobName {
    get { return hasTargetJobName; }
  }
  public string TargetJobName {
    get { return targetJobName_; }
  }
  
  public const int EresultFieldNumber = 13;
  private bool hasEresult;
  private int eresult_ = 2;
  public bool HasEresult {
    get { return hasEresult; }
  }
  public int Eresult {
    get { return eresult_; }
  }
  
  public const int ErrorMessageFieldNumber = 14;
  private bool hasErrorMessage;
  private string errorMessage_ = "";
  public bool HasErrorMessage {
    get { return hasErrorMessage; }
  }
  public string ErrorMessage {
    get { return errorMessage_; }
  }
  
  public const int GcMsgSrcFieldNumber = 200;
  private bool hasGcMsgSrc;
  private global::GCProtoBufMsgSrc gcMsgSrc_ = global::GCProtoBufMsgSrc.GCProtoBufMsgSrc_Unspecified;
  public bool HasGcMsgSrc {
    get { return hasGcMsgSrc; }
  }
  public global::GCProtoBufMsgSrc GcMsgSrc {
    get { return gcMsgSrc_; }
  }
  
  public const int GcDirIndexSourceFieldNumber = 201;
  private bool hasGcDirIndexSource;
  private uint gcDirIndexSource_;
  public bool HasGcDirIndexSource {
    get { return hasGcDirIndexSource; }
  }
  [global::System.CLSCompliant(false)]
  public uint GcDirIndexSource {
    get { return gcDirIndexSource_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgProtoBufHeaderFieldNames;
    if (hasClientSteamId) {
      output.WriteFixed64(1, field_names[1], ClientSteamId);
    }
    if (hasClientSessionId) {
      output.WriteInt32(2, field_names[0], ClientSessionId);
    }
    if (hasSourceAppId) {
      output.WriteUInt32(3, field_names[8], SourceAppId);
    }
    if (hasJobIdSource) {
      output.WriteFixed64(10, field_names[6], JobIdSource);
    }
    if (hasJobIdTarget) {
      output.WriteFixed64(11, field_names[7], JobIdTarget);
    }
    if (hasTargetJobName) {
      output.WriteString(12, field_names[9], TargetJobName);
    }
    if (hasEresult) {
      output.WriteInt32(13, field_names[2], Eresult);
    }
    if (hasErrorMessage) {
      output.WriteString(14, field_names[3], ErrorMessage);
    }
    if (hasGcMsgSrc) {
      output.WriteEnum(200, field_names[5], (int) GcMsgSrc, GcMsgSrc);
    }
    if (hasGcDirIndexSource) {
      output.WriteUInt32(201, field_names[4], GcDirIndexSource);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasClientSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, ClientSteamId);
      }
      if (hasClientSessionId) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, ClientSessionId);
      }
      if (hasSourceAppId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, SourceAppId);
      }
      if (hasJobIdSource) {
        size += pb::CodedOutputStream.ComputeFixed64Size(10, JobIdSource);
      }
      if (hasJobIdTarget) {
        size += pb::CodedOutputStream.ComputeFixed64Size(11, JobIdTarget);
      }
      if (hasTargetJobName) {
        size += pb::CodedOutputStream.ComputeStringSize(12, TargetJobName);
      }
      if (hasEresult) {
        size += pb::CodedOutputStream.ComputeInt32Size(13, Eresult);
      }
      if (hasErrorMessage) {
        size += pb::CodedOutputStream.ComputeStringSize(14, ErrorMessage);
      }
      if (hasGcMsgSrc) {
        size += pb::CodedOutputStream.ComputeEnumSize(200, (int) GcMsgSrc);
      }
      if (hasGcDirIndexSource) {
        size += pb::CodedOutputStream.ComputeUInt32Size(201, GcDirIndexSource);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgProtoBufHeader ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgProtoBufHeader ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgProtoBufHeader ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgProtoBufHeader ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgProtoBufHeader ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgProtoBufHeader ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgProtoBufHeader ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgProtoBufHeader ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgProtoBufHeader ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgProtoBufHeader ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgProtoBufHeader MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgProtoBufHeader prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgProtoBufHeader, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgProtoBufHeader cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgProtoBufHeader result;
    
    private CMsgProtoBufHeader PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgProtoBufHeader original = result;
        result = new CMsgProtoBufHeader();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgProtoBufHeader MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgProtoBufHeader.Descriptor; }
    }
    
    public override CMsgProtoBufHeader DefaultInstanceForType {
      get { return global::CMsgProtoBufHeader.DefaultInstance; }
    }
    
    public override CMsgProtoBufHeader BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgProtoBufHeader) {
        return MergeFrom((CMsgProtoBufHeader) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgProtoBufHeader other) {
      if (other == global::CMsgProtoBufHeader.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasClientSteamId) {
        ClientSteamId = other.ClientSteamId;
      }
      if (other.HasClientSessionId) {
        ClientSessionId = other.ClientSessionId;
      }
      if (other.HasSourceAppId) {
        SourceAppId = other.SourceAppId;
      }
      if (other.HasJobIdSource) {
        JobIdSource = other.JobIdSource;
      }
      if (other.HasJobIdTarget) {
        JobIdTarget = other.JobIdTarget;
      }
      if (other.HasTargetJobName) {
        TargetJobName = other.TargetJobName;
      }
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      if (other.HasErrorMessage) {
        ErrorMessage = other.ErrorMessage;
      }
      if (other.HasGcMsgSrc) {
        GcMsgSrc = other.GcMsgSrc;
      }
      if (other.HasGcDirIndexSource) {
        GcDirIndexSource = other.GcDirIndexSource;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgProtoBufHeaderFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgProtoBufHeaderFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasClientSteamId = input.ReadFixed64(ref result.clientSteamId_);
            break;
          }
          case 16: {
            result.hasClientSessionId = input.ReadInt32(ref result.clientSessionId_);
            break;
          }
          case 24: {
            result.hasSourceAppId = input.ReadUInt32(ref result.sourceAppId_);
            break;
          }
          case 81: {
            result.hasJobIdSource = input.ReadFixed64(ref result.jobIdSource_);
            break;
          }
          case 89: {
            result.hasJobIdTarget = input.ReadFixed64(ref result.jobIdTarget_);
            break;
          }
          case 98: {
            result.hasTargetJobName = input.ReadString(ref result.targetJobName_);
            break;
          }
          case 104: {
            result.hasEresult = input.ReadInt32(ref result.eresult_);
            break;
          }
          case 114: {
            result.hasErrorMessage = input.ReadString(ref result.errorMessage_);
            break;
          }
          case 1600: {
            object unknown;
            if(input.ReadEnum(ref result.gcMsgSrc_, out unknown)) {
              result.hasGcMsgSrc = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(200, (ulong)(int)unknown);
            }
            break;
          }
          case 1608: {
            result.hasGcDirIndexSource = input.ReadUInt32(ref result.gcDirIndexSource_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasClientSteamId {
      get { return result.hasClientSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ClientSteamId {
      get { return result.ClientSteamId; }
      set { SetClientSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClientSteamId(ulong value) {
      PrepareBuilder();
      result.hasClientSteamId = true;
      result.clientSteamId_ = value;
      return this;
    }
    public Builder ClearClientSteamId() {
      PrepareBuilder();
      result.hasClientSteamId = false;
      result.clientSteamId_ = 0;
      return this;
    }
    
    public bool HasClientSessionId {
      get { return result.hasClientSessionId; }
    }
    public int ClientSessionId {
      get { return result.ClientSessionId; }
      set { SetClientSessionId(value); }
    }
    public Builder SetClientSessionId(int value) {
      PrepareBuilder();
      result.hasClientSessionId = true;
      result.clientSessionId_ = value;
      return this;
    }
    public Builder ClearClientSessionId() {
      PrepareBuilder();
      result.hasClientSessionId = false;
      result.clientSessionId_ = 0;
      return this;
    }
    
    public bool HasSourceAppId {
      get { return result.hasSourceAppId; }
    }
    [global::System.CLSCompliant(false)]
    public uint SourceAppId {
      get { return result.SourceAppId; }
      set { SetSourceAppId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSourceAppId(uint value) {
      PrepareBuilder();
      result.hasSourceAppId = true;
      result.sourceAppId_ = value;
      return this;
    }
    public Builder ClearSourceAppId() {
      PrepareBuilder();
      result.hasSourceAppId = false;
      result.sourceAppId_ = 0;
      return this;
    }
    
    public bool HasJobIdSource {
      get { return result.hasJobIdSource; }
    }
    [global::System.CLSCompliant(false)]
    public ulong JobIdSource {
      get { return result.JobIdSource; }
      set { SetJobIdSource(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetJobIdSource(ulong value) {
      PrepareBuilder();
      result.hasJobIdSource = true;
      result.jobIdSource_ = value;
      return this;
    }
    public Builder ClearJobIdSource() {
      PrepareBuilder();
      result.hasJobIdSource = false;
      result.jobIdSource_ = 18446744073709551615;
      return this;
    }
    
    public bool HasJobIdTarget {
      get { return result.hasJobIdTarget; }
    }
    [global::System.CLSCompliant(false)]
    public ulong JobIdTarget {
      get { return result.JobIdTarget; }
      set { SetJobIdTarget(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetJobIdTarget(ulong value) {
      PrepareBuilder();
      result.hasJobIdTarget = true;
      result.jobIdTarget_ = value;
      return this;
    }
    public Builder ClearJobIdTarget() {
      PrepareBuilder();
      result.hasJobIdTarget = false;
      result.jobIdTarget_ = 18446744073709551615;
      return this;
    }
    
    public bool HasTargetJobName {
      get { return result.hasTargetJobName; }
    }
    public string TargetJobName {
      get { return result.TargetJobName; }
      set { SetTargetJobName(value); }
    }
    public Builder SetTargetJobName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasTargetJobName = true;
      result.targetJobName_ = value;
      return this;
    }
    public Builder ClearTargetJobName() {
      PrepareBuilder();
      result.hasTargetJobName = false;
      result.targetJobName_ = "";
      return this;
    }
    
    public bool HasEresult {
      get { return result.hasEresult; }
    }
    public int Eresult {
      get { return result.Eresult; }
      set { SetEresult(value); }
    }
    public Builder SetEresult(int value) {
      PrepareBuilder();
      result.hasEresult = true;
      result.eresult_ = value;
      return this;
    }
    public Builder ClearEresult() {
      PrepareBuilder();
      result.hasEresult = false;
      result.eresult_ = 2;
      return this;
    }
    
    public bool HasErrorMessage {
      get { return result.hasErrorMessage; }
    }
    public string ErrorMessage {
      get { return result.ErrorMessage; }
      set { SetErrorMessage(value); }
    }
    public Builder SetErrorMessage(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasErrorMessage = true;
      result.errorMessage_ = value;
      return this;
    }
    public Builder ClearErrorMessage() {
      PrepareBuilder();
      result.hasErrorMessage = false;
      result.errorMessage_ = "";
      return this;
    }
    
    public bool HasGcMsgSrc {
     get { return result.hasGcMsgSrc; }
    }
    public global::GCProtoBufMsgSrc GcMsgSrc {
      get { return result.GcMsgSrc; }
      set { SetGcMsgSrc(value); }
    }
    public Builder SetGcMsgSrc(global::GCProtoBufMsgSrc value) {
      PrepareBuilder();
      result.hasGcMsgSrc = true;
      result.gcMsgSrc_ = value;
      return this;
    }
    public Builder ClearGcMsgSrc() {
      PrepareBuilder();
      result.hasGcMsgSrc = false;
      result.gcMsgSrc_ = global::GCProtoBufMsgSrc.GCProtoBufMsgSrc_Unspecified;
      return this;
    }
    
    public bool HasGcDirIndexSource {
      get { return result.hasGcDirIndexSource; }
    }
    [global::System.CLSCompliant(false)]
    public uint GcDirIndexSource {
      get { return result.GcDirIndexSource; }
      set { SetGcDirIndexSource(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGcDirIndexSource(uint value) {
      PrepareBuilder();
      result.hasGcDirIndexSource = true;
      result.gcDirIndexSource_ = value;
      return this;
    }
    public Builder ClearGcDirIndexSource() {
      PrepareBuilder();
      result.hasGcDirIndexSource = false;
      result.gcDirIndexSource_ = 0;
      return this;
    }
  }
  static CMsgProtoBufHeader() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgWebAPIKey : pb::GeneratedMessage<CMsgWebAPIKey, CMsgWebAPIKey.Builder> {
  private CMsgWebAPIKey() { }
  private static readonly CMsgWebAPIKey defaultInstance = new CMsgWebAPIKey().MakeReadOnly();
  private static readonly string[] _cMsgWebAPIKeyFieldNames = new string[] { "account_id", "domain", "key_id", "publisher_group_id", "status" };
  private static readonly uint[] _cMsgWebAPIKeyFieldTags = new uint[] { 16, 42, 32, 24, 8 };
  public static CMsgWebAPIKey DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgWebAPIKey DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgWebAPIKey ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgWebAPIKey__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgWebAPIKey, CMsgWebAPIKey.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgWebAPIKey__FieldAccessorTable; }
  }
  
  public const int StatusFieldNumber = 1;
  private bool hasStatus;
  private uint status_ = 255;
  public bool HasStatus {
    get { return hasStatus; }
  }
  [global::System.CLSCompliant(false)]
  public uint Status {
    get { return status_; }
  }
  
  public const int AccountIdFieldNumber = 2;
  private bool hasAccountId;
  private uint accountId_;
  public bool HasAccountId {
    get { return hasAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AccountId {
    get { return accountId_; }
  }
  
  public const int PublisherGroupIdFieldNumber = 3;
  private bool hasPublisherGroupId;
  private uint publisherGroupId_;
  public bool HasPublisherGroupId {
    get { return hasPublisherGroupId; }
  }
  [global::System.CLSCompliant(false)]
  public uint PublisherGroupId {
    get { return publisherGroupId_; }
  }
  
  public const int KeyIdFieldNumber = 4;
  private bool hasKeyId;
  private uint keyId_;
  public bool HasKeyId {
    get { return hasKeyId; }
  }
  [global::System.CLSCompliant(false)]
  public uint KeyId {
    get { return keyId_; }
  }
  
  public const int DomainFieldNumber = 5;
  private bool hasDomain;
  private string domain_ = "";
  public bool HasDomain {
    get { return hasDomain; }
  }
  public string Domain {
    get { return domain_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgWebAPIKeyFieldNames;
    if (hasStatus) {
      output.WriteUInt32(1, field_names[4], Status);
    }
    if (hasAccountId) {
      output.WriteUInt32(2, field_names[0], AccountId);
    }
    if (hasPublisherGroupId) {
      output.WriteUInt32(3, field_names[3], PublisherGroupId);
    }
    if (hasKeyId) {
      output.WriteUInt32(4, field_names[2], KeyId);
    }
    if (hasDomain) {
      output.WriteString(5, field_names[1], Domain);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Status);
      }
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, AccountId);
      }
      if (hasPublisherGroupId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, PublisherGroupId);
      }
      if (hasKeyId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, KeyId);
      }
      if (hasDomain) {
        size += pb::CodedOutputStream.ComputeStringSize(5, Domain);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgWebAPIKey ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgWebAPIKey ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgWebAPIKey ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgWebAPIKey ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgWebAPIKey ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgWebAPIKey ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgWebAPIKey ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgWebAPIKey ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgWebAPIKey ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgWebAPIKey ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgWebAPIKey MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgWebAPIKey prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgWebAPIKey, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgWebAPIKey cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgWebAPIKey result;
    
    private CMsgWebAPIKey PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgWebAPIKey original = result;
        result = new CMsgWebAPIKey();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgWebAPIKey MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgWebAPIKey.Descriptor; }
    }
    
    public override CMsgWebAPIKey DefaultInstanceForType {
      get { return global::CMsgWebAPIKey.DefaultInstance; }
    }
    
    public override CMsgWebAPIKey BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgWebAPIKey) {
        return MergeFrom((CMsgWebAPIKey) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgWebAPIKey other) {
      if (other == global::CMsgWebAPIKey.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasPublisherGroupId) {
        PublisherGroupId = other.PublisherGroupId;
      }
      if (other.HasKeyId) {
        KeyId = other.KeyId;
      }
      if (other.HasDomain) {
        Domain = other.Domain;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgWebAPIKeyFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgWebAPIKeyFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasStatus = input.ReadUInt32(ref result.status_);
            break;
          }
          case 16: {
            result.hasAccountId = input.ReadUInt32(ref result.accountId_);
            break;
          }
          case 24: {
            result.hasPublisherGroupId = input.ReadUInt32(ref result.publisherGroupId_);
            break;
          }
          case 32: {
            result.hasKeyId = input.ReadUInt32(ref result.keyId_);
            break;
          }
          case 42: {
            result.hasDomain = input.ReadString(ref result.domain_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasStatus {
      get { return result.hasStatus; }
    }
    [global::System.CLSCompliant(false)]
    public uint Status {
      get { return result.Status; }
      set { SetStatus(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetStatus(uint value) {
      PrepareBuilder();
      result.hasStatus = true;
      result.status_ = value;
      return this;
    }
    public Builder ClearStatus() {
      PrepareBuilder();
      result.hasStatus = false;
      result.status_ = 255;
      return this;
    }
    
    public bool HasAccountId {
      get { return result.hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return result.AccountId; }
      set { SetAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAccountId(uint value) {
      PrepareBuilder();
      result.hasAccountId = true;
      result.accountId_ = value;
      return this;
    }
    public Builder ClearAccountId() {
      PrepareBuilder();
      result.hasAccountId = false;
      result.accountId_ = 0;
      return this;
    }
    
    public bool HasPublisherGroupId {
      get { return result.hasPublisherGroupId; }
    }
    [global::System.CLSCompliant(false)]
    public uint PublisherGroupId {
      get { return result.PublisherGroupId; }
      set { SetPublisherGroupId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPublisherGroupId(uint value) {
      PrepareBuilder();
      result.hasPublisherGroupId = true;
      result.publisherGroupId_ = value;
      return this;
    }
    public Builder ClearPublisherGroupId() {
      PrepareBuilder();
      result.hasPublisherGroupId = false;
      result.publisherGroupId_ = 0;
      return this;
    }
    
    public bool HasKeyId {
      get { return result.hasKeyId; }
    }
    [global::System.CLSCompliant(false)]
    public uint KeyId {
      get { return result.KeyId; }
      set { SetKeyId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetKeyId(uint value) {
      PrepareBuilder();
      result.hasKeyId = true;
      result.keyId_ = value;
      return this;
    }
    public Builder ClearKeyId() {
      PrepareBuilder();
      result.hasKeyId = false;
      result.keyId_ = 0;
      return this;
    }
    
    public bool HasDomain {
      get { return result.hasDomain; }
    }
    public string Domain {
      get { return result.Domain; }
      set { SetDomain(value); }
    }
    public Builder SetDomain(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDomain = true;
      result.domain_ = value;
      return this;
    }
    public Builder ClearDomain() {
      PrepareBuilder();
      result.hasDomain = false;
      result.domain_ = "";
      return this;
    }
  }
  static CMsgWebAPIKey() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgHttpRequest : pb::GeneratedMessage<CMsgHttpRequest, CMsgHttpRequest.Builder> {
  private CMsgHttpRequest() { }
  private static readonly CMsgHttpRequest defaultInstance = new CMsgHttpRequest().MakeReadOnly();
  private static readonly string[] _cMsgHttpRequestFieldNames = new string[] { "absolute_timeout", "body", "get_params", "headers", "hostname", "post_params", "request_method", "url" };
  private static readonly uint[] _cMsgHttpRequestFieldTags = new uint[] { 64, 58, 42, 34, 18, 50, 8, 26 };
  public static CMsgHttpRequest DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgHttpRequest DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgHttpRequest ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgHttpRequest__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgHttpRequest, CMsgHttpRequest.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgHttpRequest__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class RequestHeader : pb::GeneratedMessage<RequestHeader, RequestHeader.Builder> {
      private RequestHeader() { }
      private static readonly RequestHeader defaultInstance = new RequestHeader().MakeReadOnly();
      private static readonly string[] _requestHeaderFieldNames = new string[] { "name", "value" };
      private static readonly uint[] _requestHeaderFieldTags = new uint[] { 10, 18 };
      public static RequestHeader DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override RequestHeader DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override RequestHeader ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgHttpRequest_RequestHeader__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<RequestHeader, RequestHeader.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgHttpRequest_RequestHeader__FieldAccessorTable; }
      }
      
      public const int NameFieldNumber = 1;
      private bool hasName;
      private string name_ = "";
      public bool HasName {
        get { return hasName; }
      }
      public string Name {
        get { return name_; }
      }
      
      public const int ValueFieldNumber = 2;
      private bool hasValue;
      private string value_ = "";
      public bool HasValue {
        get { return hasValue; }
      }
      public string Value {
        get { return value_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _requestHeaderFieldNames;
        if (hasName) {
          output.WriteString(1, field_names[0], Name);
        }
        if (hasValue) {
          output.WriteString(2, field_names[1], Value);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasName) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Name);
          }
          if (hasValue) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Value);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static RequestHeader ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static RequestHeader ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static RequestHeader ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static RequestHeader ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static RequestHeader ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static RequestHeader ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static RequestHeader ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static RequestHeader ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static RequestHeader ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static RequestHeader ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private RequestHeader MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(RequestHeader prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<RequestHeader, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(RequestHeader cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private RequestHeader result;
        
        private RequestHeader PrepareBuilder() {
          if (resultIsReadOnly) {
            RequestHeader original = result;
            result = new RequestHeader();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override RequestHeader MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgHttpRequest.Types.RequestHeader.Descriptor; }
        }
        
        public override RequestHeader DefaultInstanceForType {
          get { return global::CMsgHttpRequest.Types.RequestHeader.DefaultInstance; }
        }
        
        public override RequestHeader BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is RequestHeader) {
            return MergeFrom((RequestHeader) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(RequestHeader other) {
          if (other == global::CMsgHttpRequest.Types.RequestHeader.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasValue) {
            Value = other.Value;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_requestHeaderFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _requestHeaderFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasName = input.ReadString(ref result.name_);
                break;
              }
              case 18: {
                result.hasValue = input.ReadString(ref result.value_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasName {
          get { return result.hasName; }
        }
        public string Name {
          get { return result.Name; }
          set { SetName(value); }
        }
        public Builder SetName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder ClearName() {
          PrepareBuilder();
          result.hasName = false;
          result.name_ = "";
          return this;
        }
        
        public bool HasValue {
          get { return result.hasValue; }
        }
        public string Value {
          get { return result.Value; }
          set { SetValue(value); }
        }
        public Builder SetValue(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder ClearValue() {
          PrepareBuilder();
          result.hasValue = false;
          result.value_ = "";
          return this;
        }
      }
      static RequestHeader() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class QueryParam : pb::GeneratedMessage<QueryParam, QueryParam.Builder> {
      private QueryParam() { }
      private static readonly QueryParam defaultInstance = new QueryParam().MakeReadOnly();
      private static readonly string[] _queryParamFieldNames = new string[] { "name", "value" };
      private static readonly uint[] _queryParamFieldTags = new uint[] { 10, 18 };
      public static QueryParam DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override QueryParam DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override QueryParam ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgHttpRequest_QueryParam__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<QueryParam, QueryParam.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgHttpRequest_QueryParam__FieldAccessorTable; }
      }
      
      public const int NameFieldNumber = 1;
      private bool hasName;
      private string name_ = "";
      public bool HasName {
        get { return hasName; }
      }
      public string Name {
        get { return name_; }
      }
      
      public const int ValueFieldNumber = 2;
      private bool hasValue;
      private pb::ByteString value_ = pb::ByteString.Empty;
      public bool HasValue {
        get { return hasValue; }
      }
      public pb::ByteString Value {
        get { return value_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _queryParamFieldNames;
        if (hasName) {
          output.WriteString(1, field_names[0], Name);
        }
        if (hasValue) {
          output.WriteBytes(2, field_names[1], Value);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasName) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Name);
          }
          if (hasValue) {
            size += pb::CodedOutputStream.ComputeBytesSize(2, Value);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static QueryParam ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static QueryParam ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static QueryParam ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static QueryParam ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static QueryParam ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static QueryParam ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static QueryParam ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static QueryParam ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static QueryParam ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static QueryParam ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private QueryParam MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(QueryParam prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<QueryParam, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(QueryParam cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private QueryParam result;
        
        private QueryParam PrepareBuilder() {
          if (resultIsReadOnly) {
            QueryParam original = result;
            result = new QueryParam();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override QueryParam MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgHttpRequest.Types.QueryParam.Descriptor; }
        }
        
        public override QueryParam DefaultInstanceForType {
          get { return global::CMsgHttpRequest.Types.QueryParam.DefaultInstance; }
        }
        
        public override QueryParam BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is QueryParam) {
            return MergeFrom((QueryParam) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(QueryParam other) {
          if (other == global::CMsgHttpRequest.Types.QueryParam.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasValue) {
            Value = other.Value;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_queryParamFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _queryParamFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasName = input.ReadString(ref result.name_);
                break;
              }
              case 18: {
                result.hasValue = input.ReadBytes(ref result.value_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasName {
          get { return result.hasName; }
        }
        public string Name {
          get { return result.Name; }
          set { SetName(value); }
        }
        public Builder SetName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder ClearName() {
          PrepareBuilder();
          result.hasName = false;
          result.name_ = "";
          return this;
        }
        
        public bool HasValue {
          get { return result.hasValue; }
        }
        public pb::ByteString Value {
          get { return result.Value; }
          set { SetValue(value); }
        }
        public Builder SetValue(pb::ByteString value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder ClearValue() {
          PrepareBuilder();
          result.hasValue = false;
          result.value_ = pb::ByteString.Empty;
          return this;
        }
      }
      static QueryParam() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int RequestMethodFieldNumber = 1;
  private bool hasRequestMethod;
  private uint requestMethod_;
  public bool HasRequestMethod {
    get { return hasRequestMethod; }
  }
  [global::System.CLSCompliant(false)]
  public uint RequestMethod {
    get { return requestMethod_; }
  }
  
  public const int HostnameFieldNumber = 2;
  private bool hasHostname;
  private string hostname_ = "";
  public bool HasHostname {
    get { return hasHostname; }
  }
  public string Hostname {
    get { return hostname_; }
  }
  
  public const int UrlFieldNumber = 3;
  private bool hasUrl;
  private string url_ = "";
  public bool HasUrl {
    get { return hasUrl; }
  }
  public string Url {
    get { return url_; }
  }
  
  public const int HeadersFieldNumber = 4;
  private pbc::PopsicleList<global::CMsgHttpRequest.Types.RequestHeader> headers_ = new pbc::PopsicleList<global::CMsgHttpRequest.Types.RequestHeader>();
  public scg::IList<global::CMsgHttpRequest.Types.RequestHeader> HeadersList {
    get { return headers_; }
  }
  public int HeadersCount {
    get { return headers_.Count; }
  }
  public global::CMsgHttpRequest.Types.RequestHeader GetHeaders(int index) {
    return headers_[index];
  }
  
  public const int GetParamsFieldNumber = 5;
  private pbc::PopsicleList<global::CMsgHttpRequest.Types.QueryParam> getParams_ = new pbc::PopsicleList<global::CMsgHttpRequest.Types.QueryParam>();
  public scg::IList<global::CMsgHttpRequest.Types.QueryParam> GetParamsList {
    get { return getParams_; }
  }
  public int GetParamsCount {
    get { return getParams_.Count; }
  }
  public global::CMsgHttpRequest.Types.QueryParam GetGetParams(int index) {
    return getParams_[index];
  }
  
  public const int PostParamsFieldNumber = 6;
  private pbc::PopsicleList<global::CMsgHttpRequest.Types.QueryParam> postParams_ = new pbc::PopsicleList<global::CMsgHttpRequest.Types.QueryParam>();
  public scg::IList<global::CMsgHttpRequest.Types.QueryParam> PostParamsList {
    get { return postParams_; }
  }
  public int PostParamsCount {
    get { return postParams_.Count; }
  }
  public global::CMsgHttpRequest.Types.QueryParam GetPostParams(int index) {
    return postParams_[index];
  }
  
  public const int BodyFieldNumber = 7;
  private bool hasBody;
  private pb::ByteString body_ = pb::ByteString.Empty;
  public bool HasBody {
    get { return hasBody; }
  }
  public pb::ByteString Body {
    get { return body_; }
  }
  
  public const int AbsoluteTimeoutFieldNumber = 8;
  private bool hasAbsoluteTimeout;
  private uint absoluteTimeout_;
  public bool HasAbsoluteTimeout {
    get { return hasAbsoluteTimeout; }
  }
  [global::System.CLSCompliant(false)]
  public uint AbsoluteTimeout {
    get { return absoluteTimeout_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgHttpRequestFieldNames;
    if (hasRequestMethod) {
      output.WriteUInt32(1, field_names[6], RequestMethod);
    }
    if (hasHostname) {
      output.WriteString(2, field_names[4], Hostname);
    }
    if (hasUrl) {
      output.WriteString(3, field_names[7], Url);
    }
    if (headers_.Count > 0) {
      output.WriteMessageArray(4, field_names[3], headers_);
    }
    if (getParams_.Count > 0) {
      output.WriteMessageArray(5, field_names[2], getParams_);
    }
    if (postParams_.Count > 0) {
      output.WriteMessageArray(6, field_names[5], postParams_);
    }
    if (hasBody) {
      output.WriteBytes(7, field_names[1], Body);
    }
    if (hasAbsoluteTimeout) {
      output.WriteUInt32(8, field_names[0], AbsoluteTimeout);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasRequestMethod) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, RequestMethod);
      }
      if (hasHostname) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Hostname);
      }
      if (hasUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Url);
      }
      foreach (global::CMsgHttpRequest.Types.RequestHeader element in HeadersList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      foreach (global::CMsgHttpRequest.Types.QueryParam element in GetParamsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      foreach (global::CMsgHttpRequest.Types.QueryParam element in PostParamsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, element);
      }
      if (hasBody) {
        size += pb::CodedOutputStream.ComputeBytesSize(7, Body);
      }
      if (hasAbsoluteTimeout) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, AbsoluteTimeout);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgHttpRequest ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgHttpRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgHttpRequest ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgHttpRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgHttpRequest ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgHttpRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgHttpRequest ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgHttpRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgHttpRequest ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgHttpRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgHttpRequest MakeReadOnly() {
    headers_.MakeReadOnly();
    getParams_.MakeReadOnly();
    postParams_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgHttpRequest prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgHttpRequest, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgHttpRequest cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgHttpRequest result;
    
    private CMsgHttpRequest PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgHttpRequest original = result;
        result = new CMsgHttpRequest();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgHttpRequest MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgHttpRequest.Descriptor; }
    }
    
    public override CMsgHttpRequest DefaultInstanceForType {
      get { return global::CMsgHttpRequest.DefaultInstance; }
    }
    
    public override CMsgHttpRequest BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgHttpRequest) {
        return MergeFrom((CMsgHttpRequest) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgHttpRequest other) {
      if (other == global::CMsgHttpRequest.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasRequestMethod) {
        RequestMethod = other.RequestMethod;
      }
      if (other.HasHostname) {
        Hostname = other.Hostname;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.headers_.Count != 0) {
        result.headers_.Add(other.headers_);
      }
      if (other.getParams_.Count != 0) {
        result.getParams_.Add(other.getParams_);
      }
      if (other.postParams_.Count != 0) {
        result.postParams_.Add(other.postParams_);
      }
      if (other.HasBody) {
        Body = other.Body;
      }
      if (other.HasAbsoluteTimeout) {
        AbsoluteTimeout = other.AbsoluteTimeout;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgHttpRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgHttpRequestFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasRequestMethod = input.ReadUInt32(ref result.requestMethod_);
            break;
          }
          case 18: {
            result.hasHostname = input.ReadString(ref result.hostname_);
            break;
          }
          case 26: {
            result.hasUrl = input.ReadString(ref result.url_);
            break;
          }
          case 34: {
            input.ReadMessageArray(tag, field_name, result.headers_, global::CMsgHttpRequest.Types.RequestHeader.DefaultInstance, extensionRegistry);
            break;
          }
          case 42: {
            input.ReadMessageArray(tag, field_name, result.getParams_, global::CMsgHttpRequest.Types.QueryParam.DefaultInstance, extensionRegistry);
            break;
          }
          case 50: {
            input.ReadMessageArray(tag, field_name, result.postParams_, global::CMsgHttpRequest.Types.QueryParam.DefaultInstance, extensionRegistry);
            break;
          }
          case 58: {
            result.hasBody = input.ReadBytes(ref result.body_);
            break;
          }
          case 64: {
            result.hasAbsoluteTimeout = input.ReadUInt32(ref result.absoluteTimeout_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasRequestMethod {
      get { return result.hasRequestMethod; }
    }
    [global::System.CLSCompliant(false)]
    public uint RequestMethod {
      get { return result.RequestMethod; }
      set { SetRequestMethod(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetRequestMethod(uint value) {
      PrepareBuilder();
      result.hasRequestMethod = true;
      result.requestMethod_ = value;
      return this;
    }
    public Builder ClearRequestMethod() {
      PrepareBuilder();
      result.hasRequestMethod = false;
      result.requestMethod_ = 0;
      return this;
    }
    
    public bool HasHostname {
      get { return result.hasHostname; }
    }
    public string Hostname {
      get { return result.Hostname; }
      set { SetHostname(value); }
    }
    public Builder SetHostname(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasHostname = true;
      result.hostname_ = value;
      return this;
    }
    public Builder ClearHostname() {
      PrepareBuilder();
      result.hasHostname = false;
      result.hostname_ = "";
      return this;
    }
    
    public bool HasUrl {
      get { return result.hasUrl; }
    }
    public string Url {
      get { return result.Url; }
      set { SetUrl(value); }
    }
    public Builder SetUrl(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasUrl = true;
      result.url_ = value;
      return this;
    }
    public Builder ClearUrl() {
      PrepareBuilder();
      result.hasUrl = false;
      result.url_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgHttpRequest.Types.RequestHeader> HeadersList {
      get { return PrepareBuilder().headers_; }
    }
    public int HeadersCount {
      get { return result.HeadersCount; }
    }
    public global::CMsgHttpRequest.Types.RequestHeader GetHeaders(int index) {
      return result.GetHeaders(index);
    }
    public Builder SetHeaders(int index, global::CMsgHttpRequest.Types.RequestHeader value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.headers_[index] = value;
      return this;
    }
    public Builder SetHeaders(int index, global::CMsgHttpRequest.Types.RequestHeader.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.headers_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddHeaders(global::CMsgHttpRequest.Types.RequestHeader value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.headers_.Add(value);
      return this;
    }
    public Builder AddHeaders(global::CMsgHttpRequest.Types.RequestHeader.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.headers_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeHeaders(scg::IEnumerable<global::CMsgHttpRequest.Types.RequestHeader> values) {
      PrepareBuilder();
      result.headers_.Add(values);
      return this;
    }
    public Builder ClearHeaders() {
      PrepareBuilder();
      result.headers_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgHttpRequest.Types.QueryParam> GetParamsList {
      get { return PrepareBuilder().getParams_; }
    }
    public int GetParamsCount {
      get { return result.GetParamsCount; }
    }
    public global::CMsgHttpRequest.Types.QueryParam GetGetParams(int index) {
      return result.GetGetParams(index);
    }
    public Builder SetGetParams(int index, global::CMsgHttpRequest.Types.QueryParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.getParams_[index] = value;
      return this;
    }
    public Builder SetGetParams(int index, global::CMsgHttpRequest.Types.QueryParam.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.getParams_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddGetParams(global::CMsgHttpRequest.Types.QueryParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.getParams_.Add(value);
      return this;
    }
    public Builder AddGetParams(global::CMsgHttpRequest.Types.QueryParam.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.getParams_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeGetParams(scg::IEnumerable<global::CMsgHttpRequest.Types.QueryParam> values) {
      PrepareBuilder();
      result.getParams_.Add(values);
      return this;
    }
    public Builder ClearGetParams() {
      PrepareBuilder();
      result.getParams_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgHttpRequest.Types.QueryParam> PostParamsList {
      get { return PrepareBuilder().postParams_; }
    }
    public int PostParamsCount {
      get { return result.PostParamsCount; }
    }
    public global::CMsgHttpRequest.Types.QueryParam GetPostParams(int index) {
      return result.GetPostParams(index);
    }
    public Builder SetPostParams(int index, global::CMsgHttpRequest.Types.QueryParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.postParams_[index] = value;
      return this;
    }
    public Builder SetPostParams(int index, global::CMsgHttpRequest.Types.QueryParam.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.postParams_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddPostParams(global::CMsgHttpRequest.Types.QueryParam value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.postParams_.Add(value);
      return this;
    }
    public Builder AddPostParams(global::CMsgHttpRequest.Types.QueryParam.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.postParams_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangePostParams(scg::IEnumerable<global::CMsgHttpRequest.Types.QueryParam> values) {
      PrepareBuilder();
      result.postParams_.Add(values);
      return this;
    }
    public Builder ClearPostParams() {
      PrepareBuilder();
      result.postParams_.Clear();
      return this;
    }
    
    public bool HasBody {
      get { return result.hasBody; }
    }
    public pb::ByteString Body {
      get { return result.Body; }
      set { SetBody(value); }
    }
    public Builder SetBody(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasBody = true;
      result.body_ = value;
      return this;
    }
    public Builder ClearBody() {
      PrepareBuilder();
      result.hasBody = false;
      result.body_ = pb::ByteString.Empty;
      return this;
    }
    
    public bool HasAbsoluteTimeout {
      get { return result.hasAbsoluteTimeout; }
    }
    [global::System.CLSCompliant(false)]
    public uint AbsoluteTimeout {
      get { return result.AbsoluteTimeout; }
      set { SetAbsoluteTimeout(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAbsoluteTimeout(uint value) {
      PrepareBuilder();
      result.hasAbsoluteTimeout = true;
      result.absoluteTimeout_ = value;
      return this;
    }
    public Builder ClearAbsoluteTimeout() {
      PrepareBuilder();
      result.hasAbsoluteTimeout = false;
      result.absoluteTimeout_ = 0;
      return this;
    }
  }
  static CMsgHttpRequest() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgWebAPIRequest : pb::GeneratedMessage<CMsgWebAPIRequest, CMsgWebAPIRequest.Builder> {
  private CMsgWebAPIRequest() { }
  private static readonly CMsgWebAPIRequest defaultInstance = new CMsgWebAPIRequest().MakeReadOnly();
  private static readonly string[] _cMsgWebAPIRequestFieldNames = new string[] { "UNUSED_job_name", "api_key", "interface_name", "method_name", "request", "routing_app_id", "version" };
  private static readonly uint[] _cMsgWebAPIRequestFieldTags = new uint[] { 10, 42, 18, 26, 50, 56, 32 };
  public static CMsgWebAPIRequest DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgWebAPIRequest DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgWebAPIRequest ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgWebAPIRequest__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgWebAPIRequest, CMsgWebAPIRequest.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgWebAPIRequest__FieldAccessorTable; }
  }
  
  public const int UNUSEDJobNameFieldNumber = 1;
  private bool hasUNUSEDJobName;
  private string uNUSEDJobName_ = "";
  public bool HasUNUSEDJobName {
    get { return hasUNUSEDJobName; }
  }
  public string UNUSEDJobName {
    get { return uNUSEDJobName_; }
  }
  
  public const int InterfaceNameFieldNumber = 2;
  private bool hasInterfaceName;
  private string interfaceName_ = "";
  public bool HasInterfaceName {
    get { return hasInterfaceName; }
  }
  public string InterfaceName {
    get { return interfaceName_; }
  }
  
  public const int MethodNameFieldNumber = 3;
  private bool hasMethodName;
  private string methodName_ = "";
  public bool HasMethodName {
    get { return hasMethodName; }
  }
  public string MethodName {
    get { return methodName_; }
  }
  
  public const int VersionFieldNumber = 4;
  private bool hasVersion;
  private uint version_;
  public bool HasVersion {
    get { return hasVersion; }
  }
  [global::System.CLSCompliant(false)]
  public uint Version {
    get { return version_; }
  }
  
  public const int ApiKeyFieldNumber = 5;
  private bool hasApiKey;
  private global::CMsgWebAPIKey apiKey_;
  public bool HasApiKey {
    get { return hasApiKey; }
  }
  public global::CMsgWebAPIKey ApiKey {
    get { return apiKey_ ?? global::CMsgWebAPIKey.DefaultInstance; }
  }
  
  public const int RequestFieldNumber = 6;
  private bool hasRequest;
  private global::CMsgHttpRequest request_;
  public bool HasRequest {
    get { return hasRequest; }
  }
  public global::CMsgHttpRequest Request {
    get { return request_ ?? global::CMsgHttpRequest.DefaultInstance; }
  }
  
  public const int RoutingAppIdFieldNumber = 7;
  private bool hasRoutingAppId;
  private uint routingAppId_;
  public bool HasRoutingAppId {
    get { return hasRoutingAppId; }
  }
  [global::System.CLSCompliant(false)]
  public uint RoutingAppId {
    get { return routingAppId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgWebAPIRequestFieldNames;
    if (hasUNUSEDJobName) {
      output.WriteString(1, field_names[0], UNUSEDJobName);
    }
    if (hasInterfaceName) {
      output.WriteString(2, field_names[2], InterfaceName);
    }
    if (hasMethodName) {
      output.WriteString(3, field_names[3], MethodName);
    }
    if (hasVersion) {
      output.WriteUInt32(4, field_names[6], Version);
    }
    if (hasApiKey) {
      output.WriteMessage(5, field_names[1], ApiKey);
    }
    if (hasRequest) {
      output.WriteMessage(6, field_names[4], Request);
    }
    if (hasRoutingAppId) {
      output.WriteUInt32(7, field_names[5], RoutingAppId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUNUSEDJobName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, UNUSEDJobName);
      }
      if (hasInterfaceName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, InterfaceName);
      }
      if (hasMethodName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, MethodName);
      }
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Version);
      }
      if (hasApiKey) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, ApiKey);
      }
      if (hasRequest) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, Request);
      }
      if (hasRoutingAppId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, RoutingAppId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgWebAPIRequest ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgWebAPIRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgWebAPIRequest ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgWebAPIRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgWebAPIRequest ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgWebAPIRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgWebAPIRequest ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgWebAPIRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgWebAPIRequest ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgWebAPIRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgWebAPIRequest MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgWebAPIRequest prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgWebAPIRequest, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgWebAPIRequest cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgWebAPIRequest result;
    
    private CMsgWebAPIRequest PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgWebAPIRequest original = result;
        result = new CMsgWebAPIRequest();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgWebAPIRequest MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgWebAPIRequest.Descriptor; }
    }
    
    public override CMsgWebAPIRequest DefaultInstanceForType {
      get { return global::CMsgWebAPIRequest.DefaultInstance; }
    }
    
    public override CMsgWebAPIRequest BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgWebAPIRequest) {
        return MergeFrom((CMsgWebAPIRequest) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgWebAPIRequest other) {
      if (other == global::CMsgWebAPIRequest.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUNUSEDJobName) {
        UNUSEDJobName = other.UNUSEDJobName;
      }
      if (other.HasInterfaceName) {
        InterfaceName = other.InterfaceName;
      }
      if (other.HasMethodName) {
        MethodName = other.MethodName;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasApiKey) {
        MergeApiKey(other.ApiKey);
      }
      if (other.HasRequest) {
        MergeRequest(other.Request);
      }
      if (other.HasRoutingAppId) {
        RoutingAppId = other.RoutingAppId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgWebAPIRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgWebAPIRequestFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasUNUSEDJobName = input.ReadString(ref result.uNUSEDJobName_);
            break;
          }
          case 18: {
            result.hasInterfaceName = input.ReadString(ref result.interfaceName_);
            break;
          }
          case 26: {
            result.hasMethodName = input.ReadString(ref result.methodName_);
            break;
          }
          case 32: {
            result.hasVersion = input.ReadUInt32(ref result.version_);
            break;
          }
          case 42: {
            global::CMsgWebAPIKey.Builder subBuilder = global::CMsgWebAPIKey.CreateBuilder();
            if (result.hasApiKey) {
              subBuilder.MergeFrom(ApiKey);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            ApiKey = subBuilder.BuildPartial();
            break;
          }
          case 50: {
            global::CMsgHttpRequest.Builder subBuilder = global::CMsgHttpRequest.CreateBuilder();
            if (result.hasRequest) {
              subBuilder.MergeFrom(Request);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Request = subBuilder.BuildPartial();
            break;
          }
          case 56: {
            result.hasRoutingAppId = input.ReadUInt32(ref result.routingAppId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUNUSEDJobName {
      get { return result.hasUNUSEDJobName; }
    }
    public string UNUSEDJobName {
      get { return result.UNUSEDJobName; }
      set { SetUNUSEDJobName(value); }
    }
    public Builder SetUNUSEDJobName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasUNUSEDJobName = true;
      result.uNUSEDJobName_ = value;
      return this;
    }
    public Builder ClearUNUSEDJobName() {
      PrepareBuilder();
      result.hasUNUSEDJobName = false;
      result.uNUSEDJobName_ = "";
      return this;
    }
    
    public bool HasInterfaceName {
      get { return result.hasInterfaceName; }
    }
    public string InterfaceName {
      get { return result.InterfaceName; }
      set { SetInterfaceName(value); }
    }
    public Builder SetInterfaceName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasInterfaceName = true;
      result.interfaceName_ = value;
      return this;
    }
    public Builder ClearInterfaceName() {
      PrepareBuilder();
      result.hasInterfaceName = false;
      result.interfaceName_ = "";
      return this;
    }
    
    public bool HasMethodName {
      get { return result.hasMethodName; }
    }
    public string MethodName {
      get { return result.MethodName; }
      set { SetMethodName(value); }
    }
    public Builder SetMethodName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasMethodName = true;
      result.methodName_ = value;
      return this;
    }
    public Builder ClearMethodName() {
      PrepareBuilder();
      result.hasMethodName = false;
      result.methodName_ = "";
      return this;
    }
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVersion(uint value) {
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = 0;
      return this;
    }
    
    public bool HasApiKey {
     get { return result.hasApiKey; }
    }
    public global::CMsgWebAPIKey ApiKey {
      get { return result.ApiKey; }
      set { SetApiKey(value); }
    }
    public Builder SetApiKey(global::CMsgWebAPIKey value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasApiKey = true;
      result.apiKey_ = value;
      return this;
    }
    public Builder SetApiKey(global::CMsgWebAPIKey.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasApiKey = true;
      result.apiKey_ = builderForValue.Build();
      return this;
    }
    public Builder MergeApiKey(global::CMsgWebAPIKey value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasApiKey &&
          result.apiKey_ != global::CMsgWebAPIKey.DefaultInstance) {
          result.apiKey_ = global::CMsgWebAPIKey.CreateBuilder(result.apiKey_).MergeFrom(value).BuildPartial();
      } else {
        result.apiKey_ = value;
      }
      result.hasApiKey = true;
      return this;
    }
    public Builder ClearApiKey() {
      PrepareBuilder();
      result.hasApiKey = false;
      result.apiKey_ = null;
      return this;
    }
    
    public bool HasRequest {
     get { return result.hasRequest; }
    }
    public global::CMsgHttpRequest Request {
      get { return result.Request; }
      set { SetRequest(value); }
    }
    public Builder SetRequest(global::CMsgHttpRequest value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasRequest = true;
      result.request_ = value;
      return this;
    }
    public Builder SetRequest(global::CMsgHttpRequest.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasRequest = true;
      result.request_ = builderForValue.Build();
      return this;
    }
    public Builder MergeRequest(global::CMsgHttpRequest value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasRequest &&
          result.request_ != global::CMsgHttpRequest.DefaultInstance) {
          result.request_ = global::CMsgHttpRequest.CreateBuilder(result.request_).MergeFrom(value).BuildPartial();
      } else {
        result.request_ = value;
      }
      result.hasRequest = true;
      return this;
    }
    public Builder ClearRequest() {
      PrepareBuilder();
      result.hasRequest = false;
      result.request_ = null;
      return this;
    }
    
    public bool HasRoutingAppId {
      get { return result.hasRoutingAppId; }
    }
    [global::System.CLSCompliant(false)]
    public uint RoutingAppId {
      get { return result.RoutingAppId; }
      set { SetRoutingAppId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetRoutingAppId(uint value) {
      PrepareBuilder();
      result.hasRoutingAppId = true;
      result.routingAppId_ = value;
      return this;
    }
    public Builder ClearRoutingAppId() {
      PrepareBuilder();
      result.hasRoutingAppId = false;
      result.routingAppId_ = 0;
      return this;
    }
  }
  static CMsgWebAPIRequest() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgHttpResponse : pb::GeneratedMessage<CMsgHttpResponse, CMsgHttpResponse.Builder> {
  private CMsgHttpResponse() { }
  private static readonly CMsgHttpResponse defaultInstance = new CMsgHttpResponse().MakeReadOnly();
  private static readonly string[] _cMsgHttpResponseFieldNames = new string[] { "body", "headers", "status_code" };
  private static readonly uint[] _cMsgHttpResponseFieldTags = new uint[] { 26, 18, 8 };
  public static CMsgHttpResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgHttpResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgHttpResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgHttpResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgHttpResponse, CMsgHttpResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgHttpResponse__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ResponseHeader : pb::GeneratedMessage<ResponseHeader, ResponseHeader.Builder> {
      private ResponseHeader() { }
      private static readonly ResponseHeader defaultInstance = new ResponseHeader().MakeReadOnly();
      private static readonly string[] _responseHeaderFieldNames = new string[] { "name", "value" };
      private static readonly uint[] _responseHeaderFieldTags = new uint[] { 10, 18 };
      public static ResponseHeader DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override ResponseHeader DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override ResponseHeader ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgHttpResponse_ResponseHeader__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<ResponseHeader, ResponseHeader.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgHttpResponse_ResponseHeader__FieldAccessorTable; }
      }
      
      public const int NameFieldNumber = 1;
      private bool hasName;
      private string name_ = "";
      public bool HasName {
        get { return hasName; }
      }
      public string Name {
        get { return name_; }
      }
      
      public const int ValueFieldNumber = 2;
      private bool hasValue;
      private string value_ = "";
      public bool HasValue {
        get { return hasValue; }
      }
      public string Value {
        get { return value_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _responseHeaderFieldNames;
        if (hasName) {
          output.WriteString(1, field_names[0], Name);
        }
        if (hasValue) {
          output.WriteString(2, field_names[1], Value);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasName) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Name);
          }
          if (hasValue) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Value);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static ResponseHeader ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ResponseHeader ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ResponseHeader ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ResponseHeader ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ResponseHeader ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ResponseHeader ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static ResponseHeader ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static ResponseHeader ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static ResponseHeader ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ResponseHeader ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private ResponseHeader MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(ResponseHeader prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<ResponseHeader, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(ResponseHeader cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private ResponseHeader result;
        
        private ResponseHeader PrepareBuilder() {
          if (resultIsReadOnly) {
            ResponseHeader original = result;
            result = new ResponseHeader();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override ResponseHeader MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgHttpResponse.Types.ResponseHeader.Descriptor; }
        }
        
        public override ResponseHeader DefaultInstanceForType {
          get { return global::CMsgHttpResponse.Types.ResponseHeader.DefaultInstance; }
        }
        
        public override ResponseHeader BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is ResponseHeader) {
            return MergeFrom((ResponseHeader) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(ResponseHeader other) {
          if (other == global::CMsgHttpResponse.Types.ResponseHeader.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasValue) {
            Value = other.Value;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_responseHeaderFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _responseHeaderFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasName = input.ReadString(ref result.name_);
                break;
              }
              case 18: {
                result.hasValue = input.ReadString(ref result.value_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasName {
          get { return result.hasName; }
        }
        public string Name {
          get { return result.Name; }
          set { SetName(value); }
        }
        public Builder SetName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder ClearName() {
          PrepareBuilder();
          result.hasName = false;
          result.name_ = "";
          return this;
        }
        
        public bool HasValue {
          get { return result.hasValue; }
        }
        public string Value {
          get { return result.Value; }
          set { SetValue(value); }
        }
        public Builder SetValue(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder ClearValue() {
          PrepareBuilder();
          result.hasValue = false;
          result.value_ = "";
          return this;
        }
      }
      static ResponseHeader() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int StatusCodeFieldNumber = 1;
  private bool hasStatusCode;
  private uint statusCode_;
  public bool HasStatusCode {
    get { return hasStatusCode; }
  }
  [global::System.CLSCompliant(false)]
  public uint StatusCode {
    get { return statusCode_; }
  }
  
  public const int HeadersFieldNumber = 2;
  private pbc::PopsicleList<global::CMsgHttpResponse.Types.ResponseHeader> headers_ = new pbc::PopsicleList<global::CMsgHttpResponse.Types.ResponseHeader>();
  public scg::IList<global::CMsgHttpResponse.Types.ResponseHeader> HeadersList {
    get { return headers_; }
  }
  public int HeadersCount {
    get { return headers_.Count; }
  }
  public global::CMsgHttpResponse.Types.ResponseHeader GetHeaders(int index) {
    return headers_[index];
  }
  
  public const int BodyFieldNumber = 3;
  private bool hasBody;
  private pb::ByteString body_ = pb::ByteString.Empty;
  public bool HasBody {
    get { return hasBody; }
  }
  public pb::ByteString Body {
    get { return body_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgHttpResponseFieldNames;
    if (hasStatusCode) {
      output.WriteUInt32(1, field_names[2], StatusCode);
    }
    if (headers_.Count > 0) {
      output.WriteMessageArray(2, field_names[1], headers_);
    }
    if (hasBody) {
      output.WriteBytes(3, field_names[0], Body);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStatusCode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, StatusCode);
      }
      foreach (global::CMsgHttpResponse.Types.ResponseHeader element in HeadersList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasBody) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, Body);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgHttpResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgHttpResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgHttpResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgHttpResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgHttpResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgHttpResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgHttpResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgHttpResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgHttpResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgHttpResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgHttpResponse MakeReadOnly() {
    headers_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgHttpResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgHttpResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgHttpResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgHttpResponse result;
    
    private CMsgHttpResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgHttpResponse original = result;
        result = new CMsgHttpResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgHttpResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgHttpResponse.Descriptor; }
    }
    
    public override CMsgHttpResponse DefaultInstanceForType {
      get { return global::CMsgHttpResponse.DefaultInstance; }
    }
    
    public override CMsgHttpResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgHttpResponse) {
        return MergeFrom((CMsgHttpResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgHttpResponse other) {
      if (other == global::CMsgHttpResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasStatusCode) {
        StatusCode = other.StatusCode;
      }
      if (other.headers_.Count != 0) {
        result.headers_.Add(other.headers_);
      }
      if (other.HasBody) {
        Body = other.Body;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgHttpResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgHttpResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasStatusCode = input.ReadUInt32(ref result.statusCode_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.headers_, global::CMsgHttpResponse.Types.ResponseHeader.DefaultInstance, extensionRegistry);
            break;
          }
          case 26: {
            result.hasBody = input.ReadBytes(ref result.body_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasStatusCode {
      get { return result.hasStatusCode; }
    }
    [global::System.CLSCompliant(false)]
    public uint StatusCode {
      get { return result.StatusCode; }
      set { SetStatusCode(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetStatusCode(uint value) {
      PrepareBuilder();
      result.hasStatusCode = true;
      result.statusCode_ = value;
      return this;
    }
    public Builder ClearStatusCode() {
      PrepareBuilder();
      result.hasStatusCode = false;
      result.statusCode_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgHttpResponse.Types.ResponseHeader> HeadersList {
      get { return PrepareBuilder().headers_; }
    }
    public int HeadersCount {
      get { return result.HeadersCount; }
    }
    public global::CMsgHttpResponse.Types.ResponseHeader GetHeaders(int index) {
      return result.GetHeaders(index);
    }
    public Builder SetHeaders(int index, global::CMsgHttpResponse.Types.ResponseHeader value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.headers_[index] = value;
      return this;
    }
    public Builder SetHeaders(int index, global::CMsgHttpResponse.Types.ResponseHeader.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.headers_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddHeaders(global::CMsgHttpResponse.Types.ResponseHeader value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.headers_.Add(value);
      return this;
    }
    public Builder AddHeaders(global::CMsgHttpResponse.Types.ResponseHeader.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.headers_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeHeaders(scg::IEnumerable<global::CMsgHttpResponse.Types.ResponseHeader> values) {
      PrepareBuilder();
      result.headers_.Add(values);
      return this;
    }
    public Builder ClearHeaders() {
      PrepareBuilder();
      result.headers_.Clear();
      return this;
    }
    
    public bool HasBody {
      get { return result.hasBody; }
    }
    public pb::ByteString Body {
      get { return result.Body; }
      set { SetBody(value); }
    }
    public Builder SetBody(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasBody = true;
      result.body_ = value;
      return this;
    }
    public Builder ClearBody() {
      PrepareBuilder();
      result.hasBody = false;
      result.body_ = pb::ByteString.Empty;
      return this;
    }
  }
  static CMsgHttpResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMFindAccounts : pb::GeneratedMessage<CMsgAMFindAccounts, CMsgAMFindAccounts.Builder> {
  private CMsgAMFindAccounts() { }
  private static readonly CMsgAMFindAccounts defaultInstance = new CMsgAMFindAccounts().MakeReadOnly();
  private static readonly string[] _cMsgAMFindAccountsFieldNames = new string[] { "search_string", "search_type" };
  private static readonly uint[] _cMsgAMFindAccountsFieldTags = new uint[] { 18, 8 };
  public static CMsgAMFindAccounts DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMFindAccounts DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMFindAccounts ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMFindAccounts__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMFindAccounts, CMsgAMFindAccounts.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMFindAccounts__FieldAccessorTable; }
  }
  
  public const int SearchTypeFieldNumber = 1;
  private bool hasSearchType;
  private uint searchType_;
  public bool HasSearchType {
    get { return hasSearchType; }
  }
  [global::System.CLSCompliant(false)]
  public uint SearchType {
    get { return searchType_; }
  }
  
  public const int SearchStringFieldNumber = 2;
  private bool hasSearchString;
  private string searchString_ = "";
  public bool HasSearchString {
    get { return hasSearchString; }
  }
  public string SearchString {
    get { return searchString_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMFindAccountsFieldNames;
    if (hasSearchType) {
      output.WriteUInt32(1, field_names[1], SearchType);
    }
    if (hasSearchString) {
      output.WriteString(2, field_names[0], SearchString);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSearchType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, SearchType);
      }
      if (hasSearchString) {
        size += pb::CodedOutputStream.ComputeStringSize(2, SearchString);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMFindAccounts ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMFindAccounts ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMFindAccounts ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMFindAccounts ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMFindAccounts ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMFindAccounts ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMFindAccounts ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMFindAccounts ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMFindAccounts ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMFindAccounts ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMFindAccounts MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMFindAccounts prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMFindAccounts, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMFindAccounts cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMFindAccounts result;
    
    private CMsgAMFindAccounts PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMFindAccounts original = result;
        result = new CMsgAMFindAccounts();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMFindAccounts MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMFindAccounts.Descriptor; }
    }
    
    public override CMsgAMFindAccounts DefaultInstanceForType {
      get { return global::CMsgAMFindAccounts.DefaultInstance; }
    }
    
    public override CMsgAMFindAccounts BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMFindAccounts) {
        return MergeFrom((CMsgAMFindAccounts) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMFindAccounts other) {
      if (other == global::CMsgAMFindAccounts.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSearchType) {
        SearchType = other.SearchType;
      }
      if (other.HasSearchString) {
        SearchString = other.SearchString;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMFindAccountsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMFindAccountsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSearchType = input.ReadUInt32(ref result.searchType_);
            break;
          }
          case 18: {
            result.hasSearchString = input.ReadString(ref result.searchString_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSearchType {
      get { return result.hasSearchType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SearchType {
      get { return result.SearchType; }
      set { SetSearchType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSearchType(uint value) {
      PrepareBuilder();
      result.hasSearchType = true;
      result.searchType_ = value;
      return this;
    }
    public Builder ClearSearchType() {
      PrepareBuilder();
      result.hasSearchType = false;
      result.searchType_ = 0;
      return this;
    }
    
    public bool HasSearchString {
      get { return result.hasSearchString; }
    }
    public string SearchString {
      get { return result.SearchString; }
      set { SetSearchString(value); }
    }
    public Builder SetSearchString(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSearchString = true;
      result.searchString_ = value;
      return this;
    }
    public Builder ClearSearchString() {
      PrepareBuilder();
      result.hasSearchString = false;
      result.searchString_ = "";
      return this;
    }
  }
  static CMsgAMFindAccounts() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMFindAccountsResponse : pb::GeneratedMessage<CMsgAMFindAccountsResponse, CMsgAMFindAccountsResponse.Builder> {
  private CMsgAMFindAccountsResponse() { }
  private static readonly CMsgAMFindAccountsResponse defaultInstance = new CMsgAMFindAccountsResponse().MakeReadOnly();
  private static readonly string[] _cMsgAMFindAccountsResponseFieldNames = new string[] { "steam_id" };
  private static readonly uint[] _cMsgAMFindAccountsResponseFieldTags = new uint[] { 9 };
  public static CMsgAMFindAccountsResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMFindAccountsResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMFindAccountsResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMFindAccountsResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMFindAccountsResponse, CMsgAMFindAccountsResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMFindAccountsResponse__FieldAccessorTable; }
  }
  
  public const int SteamIdFieldNumber = 1;
  private pbc::PopsicleList<ulong> steamId_ = new pbc::PopsicleList<ulong>();
  [global::System.CLSCompliant(false)]
  public scg::IList<ulong> SteamIdList {
    get { return pbc::Lists.AsReadOnly(steamId_); }
  }
  public int SteamIdCount {
    get { return steamId_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GetSteamId(int index) {
    return steamId_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMFindAccountsResponseFieldNames;
    if (steamId_.Count > 0) {
      output.WriteFixed64Array(1, field_names[0], steamId_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * steamId_.Count;
        size += dataSize;
        size += 1 * steamId_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMFindAccountsResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMFindAccountsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMFindAccountsResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMFindAccountsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMFindAccountsResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMFindAccountsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMFindAccountsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMFindAccountsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMFindAccountsResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMFindAccountsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMFindAccountsResponse MakeReadOnly() {
    steamId_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMFindAccountsResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMFindAccountsResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMFindAccountsResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMFindAccountsResponse result;
    
    private CMsgAMFindAccountsResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMFindAccountsResponse original = result;
        result = new CMsgAMFindAccountsResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMFindAccountsResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMFindAccountsResponse.Descriptor; }
    }
    
    public override CMsgAMFindAccountsResponse DefaultInstanceForType {
      get { return global::CMsgAMFindAccountsResponse.DefaultInstance; }
    }
    
    public override CMsgAMFindAccountsResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMFindAccountsResponse) {
        return MergeFrom((CMsgAMFindAccountsResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMFindAccountsResponse other) {
      if (other == global::CMsgAMFindAccountsResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.steamId_.Count != 0) {
        result.steamId_.Add(other.steamId_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMFindAccountsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMFindAccountsResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10:
          case 9: {
            input.ReadFixed64Array(tag, field_name, result.steamId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<ulong> SteamIdList {
      get { return PrepareBuilder().steamId_; }
    }
    public int SteamIdCount {
      get { return result.SteamIdCount; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetSteamId(int index) {
      return result.GetSteamId(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamId(int index, ulong value) {
      PrepareBuilder();
      result.steamId_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddSteamId(ulong value) {
      PrepareBuilder();
      result.steamId_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeSteamId(scg::IEnumerable<ulong> values) {
      PrepareBuilder();
      result.steamId_.Add(values);
      return this;
    }
    public Builder ClearSteamId() {
      PrepareBuilder();
      result.steamId_.Clear();
      return this;
    }
  }
  static CMsgAMFindAccountsResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgNotifyWatchdog : pb::GeneratedMessage<CMsgNotifyWatchdog, CMsgNotifyWatchdog.Builder> {
  private CMsgNotifyWatchdog() { }
  private static readonly CMsgNotifyWatchdog defaultInstance = new CMsgNotifyWatchdog().MakeReadOnly();
  private static readonly string[] _cMsgNotifyWatchdogFieldNames = new string[] { "alert_destination", "alert_type", "appid", "critical", "source", "text", "time" };
  private static readonly uint[] _cMsgNotifyWatchdogFieldTags = new uint[] { 24, 16, 48, 32, 8, 58, 40 };
  public static CMsgNotifyWatchdog DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgNotifyWatchdog DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgNotifyWatchdog ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgNotifyWatchdog__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgNotifyWatchdog, CMsgNotifyWatchdog.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgNotifyWatchdog__FieldAccessorTable; }
  }
  
  public const int SourceFieldNumber = 1;
  private bool hasSource;
  private uint source_;
  public bool HasSource {
    get { return hasSource; }
  }
  [global::System.CLSCompliant(false)]
  public uint Source {
    get { return source_; }
  }
  
  public const int AlertTypeFieldNumber = 2;
  private bool hasAlertType;
  private uint alertType_;
  public bool HasAlertType {
    get { return hasAlertType; }
  }
  [global::System.CLSCompliant(false)]
  public uint AlertType {
    get { return alertType_; }
  }
  
  public const int AlertDestinationFieldNumber = 3;
  private bool hasAlertDestination;
  private uint alertDestination_;
  public bool HasAlertDestination {
    get { return hasAlertDestination; }
  }
  [global::System.CLSCompliant(false)]
  public uint AlertDestination {
    get { return alertDestination_; }
  }
  
  public const int CriticalFieldNumber = 4;
  private bool hasCritical;
  private bool critical_;
  public bool HasCritical {
    get { return hasCritical; }
  }
  public bool Critical {
    get { return critical_; }
  }
  
  public const int TimeFieldNumber = 5;
  private bool hasTime;
  private uint time_;
  public bool HasTime {
    get { return hasTime; }
  }
  [global::System.CLSCompliant(false)]
  public uint Time {
    get { return time_; }
  }
  
  public const int AppidFieldNumber = 6;
  private bool hasAppid;
  private uint appid_;
  public bool HasAppid {
    get { return hasAppid; }
  }
  [global::System.CLSCompliant(false)]
  public uint Appid {
    get { return appid_; }
  }
  
  public const int TextFieldNumber = 7;
  private bool hasText;
  private string text_ = "";
  public bool HasText {
    get { return hasText; }
  }
  public string Text {
    get { return text_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgNotifyWatchdogFieldNames;
    if (hasSource) {
      output.WriteUInt32(1, field_names[4], Source);
    }
    if (hasAlertType) {
      output.WriteUInt32(2, field_names[1], AlertType);
    }
    if (hasAlertDestination) {
      output.WriteUInt32(3, field_names[0], AlertDestination);
    }
    if (hasCritical) {
      output.WriteBool(4, field_names[3], Critical);
    }
    if (hasTime) {
      output.WriteUInt32(5, field_names[6], Time);
    }
    if (hasAppid) {
      output.WriteUInt32(6, field_names[2], Appid);
    }
    if (hasText) {
      output.WriteString(7, field_names[5], Text);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSource) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Source);
      }
      if (hasAlertType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, AlertType);
      }
      if (hasAlertDestination) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, AlertDestination);
      }
      if (hasCritical) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, Critical);
      }
      if (hasTime) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, Time);
      }
      if (hasAppid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, Appid);
      }
      if (hasText) {
        size += pb::CodedOutputStream.ComputeStringSize(7, Text);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgNotifyWatchdog ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgNotifyWatchdog ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgNotifyWatchdog ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgNotifyWatchdog ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgNotifyWatchdog ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgNotifyWatchdog ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgNotifyWatchdog ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgNotifyWatchdog ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgNotifyWatchdog ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgNotifyWatchdog ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgNotifyWatchdog MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgNotifyWatchdog prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgNotifyWatchdog, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgNotifyWatchdog cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgNotifyWatchdog result;
    
    private CMsgNotifyWatchdog PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgNotifyWatchdog original = result;
        result = new CMsgNotifyWatchdog();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgNotifyWatchdog MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgNotifyWatchdog.Descriptor; }
    }
    
    public override CMsgNotifyWatchdog DefaultInstanceForType {
      get { return global::CMsgNotifyWatchdog.DefaultInstance; }
    }
    
    public override CMsgNotifyWatchdog BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgNotifyWatchdog) {
        return MergeFrom((CMsgNotifyWatchdog) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgNotifyWatchdog other) {
      if (other == global::CMsgNotifyWatchdog.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSource) {
        Source = other.Source;
      }
      if (other.HasAlertType) {
        AlertType = other.AlertType;
      }
      if (other.HasAlertDestination) {
        AlertDestination = other.AlertDestination;
      }
      if (other.HasCritical) {
        Critical = other.Critical;
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasText) {
        Text = other.Text;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgNotifyWatchdogFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgNotifyWatchdogFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSource = input.ReadUInt32(ref result.source_);
            break;
          }
          case 16: {
            result.hasAlertType = input.ReadUInt32(ref result.alertType_);
            break;
          }
          case 24: {
            result.hasAlertDestination = input.ReadUInt32(ref result.alertDestination_);
            break;
          }
          case 32: {
            result.hasCritical = input.ReadBool(ref result.critical_);
            break;
          }
          case 40: {
            result.hasTime = input.ReadUInt32(ref result.time_);
            break;
          }
          case 48: {
            result.hasAppid = input.ReadUInt32(ref result.appid_);
            break;
          }
          case 58: {
            result.hasText = input.ReadString(ref result.text_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSource {
      get { return result.hasSource; }
    }
    [global::System.CLSCompliant(false)]
    public uint Source {
      get { return result.Source; }
      set { SetSource(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSource(uint value) {
      PrepareBuilder();
      result.hasSource = true;
      result.source_ = value;
      return this;
    }
    public Builder ClearSource() {
      PrepareBuilder();
      result.hasSource = false;
      result.source_ = 0;
      return this;
    }
    
    public bool HasAlertType {
      get { return result.hasAlertType; }
    }
    [global::System.CLSCompliant(false)]
    public uint AlertType {
      get { return result.AlertType; }
      set { SetAlertType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAlertType(uint value) {
      PrepareBuilder();
      result.hasAlertType = true;
      result.alertType_ = value;
      return this;
    }
    public Builder ClearAlertType() {
      PrepareBuilder();
      result.hasAlertType = false;
      result.alertType_ = 0;
      return this;
    }
    
    public bool HasAlertDestination {
      get { return result.hasAlertDestination; }
    }
    [global::System.CLSCompliant(false)]
    public uint AlertDestination {
      get { return result.AlertDestination; }
      set { SetAlertDestination(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAlertDestination(uint value) {
      PrepareBuilder();
      result.hasAlertDestination = true;
      result.alertDestination_ = value;
      return this;
    }
    public Builder ClearAlertDestination() {
      PrepareBuilder();
      result.hasAlertDestination = false;
      result.alertDestination_ = 0;
      return this;
    }
    
    public bool HasCritical {
      get { return result.hasCritical; }
    }
    public bool Critical {
      get { return result.Critical; }
      set { SetCritical(value); }
    }
    public Builder SetCritical(bool value) {
      PrepareBuilder();
      result.hasCritical = true;
      result.critical_ = value;
      return this;
    }
    public Builder ClearCritical() {
      PrepareBuilder();
      result.hasCritical = false;
      result.critical_ = false;
      return this;
    }
    
    public bool HasTime {
      get { return result.hasTime; }
    }
    [global::System.CLSCompliant(false)]
    public uint Time {
      get { return result.Time; }
      set { SetTime(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTime(uint value) {
      PrepareBuilder();
      result.hasTime = true;
      result.time_ = value;
      return this;
    }
    public Builder ClearTime() {
      PrepareBuilder();
      result.hasTime = false;
      result.time_ = 0;
      return this;
    }
    
    public bool HasAppid {
      get { return result.hasAppid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Appid {
      get { return result.Appid; }
      set { SetAppid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAppid(uint value) {
      PrepareBuilder();
      result.hasAppid = true;
      result.appid_ = value;
      return this;
    }
    public Builder ClearAppid() {
      PrepareBuilder();
      result.hasAppid = false;
      result.appid_ = 0;
      return this;
    }
    
    public bool HasText {
      get { return result.hasText; }
    }
    public string Text {
      get { return result.Text; }
      set { SetText(value); }
    }
    public Builder SetText(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasText = true;
      result.text_ = value;
      return this;
    }
    public Builder ClearText() {
      PrepareBuilder();
      result.hasText = false;
      result.text_ = "";
      return this;
    }
  }
  static CMsgNotifyWatchdog() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMGetLicenses : pb::GeneratedMessage<CMsgAMGetLicenses, CMsgAMGetLicenses.Builder> {
  private CMsgAMGetLicenses() { }
  private static readonly CMsgAMGetLicenses defaultInstance = new CMsgAMGetLicenses().MakeReadOnly();
  private static readonly string[] _cMsgAMGetLicensesFieldNames = new string[] { "steamid" };
  private static readonly uint[] _cMsgAMGetLicensesFieldTags = new uint[] { 9 };
  public static CMsgAMGetLicenses DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMGetLicenses DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMGetLicenses ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMGetLicenses__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMGetLicenses, CMsgAMGetLicenses.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMGetLicenses__FieldAccessorTable; }
  }
  
  public const int SteamidFieldNumber = 1;
  private bool hasSteamid;
  private ulong steamid_;
  public bool HasSteamid {
    get { return hasSteamid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Steamid {
    get { return steamid_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMGetLicensesFieldNames;
    if (hasSteamid) {
      output.WriteFixed64(1, field_names[0], Steamid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, Steamid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMGetLicenses ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGetLicenses ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetLicenses ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGetLicenses ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetLicenses ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGetLicenses ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetLicenses ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMGetLicenses ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMGetLicenses ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGetLicenses ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMGetLicenses MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMGetLicenses prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMGetLicenses, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMGetLicenses cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMGetLicenses result;
    
    private CMsgAMGetLicenses PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMGetLicenses original = result;
        result = new CMsgAMGetLicenses();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMGetLicenses MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMGetLicenses.Descriptor; }
    }
    
    public override CMsgAMGetLicenses DefaultInstanceForType {
      get { return global::CMsgAMGetLicenses.DefaultInstance; }
    }
    
    public override CMsgAMGetLicenses BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMGetLicenses) {
        return MergeFrom((CMsgAMGetLicenses) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMGetLicenses other) {
      if (other == global::CMsgAMGetLicenses.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMGetLicensesFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMGetLicensesFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamid = input.ReadFixed64(ref result.steamid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamid {
      get { return result.hasSteamid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Steamid {
      get { return result.Steamid; }
      set { SetSteamid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamid(ulong value) {
      PrepareBuilder();
      result.hasSteamid = true;
      result.steamid_ = value;
      return this;
    }
    public Builder ClearSteamid() {
      PrepareBuilder();
      result.hasSteamid = false;
      result.steamid_ = 0;
      return this;
    }
  }
  static CMsgAMGetLicenses() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgPackageLicense : pb::GeneratedMessage<CMsgPackageLicense, CMsgPackageLicense.Builder> {
  private CMsgPackageLicense() { }
  private static readonly CMsgPackageLicense defaultInstance = new CMsgPackageLicense().MakeReadOnly();
  private static readonly string[] _cMsgPackageLicenseFieldNames = new string[] { "owner_id", "package_id", "time_created" };
  private static readonly uint[] _cMsgPackageLicenseFieldTags = new uint[] { 24, 8, 16 };
  public static CMsgPackageLicense DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgPackageLicense DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgPackageLicense ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgPackageLicense__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgPackageLicense, CMsgPackageLicense.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgPackageLicense__FieldAccessorTable; }
  }
  
  public const int PackageIdFieldNumber = 1;
  private bool hasPackageId;
  private uint packageId_;
  public bool HasPackageId {
    get { return hasPackageId; }
  }
  [global::System.CLSCompliant(false)]
  public uint PackageId {
    get { return packageId_; }
  }
  
  public const int TimeCreatedFieldNumber = 2;
  private bool hasTimeCreated;
  private uint timeCreated_;
  public bool HasTimeCreated {
    get { return hasTimeCreated; }
  }
  [global::System.CLSCompliant(false)]
  public uint TimeCreated {
    get { return timeCreated_; }
  }
  
  public const int OwnerIdFieldNumber = 3;
  private bool hasOwnerId;
  private uint ownerId_;
  public bool HasOwnerId {
    get { return hasOwnerId; }
  }
  [global::System.CLSCompliant(false)]
  public uint OwnerId {
    get { return ownerId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgPackageLicenseFieldNames;
    if (hasPackageId) {
      output.WriteUInt32(1, field_names[1], PackageId);
    }
    if (hasTimeCreated) {
      output.WriteUInt32(2, field_names[2], TimeCreated);
    }
    if (hasOwnerId) {
      output.WriteUInt32(3, field_names[0], OwnerId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPackageId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, PackageId);
      }
      if (hasTimeCreated) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, TimeCreated);
      }
      if (hasOwnerId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, OwnerId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgPackageLicense ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgPackageLicense ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgPackageLicense ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgPackageLicense ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgPackageLicense ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgPackageLicense ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgPackageLicense ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgPackageLicense ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgPackageLicense ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgPackageLicense ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgPackageLicense MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgPackageLicense prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgPackageLicense, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgPackageLicense cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgPackageLicense result;
    
    private CMsgPackageLicense PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgPackageLicense original = result;
        result = new CMsgPackageLicense();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgPackageLicense MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgPackageLicense.Descriptor; }
    }
    
    public override CMsgPackageLicense DefaultInstanceForType {
      get { return global::CMsgPackageLicense.DefaultInstance; }
    }
    
    public override CMsgPackageLicense BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgPackageLicense) {
        return MergeFrom((CMsgPackageLicense) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgPackageLicense other) {
      if (other == global::CMsgPackageLicense.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPackageId) {
        PackageId = other.PackageId;
      }
      if (other.HasTimeCreated) {
        TimeCreated = other.TimeCreated;
      }
      if (other.HasOwnerId) {
        OwnerId = other.OwnerId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgPackageLicenseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgPackageLicenseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasPackageId = input.ReadUInt32(ref result.packageId_);
            break;
          }
          case 16: {
            result.hasTimeCreated = input.ReadUInt32(ref result.timeCreated_);
            break;
          }
          case 24: {
            result.hasOwnerId = input.ReadUInt32(ref result.ownerId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPackageId {
      get { return result.hasPackageId; }
    }
    [global::System.CLSCompliant(false)]
    public uint PackageId {
      get { return result.PackageId; }
      set { SetPackageId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPackageId(uint value) {
      PrepareBuilder();
      result.hasPackageId = true;
      result.packageId_ = value;
      return this;
    }
    public Builder ClearPackageId() {
      PrepareBuilder();
      result.hasPackageId = false;
      result.packageId_ = 0;
      return this;
    }
    
    public bool HasTimeCreated {
      get { return result.hasTimeCreated; }
    }
    [global::System.CLSCompliant(false)]
    public uint TimeCreated {
      get { return result.TimeCreated; }
      set { SetTimeCreated(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTimeCreated(uint value) {
      PrepareBuilder();
      result.hasTimeCreated = true;
      result.timeCreated_ = value;
      return this;
    }
    public Builder ClearTimeCreated() {
      PrepareBuilder();
      result.hasTimeCreated = false;
      result.timeCreated_ = 0;
      return this;
    }
    
    public bool HasOwnerId {
      get { return result.hasOwnerId; }
    }
    [global::System.CLSCompliant(false)]
    public uint OwnerId {
      get { return result.OwnerId; }
      set { SetOwnerId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetOwnerId(uint value) {
      PrepareBuilder();
      result.hasOwnerId = true;
      result.ownerId_ = value;
      return this;
    }
    public Builder ClearOwnerId() {
      PrepareBuilder();
      result.hasOwnerId = false;
      result.ownerId_ = 0;
      return this;
    }
  }
  static CMsgPackageLicense() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMGetLicensesResponse : pb::GeneratedMessage<CMsgAMGetLicensesResponse, CMsgAMGetLicensesResponse.Builder> {
  private CMsgAMGetLicensesResponse() { }
  private static readonly CMsgAMGetLicensesResponse defaultInstance = new CMsgAMGetLicensesResponse().MakeReadOnly();
  private static readonly string[] _cMsgAMGetLicensesResponseFieldNames = new string[] { "license", "result" };
  private static readonly uint[] _cMsgAMGetLicensesResponseFieldTags = new uint[] { 10, 16 };
  public static CMsgAMGetLicensesResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMGetLicensesResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMGetLicensesResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMGetLicensesResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMGetLicensesResponse, CMsgAMGetLicensesResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMGetLicensesResponse__FieldAccessorTable; }
  }
  
  public const int LicenseFieldNumber = 1;
  private pbc::PopsicleList<global::CMsgPackageLicense> license_ = new pbc::PopsicleList<global::CMsgPackageLicense>();
  public scg::IList<global::CMsgPackageLicense> LicenseList {
    get { return license_; }
  }
  public int LicenseCount {
    get { return license_.Count; }
  }
  public global::CMsgPackageLicense GetLicense(int index) {
    return license_[index];
  }
  
  public const int ResultFieldNumber = 2;
  private bool hasResult;
  private uint result_;
  public bool HasResult {
    get { return hasResult; }
  }
  [global::System.CLSCompliant(false)]
  public uint Result {
    get { return result_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMGetLicensesResponseFieldNames;
    if (license_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], license_);
    }
    if (hasResult) {
      output.WriteUInt32(2, field_names[1], Result);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CMsgPackageLicense element in LicenseList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Result);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMGetLicensesResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGetLicensesResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetLicensesResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGetLicensesResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetLicensesResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGetLicensesResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetLicensesResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMGetLicensesResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMGetLicensesResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGetLicensesResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMGetLicensesResponse MakeReadOnly() {
    license_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMGetLicensesResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMGetLicensesResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMGetLicensesResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMGetLicensesResponse result;
    
    private CMsgAMGetLicensesResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMGetLicensesResponse original = result;
        result = new CMsgAMGetLicensesResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMGetLicensesResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMGetLicensesResponse.Descriptor; }
    }
    
    public override CMsgAMGetLicensesResponse DefaultInstanceForType {
      get { return global::CMsgAMGetLicensesResponse.DefaultInstance; }
    }
    
    public override CMsgAMGetLicensesResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMGetLicensesResponse) {
        return MergeFrom((CMsgAMGetLicensesResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMGetLicensesResponse other) {
      if (other == global::CMsgAMGetLicensesResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.license_.Count != 0) {
        result.license_.Add(other.license_);
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMGetLicensesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMGetLicensesResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.license_, global::CMsgPackageLicense.DefaultInstance, extensionRegistry);
            break;
          }
          case 16: {
            result.hasResult = input.ReadUInt32(ref result.result_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CMsgPackageLicense> LicenseList {
      get { return PrepareBuilder().license_; }
    }
    public int LicenseCount {
      get { return result.LicenseCount; }
    }
    public global::CMsgPackageLicense GetLicense(int index) {
      return result.GetLicense(index);
    }
    public Builder SetLicense(int index, global::CMsgPackageLicense value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.license_[index] = value;
      return this;
    }
    public Builder SetLicense(int index, global::CMsgPackageLicense.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.license_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddLicense(global::CMsgPackageLicense value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.license_.Add(value);
      return this;
    }
    public Builder AddLicense(global::CMsgPackageLicense.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.license_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeLicense(scg::IEnumerable<global::CMsgPackageLicense> values) {
      PrepareBuilder();
      result.license_.Add(values);
      return this;
    }
    public Builder ClearLicense() {
      PrepareBuilder();
      result.license_.Clear();
      return this;
    }
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    [global::System.CLSCompliant(false)]
    public uint Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetResult(uint value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
  }
  static CMsgAMGetLicensesResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMGetUserGameStats : pb::GeneratedMessage<CMsgAMGetUserGameStats, CMsgAMGetUserGameStats.Builder> {
  private CMsgAMGetUserGameStats() { }
  private static readonly CMsgAMGetUserGameStats defaultInstance = new CMsgAMGetUserGameStats().MakeReadOnly();
  private static readonly string[] _cMsgAMGetUserGameStatsFieldNames = new string[] { "game_id", "stats", "steam_id" };
  private static readonly uint[] _cMsgAMGetUserGameStatsFieldTags = new uint[] { 17, 24, 9 };
  public static CMsgAMGetUserGameStats DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMGetUserGameStats DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMGetUserGameStats ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMGetUserGameStats__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMGetUserGameStats, CMsgAMGetUserGameStats.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMGetUserGameStats__FieldAccessorTable; }
  }
  
  public const int SteamIdFieldNumber = 1;
  private bool hasSteamId;
  private ulong steamId_;
  public bool HasSteamId {
    get { return hasSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamId {
    get { return steamId_; }
  }
  
  public const int GameIdFieldNumber = 2;
  private bool hasGameId;
  private ulong gameId_;
  public bool HasGameId {
    get { return hasGameId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GameId {
    get { return gameId_; }
  }
  
  public const int StatsFieldNumber = 3;
  private pbc::PopsicleList<uint> stats_ = new pbc::PopsicleList<uint>();
  [global::System.CLSCompliant(false)]
  public scg::IList<uint> StatsList {
    get { return pbc::Lists.AsReadOnly(stats_); }
  }
  public int StatsCount {
    get { return stats_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public uint GetStats(int index) {
    return stats_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMGetUserGameStatsFieldNames;
    if (hasSteamId) {
      output.WriteFixed64(1, field_names[2], SteamId);
    }
    if (hasGameId) {
      output.WriteFixed64(2, field_names[0], GameId);
    }
    if (stats_.Count > 0) {
      output.WriteUInt32Array(3, field_names[1], stats_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, SteamId);
      }
      if (hasGameId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(2, GameId);
      }
      {
        int dataSize = 0;
        foreach (uint element in StatsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * stats_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMGetUserGameStats ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGetUserGameStats ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetUserGameStats ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGetUserGameStats ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetUserGameStats ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGetUserGameStats ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetUserGameStats ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMGetUserGameStats ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMGetUserGameStats ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGetUserGameStats ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMGetUserGameStats MakeReadOnly() {
    stats_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMGetUserGameStats prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMGetUserGameStats, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMGetUserGameStats cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMGetUserGameStats result;
    
    private CMsgAMGetUserGameStats PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMGetUserGameStats original = result;
        result = new CMsgAMGetUserGameStats();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMGetUserGameStats MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMGetUserGameStats.Descriptor; }
    }
    
    public override CMsgAMGetUserGameStats DefaultInstanceForType {
      get { return global::CMsgAMGetUserGameStats.DefaultInstance; }
    }
    
    public override CMsgAMGetUserGameStats BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMGetUserGameStats) {
        return MergeFrom((CMsgAMGetUserGameStats) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMGetUserGameStats other) {
      if (other == global::CMsgAMGetUserGameStats.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.stats_.Count != 0) {
        result.stats_.Add(other.stats_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMGetUserGameStatsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMGetUserGameStatsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamId = input.ReadFixed64(ref result.steamId_);
            break;
          }
          case 17: {
            result.hasGameId = input.ReadFixed64(ref result.gameId_);
            break;
          }
          case 26:
          case 24: {
            input.ReadUInt32Array(tag, field_name, result.stats_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamId {
      get { return result.hasSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamId {
      get { return result.SteamId; }
      set { SetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamId(ulong value) {
      PrepareBuilder();
      result.hasSteamId = true;
      result.steamId_ = value;
      return this;
    }
    public Builder ClearSteamId() {
      PrepareBuilder();
      result.hasSteamId = false;
      result.steamId_ = 0;
      return this;
    }
    
    public bool HasGameId {
      get { return result.hasGameId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GameId {
      get { return result.GameId; }
      set { SetGameId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGameId(ulong value) {
      PrepareBuilder();
      result.hasGameId = true;
      result.gameId_ = value;
      return this;
    }
    public Builder ClearGameId() {
      PrepareBuilder();
      result.hasGameId = false;
      result.gameId_ = 0;
      return this;
    }
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<uint> StatsList {
      get { return PrepareBuilder().stats_; }
    }
    public int StatsCount {
      get { return result.StatsCount; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetStats(int index) {
      return result.GetStats(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetStats(int index, uint value) {
      PrepareBuilder();
      result.stats_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddStats(uint value) {
      PrepareBuilder();
      result.stats_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeStats(scg::IEnumerable<uint> values) {
      PrepareBuilder();
      result.stats_.Add(values);
      return this;
    }
    public Builder ClearStats() {
      PrepareBuilder();
      result.stats_.Clear();
      return this;
    }
  }
  static CMsgAMGetUserGameStats() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMGetUserGameStatsResponse : pb::GeneratedMessage<CMsgAMGetUserGameStatsResponse, CMsgAMGetUserGameStatsResponse.Builder> {
  private CMsgAMGetUserGameStatsResponse() { }
  private static readonly CMsgAMGetUserGameStatsResponse defaultInstance = new CMsgAMGetUserGameStatsResponse().MakeReadOnly();
  private static readonly string[] _cMsgAMGetUserGameStatsResponseFieldNames = new string[] { "achievement_blocks", "eresult", "game_id", "stats", "steam_id" };
  private static readonly uint[] _cMsgAMGetUserGameStatsResponseFieldTags = new uint[] { 42, 24, 17, 34, 9 };
  public static CMsgAMGetUserGameStatsResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMGetUserGameStatsResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMGetUserGameStatsResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMGetUserGameStatsResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMGetUserGameStatsResponse, CMsgAMGetUserGameStatsResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMGetUserGameStatsResponse__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Stats : pb::GeneratedMessage<Stats, Stats.Builder> {
      private Stats() { }
      private static readonly Stats defaultInstance = new Stats().MakeReadOnly();
      private static readonly string[] _statsFieldNames = new string[] { "stat_id", "stat_value" };
      private static readonly uint[] _statsFieldTags = new uint[] { 8, 16 };
      public static Stats DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Stats DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Stats ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgAMGetUserGameStatsResponse_Stats__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Stats, Stats.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgAMGetUserGameStatsResponse_Stats__FieldAccessorTable; }
      }
      
      public const int StatIdFieldNumber = 1;
      private bool hasStatId;
      private uint statId_;
      public bool HasStatId {
        get { return hasStatId; }
      }
      [global::System.CLSCompliant(false)]
      public uint StatId {
        get { return statId_; }
      }
      
      public const int StatValueFieldNumber = 2;
      private bool hasStatValue;
      private uint statValue_;
      public bool HasStatValue {
        get { return hasStatValue; }
      }
      [global::System.CLSCompliant(false)]
      public uint StatValue {
        get { return statValue_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _statsFieldNames;
        if (hasStatId) {
          output.WriteUInt32(1, field_names[0], StatId);
        }
        if (hasStatValue) {
          output.WriteUInt32(2, field_names[1], StatValue);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasStatId) {
            size += pb::CodedOutputStream.ComputeUInt32Size(1, StatId);
          }
          if (hasStatValue) {
            size += pb::CodedOutputStream.ComputeUInt32Size(2, StatValue);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static Stats ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Stats ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Stats ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Stats ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Stats ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Stats ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Stats ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Stats ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Stats ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Stats ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Stats MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Stats prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Stats, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Stats cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Stats result;
        
        private Stats PrepareBuilder() {
          if (resultIsReadOnly) {
            Stats original = result;
            result = new Stats();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Stats MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgAMGetUserGameStatsResponse.Types.Stats.Descriptor; }
        }
        
        public override Stats DefaultInstanceForType {
          get { return global::CMsgAMGetUserGameStatsResponse.Types.Stats.DefaultInstance; }
        }
        
        public override Stats BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Stats) {
            return MergeFrom((Stats) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Stats other) {
          if (other == global::CMsgAMGetUserGameStatsResponse.Types.Stats.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasStatId) {
            StatId = other.StatId;
          }
          if (other.HasStatValue) {
            StatValue = other.StatValue;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_statsFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _statsFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasStatId = input.ReadUInt32(ref result.statId_);
                break;
              }
              case 16: {
                result.hasStatValue = input.ReadUInt32(ref result.statValue_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasStatId {
          get { return result.hasStatId; }
        }
        [global::System.CLSCompliant(false)]
        public uint StatId {
          get { return result.StatId; }
          set { SetStatId(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetStatId(uint value) {
          PrepareBuilder();
          result.hasStatId = true;
          result.statId_ = value;
          return this;
        }
        public Builder ClearStatId() {
          PrepareBuilder();
          result.hasStatId = false;
          result.statId_ = 0;
          return this;
        }
        
        public bool HasStatValue {
          get { return result.hasStatValue; }
        }
        [global::System.CLSCompliant(false)]
        public uint StatValue {
          get { return result.StatValue; }
          set { SetStatValue(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetStatValue(uint value) {
          PrepareBuilder();
          result.hasStatValue = true;
          result.statValue_ = value;
          return this;
        }
        public Builder ClearStatValue() {
          PrepareBuilder();
          result.hasStatValue = false;
          result.statValue_ = 0;
          return this;
        }
      }
      static Stats() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Achievement_Blocks : pb::GeneratedMessage<Achievement_Blocks, Achievement_Blocks.Builder> {
      private Achievement_Blocks() { }
      private static readonly Achievement_Blocks defaultInstance = new Achievement_Blocks().MakeReadOnly();
      private static readonly string[] _achievementBlocksFieldNames = new string[] { "achievement_bit_id", "achievement_id", "unlock_time" };
      private static readonly uint[] _achievementBlocksFieldTags = new uint[] { 16, 8, 29 };
      public static Achievement_Blocks DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Achievement_Blocks DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Achievement_Blocks ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgAMGetUserGameStatsResponse_Achievement_Blocks__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Achievement_Blocks, Achievement_Blocks.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgAMGetUserGameStatsResponse_Achievement_Blocks__FieldAccessorTable; }
      }
      
      public const int AchievementIdFieldNumber = 1;
      private bool hasAchievementId;
      private uint achievementId_;
      public bool HasAchievementId {
        get { return hasAchievementId; }
      }
      [global::System.CLSCompliant(false)]
      public uint AchievementId {
        get { return achievementId_; }
      }
      
      public const int AchievementBitIdFieldNumber = 2;
      private bool hasAchievementBitId;
      private uint achievementBitId_;
      public bool HasAchievementBitId {
        get { return hasAchievementBitId; }
      }
      [global::System.CLSCompliant(false)]
      public uint AchievementBitId {
        get { return achievementBitId_; }
      }
      
      public const int UnlockTimeFieldNumber = 3;
      private bool hasUnlockTime;
      private uint unlockTime_;
      public bool HasUnlockTime {
        get { return hasUnlockTime; }
      }
      [global::System.CLSCompliant(false)]
      public uint UnlockTime {
        get { return unlockTime_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _achievementBlocksFieldNames;
        if (hasAchievementId) {
          output.WriteUInt32(1, field_names[1], AchievementId);
        }
        if (hasAchievementBitId) {
          output.WriteUInt32(2, field_names[0], AchievementBitId);
        }
        if (hasUnlockTime) {
          output.WriteFixed32(3, field_names[2], UnlockTime);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasAchievementId) {
            size += pb::CodedOutputStream.ComputeUInt32Size(1, AchievementId);
          }
          if (hasAchievementBitId) {
            size += pb::CodedOutputStream.ComputeUInt32Size(2, AchievementBitId);
          }
          if (hasUnlockTime) {
            size += pb::CodedOutputStream.ComputeFixed32Size(3, UnlockTime);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static Achievement_Blocks ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Achievement_Blocks ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Achievement_Blocks ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Achievement_Blocks ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Achievement_Blocks ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Achievement_Blocks ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Achievement_Blocks ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Achievement_Blocks ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Achievement_Blocks ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Achievement_Blocks ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Achievement_Blocks MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Achievement_Blocks prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Achievement_Blocks, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Achievement_Blocks cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Achievement_Blocks result;
        
        private Achievement_Blocks PrepareBuilder() {
          if (resultIsReadOnly) {
            Achievement_Blocks original = result;
            result = new Achievement_Blocks();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Achievement_Blocks MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks.Descriptor; }
        }
        
        public override Achievement_Blocks DefaultInstanceForType {
          get { return global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks.DefaultInstance; }
        }
        
        public override Achievement_Blocks BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Achievement_Blocks) {
            return MergeFrom((Achievement_Blocks) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Achievement_Blocks other) {
          if (other == global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasAchievementId) {
            AchievementId = other.AchievementId;
          }
          if (other.HasAchievementBitId) {
            AchievementBitId = other.AchievementBitId;
          }
          if (other.HasUnlockTime) {
            UnlockTime = other.UnlockTime;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_achievementBlocksFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _achievementBlocksFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasAchievementId = input.ReadUInt32(ref result.achievementId_);
                break;
              }
              case 16: {
                result.hasAchievementBitId = input.ReadUInt32(ref result.achievementBitId_);
                break;
              }
              case 29: {
                result.hasUnlockTime = input.ReadFixed32(ref result.unlockTime_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasAchievementId {
          get { return result.hasAchievementId; }
        }
        [global::System.CLSCompliant(false)]
        public uint AchievementId {
          get { return result.AchievementId; }
          set { SetAchievementId(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetAchievementId(uint value) {
          PrepareBuilder();
          result.hasAchievementId = true;
          result.achievementId_ = value;
          return this;
        }
        public Builder ClearAchievementId() {
          PrepareBuilder();
          result.hasAchievementId = false;
          result.achievementId_ = 0;
          return this;
        }
        
        public bool HasAchievementBitId {
          get { return result.hasAchievementBitId; }
        }
        [global::System.CLSCompliant(false)]
        public uint AchievementBitId {
          get { return result.AchievementBitId; }
          set { SetAchievementBitId(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetAchievementBitId(uint value) {
          PrepareBuilder();
          result.hasAchievementBitId = true;
          result.achievementBitId_ = value;
          return this;
        }
        public Builder ClearAchievementBitId() {
          PrepareBuilder();
          result.hasAchievementBitId = false;
          result.achievementBitId_ = 0;
          return this;
        }
        
        public bool HasUnlockTime {
          get { return result.hasUnlockTime; }
        }
        [global::System.CLSCompliant(false)]
        public uint UnlockTime {
          get { return result.UnlockTime; }
          set { SetUnlockTime(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetUnlockTime(uint value) {
          PrepareBuilder();
          result.hasUnlockTime = true;
          result.unlockTime_ = value;
          return this;
        }
        public Builder ClearUnlockTime() {
          PrepareBuilder();
          result.hasUnlockTime = false;
          result.unlockTime_ = 0;
          return this;
        }
      }
      static Achievement_Blocks() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int SteamIdFieldNumber = 1;
  private bool hasSteamId;
  private ulong steamId_;
  public bool HasSteamId {
    get { return hasSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamId {
    get { return steamId_; }
  }
  
  public const int GameIdFieldNumber = 2;
  private bool hasGameId;
  private ulong gameId_;
  public bool HasGameId {
    get { return hasGameId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GameId {
    get { return gameId_; }
  }
  
  public const int EresultFieldNumber = 3;
  private bool hasEresult;
  private int eresult_ = 2;
  public bool HasEresult {
    get { return hasEresult; }
  }
  public int Eresult {
    get { return eresult_; }
  }
  
  public const int StatsFieldNumber = 4;
  private pbc::PopsicleList<global::CMsgAMGetUserGameStatsResponse.Types.Stats> stats_ = new pbc::PopsicleList<global::CMsgAMGetUserGameStatsResponse.Types.Stats>();
  public scg::IList<global::CMsgAMGetUserGameStatsResponse.Types.Stats> StatsList {
    get { return stats_; }
  }
  public int StatsCount {
    get { return stats_.Count; }
  }
  public global::CMsgAMGetUserGameStatsResponse.Types.Stats GetStats(int index) {
    return stats_[index];
  }
  
  public const int AchievementBlocksFieldNumber = 5;
  private pbc::PopsicleList<global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks> achievementBlocks_ = new pbc::PopsicleList<global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks>();
  public scg::IList<global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks> AchievementBlocksList {
    get { return achievementBlocks_; }
  }
  public int AchievementBlocksCount {
    get { return achievementBlocks_.Count; }
  }
  public global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks GetAchievementBlocks(int index) {
    return achievementBlocks_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMGetUserGameStatsResponseFieldNames;
    if (hasSteamId) {
      output.WriteFixed64(1, field_names[4], SteamId);
    }
    if (hasGameId) {
      output.WriteFixed64(2, field_names[2], GameId);
    }
    if (hasEresult) {
      output.WriteInt32(3, field_names[1], Eresult);
    }
    if (stats_.Count > 0) {
      output.WriteMessageArray(4, field_names[3], stats_);
    }
    if (achievementBlocks_.Count > 0) {
      output.WriteMessageArray(5, field_names[0], achievementBlocks_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, SteamId);
      }
      if (hasGameId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(2, GameId);
      }
      if (hasEresult) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Eresult);
      }
      foreach (global::CMsgAMGetUserGameStatsResponse.Types.Stats element in StatsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      foreach (global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks element in AchievementBlocksList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMGetUserGameStatsResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGetUserGameStatsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetUserGameStatsResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGetUserGameStatsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetUserGameStatsResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGetUserGameStatsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGetUserGameStatsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMGetUserGameStatsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMGetUserGameStatsResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGetUserGameStatsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMGetUserGameStatsResponse MakeReadOnly() {
    stats_.MakeReadOnly();
    achievementBlocks_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMGetUserGameStatsResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMGetUserGameStatsResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMGetUserGameStatsResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMGetUserGameStatsResponse result;
    
    private CMsgAMGetUserGameStatsResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMGetUserGameStatsResponse original = result;
        result = new CMsgAMGetUserGameStatsResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMGetUserGameStatsResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMGetUserGameStatsResponse.Descriptor; }
    }
    
    public override CMsgAMGetUserGameStatsResponse DefaultInstanceForType {
      get { return global::CMsgAMGetUserGameStatsResponse.DefaultInstance; }
    }
    
    public override CMsgAMGetUserGameStatsResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMGetUserGameStatsResponse) {
        return MergeFrom((CMsgAMGetUserGameStatsResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMGetUserGameStatsResponse other) {
      if (other == global::CMsgAMGetUserGameStatsResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      if (other.HasGameId) {
        GameId = other.GameId;
      }
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      if (other.stats_.Count != 0) {
        result.stats_.Add(other.stats_);
      }
      if (other.achievementBlocks_.Count != 0) {
        result.achievementBlocks_.Add(other.achievementBlocks_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMGetUserGameStatsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMGetUserGameStatsResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamId = input.ReadFixed64(ref result.steamId_);
            break;
          }
          case 17: {
            result.hasGameId = input.ReadFixed64(ref result.gameId_);
            break;
          }
          case 24: {
            result.hasEresult = input.ReadInt32(ref result.eresult_);
            break;
          }
          case 34: {
            input.ReadMessageArray(tag, field_name, result.stats_, global::CMsgAMGetUserGameStatsResponse.Types.Stats.DefaultInstance, extensionRegistry);
            break;
          }
          case 42: {
            input.ReadMessageArray(tag, field_name, result.achievementBlocks_, global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamId {
      get { return result.hasSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamId {
      get { return result.SteamId; }
      set { SetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamId(ulong value) {
      PrepareBuilder();
      result.hasSteamId = true;
      result.steamId_ = value;
      return this;
    }
    public Builder ClearSteamId() {
      PrepareBuilder();
      result.hasSteamId = false;
      result.steamId_ = 0;
      return this;
    }
    
    public bool HasGameId {
      get { return result.hasGameId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GameId {
      get { return result.GameId; }
      set { SetGameId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGameId(ulong value) {
      PrepareBuilder();
      result.hasGameId = true;
      result.gameId_ = value;
      return this;
    }
    public Builder ClearGameId() {
      PrepareBuilder();
      result.hasGameId = false;
      result.gameId_ = 0;
      return this;
    }
    
    public bool HasEresult {
      get { return result.hasEresult; }
    }
    public int Eresult {
      get { return result.Eresult; }
      set { SetEresult(value); }
    }
    public Builder SetEresult(int value) {
      PrepareBuilder();
      result.hasEresult = true;
      result.eresult_ = value;
      return this;
    }
    public Builder ClearEresult() {
      PrepareBuilder();
      result.hasEresult = false;
      result.eresult_ = 2;
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgAMGetUserGameStatsResponse.Types.Stats> StatsList {
      get { return PrepareBuilder().stats_; }
    }
    public int StatsCount {
      get { return result.StatsCount; }
    }
    public global::CMsgAMGetUserGameStatsResponse.Types.Stats GetStats(int index) {
      return result.GetStats(index);
    }
    public Builder SetStats(int index, global::CMsgAMGetUserGameStatsResponse.Types.Stats value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.stats_[index] = value;
      return this;
    }
    public Builder SetStats(int index, global::CMsgAMGetUserGameStatsResponse.Types.Stats.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.stats_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddStats(global::CMsgAMGetUserGameStatsResponse.Types.Stats value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.stats_.Add(value);
      return this;
    }
    public Builder AddStats(global::CMsgAMGetUserGameStatsResponse.Types.Stats.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.stats_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeStats(scg::IEnumerable<global::CMsgAMGetUserGameStatsResponse.Types.Stats> values) {
      PrepareBuilder();
      result.stats_.Add(values);
      return this;
    }
    public Builder ClearStats() {
      PrepareBuilder();
      result.stats_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks> AchievementBlocksList {
      get { return PrepareBuilder().achievementBlocks_; }
    }
    public int AchievementBlocksCount {
      get { return result.AchievementBlocksCount; }
    }
    public global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks GetAchievementBlocks(int index) {
      return result.GetAchievementBlocks(index);
    }
    public Builder SetAchievementBlocks(int index, global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.achievementBlocks_[index] = value;
      return this;
    }
    public Builder SetAchievementBlocks(int index, global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.achievementBlocks_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddAchievementBlocks(global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.achievementBlocks_.Add(value);
      return this;
    }
    public Builder AddAchievementBlocks(global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.achievementBlocks_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeAchievementBlocks(scg::IEnumerable<global::CMsgAMGetUserGameStatsResponse.Types.Achievement_Blocks> values) {
      PrepareBuilder();
      result.achievementBlocks_.Add(values);
      return this;
    }
    public Builder ClearAchievementBlocks() {
      PrepareBuilder();
      result.achievementBlocks_.Clear();
      return this;
    }
  }
  static CMsgAMGetUserGameStatsResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCGetCommandList : pb::GeneratedMessage<CMsgGCGetCommandList, CMsgGCGetCommandList.Builder> {
  private CMsgGCGetCommandList() { }
  private static readonly CMsgGCGetCommandList defaultInstance = new CMsgGCGetCommandList().MakeReadOnly();
  private static readonly string[] _cMsgGCGetCommandListFieldNames = new string[] { "app_id", "command_prefix" };
  private static readonly uint[] _cMsgGCGetCommandListFieldTags = new uint[] { 8, 18 };
  public static CMsgGCGetCommandList DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCGetCommandList DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCGetCommandList ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCGetCommandList__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCGetCommandList, CMsgGCGetCommandList.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCGetCommandList__FieldAccessorTable; }
  }
  
  public const int AppIdFieldNumber = 1;
  private bool hasAppId;
  private uint appId_;
  public bool HasAppId {
    get { return hasAppId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AppId {
    get { return appId_; }
  }
  
  public const int CommandPrefixFieldNumber = 2;
  private bool hasCommandPrefix;
  private string commandPrefix_ = "";
  public bool HasCommandPrefix {
    get { return hasCommandPrefix; }
  }
  public string CommandPrefix {
    get { return commandPrefix_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCGetCommandListFieldNames;
    if (hasAppId) {
      output.WriteUInt32(1, field_names[0], AppId);
    }
    if (hasCommandPrefix) {
      output.WriteString(2, field_names[1], CommandPrefix);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAppId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, AppId);
      }
      if (hasCommandPrefix) {
        size += pb::CodedOutputStream.ComputeStringSize(2, CommandPrefix);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCGetCommandList ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetCommandList ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetCommandList ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetCommandList ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetCommandList ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetCommandList ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetCommandList ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCGetCommandList ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCGetCommandList ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetCommandList ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCGetCommandList MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCGetCommandList prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCGetCommandList, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCGetCommandList cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCGetCommandList result;
    
    private CMsgGCGetCommandList PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCGetCommandList original = result;
        result = new CMsgGCGetCommandList();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCGetCommandList MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCGetCommandList.Descriptor; }
    }
    
    public override CMsgGCGetCommandList DefaultInstanceForType {
      get { return global::CMsgGCGetCommandList.DefaultInstance; }
    }
    
    public override CMsgGCGetCommandList BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCGetCommandList) {
        return MergeFrom((CMsgGCGetCommandList) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCGetCommandList other) {
      if (other == global::CMsgGCGetCommandList.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAppId) {
        AppId = other.AppId;
      }
      if (other.HasCommandPrefix) {
        CommandPrefix = other.CommandPrefix;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCGetCommandListFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCGetCommandListFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAppId = input.ReadUInt32(ref result.appId_);
            break;
          }
          case 18: {
            result.hasCommandPrefix = input.ReadString(ref result.commandPrefix_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAppId {
      get { return result.hasAppId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AppId {
      get { return result.AppId; }
      set { SetAppId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAppId(uint value) {
      PrepareBuilder();
      result.hasAppId = true;
      result.appId_ = value;
      return this;
    }
    public Builder ClearAppId() {
      PrepareBuilder();
      result.hasAppId = false;
      result.appId_ = 0;
      return this;
    }
    
    public bool HasCommandPrefix {
      get { return result.hasCommandPrefix; }
    }
    public string CommandPrefix {
      get { return result.CommandPrefix; }
      set { SetCommandPrefix(value); }
    }
    public Builder SetCommandPrefix(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCommandPrefix = true;
      result.commandPrefix_ = value;
      return this;
    }
    public Builder ClearCommandPrefix() {
      PrepareBuilder();
      result.hasCommandPrefix = false;
      result.commandPrefix_ = "";
      return this;
    }
  }
  static CMsgGCGetCommandList() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCGetCommandListResponse : pb::GeneratedMessage<CMsgGCGetCommandListResponse, CMsgGCGetCommandListResponse.Builder> {
  private CMsgGCGetCommandListResponse() { }
  private static readonly CMsgGCGetCommandListResponse defaultInstance = new CMsgGCGetCommandListResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCGetCommandListResponseFieldNames = new string[] { "command_name" };
  private static readonly uint[] _cMsgGCGetCommandListResponseFieldTags = new uint[] { 10 };
  public static CMsgGCGetCommandListResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCGetCommandListResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCGetCommandListResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCGetCommandListResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCGetCommandListResponse, CMsgGCGetCommandListResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCGetCommandListResponse__FieldAccessorTable; }
  }
  
  public const int CommandNameFieldNumber = 1;
  private pbc::PopsicleList<string> commandName_ = new pbc::PopsicleList<string>();
  public scg::IList<string> CommandNameList {
    get { return pbc::Lists.AsReadOnly(commandName_); }
  }
  public int CommandNameCount {
    get { return commandName_.Count; }
  }
  public string GetCommandName(int index) {
    return commandName_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCGetCommandListResponseFieldNames;
    if (commandName_.Count > 0) {
      output.WriteStringArray(1, field_names[0], commandName_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (string element in CommandNameList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * commandName_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCGetCommandListResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetCommandListResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetCommandListResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetCommandListResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetCommandListResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetCommandListResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetCommandListResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCGetCommandListResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCGetCommandListResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetCommandListResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCGetCommandListResponse MakeReadOnly() {
    commandName_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCGetCommandListResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCGetCommandListResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCGetCommandListResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCGetCommandListResponse result;
    
    private CMsgGCGetCommandListResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCGetCommandListResponse original = result;
        result = new CMsgGCGetCommandListResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCGetCommandListResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCGetCommandListResponse.Descriptor; }
    }
    
    public override CMsgGCGetCommandListResponse DefaultInstanceForType {
      get { return global::CMsgGCGetCommandListResponse.DefaultInstance; }
    }
    
    public override CMsgGCGetCommandListResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCGetCommandListResponse) {
        return MergeFrom((CMsgGCGetCommandListResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCGetCommandListResponse other) {
      if (other == global::CMsgGCGetCommandListResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.commandName_.Count != 0) {
        result.commandName_.Add(other.commandName_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCGetCommandListResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCGetCommandListResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadStringArray(tag, field_name, result.commandName_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<string> CommandNameList {
      get { return PrepareBuilder().commandName_; }
    }
    public int CommandNameCount {
      get { return result.CommandNameCount; }
    }
    public string GetCommandName(int index) {
      return result.GetCommandName(index);
    }
    public Builder SetCommandName(int index, string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.commandName_[index] = value;
      return this;
    }
    public Builder AddCommandName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.commandName_.Add(value);
      return this;
    }
    public Builder AddRangeCommandName(scg::IEnumerable<string> values) {
      PrepareBuilder();
      result.commandName_.Add(values);
      return this;
    }
    public Builder ClearCommandName() {
      PrepareBuilder();
      result.commandName_.Clear();
      return this;
    }
  }
  static CMsgGCGetCommandListResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgMemCachedGet : pb::GeneratedMessage<CGCMsgMemCachedGet, CGCMsgMemCachedGet.Builder> {
  private CGCMsgMemCachedGet() { }
  private static readonly CGCMsgMemCachedGet defaultInstance = new CGCMsgMemCachedGet().MakeReadOnly();
  private static readonly string[] _cGCMsgMemCachedGetFieldNames = new string[] { "keys" };
  private static readonly uint[] _cGCMsgMemCachedGetFieldTags = new uint[] { 10 };
  public static CGCMsgMemCachedGet DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgMemCachedGet DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgMemCachedGet ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedGet__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgMemCachedGet, CGCMsgMemCachedGet.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedGet__FieldAccessorTable; }
  }
  
  public const int KeysFieldNumber = 1;
  private pbc::PopsicleList<string> keys_ = new pbc::PopsicleList<string>();
  public scg::IList<string> KeysList {
    get { return pbc::Lists.AsReadOnly(keys_); }
  }
  public int KeysCount {
    get { return keys_.Count; }
  }
  public string GetKeys(int index) {
    return keys_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgMemCachedGetFieldNames;
    if (keys_.Count > 0) {
      output.WriteStringArray(1, field_names[0], keys_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (string element in KeysList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * keys_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgMemCachedGet ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedGet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedGet ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedGet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedGet ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedGet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedGet ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgMemCachedGet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgMemCachedGet ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedGet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgMemCachedGet MakeReadOnly() {
    keys_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgMemCachedGet prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgMemCachedGet, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgMemCachedGet cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgMemCachedGet result;
    
    private CGCMsgMemCachedGet PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgMemCachedGet original = result;
        result = new CGCMsgMemCachedGet();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgMemCachedGet MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgMemCachedGet.Descriptor; }
    }
    
    public override CGCMsgMemCachedGet DefaultInstanceForType {
      get { return global::CGCMsgMemCachedGet.DefaultInstance; }
    }
    
    public override CGCMsgMemCachedGet BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgMemCachedGet) {
        return MergeFrom((CGCMsgMemCachedGet) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgMemCachedGet other) {
      if (other == global::CGCMsgMemCachedGet.DefaultInstance) return this;
      PrepareBuilder();
      if (other.keys_.Count != 0) {
        result.keys_.Add(other.keys_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgMemCachedGetFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgMemCachedGetFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadStringArray(tag, field_name, result.keys_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<string> KeysList {
      get { return PrepareBuilder().keys_; }
    }
    public int KeysCount {
      get { return result.KeysCount; }
    }
    public string GetKeys(int index) {
      return result.GetKeys(index);
    }
    public Builder SetKeys(int index, string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.keys_[index] = value;
      return this;
    }
    public Builder AddKeys(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.keys_.Add(value);
      return this;
    }
    public Builder AddRangeKeys(scg::IEnumerable<string> values) {
      PrepareBuilder();
      result.keys_.Add(values);
      return this;
    }
    public Builder ClearKeys() {
      PrepareBuilder();
      result.keys_.Clear();
      return this;
    }
  }
  static CGCMsgMemCachedGet() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgMemCachedGetResponse : pb::GeneratedMessage<CGCMsgMemCachedGetResponse, CGCMsgMemCachedGetResponse.Builder> {
  private CGCMsgMemCachedGetResponse() { }
  private static readonly CGCMsgMemCachedGetResponse defaultInstance = new CGCMsgMemCachedGetResponse().MakeReadOnly();
  private static readonly string[] _cGCMsgMemCachedGetResponseFieldNames = new string[] { "values" };
  private static readonly uint[] _cGCMsgMemCachedGetResponseFieldTags = new uint[] { 10 };
  public static CGCMsgMemCachedGetResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgMemCachedGetResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgMemCachedGetResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedGetResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgMemCachedGetResponse, CGCMsgMemCachedGetResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedGetResponse__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ValueTag : pb::GeneratedMessage<ValueTag, ValueTag.Builder> {
      private ValueTag() { }
      private static readonly ValueTag defaultInstance = new ValueTag().MakeReadOnly();
      private static readonly string[] _valueTagFieldNames = new string[] { "found", "value" };
      private static readonly uint[] _valueTagFieldTags = new uint[] { 8, 18 };
      public static ValueTag DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override ValueTag DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override ValueTag ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CGCMsgMemCachedGetResponse_ValueTag__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<ValueTag, ValueTag.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CGCMsgMemCachedGetResponse_ValueTag__FieldAccessorTable; }
      }
      
      public const int FoundFieldNumber = 1;
      private bool hasFound;
      private bool found_;
      public bool HasFound {
        get { return hasFound; }
      }
      public bool Found {
        get { return found_; }
      }
      
      public const int ValueFieldNumber = 2;
      private bool hasValue;
      private pb::ByteString value_ = pb::ByteString.Empty;
      public bool HasValue {
        get { return hasValue; }
      }
      public pb::ByteString Value {
        get { return value_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _valueTagFieldNames;
        if (hasFound) {
          output.WriteBool(1, field_names[0], Found);
        }
        if (hasValue) {
          output.WriteBytes(2, field_names[1], Value);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasFound) {
            size += pb::CodedOutputStream.ComputeBoolSize(1, Found);
          }
          if (hasValue) {
            size += pb::CodedOutputStream.ComputeBytesSize(2, Value);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static ValueTag ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ValueTag ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ValueTag ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ValueTag ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ValueTag ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ValueTag ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static ValueTag ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static ValueTag ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static ValueTag ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ValueTag ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private ValueTag MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(ValueTag prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<ValueTag, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(ValueTag cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private ValueTag result;
        
        private ValueTag PrepareBuilder() {
          if (resultIsReadOnly) {
            ValueTag original = result;
            result = new ValueTag();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override ValueTag MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CGCMsgMemCachedGetResponse.Types.ValueTag.Descriptor; }
        }
        
        public override ValueTag DefaultInstanceForType {
          get { return global::CGCMsgMemCachedGetResponse.Types.ValueTag.DefaultInstance; }
        }
        
        public override ValueTag BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is ValueTag) {
            return MergeFrom((ValueTag) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(ValueTag other) {
          if (other == global::CGCMsgMemCachedGetResponse.Types.ValueTag.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasFound) {
            Found = other.Found;
          }
          if (other.HasValue) {
            Value = other.Value;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_valueTagFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _valueTagFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasFound = input.ReadBool(ref result.found_);
                break;
              }
              case 18: {
                result.hasValue = input.ReadBytes(ref result.value_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasFound {
          get { return result.hasFound; }
        }
        public bool Found {
          get { return result.Found; }
          set { SetFound(value); }
        }
        public Builder SetFound(bool value) {
          PrepareBuilder();
          result.hasFound = true;
          result.found_ = value;
          return this;
        }
        public Builder ClearFound() {
          PrepareBuilder();
          result.hasFound = false;
          result.found_ = false;
          return this;
        }
        
        public bool HasValue {
          get { return result.hasValue; }
        }
        public pb::ByteString Value {
          get { return result.Value; }
          set { SetValue(value); }
        }
        public Builder SetValue(pb::ByteString value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder ClearValue() {
          PrepareBuilder();
          result.hasValue = false;
          result.value_ = pb::ByteString.Empty;
          return this;
        }
      }
      static ValueTag() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int ValuesFieldNumber = 1;
  private pbc::PopsicleList<global::CGCMsgMemCachedGetResponse.Types.ValueTag> values_ = new pbc::PopsicleList<global::CGCMsgMemCachedGetResponse.Types.ValueTag>();
  public scg::IList<global::CGCMsgMemCachedGetResponse.Types.ValueTag> ValuesList {
    get { return values_; }
  }
  public int ValuesCount {
    get { return values_.Count; }
  }
  public global::CGCMsgMemCachedGetResponse.Types.ValueTag GetValues(int index) {
    return values_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgMemCachedGetResponseFieldNames;
    if (values_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], values_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CGCMsgMemCachedGetResponse.Types.ValueTag element in ValuesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgMemCachedGetResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedGetResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedGetResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedGetResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedGetResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedGetResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedGetResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgMemCachedGetResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgMemCachedGetResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedGetResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgMemCachedGetResponse MakeReadOnly() {
    values_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgMemCachedGetResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgMemCachedGetResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgMemCachedGetResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgMemCachedGetResponse result;
    
    private CGCMsgMemCachedGetResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgMemCachedGetResponse original = result;
        result = new CGCMsgMemCachedGetResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgMemCachedGetResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgMemCachedGetResponse.Descriptor; }
    }
    
    public override CGCMsgMemCachedGetResponse DefaultInstanceForType {
      get { return global::CGCMsgMemCachedGetResponse.DefaultInstance; }
    }
    
    public override CGCMsgMemCachedGetResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgMemCachedGetResponse) {
        return MergeFrom((CGCMsgMemCachedGetResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgMemCachedGetResponse other) {
      if (other == global::CGCMsgMemCachedGetResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.values_.Count != 0) {
        result.values_.Add(other.values_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgMemCachedGetResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgMemCachedGetResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.values_, global::CGCMsgMemCachedGetResponse.Types.ValueTag.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CGCMsgMemCachedGetResponse.Types.ValueTag> ValuesList {
      get { return PrepareBuilder().values_; }
    }
    public int ValuesCount {
      get { return result.ValuesCount; }
    }
    public global::CGCMsgMemCachedGetResponse.Types.ValueTag GetValues(int index) {
      return result.GetValues(index);
    }
    public Builder SetValues(int index, global::CGCMsgMemCachedGetResponse.Types.ValueTag value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.values_[index] = value;
      return this;
    }
    public Builder SetValues(int index, global::CGCMsgMemCachedGetResponse.Types.ValueTag.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.values_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddValues(global::CGCMsgMemCachedGetResponse.Types.ValueTag value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.values_.Add(value);
      return this;
    }
    public Builder AddValues(global::CGCMsgMemCachedGetResponse.Types.ValueTag.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.values_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeValues(scg::IEnumerable<global::CGCMsgMemCachedGetResponse.Types.ValueTag> values) {
      PrepareBuilder();
      result.values_.Add(values);
      return this;
    }
    public Builder ClearValues() {
      PrepareBuilder();
      result.values_.Clear();
      return this;
    }
  }
  static CGCMsgMemCachedGetResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgMemCachedSet : pb::GeneratedMessage<CGCMsgMemCachedSet, CGCMsgMemCachedSet.Builder> {
  private CGCMsgMemCachedSet() { }
  private static readonly CGCMsgMemCachedSet defaultInstance = new CGCMsgMemCachedSet().MakeReadOnly();
  private static readonly string[] _cGCMsgMemCachedSetFieldNames = new string[] { "keys" };
  private static readonly uint[] _cGCMsgMemCachedSetFieldTags = new uint[] { 10 };
  public static CGCMsgMemCachedSet DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgMemCachedSet DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgMemCachedSet ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedSet__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgMemCachedSet, CGCMsgMemCachedSet.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedSet__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class KeyPair : pb::GeneratedMessage<KeyPair, KeyPair.Builder> {
      private KeyPair() { }
      private static readonly KeyPair defaultInstance = new KeyPair().MakeReadOnly();
      private static readonly string[] _keyPairFieldNames = new string[] { "name", "value" };
      private static readonly uint[] _keyPairFieldTags = new uint[] { 10, 18 };
      public static KeyPair DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override KeyPair DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override KeyPair ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CGCMsgMemCachedSet_KeyPair__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<KeyPair, KeyPair.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CGCMsgMemCachedSet_KeyPair__FieldAccessorTable; }
      }
      
      public const int NameFieldNumber = 1;
      private bool hasName;
      private string name_ = "";
      public bool HasName {
        get { return hasName; }
      }
      public string Name {
        get { return name_; }
      }
      
      public const int ValueFieldNumber = 2;
      private bool hasValue;
      private pb::ByteString value_ = pb::ByteString.Empty;
      public bool HasValue {
        get { return hasValue; }
      }
      public pb::ByteString Value {
        get { return value_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _keyPairFieldNames;
        if (hasName) {
          output.WriteString(1, field_names[0], Name);
        }
        if (hasValue) {
          output.WriteBytes(2, field_names[1], Value);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasName) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Name);
          }
          if (hasValue) {
            size += pb::CodedOutputStream.ComputeBytesSize(2, Value);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static KeyPair ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static KeyPair ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static KeyPair ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static KeyPair ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static KeyPair ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static KeyPair ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static KeyPair ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static KeyPair ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static KeyPair ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static KeyPair ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private KeyPair MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(KeyPair prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<KeyPair, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(KeyPair cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private KeyPair result;
        
        private KeyPair PrepareBuilder() {
          if (resultIsReadOnly) {
            KeyPair original = result;
            result = new KeyPair();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override KeyPair MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CGCMsgMemCachedSet.Types.KeyPair.Descriptor; }
        }
        
        public override KeyPair DefaultInstanceForType {
          get { return global::CGCMsgMemCachedSet.Types.KeyPair.DefaultInstance; }
        }
        
        public override KeyPair BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is KeyPair) {
            return MergeFrom((KeyPair) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(KeyPair other) {
          if (other == global::CGCMsgMemCachedSet.Types.KeyPair.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasValue) {
            Value = other.Value;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_keyPairFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _keyPairFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasName = input.ReadString(ref result.name_);
                break;
              }
              case 18: {
                result.hasValue = input.ReadBytes(ref result.value_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasName {
          get { return result.hasName; }
        }
        public string Name {
          get { return result.Name; }
          set { SetName(value); }
        }
        public Builder SetName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder ClearName() {
          PrepareBuilder();
          result.hasName = false;
          result.name_ = "";
          return this;
        }
        
        public bool HasValue {
          get { return result.hasValue; }
        }
        public pb::ByteString Value {
          get { return result.Value; }
          set { SetValue(value); }
        }
        public Builder SetValue(pb::ByteString value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder ClearValue() {
          PrepareBuilder();
          result.hasValue = false;
          result.value_ = pb::ByteString.Empty;
          return this;
        }
      }
      static KeyPair() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int KeysFieldNumber = 1;
  private pbc::PopsicleList<global::CGCMsgMemCachedSet.Types.KeyPair> keys_ = new pbc::PopsicleList<global::CGCMsgMemCachedSet.Types.KeyPair>();
  public scg::IList<global::CGCMsgMemCachedSet.Types.KeyPair> KeysList {
    get { return keys_; }
  }
  public int KeysCount {
    get { return keys_.Count; }
  }
  public global::CGCMsgMemCachedSet.Types.KeyPair GetKeys(int index) {
    return keys_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgMemCachedSetFieldNames;
    if (keys_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], keys_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CGCMsgMemCachedSet.Types.KeyPair element in KeysList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgMemCachedSet ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedSet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedSet ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedSet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedSet ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedSet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedSet ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgMemCachedSet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgMemCachedSet ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedSet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgMemCachedSet MakeReadOnly() {
    keys_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgMemCachedSet prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgMemCachedSet, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgMemCachedSet cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgMemCachedSet result;
    
    private CGCMsgMemCachedSet PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgMemCachedSet original = result;
        result = new CGCMsgMemCachedSet();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgMemCachedSet MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgMemCachedSet.Descriptor; }
    }
    
    public override CGCMsgMemCachedSet DefaultInstanceForType {
      get { return global::CGCMsgMemCachedSet.DefaultInstance; }
    }
    
    public override CGCMsgMemCachedSet BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgMemCachedSet) {
        return MergeFrom((CGCMsgMemCachedSet) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgMemCachedSet other) {
      if (other == global::CGCMsgMemCachedSet.DefaultInstance) return this;
      PrepareBuilder();
      if (other.keys_.Count != 0) {
        result.keys_.Add(other.keys_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgMemCachedSetFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgMemCachedSetFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.keys_, global::CGCMsgMemCachedSet.Types.KeyPair.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CGCMsgMemCachedSet.Types.KeyPair> KeysList {
      get { return PrepareBuilder().keys_; }
    }
    public int KeysCount {
      get { return result.KeysCount; }
    }
    public global::CGCMsgMemCachedSet.Types.KeyPair GetKeys(int index) {
      return result.GetKeys(index);
    }
    public Builder SetKeys(int index, global::CGCMsgMemCachedSet.Types.KeyPair value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.keys_[index] = value;
      return this;
    }
    public Builder SetKeys(int index, global::CGCMsgMemCachedSet.Types.KeyPair.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.keys_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddKeys(global::CGCMsgMemCachedSet.Types.KeyPair value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.keys_.Add(value);
      return this;
    }
    public Builder AddKeys(global::CGCMsgMemCachedSet.Types.KeyPair.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.keys_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeKeys(scg::IEnumerable<global::CGCMsgMemCachedSet.Types.KeyPair> values) {
      PrepareBuilder();
      result.keys_.Add(values);
      return this;
    }
    public Builder ClearKeys() {
      PrepareBuilder();
      result.keys_.Clear();
      return this;
    }
  }
  static CGCMsgMemCachedSet() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgMemCachedDelete : pb::GeneratedMessage<CGCMsgMemCachedDelete, CGCMsgMemCachedDelete.Builder> {
  private CGCMsgMemCachedDelete() { }
  private static readonly CGCMsgMemCachedDelete defaultInstance = new CGCMsgMemCachedDelete().MakeReadOnly();
  private static readonly string[] _cGCMsgMemCachedDeleteFieldNames = new string[] { "keys" };
  private static readonly uint[] _cGCMsgMemCachedDeleteFieldTags = new uint[] { 10 };
  public static CGCMsgMemCachedDelete DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgMemCachedDelete DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgMemCachedDelete ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedDelete__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgMemCachedDelete, CGCMsgMemCachedDelete.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedDelete__FieldAccessorTable; }
  }
  
  public const int KeysFieldNumber = 1;
  private pbc::PopsicleList<string> keys_ = new pbc::PopsicleList<string>();
  public scg::IList<string> KeysList {
    get { return pbc::Lists.AsReadOnly(keys_); }
  }
  public int KeysCount {
    get { return keys_.Count; }
  }
  public string GetKeys(int index) {
    return keys_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgMemCachedDeleteFieldNames;
    if (keys_.Count > 0) {
      output.WriteStringArray(1, field_names[0], keys_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (string element in KeysList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * keys_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgMemCachedDelete ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedDelete ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedDelete ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedDelete ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedDelete ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedDelete ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedDelete ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgMemCachedDelete ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgMemCachedDelete ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedDelete ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgMemCachedDelete MakeReadOnly() {
    keys_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgMemCachedDelete prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgMemCachedDelete, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgMemCachedDelete cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgMemCachedDelete result;
    
    private CGCMsgMemCachedDelete PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgMemCachedDelete original = result;
        result = new CGCMsgMemCachedDelete();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgMemCachedDelete MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgMemCachedDelete.Descriptor; }
    }
    
    public override CGCMsgMemCachedDelete DefaultInstanceForType {
      get { return global::CGCMsgMemCachedDelete.DefaultInstance; }
    }
    
    public override CGCMsgMemCachedDelete BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgMemCachedDelete) {
        return MergeFrom((CGCMsgMemCachedDelete) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgMemCachedDelete other) {
      if (other == global::CGCMsgMemCachedDelete.DefaultInstance) return this;
      PrepareBuilder();
      if (other.keys_.Count != 0) {
        result.keys_.Add(other.keys_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgMemCachedDeleteFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgMemCachedDeleteFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadStringArray(tag, field_name, result.keys_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<string> KeysList {
      get { return PrepareBuilder().keys_; }
    }
    public int KeysCount {
      get { return result.KeysCount; }
    }
    public string GetKeys(int index) {
      return result.GetKeys(index);
    }
    public Builder SetKeys(int index, string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.keys_[index] = value;
      return this;
    }
    public Builder AddKeys(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.keys_.Add(value);
      return this;
    }
    public Builder AddRangeKeys(scg::IEnumerable<string> values) {
      PrepareBuilder();
      result.keys_.Add(values);
      return this;
    }
    public Builder ClearKeys() {
      PrepareBuilder();
      result.keys_.Clear();
      return this;
    }
  }
  static CGCMsgMemCachedDelete() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgMemCachedStats : pb::GeneratedMessage<CGCMsgMemCachedStats, CGCMsgMemCachedStats.Builder> {
  private CGCMsgMemCachedStats() { }
  private static readonly CGCMsgMemCachedStats defaultInstance = new CGCMsgMemCachedStats().MakeReadOnly();
  private static readonly string[] _cGCMsgMemCachedStatsFieldNames = new string[] {  };
  private static readonly uint[] _cGCMsgMemCachedStatsFieldTags = new uint[] {  };
  public static CGCMsgMemCachedStats DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgMemCachedStats DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgMemCachedStats ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedStats__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgMemCachedStats, CGCMsgMemCachedStats.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedStats__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgMemCachedStatsFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgMemCachedStats ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedStats ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedStats ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedStats ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedStats ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedStats ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedStats ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgMemCachedStats ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgMemCachedStats ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedStats ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgMemCachedStats MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgMemCachedStats prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgMemCachedStats, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgMemCachedStats cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgMemCachedStats result;
    
    private CGCMsgMemCachedStats PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgMemCachedStats original = result;
        result = new CGCMsgMemCachedStats();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgMemCachedStats MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgMemCachedStats.Descriptor; }
    }
    
    public override CGCMsgMemCachedStats DefaultInstanceForType {
      get { return global::CGCMsgMemCachedStats.DefaultInstance; }
    }
    
    public override CGCMsgMemCachedStats BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgMemCachedStats) {
        return MergeFrom((CGCMsgMemCachedStats) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgMemCachedStats other) {
      if (other == global::CGCMsgMemCachedStats.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgMemCachedStatsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgMemCachedStatsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static CGCMsgMemCachedStats() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgMemCachedStatsResponse : pb::GeneratedMessage<CGCMsgMemCachedStatsResponse, CGCMsgMemCachedStatsResponse.Builder> {
  private CGCMsgMemCachedStatsResponse() { }
  private static readonly CGCMsgMemCachedStatsResponse defaultInstance = new CGCMsgMemCachedStatsResponse().MakeReadOnly();
  private static readonly string[] _cGCMsgMemCachedStatsResponseFieldNames = new string[] { "bytes", "bytes_read", "bytes_written", "cmd_flush", "cmd_get", "cmd_set", "curr_connections", "curr_items", "delete_hits", "delete_misses", "evictions", "get_hits", "get_misses", "limit_maxbytes" };
  private static readonly uint[] _cGCMsgMemCachedStatsResponseFieldTags = new uint[] { 112, 72, 80, 32, 16, 24, 8, 96, 56, 64, 104, 40, 48, 88 };
  public static CGCMsgMemCachedStatsResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgMemCachedStatsResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgMemCachedStatsResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedStatsResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgMemCachedStatsResponse, CGCMsgMemCachedStatsResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgMemCachedStatsResponse__FieldAccessorTable; }
  }
  
  public const int CurrConnectionsFieldNumber = 1;
  private bool hasCurrConnections;
  private ulong currConnections_;
  public bool HasCurrConnections {
    get { return hasCurrConnections; }
  }
  [global::System.CLSCompliant(false)]
  public ulong CurrConnections {
    get { return currConnections_; }
  }
  
  public const int CmdGetFieldNumber = 2;
  private bool hasCmdGet;
  private ulong cmdGet_;
  public bool HasCmdGet {
    get { return hasCmdGet; }
  }
  [global::System.CLSCompliant(false)]
  public ulong CmdGet {
    get { return cmdGet_; }
  }
  
  public const int CmdSetFieldNumber = 3;
  private bool hasCmdSet;
  private ulong cmdSet_;
  public bool HasCmdSet {
    get { return hasCmdSet; }
  }
  [global::System.CLSCompliant(false)]
  public ulong CmdSet {
    get { return cmdSet_; }
  }
  
  public const int CmdFlushFieldNumber = 4;
  private bool hasCmdFlush;
  private ulong cmdFlush_;
  public bool HasCmdFlush {
    get { return hasCmdFlush; }
  }
  [global::System.CLSCompliant(false)]
  public ulong CmdFlush {
    get { return cmdFlush_; }
  }
  
  public const int GetHitsFieldNumber = 5;
  private bool hasGetHits;
  private ulong getHits_;
  public bool HasGetHits {
    get { return hasGetHits; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GetHits {
    get { return getHits_; }
  }
  
  public const int GetMissesFieldNumber = 6;
  private bool hasGetMisses;
  private ulong getMisses_;
  public bool HasGetMisses {
    get { return hasGetMisses; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GetMisses {
    get { return getMisses_; }
  }
  
  public const int DeleteHitsFieldNumber = 7;
  private bool hasDeleteHits;
  private ulong deleteHits_;
  public bool HasDeleteHits {
    get { return hasDeleteHits; }
  }
  [global::System.CLSCompliant(false)]
  public ulong DeleteHits {
    get { return deleteHits_; }
  }
  
  public const int DeleteMissesFieldNumber = 8;
  private bool hasDeleteMisses;
  private ulong deleteMisses_;
  public bool HasDeleteMisses {
    get { return hasDeleteMisses; }
  }
  [global::System.CLSCompliant(false)]
  public ulong DeleteMisses {
    get { return deleteMisses_; }
  }
  
  public const int BytesReadFieldNumber = 9;
  private bool hasBytesRead;
  private ulong bytesRead_;
  public bool HasBytesRead {
    get { return hasBytesRead; }
  }
  [global::System.CLSCompliant(false)]
  public ulong BytesRead {
    get { return bytesRead_; }
  }
  
  public const int BytesWrittenFieldNumber = 10;
  private bool hasBytesWritten;
  private ulong bytesWritten_;
  public bool HasBytesWritten {
    get { return hasBytesWritten; }
  }
  [global::System.CLSCompliant(false)]
  public ulong BytesWritten {
    get { return bytesWritten_; }
  }
  
  public const int LimitMaxbytesFieldNumber = 11;
  private bool hasLimitMaxbytes;
  private ulong limitMaxbytes_;
  public bool HasLimitMaxbytes {
    get { return hasLimitMaxbytes; }
  }
  [global::System.CLSCompliant(false)]
  public ulong LimitMaxbytes {
    get { return limitMaxbytes_; }
  }
  
  public const int CurrItemsFieldNumber = 12;
  private bool hasCurrItems;
  private ulong currItems_;
  public bool HasCurrItems {
    get { return hasCurrItems; }
  }
  [global::System.CLSCompliant(false)]
  public ulong CurrItems {
    get { return currItems_; }
  }
  
  public const int EvictionsFieldNumber = 13;
  private bool hasEvictions;
  private ulong evictions_;
  public bool HasEvictions {
    get { return hasEvictions; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Evictions {
    get { return evictions_; }
  }
  
  public const int BytesFieldNumber = 14;
  private bool hasBytes;
  private ulong bytes_;
  public bool HasBytes {
    get { return hasBytes; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Bytes {
    get { return bytes_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgMemCachedStatsResponseFieldNames;
    if (hasCurrConnections) {
      output.WriteUInt64(1, field_names[6], CurrConnections);
    }
    if (hasCmdGet) {
      output.WriteUInt64(2, field_names[4], CmdGet);
    }
    if (hasCmdSet) {
      output.WriteUInt64(3, field_names[5], CmdSet);
    }
    if (hasCmdFlush) {
      output.WriteUInt64(4, field_names[3], CmdFlush);
    }
    if (hasGetHits) {
      output.WriteUInt64(5, field_names[11], GetHits);
    }
    if (hasGetMisses) {
      output.WriteUInt64(6, field_names[12], GetMisses);
    }
    if (hasDeleteHits) {
      output.WriteUInt64(7, field_names[8], DeleteHits);
    }
    if (hasDeleteMisses) {
      output.WriteUInt64(8, field_names[9], DeleteMisses);
    }
    if (hasBytesRead) {
      output.WriteUInt64(9, field_names[1], BytesRead);
    }
    if (hasBytesWritten) {
      output.WriteUInt64(10, field_names[2], BytesWritten);
    }
    if (hasLimitMaxbytes) {
      output.WriteUInt64(11, field_names[13], LimitMaxbytes);
    }
    if (hasCurrItems) {
      output.WriteUInt64(12, field_names[7], CurrItems);
    }
    if (hasEvictions) {
      output.WriteUInt64(13, field_names[10], Evictions);
    }
    if (hasBytes) {
      output.WriteUInt64(14, field_names[0], Bytes);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCurrConnections) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, CurrConnections);
      }
      if (hasCmdGet) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, CmdGet);
      }
      if (hasCmdSet) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, CmdSet);
      }
      if (hasCmdFlush) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, CmdFlush);
      }
      if (hasGetHits) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, GetHits);
      }
      if (hasGetMisses) {
        size += pb::CodedOutputStream.ComputeUInt64Size(6, GetMisses);
      }
      if (hasDeleteHits) {
        size += pb::CodedOutputStream.ComputeUInt64Size(7, DeleteHits);
      }
      if (hasDeleteMisses) {
        size += pb::CodedOutputStream.ComputeUInt64Size(8, DeleteMisses);
      }
      if (hasBytesRead) {
        size += pb::CodedOutputStream.ComputeUInt64Size(9, BytesRead);
      }
      if (hasBytesWritten) {
        size += pb::CodedOutputStream.ComputeUInt64Size(10, BytesWritten);
      }
      if (hasLimitMaxbytes) {
        size += pb::CodedOutputStream.ComputeUInt64Size(11, LimitMaxbytes);
      }
      if (hasCurrItems) {
        size += pb::CodedOutputStream.ComputeUInt64Size(12, CurrItems);
      }
      if (hasEvictions) {
        size += pb::CodedOutputStream.ComputeUInt64Size(13, Evictions);
      }
      if (hasBytes) {
        size += pb::CodedOutputStream.ComputeUInt64Size(14, Bytes);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgMemCachedStatsResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedStatsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedStatsResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgMemCachedStatsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedStatsResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedStatsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgMemCachedStatsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgMemCachedStatsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgMemCachedStatsResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgMemCachedStatsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgMemCachedStatsResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgMemCachedStatsResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgMemCachedStatsResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgMemCachedStatsResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgMemCachedStatsResponse result;
    
    private CGCMsgMemCachedStatsResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgMemCachedStatsResponse original = result;
        result = new CGCMsgMemCachedStatsResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgMemCachedStatsResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgMemCachedStatsResponse.Descriptor; }
    }
    
    public override CGCMsgMemCachedStatsResponse DefaultInstanceForType {
      get { return global::CGCMsgMemCachedStatsResponse.DefaultInstance; }
    }
    
    public override CGCMsgMemCachedStatsResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgMemCachedStatsResponse) {
        return MergeFrom((CGCMsgMemCachedStatsResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgMemCachedStatsResponse other) {
      if (other == global::CGCMsgMemCachedStatsResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCurrConnections) {
        CurrConnections = other.CurrConnections;
      }
      if (other.HasCmdGet) {
        CmdGet = other.CmdGet;
      }
      if (other.HasCmdSet) {
        CmdSet = other.CmdSet;
      }
      if (other.HasCmdFlush) {
        CmdFlush = other.CmdFlush;
      }
      if (other.HasGetHits) {
        GetHits = other.GetHits;
      }
      if (other.HasGetMisses) {
        GetMisses = other.GetMisses;
      }
      if (other.HasDeleteHits) {
        DeleteHits = other.DeleteHits;
      }
      if (other.HasDeleteMisses) {
        DeleteMisses = other.DeleteMisses;
      }
      if (other.HasBytesRead) {
        BytesRead = other.BytesRead;
      }
      if (other.HasBytesWritten) {
        BytesWritten = other.BytesWritten;
      }
      if (other.HasLimitMaxbytes) {
        LimitMaxbytes = other.LimitMaxbytes;
      }
      if (other.HasCurrItems) {
        CurrItems = other.CurrItems;
      }
      if (other.HasEvictions) {
        Evictions = other.Evictions;
      }
      if (other.HasBytes) {
        Bytes = other.Bytes;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgMemCachedStatsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgMemCachedStatsResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasCurrConnections = input.ReadUInt64(ref result.currConnections_);
            break;
          }
          case 16: {
            result.hasCmdGet = input.ReadUInt64(ref result.cmdGet_);
            break;
          }
          case 24: {
            result.hasCmdSet = input.ReadUInt64(ref result.cmdSet_);
            break;
          }
          case 32: {
            result.hasCmdFlush = input.ReadUInt64(ref result.cmdFlush_);
            break;
          }
          case 40: {
            result.hasGetHits = input.ReadUInt64(ref result.getHits_);
            break;
          }
          case 48: {
            result.hasGetMisses = input.ReadUInt64(ref result.getMisses_);
            break;
          }
          case 56: {
            result.hasDeleteHits = input.ReadUInt64(ref result.deleteHits_);
            break;
          }
          case 64: {
            result.hasDeleteMisses = input.ReadUInt64(ref result.deleteMisses_);
            break;
          }
          case 72: {
            result.hasBytesRead = input.ReadUInt64(ref result.bytesRead_);
            break;
          }
          case 80: {
            result.hasBytesWritten = input.ReadUInt64(ref result.bytesWritten_);
            break;
          }
          case 88: {
            result.hasLimitMaxbytes = input.ReadUInt64(ref result.limitMaxbytes_);
            break;
          }
          case 96: {
            result.hasCurrItems = input.ReadUInt64(ref result.currItems_);
            break;
          }
          case 104: {
            result.hasEvictions = input.ReadUInt64(ref result.evictions_);
            break;
          }
          case 112: {
            result.hasBytes = input.ReadUInt64(ref result.bytes_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCurrConnections {
      get { return result.hasCurrConnections; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CurrConnections {
      get { return result.CurrConnections; }
      set { SetCurrConnections(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetCurrConnections(ulong value) {
      PrepareBuilder();
      result.hasCurrConnections = true;
      result.currConnections_ = value;
      return this;
    }
    public Builder ClearCurrConnections() {
      PrepareBuilder();
      result.hasCurrConnections = false;
      result.currConnections_ = 0UL;
      return this;
    }
    
    public bool HasCmdGet {
      get { return result.hasCmdGet; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CmdGet {
      get { return result.CmdGet; }
      set { SetCmdGet(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetCmdGet(ulong value) {
      PrepareBuilder();
      result.hasCmdGet = true;
      result.cmdGet_ = value;
      return this;
    }
    public Builder ClearCmdGet() {
      PrepareBuilder();
      result.hasCmdGet = false;
      result.cmdGet_ = 0UL;
      return this;
    }
    
    public bool HasCmdSet {
      get { return result.hasCmdSet; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CmdSet {
      get { return result.CmdSet; }
      set { SetCmdSet(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetCmdSet(ulong value) {
      PrepareBuilder();
      result.hasCmdSet = true;
      result.cmdSet_ = value;
      return this;
    }
    public Builder ClearCmdSet() {
      PrepareBuilder();
      result.hasCmdSet = false;
      result.cmdSet_ = 0UL;
      return this;
    }
    
    public bool HasCmdFlush {
      get { return result.hasCmdFlush; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CmdFlush {
      get { return result.CmdFlush; }
      set { SetCmdFlush(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetCmdFlush(ulong value) {
      PrepareBuilder();
      result.hasCmdFlush = true;
      result.cmdFlush_ = value;
      return this;
    }
    public Builder ClearCmdFlush() {
      PrepareBuilder();
      result.hasCmdFlush = false;
      result.cmdFlush_ = 0UL;
      return this;
    }
    
    public bool HasGetHits {
      get { return result.hasGetHits; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetHits {
      get { return result.GetHits; }
      set { SetGetHits(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGetHits(ulong value) {
      PrepareBuilder();
      result.hasGetHits = true;
      result.getHits_ = value;
      return this;
    }
    public Builder ClearGetHits() {
      PrepareBuilder();
      result.hasGetHits = false;
      result.getHits_ = 0UL;
      return this;
    }
    
    public bool HasGetMisses {
      get { return result.hasGetMisses; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetMisses {
      get { return result.GetMisses; }
      set { SetGetMisses(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGetMisses(ulong value) {
      PrepareBuilder();
      result.hasGetMisses = true;
      result.getMisses_ = value;
      return this;
    }
    public Builder ClearGetMisses() {
      PrepareBuilder();
      result.hasGetMisses = false;
      result.getMisses_ = 0UL;
      return this;
    }
    
    public bool HasDeleteHits {
      get { return result.hasDeleteHits; }
    }
    [global::System.CLSCompliant(false)]
    public ulong DeleteHits {
      get { return result.DeleteHits; }
      set { SetDeleteHits(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDeleteHits(ulong value) {
      PrepareBuilder();
      result.hasDeleteHits = true;
      result.deleteHits_ = value;
      return this;
    }
    public Builder ClearDeleteHits() {
      PrepareBuilder();
      result.hasDeleteHits = false;
      result.deleteHits_ = 0UL;
      return this;
    }
    
    public bool HasDeleteMisses {
      get { return result.hasDeleteMisses; }
    }
    [global::System.CLSCompliant(false)]
    public ulong DeleteMisses {
      get { return result.DeleteMisses; }
      set { SetDeleteMisses(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDeleteMisses(ulong value) {
      PrepareBuilder();
      result.hasDeleteMisses = true;
      result.deleteMisses_ = value;
      return this;
    }
    public Builder ClearDeleteMisses() {
      PrepareBuilder();
      result.hasDeleteMisses = false;
      result.deleteMisses_ = 0UL;
      return this;
    }
    
    public bool HasBytesRead {
      get { return result.hasBytesRead; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BytesRead {
      get { return result.BytesRead; }
      set { SetBytesRead(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetBytesRead(ulong value) {
      PrepareBuilder();
      result.hasBytesRead = true;
      result.bytesRead_ = value;
      return this;
    }
    public Builder ClearBytesRead() {
      PrepareBuilder();
      result.hasBytesRead = false;
      result.bytesRead_ = 0UL;
      return this;
    }
    
    public bool HasBytesWritten {
      get { return result.hasBytesWritten; }
    }
    [global::System.CLSCompliant(false)]
    public ulong BytesWritten {
      get { return result.BytesWritten; }
      set { SetBytesWritten(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetBytesWritten(ulong value) {
      PrepareBuilder();
      result.hasBytesWritten = true;
      result.bytesWritten_ = value;
      return this;
    }
    public Builder ClearBytesWritten() {
      PrepareBuilder();
      result.hasBytesWritten = false;
      result.bytesWritten_ = 0UL;
      return this;
    }
    
    public bool HasLimitMaxbytes {
      get { return result.hasLimitMaxbytes; }
    }
    [global::System.CLSCompliant(false)]
    public ulong LimitMaxbytes {
      get { return result.LimitMaxbytes; }
      set { SetLimitMaxbytes(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetLimitMaxbytes(ulong value) {
      PrepareBuilder();
      result.hasLimitMaxbytes = true;
      result.limitMaxbytes_ = value;
      return this;
    }
    public Builder ClearLimitMaxbytes() {
      PrepareBuilder();
      result.hasLimitMaxbytes = false;
      result.limitMaxbytes_ = 0UL;
      return this;
    }
    
    public bool HasCurrItems {
      get { return result.hasCurrItems; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CurrItems {
      get { return result.CurrItems; }
      set { SetCurrItems(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetCurrItems(ulong value) {
      PrepareBuilder();
      result.hasCurrItems = true;
      result.currItems_ = value;
      return this;
    }
    public Builder ClearCurrItems() {
      PrepareBuilder();
      result.hasCurrItems = false;
      result.currItems_ = 0UL;
      return this;
    }
    
    public bool HasEvictions {
      get { return result.hasEvictions; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Evictions {
      get { return result.Evictions; }
      set { SetEvictions(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEvictions(ulong value) {
      PrepareBuilder();
      result.hasEvictions = true;
      result.evictions_ = value;
      return this;
    }
    public Builder ClearEvictions() {
      PrepareBuilder();
      result.hasEvictions = false;
      result.evictions_ = 0UL;
      return this;
    }
    
    public bool HasBytes {
      get { return result.hasBytes; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Bytes {
      get { return result.Bytes; }
      set { SetBytes(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetBytes(ulong value) {
      PrepareBuilder();
      result.hasBytes = true;
      result.bytes_ = value;
      return this;
    }
    public Builder ClearBytes() {
      PrepareBuilder();
      result.hasBytes = false;
      result.bytes_ = 0UL;
      return this;
    }
  }
  static CGCMsgMemCachedStatsResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgSQLStats : pb::GeneratedMessage<CGCMsgSQLStats, CGCMsgSQLStats.Builder> {
  private CGCMsgSQLStats() { }
  private static readonly CGCMsgSQLStats defaultInstance = new CGCMsgSQLStats().MakeReadOnly();
  private static readonly string[] _cGCMsgSQLStatsFieldNames = new string[] { "schema_catalog" };
  private static readonly uint[] _cGCMsgSQLStatsFieldTags = new uint[] { 8 };
  public static CGCMsgSQLStats DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgSQLStats DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgSQLStats ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgSQLStats__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgSQLStats, CGCMsgSQLStats.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgSQLStats__FieldAccessorTable; }
  }
  
  public const int SchemaCatalogFieldNumber = 1;
  private bool hasSchemaCatalog;
  private uint schemaCatalog_;
  public bool HasSchemaCatalog {
    get { return hasSchemaCatalog; }
  }
  [global::System.CLSCompliant(false)]
  public uint SchemaCatalog {
    get { return schemaCatalog_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgSQLStatsFieldNames;
    if (hasSchemaCatalog) {
      output.WriteUInt32(1, field_names[0], SchemaCatalog);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSchemaCatalog) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, SchemaCatalog);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgSQLStats ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgSQLStats ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgSQLStats ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgSQLStats ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgSQLStats ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgSQLStats ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgSQLStats ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgSQLStats ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgSQLStats ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgSQLStats ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgSQLStats MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgSQLStats prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgSQLStats, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgSQLStats cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgSQLStats result;
    
    private CGCMsgSQLStats PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgSQLStats original = result;
        result = new CGCMsgSQLStats();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgSQLStats MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgSQLStats.Descriptor; }
    }
    
    public override CGCMsgSQLStats DefaultInstanceForType {
      get { return global::CGCMsgSQLStats.DefaultInstance; }
    }
    
    public override CGCMsgSQLStats BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgSQLStats) {
        return MergeFrom((CGCMsgSQLStats) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgSQLStats other) {
      if (other == global::CGCMsgSQLStats.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSchemaCatalog) {
        SchemaCatalog = other.SchemaCatalog;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgSQLStatsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgSQLStatsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSchemaCatalog = input.ReadUInt32(ref result.schemaCatalog_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSchemaCatalog {
      get { return result.hasSchemaCatalog; }
    }
    [global::System.CLSCompliant(false)]
    public uint SchemaCatalog {
      get { return result.SchemaCatalog; }
      set { SetSchemaCatalog(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSchemaCatalog(uint value) {
      PrepareBuilder();
      result.hasSchemaCatalog = true;
      result.schemaCatalog_ = value;
      return this;
    }
    public Builder ClearSchemaCatalog() {
      PrepareBuilder();
      result.hasSchemaCatalog = false;
      result.schemaCatalog_ = 0;
      return this;
    }
  }
  static CGCMsgSQLStats() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgSQLStatsResponse : pb::GeneratedMessage<CGCMsgSQLStatsResponse, CGCMsgSQLStatsResponse.Builder> {
  private CGCMsgSQLStatsResponse() { }
  private static readonly CGCMsgSQLStatsResponse defaultInstance = new CGCMsgSQLStatsResponse().MakeReadOnly();
  private static readonly string[] _cGCMsgSQLStatsResponseFieldNames = new string[] { "deadlock_retries", "errors", "non_prepared_statements_executed", "operations_submitted", "operations_timed_out_in_queue", "prepared_statements_executed", "threads", "threads_active", "threads_connected" };
  private static readonly uint[] _cGCMsgSQLStatsResponseFieldTags = new uint[] { 56, 72, 48, 32, 64, 40, 8, 24, 16 };
  public static CGCMsgSQLStatsResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgSQLStatsResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgSQLStatsResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgSQLStatsResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgSQLStatsResponse, CGCMsgSQLStatsResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgSQLStatsResponse__FieldAccessorTable; }
  }
  
  public const int ThreadsFieldNumber = 1;
  private bool hasThreads;
  private uint threads_;
  public bool HasThreads {
    get { return hasThreads; }
  }
  [global::System.CLSCompliant(false)]
  public uint Threads {
    get { return threads_; }
  }
  
  public const int ThreadsConnectedFieldNumber = 2;
  private bool hasThreadsConnected;
  private uint threadsConnected_;
  public bool HasThreadsConnected {
    get { return hasThreadsConnected; }
  }
  [global::System.CLSCompliant(false)]
  public uint ThreadsConnected {
    get { return threadsConnected_; }
  }
  
  public const int ThreadsActiveFieldNumber = 3;
  private bool hasThreadsActive;
  private uint threadsActive_;
  public bool HasThreadsActive {
    get { return hasThreadsActive; }
  }
  [global::System.CLSCompliant(false)]
  public uint ThreadsActive {
    get { return threadsActive_; }
  }
  
  public const int OperationsSubmittedFieldNumber = 4;
  private bool hasOperationsSubmitted;
  private uint operationsSubmitted_;
  public bool HasOperationsSubmitted {
    get { return hasOperationsSubmitted; }
  }
  [global::System.CLSCompliant(false)]
  public uint OperationsSubmitted {
    get { return operationsSubmitted_; }
  }
  
  public const int PreparedStatementsExecutedFieldNumber = 5;
  private bool hasPreparedStatementsExecuted;
  private uint preparedStatementsExecuted_;
  public bool HasPreparedStatementsExecuted {
    get { return hasPreparedStatementsExecuted; }
  }
  [global::System.CLSCompliant(false)]
  public uint PreparedStatementsExecuted {
    get { return preparedStatementsExecuted_; }
  }
  
  public const int NonPreparedStatementsExecutedFieldNumber = 6;
  private bool hasNonPreparedStatementsExecuted;
  private uint nonPreparedStatementsExecuted_;
  public bool HasNonPreparedStatementsExecuted {
    get { return hasNonPreparedStatementsExecuted; }
  }
  [global::System.CLSCompliant(false)]
  public uint NonPreparedStatementsExecuted {
    get { return nonPreparedStatementsExecuted_; }
  }
  
  public const int DeadlockRetriesFieldNumber = 7;
  private bool hasDeadlockRetries;
  private uint deadlockRetries_;
  public bool HasDeadlockRetries {
    get { return hasDeadlockRetries; }
  }
  [global::System.CLSCompliant(false)]
  public uint DeadlockRetries {
    get { return deadlockRetries_; }
  }
  
  public const int OperationsTimedOutInQueueFieldNumber = 8;
  private bool hasOperationsTimedOutInQueue;
  private uint operationsTimedOutInQueue_;
  public bool HasOperationsTimedOutInQueue {
    get { return hasOperationsTimedOutInQueue; }
  }
  [global::System.CLSCompliant(false)]
  public uint OperationsTimedOutInQueue {
    get { return operationsTimedOutInQueue_; }
  }
  
  public const int ErrorsFieldNumber = 9;
  private bool hasErrors;
  private uint errors_;
  public bool HasErrors {
    get { return hasErrors; }
  }
  [global::System.CLSCompliant(false)]
  public uint Errors {
    get { return errors_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgSQLStatsResponseFieldNames;
    if (hasThreads) {
      output.WriteUInt32(1, field_names[6], Threads);
    }
    if (hasThreadsConnected) {
      output.WriteUInt32(2, field_names[8], ThreadsConnected);
    }
    if (hasThreadsActive) {
      output.WriteUInt32(3, field_names[7], ThreadsActive);
    }
    if (hasOperationsSubmitted) {
      output.WriteUInt32(4, field_names[3], OperationsSubmitted);
    }
    if (hasPreparedStatementsExecuted) {
      output.WriteUInt32(5, field_names[5], PreparedStatementsExecuted);
    }
    if (hasNonPreparedStatementsExecuted) {
      output.WriteUInt32(6, field_names[2], NonPreparedStatementsExecuted);
    }
    if (hasDeadlockRetries) {
      output.WriteUInt32(7, field_names[0], DeadlockRetries);
    }
    if (hasOperationsTimedOutInQueue) {
      output.WriteUInt32(8, field_names[4], OperationsTimedOutInQueue);
    }
    if (hasErrors) {
      output.WriteUInt32(9, field_names[1], Errors);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasThreads) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Threads);
      }
      if (hasThreadsConnected) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, ThreadsConnected);
      }
      if (hasThreadsActive) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, ThreadsActive);
      }
      if (hasOperationsSubmitted) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, OperationsSubmitted);
      }
      if (hasPreparedStatementsExecuted) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, PreparedStatementsExecuted);
      }
      if (hasNonPreparedStatementsExecuted) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, NonPreparedStatementsExecuted);
      }
      if (hasDeadlockRetries) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, DeadlockRetries);
      }
      if (hasOperationsTimedOutInQueue) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, OperationsTimedOutInQueue);
      }
      if (hasErrors) {
        size += pb::CodedOutputStream.ComputeUInt32Size(9, Errors);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgSQLStatsResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgSQLStatsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgSQLStatsResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgSQLStatsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgSQLStatsResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgSQLStatsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgSQLStatsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgSQLStatsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgSQLStatsResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgSQLStatsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgSQLStatsResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgSQLStatsResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgSQLStatsResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgSQLStatsResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgSQLStatsResponse result;
    
    private CGCMsgSQLStatsResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgSQLStatsResponse original = result;
        result = new CGCMsgSQLStatsResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgSQLStatsResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgSQLStatsResponse.Descriptor; }
    }
    
    public override CGCMsgSQLStatsResponse DefaultInstanceForType {
      get { return global::CGCMsgSQLStatsResponse.DefaultInstance; }
    }
    
    public override CGCMsgSQLStatsResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgSQLStatsResponse) {
        return MergeFrom((CGCMsgSQLStatsResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgSQLStatsResponse other) {
      if (other == global::CGCMsgSQLStatsResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasThreads) {
        Threads = other.Threads;
      }
      if (other.HasThreadsConnected) {
        ThreadsConnected = other.ThreadsConnected;
      }
      if (other.HasThreadsActive) {
        ThreadsActive = other.ThreadsActive;
      }
      if (other.HasOperationsSubmitted) {
        OperationsSubmitted = other.OperationsSubmitted;
      }
      if (other.HasPreparedStatementsExecuted) {
        PreparedStatementsExecuted = other.PreparedStatementsExecuted;
      }
      if (other.HasNonPreparedStatementsExecuted) {
        NonPreparedStatementsExecuted = other.NonPreparedStatementsExecuted;
      }
      if (other.HasDeadlockRetries) {
        DeadlockRetries = other.DeadlockRetries;
      }
      if (other.HasOperationsTimedOutInQueue) {
        OperationsTimedOutInQueue = other.OperationsTimedOutInQueue;
      }
      if (other.HasErrors) {
        Errors = other.Errors;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgSQLStatsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgSQLStatsResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasThreads = input.ReadUInt32(ref result.threads_);
            break;
          }
          case 16: {
            result.hasThreadsConnected = input.ReadUInt32(ref result.threadsConnected_);
            break;
          }
          case 24: {
            result.hasThreadsActive = input.ReadUInt32(ref result.threadsActive_);
            break;
          }
          case 32: {
            result.hasOperationsSubmitted = input.ReadUInt32(ref result.operationsSubmitted_);
            break;
          }
          case 40: {
            result.hasPreparedStatementsExecuted = input.ReadUInt32(ref result.preparedStatementsExecuted_);
            break;
          }
          case 48: {
            result.hasNonPreparedStatementsExecuted = input.ReadUInt32(ref result.nonPreparedStatementsExecuted_);
            break;
          }
          case 56: {
            result.hasDeadlockRetries = input.ReadUInt32(ref result.deadlockRetries_);
            break;
          }
          case 64: {
            result.hasOperationsTimedOutInQueue = input.ReadUInt32(ref result.operationsTimedOutInQueue_);
            break;
          }
          case 72: {
            result.hasErrors = input.ReadUInt32(ref result.errors_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasThreads {
      get { return result.hasThreads; }
    }
    [global::System.CLSCompliant(false)]
    public uint Threads {
      get { return result.Threads; }
      set { SetThreads(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetThreads(uint value) {
      PrepareBuilder();
      result.hasThreads = true;
      result.threads_ = value;
      return this;
    }
    public Builder ClearThreads() {
      PrepareBuilder();
      result.hasThreads = false;
      result.threads_ = 0;
      return this;
    }
    
    public bool HasThreadsConnected {
      get { return result.hasThreadsConnected; }
    }
    [global::System.CLSCompliant(false)]
    public uint ThreadsConnected {
      get { return result.ThreadsConnected; }
      set { SetThreadsConnected(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetThreadsConnected(uint value) {
      PrepareBuilder();
      result.hasThreadsConnected = true;
      result.threadsConnected_ = value;
      return this;
    }
    public Builder ClearThreadsConnected() {
      PrepareBuilder();
      result.hasThreadsConnected = false;
      result.threadsConnected_ = 0;
      return this;
    }
    
    public bool HasThreadsActive {
      get { return result.hasThreadsActive; }
    }
    [global::System.CLSCompliant(false)]
    public uint ThreadsActive {
      get { return result.ThreadsActive; }
      set { SetThreadsActive(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetThreadsActive(uint value) {
      PrepareBuilder();
      result.hasThreadsActive = true;
      result.threadsActive_ = value;
      return this;
    }
    public Builder ClearThreadsActive() {
      PrepareBuilder();
      result.hasThreadsActive = false;
      result.threadsActive_ = 0;
      return this;
    }
    
    public bool HasOperationsSubmitted {
      get { return result.hasOperationsSubmitted; }
    }
    [global::System.CLSCompliant(false)]
    public uint OperationsSubmitted {
      get { return result.OperationsSubmitted; }
      set { SetOperationsSubmitted(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetOperationsSubmitted(uint value) {
      PrepareBuilder();
      result.hasOperationsSubmitted = true;
      result.operationsSubmitted_ = value;
      return this;
    }
    public Builder ClearOperationsSubmitted() {
      PrepareBuilder();
      result.hasOperationsSubmitted = false;
      result.operationsSubmitted_ = 0;
      return this;
    }
    
    public bool HasPreparedStatementsExecuted {
      get { return result.hasPreparedStatementsExecuted; }
    }
    [global::System.CLSCompliant(false)]
    public uint PreparedStatementsExecuted {
      get { return result.PreparedStatementsExecuted; }
      set { SetPreparedStatementsExecuted(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPreparedStatementsExecuted(uint value) {
      PrepareBuilder();
      result.hasPreparedStatementsExecuted = true;
      result.preparedStatementsExecuted_ = value;
      return this;
    }
    public Builder ClearPreparedStatementsExecuted() {
      PrepareBuilder();
      result.hasPreparedStatementsExecuted = false;
      result.preparedStatementsExecuted_ = 0;
      return this;
    }
    
    public bool HasNonPreparedStatementsExecuted {
      get { return result.hasNonPreparedStatementsExecuted; }
    }
    [global::System.CLSCompliant(false)]
    public uint NonPreparedStatementsExecuted {
      get { return result.NonPreparedStatementsExecuted; }
      set { SetNonPreparedStatementsExecuted(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetNonPreparedStatementsExecuted(uint value) {
      PrepareBuilder();
      result.hasNonPreparedStatementsExecuted = true;
      result.nonPreparedStatementsExecuted_ = value;
      return this;
    }
    public Builder ClearNonPreparedStatementsExecuted() {
      PrepareBuilder();
      result.hasNonPreparedStatementsExecuted = false;
      result.nonPreparedStatementsExecuted_ = 0;
      return this;
    }
    
    public bool HasDeadlockRetries {
      get { return result.hasDeadlockRetries; }
    }
    [global::System.CLSCompliant(false)]
    public uint DeadlockRetries {
      get { return result.DeadlockRetries; }
      set { SetDeadlockRetries(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDeadlockRetries(uint value) {
      PrepareBuilder();
      result.hasDeadlockRetries = true;
      result.deadlockRetries_ = value;
      return this;
    }
    public Builder ClearDeadlockRetries() {
      PrepareBuilder();
      result.hasDeadlockRetries = false;
      result.deadlockRetries_ = 0;
      return this;
    }
    
    public bool HasOperationsTimedOutInQueue {
      get { return result.hasOperationsTimedOutInQueue; }
    }
    [global::System.CLSCompliant(false)]
    public uint OperationsTimedOutInQueue {
      get { return result.OperationsTimedOutInQueue; }
      set { SetOperationsTimedOutInQueue(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetOperationsTimedOutInQueue(uint value) {
      PrepareBuilder();
      result.hasOperationsTimedOutInQueue = true;
      result.operationsTimedOutInQueue_ = value;
      return this;
    }
    public Builder ClearOperationsTimedOutInQueue() {
      PrepareBuilder();
      result.hasOperationsTimedOutInQueue = false;
      result.operationsTimedOutInQueue_ = 0;
      return this;
    }
    
    public bool HasErrors {
      get { return result.hasErrors; }
    }
    [global::System.CLSCompliant(false)]
    public uint Errors {
      get { return result.Errors; }
      set { SetErrors(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetErrors(uint value) {
      PrepareBuilder();
      result.hasErrors = true;
      result.errors_ = value;
      return this;
    }
    public Builder ClearErrors() {
      PrepareBuilder();
      result.hasErrors = false;
      result.errors_ = 0;
      return this;
    }
  }
  static CGCMsgSQLStatsResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMAddFreeLicense : pb::GeneratedMessage<CMsgAMAddFreeLicense, CMsgAMAddFreeLicense.Builder> {
  private CMsgAMAddFreeLicense() { }
  private static readonly CMsgAMAddFreeLicense defaultInstance = new CMsgAMAddFreeLicense().MakeReadOnly();
  private static readonly string[] _cMsgAMAddFreeLicenseFieldNames = new string[] { "ip_public", "packageid", "steamid", "store_country_code" };
  private static readonly uint[] _cMsgAMAddFreeLicenseFieldTags = new uint[] { 16, 24, 9, 34 };
  public static CMsgAMAddFreeLicense DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMAddFreeLicense DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMAddFreeLicense ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMAddFreeLicense__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMAddFreeLicense, CMsgAMAddFreeLicense.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMAddFreeLicense__FieldAccessorTable; }
  }
  
  public const int SteamidFieldNumber = 1;
  private bool hasSteamid;
  private ulong steamid_;
  public bool HasSteamid {
    get { return hasSteamid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Steamid {
    get { return steamid_; }
  }
  
  public const int IpPublicFieldNumber = 2;
  private bool hasIpPublic;
  private uint ipPublic_;
  public bool HasIpPublic {
    get { return hasIpPublic; }
  }
  [global::System.CLSCompliant(false)]
  public uint IpPublic {
    get { return ipPublic_; }
  }
  
  public const int PackageidFieldNumber = 3;
  private bool hasPackageid;
  private uint packageid_;
  public bool HasPackageid {
    get { return hasPackageid; }
  }
  [global::System.CLSCompliant(false)]
  public uint Packageid {
    get { return packageid_; }
  }
  
  public const int StoreCountryCodeFieldNumber = 4;
  private bool hasStoreCountryCode;
  private string storeCountryCode_ = "";
  public bool HasStoreCountryCode {
    get { return hasStoreCountryCode; }
  }
  public string StoreCountryCode {
    get { return storeCountryCode_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMAddFreeLicenseFieldNames;
    if (hasSteamid) {
      output.WriteFixed64(1, field_names[2], Steamid);
    }
    if (hasIpPublic) {
      output.WriteUInt32(2, field_names[0], IpPublic);
    }
    if (hasPackageid) {
      output.WriteUInt32(3, field_names[1], Packageid);
    }
    if (hasStoreCountryCode) {
      output.WriteString(4, field_names[3], StoreCountryCode);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, Steamid);
      }
      if (hasIpPublic) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, IpPublic);
      }
      if (hasPackageid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Packageid);
      }
      if (hasStoreCountryCode) {
        size += pb::CodedOutputStream.ComputeStringSize(4, StoreCountryCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMAddFreeLicense ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMAddFreeLicense ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMAddFreeLicense ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMAddFreeLicense ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMAddFreeLicense ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMAddFreeLicense ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMAddFreeLicense ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMAddFreeLicense ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMAddFreeLicense ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMAddFreeLicense ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMAddFreeLicense MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMAddFreeLicense prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMAddFreeLicense, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMAddFreeLicense cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMAddFreeLicense result;
    
    private CMsgAMAddFreeLicense PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMAddFreeLicense original = result;
        result = new CMsgAMAddFreeLicense();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMAddFreeLicense MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMAddFreeLicense.Descriptor; }
    }
    
    public override CMsgAMAddFreeLicense DefaultInstanceForType {
      get { return global::CMsgAMAddFreeLicense.DefaultInstance; }
    }
    
    public override CMsgAMAddFreeLicense BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMAddFreeLicense) {
        return MergeFrom((CMsgAMAddFreeLicense) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMAddFreeLicense other) {
      if (other == global::CMsgAMAddFreeLicense.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasIpPublic) {
        IpPublic = other.IpPublic;
      }
      if (other.HasPackageid) {
        Packageid = other.Packageid;
      }
      if (other.HasStoreCountryCode) {
        StoreCountryCode = other.StoreCountryCode;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMAddFreeLicenseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMAddFreeLicenseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamid = input.ReadFixed64(ref result.steamid_);
            break;
          }
          case 16: {
            result.hasIpPublic = input.ReadUInt32(ref result.ipPublic_);
            break;
          }
          case 24: {
            result.hasPackageid = input.ReadUInt32(ref result.packageid_);
            break;
          }
          case 34: {
            result.hasStoreCountryCode = input.ReadString(ref result.storeCountryCode_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamid {
      get { return result.hasSteamid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Steamid {
      get { return result.Steamid; }
      set { SetSteamid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamid(ulong value) {
      PrepareBuilder();
      result.hasSteamid = true;
      result.steamid_ = value;
      return this;
    }
    public Builder ClearSteamid() {
      PrepareBuilder();
      result.hasSteamid = false;
      result.steamid_ = 0;
      return this;
    }
    
    public bool HasIpPublic {
      get { return result.hasIpPublic; }
    }
    [global::System.CLSCompliant(false)]
    public uint IpPublic {
      get { return result.IpPublic; }
      set { SetIpPublic(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetIpPublic(uint value) {
      PrepareBuilder();
      result.hasIpPublic = true;
      result.ipPublic_ = value;
      return this;
    }
    public Builder ClearIpPublic() {
      PrepareBuilder();
      result.hasIpPublic = false;
      result.ipPublic_ = 0;
      return this;
    }
    
    public bool HasPackageid {
      get { return result.hasPackageid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Packageid {
      get { return result.Packageid; }
      set { SetPackageid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPackageid(uint value) {
      PrepareBuilder();
      result.hasPackageid = true;
      result.packageid_ = value;
      return this;
    }
    public Builder ClearPackageid() {
      PrepareBuilder();
      result.hasPackageid = false;
      result.packageid_ = 0;
      return this;
    }
    
    public bool HasStoreCountryCode {
      get { return result.hasStoreCountryCode; }
    }
    public string StoreCountryCode {
      get { return result.StoreCountryCode; }
      set { SetStoreCountryCode(value); }
    }
    public Builder SetStoreCountryCode(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasStoreCountryCode = true;
      result.storeCountryCode_ = value;
      return this;
    }
    public Builder ClearStoreCountryCode() {
      PrepareBuilder();
      result.hasStoreCountryCode = false;
      result.storeCountryCode_ = "";
      return this;
    }
  }
  static CMsgAMAddFreeLicense() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMAddFreeLicenseResponse : pb::GeneratedMessage<CMsgAMAddFreeLicenseResponse, CMsgAMAddFreeLicenseResponse.Builder> {
  private CMsgAMAddFreeLicenseResponse() { }
  private static readonly CMsgAMAddFreeLicenseResponse defaultInstance = new CMsgAMAddFreeLicenseResponse().MakeReadOnly();
  private static readonly string[] _cMsgAMAddFreeLicenseResponseFieldNames = new string[] { "eresult", "purchase_result_detail", "transid" };
  private static readonly uint[] _cMsgAMAddFreeLicenseResponseFieldTags = new uint[] { 8, 16, 25 };
  public static CMsgAMAddFreeLicenseResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMAddFreeLicenseResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMAddFreeLicenseResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMAddFreeLicenseResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMAddFreeLicenseResponse, CMsgAMAddFreeLicenseResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMAddFreeLicenseResponse__FieldAccessorTable; }
  }
  
  public const int EresultFieldNumber = 1;
  private bool hasEresult;
  private int eresult_ = 2;
  public bool HasEresult {
    get { return hasEresult; }
  }
  public int Eresult {
    get { return eresult_; }
  }
  
  public const int PurchaseResultDetailFieldNumber = 2;
  private bool hasPurchaseResultDetail;
  private int purchaseResultDetail_;
  public bool HasPurchaseResultDetail {
    get { return hasPurchaseResultDetail; }
  }
  public int PurchaseResultDetail {
    get { return purchaseResultDetail_; }
  }
  
  public const int TransidFieldNumber = 3;
  private bool hasTransid;
  private ulong transid_;
  public bool HasTransid {
    get { return hasTransid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Transid {
    get { return transid_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMAddFreeLicenseResponseFieldNames;
    if (hasEresult) {
      output.WriteInt32(1, field_names[0], Eresult);
    }
    if (hasPurchaseResultDetail) {
      output.WriteInt32(2, field_names[1], PurchaseResultDetail);
    }
    if (hasTransid) {
      output.WriteFixed64(3, field_names[2], Transid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEresult) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Eresult);
      }
      if (hasPurchaseResultDetail) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, PurchaseResultDetail);
      }
      if (hasTransid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(3, Transid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMAddFreeLicenseResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMAddFreeLicenseResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMAddFreeLicenseResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMAddFreeLicenseResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMAddFreeLicenseResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMAddFreeLicenseResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMAddFreeLicenseResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMAddFreeLicenseResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMAddFreeLicenseResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMAddFreeLicenseResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMAddFreeLicenseResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMAddFreeLicenseResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMAddFreeLicenseResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMAddFreeLicenseResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMAddFreeLicenseResponse result;
    
    private CMsgAMAddFreeLicenseResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMAddFreeLicenseResponse original = result;
        result = new CMsgAMAddFreeLicenseResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMAddFreeLicenseResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMAddFreeLicenseResponse.Descriptor; }
    }
    
    public override CMsgAMAddFreeLicenseResponse DefaultInstanceForType {
      get { return global::CMsgAMAddFreeLicenseResponse.DefaultInstance; }
    }
    
    public override CMsgAMAddFreeLicenseResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMAddFreeLicenseResponse) {
        return MergeFrom((CMsgAMAddFreeLicenseResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMAddFreeLicenseResponse other) {
      if (other == global::CMsgAMAddFreeLicenseResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      if (other.HasPurchaseResultDetail) {
        PurchaseResultDetail = other.PurchaseResultDetail;
      }
      if (other.HasTransid) {
        Transid = other.Transid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMAddFreeLicenseResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMAddFreeLicenseResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEresult = input.ReadInt32(ref result.eresult_);
            break;
          }
          case 16: {
            result.hasPurchaseResultDetail = input.ReadInt32(ref result.purchaseResultDetail_);
            break;
          }
          case 25: {
            result.hasTransid = input.ReadFixed64(ref result.transid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEresult {
      get { return result.hasEresult; }
    }
    public int Eresult {
      get { return result.Eresult; }
      set { SetEresult(value); }
    }
    public Builder SetEresult(int value) {
      PrepareBuilder();
      result.hasEresult = true;
      result.eresult_ = value;
      return this;
    }
    public Builder ClearEresult() {
      PrepareBuilder();
      result.hasEresult = false;
      result.eresult_ = 2;
      return this;
    }
    
    public bool HasPurchaseResultDetail {
      get { return result.hasPurchaseResultDetail; }
    }
    public int PurchaseResultDetail {
      get { return result.PurchaseResultDetail; }
      set { SetPurchaseResultDetail(value); }
    }
    public Builder SetPurchaseResultDetail(int value) {
      PrepareBuilder();
      result.hasPurchaseResultDetail = true;
      result.purchaseResultDetail_ = value;
      return this;
    }
    public Builder ClearPurchaseResultDetail() {
      PrepareBuilder();
      result.hasPurchaseResultDetail = false;
      result.purchaseResultDetail_ = 0;
      return this;
    }
    
    public bool HasTransid {
      get { return result.hasTransid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Transid {
      get { return result.Transid; }
      set { SetTransid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTransid(ulong value) {
      PrepareBuilder();
      result.hasTransid = true;
      result.transid_ = value;
      return this;
    }
    public Builder ClearTransid() {
      PrepareBuilder();
      result.hasTransid = false;
      result.transid_ = 0;
      return this;
    }
  }
  static CMsgAMAddFreeLicenseResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgGetIPLocation : pb::GeneratedMessage<CGCMsgGetIPLocation, CGCMsgGetIPLocation.Builder> {
  private CGCMsgGetIPLocation() { }
  private static readonly CGCMsgGetIPLocation defaultInstance = new CGCMsgGetIPLocation().MakeReadOnly();
  private static readonly string[] _cGCMsgGetIPLocationFieldNames = new string[] { "ips" };
  private static readonly uint[] _cGCMsgGetIPLocationFieldTags = new uint[] { 13 };
  public static CGCMsgGetIPLocation DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgGetIPLocation DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgGetIPLocation ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgGetIPLocation__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgGetIPLocation, CGCMsgGetIPLocation.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgGetIPLocation__FieldAccessorTable; }
  }
  
  public const int IpsFieldNumber = 1;
  private pbc::PopsicleList<uint> ips_ = new pbc::PopsicleList<uint>();
  [global::System.CLSCompliant(false)]
  public scg::IList<uint> IpsList {
    get { return pbc::Lists.AsReadOnly(ips_); }
  }
  public int IpsCount {
    get { return ips_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public uint GetIps(int index) {
    return ips_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgGetIPLocationFieldNames;
    if (ips_.Count > 0) {
      output.WriteFixed32Array(1, field_names[0], ips_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * ips_.Count;
        size += dataSize;
        size += 1 * ips_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgGetIPLocation ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgGetIPLocation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetIPLocation ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgGetIPLocation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetIPLocation ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgGetIPLocation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetIPLocation ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgGetIPLocation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgGetIPLocation ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgGetIPLocation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgGetIPLocation MakeReadOnly() {
    ips_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgGetIPLocation prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgGetIPLocation, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgGetIPLocation cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgGetIPLocation result;
    
    private CGCMsgGetIPLocation PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgGetIPLocation original = result;
        result = new CGCMsgGetIPLocation();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgGetIPLocation MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgGetIPLocation.Descriptor; }
    }
    
    public override CGCMsgGetIPLocation DefaultInstanceForType {
      get { return global::CGCMsgGetIPLocation.DefaultInstance; }
    }
    
    public override CGCMsgGetIPLocation BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgGetIPLocation) {
        return MergeFrom((CGCMsgGetIPLocation) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgGetIPLocation other) {
      if (other == global::CGCMsgGetIPLocation.DefaultInstance) return this;
      PrepareBuilder();
      if (other.ips_.Count != 0) {
        result.ips_.Add(other.ips_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgGetIPLocationFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgGetIPLocationFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10:
          case 13: {
            input.ReadFixed32Array(tag, field_name, result.ips_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<uint> IpsList {
      get { return PrepareBuilder().ips_; }
    }
    public int IpsCount {
      get { return result.IpsCount; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetIps(int index) {
      return result.GetIps(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetIps(int index, uint value) {
      PrepareBuilder();
      result.ips_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddIps(uint value) {
      PrepareBuilder();
      result.ips_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeIps(scg::IEnumerable<uint> values) {
      PrepareBuilder();
      result.ips_.Add(values);
      return this;
    }
    public Builder ClearIps() {
      PrepareBuilder();
      result.ips_.Clear();
      return this;
    }
  }
  static CGCMsgGetIPLocation() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CIPLocationInfo : pb::GeneratedMessage<CIPLocationInfo, CIPLocationInfo.Builder> {
  private CIPLocationInfo() { }
  private static readonly CIPLocationInfo defaultInstance = new CIPLocationInfo().MakeReadOnly();
  private static readonly string[] _cIPLocationInfoFieldNames = new string[] { "city", "country", "ip", "latitude", "longitude", "state" };
  private static readonly uint[] _cIPLocationInfoFieldTags = new uint[] { 50, 34, 8, 21, 29, 42 };
  public static CIPLocationInfo DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CIPLocationInfo DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CIPLocationInfo ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CIPLocationInfo__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CIPLocationInfo, CIPLocationInfo.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CIPLocationInfo__FieldAccessorTable; }
  }
  
  public const int IpFieldNumber = 1;
  private bool hasIp;
  private uint ip_;
  public bool HasIp {
    get { return hasIp; }
  }
  [global::System.CLSCompliant(false)]
  public uint Ip {
    get { return ip_; }
  }
  
  public const int LatitudeFieldNumber = 2;
  private bool hasLatitude;
  private float latitude_;
  public bool HasLatitude {
    get { return hasLatitude; }
  }
  public float Latitude {
    get { return latitude_; }
  }
  
  public const int LongitudeFieldNumber = 3;
  private bool hasLongitude;
  private float longitude_;
  public bool HasLongitude {
    get { return hasLongitude; }
  }
  public float Longitude {
    get { return longitude_; }
  }
  
  public const int CountryFieldNumber = 4;
  private bool hasCountry;
  private string country_ = "";
  public bool HasCountry {
    get { return hasCountry; }
  }
  public string Country {
    get { return country_; }
  }
  
  public const int StateFieldNumber = 5;
  private bool hasState;
  private string state_ = "";
  public bool HasState {
    get { return hasState; }
  }
  public string State {
    get { return state_; }
  }
  
  public const int CityFieldNumber = 6;
  private bool hasCity;
  private string city_ = "";
  public bool HasCity {
    get { return hasCity; }
  }
  public string City {
    get { return city_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cIPLocationInfoFieldNames;
    if (hasIp) {
      output.WriteUInt32(1, field_names[2], Ip);
    }
    if (hasLatitude) {
      output.WriteFloat(2, field_names[3], Latitude);
    }
    if (hasLongitude) {
      output.WriteFloat(3, field_names[4], Longitude);
    }
    if (hasCountry) {
      output.WriteString(4, field_names[1], Country);
    }
    if (hasState) {
      output.WriteString(5, field_names[5], State);
    }
    if (hasCity) {
      output.WriteString(6, field_names[0], City);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIp) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Ip);
      }
      if (hasLatitude) {
        size += pb::CodedOutputStream.ComputeFloatSize(2, Latitude);
      }
      if (hasLongitude) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Longitude);
      }
      if (hasCountry) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Country);
      }
      if (hasState) {
        size += pb::CodedOutputStream.ComputeStringSize(5, State);
      }
      if (hasCity) {
        size += pb::CodedOutputStream.ComputeStringSize(6, City);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CIPLocationInfo ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CIPLocationInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CIPLocationInfo ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CIPLocationInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CIPLocationInfo ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CIPLocationInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CIPLocationInfo ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CIPLocationInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CIPLocationInfo ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CIPLocationInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CIPLocationInfo MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CIPLocationInfo prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CIPLocationInfo, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CIPLocationInfo cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CIPLocationInfo result;
    
    private CIPLocationInfo PrepareBuilder() {
      if (resultIsReadOnly) {
        CIPLocationInfo original = result;
        result = new CIPLocationInfo();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CIPLocationInfo MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CIPLocationInfo.Descriptor; }
    }
    
    public override CIPLocationInfo DefaultInstanceForType {
      get { return global::CIPLocationInfo.DefaultInstance; }
    }
    
    public override CIPLocationInfo BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CIPLocationInfo) {
        return MergeFrom((CIPLocationInfo) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CIPLocationInfo other) {
      if (other == global::CIPLocationInfo.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasIp) {
        Ip = other.Ip;
      }
      if (other.HasLatitude) {
        Latitude = other.Latitude;
      }
      if (other.HasLongitude) {
        Longitude = other.Longitude;
      }
      if (other.HasCountry) {
        Country = other.Country;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.HasCity) {
        City = other.City;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cIPLocationInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cIPLocationInfoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasIp = input.ReadUInt32(ref result.ip_);
            break;
          }
          case 21: {
            result.hasLatitude = input.ReadFloat(ref result.latitude_);
            break;
          }
          case 29: {
            result.hasLongitude = input.ReadFloat(ref result.longitude_);
            break;
          }
          case 34: {
            result.hasCountry = input.ReadString(ref result.country_);
            break;
          }
          case 42: {
            result.hasState = input.ReadString(ref result.state_);
            break;
          }
          case 50: {
            result.hasCity = input.ReadString(ref result.city_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasIp {
      get { return result.hasIp; }
    }
    [global::System.CLSCompliant(false)]
    public uint Ip {
      get { return result.Ip; }
      set { SetIp(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetIp(uint value) {
      PrepareBuilder();
      result.hasIp = true;
      result.ip_ = value;
      return this;
    }
    public Builder ClearIp() {
      PrepareBuilder();
      result.hasIp = false;
      result.ip_ = 0;
      return this;
    }
    
    public bool HasLatitude {
      get { return result.hasLatitude; }
    }
    public float Latitude {
      get { return result.Latitude; }
      set { SetLatitude(value); }
    }
    public Builder SetLatitude(float value) {
      PrepareBuilder();
      result.hasLatitude = true;
      result.latitude_ = value;
      return this;
    }
    public Builder ClearLatitude() {
      PrepareBuilder();
      result.hasLatitude = false;
      result.latitude_ = 0F;
      return this;
    }
    
    public bool HasLongitude {
      get { return result.hasLongitude; }
    }
    public float Longitude {
      get { return result.Longitude; }
      set { SetLongitude(value); }
    }
    public Builder SetLongitude(float value) {
      PrepareBuilder();
      result.hasLongitude = true;
      result.longitude_ = value;
      return this;
    }
    public Builder ClearLongitude() {
      PrepareBuilder();
      result.hasLongitude = false;
      result.longitude_ = 0F;
      return this;
    }
    
    public bool HasCountry {
      get { return result.hasCountry; }
    }
    public string Country {
      get { return result.Country; }
      set { SetCountry(value); }
    }
    public Builder SetCountry(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCountry = true;
      result.country_ = value;
      return this;
    }
    public Builder ClearCountry() {
      PrepareBuilder();
      result.hasCountry = false;
      result.country_ = "";
      return this;
    }
    
    public bool HasState {
      get { return result.hasState; }
    }
    public string State {
      get { return result.State; }
      set { SetState(value); }
    }
    public Builder SetState(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasState = true;
      result.state_ = value;
      return this;
    }
    public Builder ClearState() {
      PrepareBuilder();
      result.hasState = false;
      result.state_ = "";
      return this;
    }
    
    public bool HasCity {
      get { return result.hasCity; }
    }
    public string City {
      get { return result.City; }
      set { SetCity(value); }
    }
    public Builder SetCity(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCity = true;
      result.city_ = value;
      return this;
    }
    public Builder ClearCity() {
      PrepareBuilder();
      result.hasCity = false;
      result.city_ = "";
      return this;
    }
  }
  static CIPLocationInfo() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgGetIPLocationResponse : pb::GeneratedMessage<CGCMsgGetIPLocationResponse, CGCMsgGetIPLocationResponse.Builder> {
  private CGCMsgGetIPLocationResponse() { }
  private static readonly CGCMsgGetIPLocationResponse defaultInstance = new CGCMsgGetIPLocationResponse().MakeReadOnly();
  private static readonly string[] _cGCMsgGetIPLocationResponseFieldNames = new string[] { "infos" };
  private static readonly uint[] _cGCMsgGetIPLocationResponseFieldTags = new uint[] { 10 };
  public static CGCMsgGetIPLocationResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgGetIPLocationResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgGetIPLocationResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgGetIPLocationResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgGetIPLocationResponse, CGCMsgGetIPLocationResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgGetIPLocationResponse__FieldAccessorTable; }
  }
  
  public const int InfosFieldNumber = 1;
  private pbc::PopsicleList<global::CIPLocationInfo> infos_ = new pbc::PopsicleList<global::CIPLocationInfo>();
  public scg::IList<global::CIPLocationInfo> InfosList {
    get { return infos_; }
  }
  public int InfosCount {
    get { return infos_.Count; }
  }
  public global::CIPLocationInfo GetInfos(int index) {
    return infos_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgGetIPLocationResponseFieldNames;
    if (infos_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], infos_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CIPLocationInfo element in InfosList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgGetIPLocationResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgGetIPLocationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetIPLocationResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgGetIPLocationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetIPLocationResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgGetIPLocationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetIPLocationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgGetIPLocationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgGetIPLocationResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgGetIPLocationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgGetIPLocationResponse MakeReadOnly() {
    infos_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgGetIPLocationResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgGetIPLocationResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgGetIPLocationResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgGetIPLocationResponse result;
    
    private CGCMsgGetIPLocationResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgGetIPLocationResponse original = result;
        result = new CGCMsgGetIPLocationResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgGetIPLocationResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgGetIPLocationResponse.Descriptor; }
    }
    
    public override CGCMsgGetIPLocationResponse DefaultInstanceForType {
      get { return global::CGCMsgGetIPLocationResponse.DefaultInstance; }
    }
    
    public override CGCMsgGetIPLocationResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgGetIPLocationResponse) {
        return MergeFrom((CGCMsgGetIPLocationResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgGetIPLocationResponse other) {
      if (other == global::CGCMsgGetIPLocationResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.infos_.Count != 0) {
        result.infos_.Add(other.infos_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgGetIPLocationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgGetIPLocationResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.infos_, global::CIPLocationInfo.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CIPLocationInfo> InfosList {
      get { return PrepareBuilder().infos_; }
    }
    public int InfosCount {
      get { return result.InfosCount; }
    }
    public global::CIPLocationInfo GetInfos(int index) {
      return result.GetInfos(index);
    }
    public Builder SetInfos(int index, global::CIPLocationInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.infos_[index] = value;
      return this;
    }
    public Builder SetInfos(int index, global::CIPLocationInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.infos_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddInfos(global::CIPLocationInfo value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.infos_.Add(value);
      return this;
    }
    public Builder AddInfos(global::CIPLocationInfo.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.infos_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeInfos(scg::IEnumerable<global::CIPLocationInfo> values) {
      PrepareBuilder();
      result.infos_.Add(values);
      return this;
    }
    public Builder ClearInfos() {
      PrepareBuilder();
      result.infos_.Clear();
      return this;
    }
  }
  static CGCMsgGetIPLocationResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgSystemStatsSchema : pb::GeneratedMessage<CGCMsgSystemStatsSchema, CGCMsgSystemStatsSchema.Builder> {
  private CGCMsgSystemStatsSchema() { }
  private static readonly CGCMsgSystemStatsSchema defaultInstance = new CGCMsgSystemStatsSchema().MakeReadOnly();
  private static readonly string[] _cGCMsgSystemStatsSchemaFieldNames = new string[] { "gc_app_id", "schema_kv" };
  private static readonly uint[] _cGCMsgSystemStatsSchemaFieldTags = new uint[] { 8, 18 };
  public static CGCMsgSystemStatsSchema DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgSystemStatsSchema DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgSystemStatsSchema ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgSystemStatsSchema__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgSystemStatsSchema, CGCMsgSystemStatsSchema.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgSystemStatsSchema__FieldAccessorTable; }
  }
  
  public const int GcAppIdFieldNumber = 1;
  private bool hasGcAppId;
  private uint gcAppId_;
  public bool HasGcAppId {
    get { return hasGcAppId; }
  }
  [global::System.CLSCompliant(false)]
  public uint GcAppId {
    get { return gcAppId_; }
  }
  
  public const int SchemaKvFieldNumber = 2;
  private bool hasSchemaKv;
  private pb::ByteString schemaKv_ = pb::ByteString.Empty;
  public bool HasSchemaKv {
    get { return hasSchemaKv; }
  }
  public pb::ByteString SchemaKv {
    get { return schemaKv_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgSystemStatsSchemaFieldNames;
    if (hasGcAppId) {
      output.WriteUInt32(1, field_names[0], GcAppId);
    }
    if (hasSchemaKv) {
      output.WriteBytes(2, field_names[1], SchemaKv);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGcAppId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, GcAppId);
      }
      if (hasSchemaKv) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, SchemaKv);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgSystemStatsSchema ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgSystemStatsSchema ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgSystemStatsSchema ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgSystemStatsSchema ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgSystemStatsSchema ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgSystemStatsSchema ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgSystemStatsSchema ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgSystemStatsSchema ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgSystemStatsSchema ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgSystemStatsSchema ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgSystemStatsSchema MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgSystemStatsSchema prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgSystemStatsSchema, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgSystemStatsSchema cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgSystemStatsSchema result;
    
    private CGCMsgSystemStatsSchema PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgSystemStatsSchema original = result;
        result = new CGCMsgSystemStatsSchema();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgSystemStatsSchema MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgSystemStatsSchema.Descriptor; }
    }
    
    public override CGCMsgSystemStatsSchema DefaultInstanceForType {
      get { return global::CGCMsgSystemStatsSchema.DefaultInstance; }
    }
    
    public override CGCMsgSystemStatsSchema BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgSystemStatsSchema) {
        return MergeFrom((CGCMsgSystemStatsSchema) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgSystemStatsSchema other) {
      if (other == global::CGCMsgSystemStatsSchema.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasGcAppId) {
        GcAppId = other.GcAppId;
      }
      if (other.HasSchemaKv) {
        SchemaKv = other.SchemaKv;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgSystemStatsSchemaFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgSystemStatsSchemaFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasGcAppId = input.ReadUInt32(ref result.gcAppId_);
            break;
          }
          case 18: {
            result.hasSchemaKv = input.ReadBytes(ref result.schemaKv_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasGcAppId {
      get { return result.hasGcAppId; }
    }
    [global::System.CLSCompliant(false)]
    public uint GcAppId {
      get { return result.GcAppId; }
      set { SetGcAppId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGcAppId(uint value) {
      PrepareBuilder();
      result.hasGcAppId = true;
      result.gcAppId_ = value;
      return this;
    }
    public Builder ClearGcAppId() {
      PrepareBuilder();
      result.hasGcAppId = false;
      result.gcAppId_ = 0;
      return this;
    }
    
    public bool HasSchemaKv {
      get { return result.hasSchemaKv; }
    }
    public pb::ByteString SchemaKv {
      get { return result.SchemaKv; }
      set { SetSchemaKv(value); }
    }
    public Builder SetSchemaKv(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSchemaKv = true;
      result.schemaKv_ = value;
      return this;
    }
    public Builder ClearSchemaKv() {
      PrepareBuilder();
      result.hasSchemaKv = false;
      result.schemaKv_ = pb::ByteString.Empty;
      return this;
    }
  }
  static CGCMsgSystemStatsSchema() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgGetSystemStats : pb::GeneratedMessage<CGCMsgGetSystemStats, CGCMsgGetSystemStats.Builder> {
  private CGCMsgGetSystemStats() { }
  private static readonly CGCMsgGetSystemStats defaultInstance = new CGCMsgGetSystemStats().MakeReadOnly();
  private static readonly string[] _cGCMsgGetSystemStatsFieldNames = new string[] {  };
  private static readonly uint[] _cGCMsgGetSystemStatsFieldTags = new uint[] {  };
  public static CGCMsgGetSystemStats DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgGetSystemStats DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgGetSystemStats ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgGetSystemStats__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgGetSystemStats, CGCMsgGetSystemStats.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgGetSystemStats__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgGetSystemStatsFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgGetSystemStats ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgGetSystemStats ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetSystemStats ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgGetSystemStats ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetSystemStats ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgGetSystemStats ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetSystemStats ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgGetSystemStats ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgGetSystemStats ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgGetSystemStats ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgGetSystemStats MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgGetSystemStats prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgGetSystemStats, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgGetSystemStats cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgGetSystemStats result;
    
    private CGCMsgGetSystemStats PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgGetSystemStats original = result;
        result = new CGCMsgGetSystemStats();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgGetSystemStats MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgGetSystemStats.Descriptor; }
    }
    
    public override CGCMsgGetSystemStats DefaultInstanceForType {
      get { return global::CGCMsgGetSystemStats.DefaultInstance; }
    }
    
    public override CGCMsgGetSystemStats BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgGetSystemStats) {
        return MergeFrom((CGCMsgGetSystemStats) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgGetSystemStats other) {
      if (other == global::CGCMsgGetSystemStats.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgGetSystemStatsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgGetSystemStatsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static CGCMsgGetSystemStats() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCMsgGetSystemStatsResponse : pb::GeneratedMessage<CGCMsgGetSystemStatsResponse, CGCMsgGetSystemStatsResponse.Builder> {
  private CGCMsgGetSystemStatsResponse() { }
  private static readonly CGCMsgGetSystemStatsResponse defaultInstance = new CGCMsgGetSystemStatsResponse().MakeReadOnly();
  private static readonly string[] _cGCMsgGetSystemStatsResponseFieldNames = new string[] { "active_jobs", "game_server_sessions", "gc_app_id", "logon_jobs", "logon_queue", "socaches", "socaches_loading", "socaches_to_unload", "stats_kv", "steamid_locks", "user_sessions", "writeback_queue", "yielding_jobs" };
  private static readonly uint[] _cGCMsgGetSystemStatsResponseFieldTags = new uint[] { 24, 48, 8, 104, 96, 56, 72, 64, 18, 88, 40, 80, 32 };
  public static CGCMsgGetSystemStatsResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCMsgGetSystemStatsResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCMsgGetSystemStatsResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCMsgGetSystemStatsResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCMsgGetSystemStatsResponse, CGCMsgGetSystemStatsResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCMsgGetSystemStatsResponse__FieldAccessorTable; }
  }
  
  public const int GcAppIdFieldNumber = 1;
  private bool hasGcAppId;
  private uint gcAppId_;
  public bool HasGcAppId {
    get { return hasGcAppId; }
  }
  [global::System.CLSCompliant(false)]
  public uint GcAppId {
    get { return gcAppId_; }
  }
  
  public const int StatsKvFieldNumber = 2;
  private bool hasStatsKv;
  private pb::ByteString statsKv_ = pb::ByteString.Empty;
  public bool HasStatsKv {
    get { return hasStatsKv; }
  }
  public pb::ByteString StatsKv {
    get { return statsKv_; }
  }
  
  public const int ActiveJobsFieldNumber = 3;
  private bool hasActiveJobs;
  private uint activeJobs_;
  public bool HasActiveJobs {
    get { return hasActiveJobs; }
  }
  [global::System.CLSCompliant(false)]
  public uint ActiveJobs {
    get { return activeJobs_; }
  }
  
  public const int YieldingJobsFieldNumber = 4;
  private bool hasYieldingJobs;
  private uint yieldingJobs_;
  public bool HasYieldingJobs {
    get { return hasYieldingJobs; }
  }
  [global::System.CLSCompliant(false)]
  public uint YieldingJobs {
    get { return yieldingJobs_; }
  }
  
  public const int UserSessionsFieldNumber = 5;
  private bool hasUserSessions;
  private uint userSessions_;
  public bool HasUserSessions {
    get { return hasUserSessions; }
  }
  [global::System.CLSCompliant(false)]
  public uint UserSessions {
    get { return userSessions_; }
  }
  
  public const int GameServerSessionsFieldNumber = 6;
  private bool hasGameServerSessions;
  private uint gameServerSessions_;
  public bool HasGameServerSessions {
    get { return hasGameServerSessions; }
  }
  [global::System.CLSCompliant(false)]
  public uint GameServerSessions {
    get { return gameServerSessions_; }
  }
  
  public const int SocachesFieldNumber = 7;
  private bool hasSocaches;
  private uint socaches_;
  public bool HasSocaches {
    get { return hasSocaches; }
  }
  [global::System.CLSCompliant(false)]
  public uint Socaches {
    get { return socaches_; }
  }
  
  public const int SocachesToUnloadFieldNumber = 8;
  private bool hasSocachesToUnload;
  private uint socachesToUnload_;
  public bool HasSocachesToUnload {
    get { return hasSocachesToUnload; }
  }
  [global::System.CLSCompliant(false)]
  public uint SocachesToUnload {
    get { return socachesToUnload_; }
  }
  
  public const int SocachesLoadingFieldNumber = 9;
  private bool hasSocachesLoading;
  private uint socachesLoading_;
  public bool HasSocachesLoading {
    get { return hasSocachesLoading; }
  }
  [global::System.CLSCompliant(false)]
  public uint SocachesLoading {
    get { return socachesLoading_; }
  }
  
  public const int WritebackQueueFieldNumber = 10;
  private bool hasWritebackQueue;
  private uint writebackQueue_;
  public bool HasWritebackQueue {
    get { return hasWritebackQueue; }
  }
  [global::System.CLSCompliant(false)]
  public uint WritebackQueue {
    get { return writebackQueue_; }
  }
  
  public const int SteamidLocksFieldNumber = 11;
  private bool hasSteamidLocks;
  private uint steamidLocks_;
  public bool HasSteamidLocks {
    get { return hasSteamidLocks; }
  }
  [global::System.CLSCompliant(false)]
  public uint SteamidLocks {
    get { return steamidLocks_; }
  }
  
  public const int LogonQueueFieldNumber = 12;
  private bool hasLogonQueue;
  private uint logonQueue_;
  public bool HasLogonQueue {
    get { return hasLogonQueue; }
  }
  [global::System.CLSCompliant(false)]
  public uint LogonQueue {
    get { return logonQueue_; }
  }
  
  public const int LogonJobsFieldNumber = 13;
  private bool hasLogonJobs;
  private uint logonJobs_;
  public bool HasLogonJobs {
    get { return hasLogonJobs; }
  }
  [global::System.CLSCompliant(false)]
  public uint LogonJobs {
    get { return logonJobs_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCMsgGetSystemStatsResponseFieldNames;
    if (hasGcAppId) {
      output.WriteUInt32(1, field_names[2], GcAppId);
    }
    if (hasStatsKv) {
      output.WriteBytes(2, field_names[8], StatsKv);
    }
    if (hasActiveJobs) {
      output.WriteUInt32(3, field_names[0], ActiveJobs);
    }
    if (hasYieldingJobs) {
      output.WriteUInt32(4, field_names[12], YieldingJobs);
    }
    if (hasUserSessions) {
      output.WriteUInt32(5, field_names[10], UserSessions);
    }
    if (hasGameServerSessions) {
      output.WriteUInt32(6, field_names[1], GameServerSessions);
    }
    if (hasSocaches) {
      output.WriteUInt32(7, field_names[5], Socaches);
    }
    if (hasSocachesToUnload) {
      output.WriteUInt32(8, field_names[7], SocachesToUnload);
    }
    if (hasSocachesLoading) {
      output.WriteUInt32(9, field_names[6], SocachesLoading);
    }
    if (hasWritebackQueue) {
      output.WriteUInt32(10, field_names[11], WritebackQueue);
    }
    if (hasSteamidLocks) {
      output.WriteUInt32(11, field_names[9], SteamidLocks);
    }
    if (hasLogonQueue) {
      output.WriteUInt32(12, field_names[4], LogonQueue);
    }
    if (hasLogonJobs) {
      output.WriteUInt32(13, field_names[3], LogonJobs);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGcAppId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, GcAppId);
      }
      if (hasStatsKv) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, StatsKv);
      }
      if (hasActiveJobs) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, ActiveJobs);
      }
      if (hasYieldingJobs) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, YieldingJobs);
      }
      if (hasUserSessions) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, UserSessions);
      }
      if (hasGameServerSessions) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, GameServerSessions);
      }
      if (hasSocaches) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, Socaches);
      }
      if (hasSocachesToUnload) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, SocachesToUnload);
      }
      if (hasSocachesLoading) {
        size += pb::CodedOutputStream.ComputeUInt32Size(9, SocachesLoading);
      }
      if (hasWritebackQueue) {
        size += pb::CodedOutputStream.ComputeUInt32Size(10, WritebackQueue);
      }
      if (hasSteamidLocks) {
        size += pb::CodedOutputStream.ComputeUInt32Size(11, SteamidLocks);
      }
      if (hasLogonQueue) {
        size += pb::CodedOutputStream.ComputeUInt32Size(12, LogonQueue);
      }
      if (hasLogonJobs) {
        size += pb::CodedOutputStream.ComputeUInt32Size(13, LogonJobs);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCMsgGetSystemStatsResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgGetSystemStatsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetSystemStatsResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCMsgGetSystemStatsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetSystemStatsResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgGetSystemStatsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCMsgGetSystemStatsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCMsgGetSystemStatsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCMsgGetSystemStatsResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCMsgGetSystemStatsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCMsgGetSystemStatsResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCMsgGetSystemStatsResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCMsgGetSystemStatsResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCMsgGetSystemStatsResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCMsgGetSystemStatsResponse result;
    
    private CGCMsgGetSystemStatsResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCMsgGetSystemStatsResponse original = result;
        result = new CGCMsgGetSystemStatsResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCMsgGetSystemStatsResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCMsgGetSystemStatsResponse.Descriptor; }
    }
    
    public override CGCMsgGetSystemStatsResponse DefaultInstanceForType {
      get { return global::CGCMsgGetSystemStatsResponse.DefaultInstance; }
    }
    
    public override CGCMsgGetSystemStatsResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCMsgGetSystemStatsResponse) {
        return MergeFrom((CGCMsgGetSystemStatsResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCMsgGetSystemStatsResponse other) {
      if (other == global::CGCMsgGetSystemStatsResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasGcAppId) {
        GcAppId = other.GcAppId;
      }
      if (other.HasStatsKv) {
        StatsKv = other.StatsKv;
      }
      if (other.HasActiveJobs) {
        ActiveJobs = other.ActiveJobs;
      }
      if (other.HasYieldingJobs) {
        YieldingJobs = other.YieldingJobs;
      }
      if (other.HasUserSessions) {
        UserSessions = other.UserSessions;
      }
      if (other.HasGameServerSessions) {
        GameServerSessions = other.GameServerSessions;
      }
      if (other.HasSocaches) {
        Socaches = other.Socaches;
      }
      if (other.HasSocachesToUnload) {
        SocachesToUnload = other.SocachesToUnload;
      }
      if (other.HasSocachesLoading) {
        SocachesLoading = other.SocachesLoading;
      }
      if (other.HasWritebackQueue) {
        WritebackQueue = other.WritebackQueue;
      }
      if (other.HasSteamidLocks) {
        SteamidLocks = other.SteamidLocks;
      }
      if (other.HasLogonQueue) {
        LogonQueue = other.LogonQueue;
      }
      if (other.HasLogonJobs) {
        LogonJobs = other.LogonJobs;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCMsgGetSystemStatsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCMsgGetSystemStatsResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasGcAppId = input.ReadUInt32(ref result.gcAppId_);
            break;
          }
          case 18: {
            result.hasStatsKv = input.ReadBytes(ref result.statsKv_);
            break;
          }
          case 24: {
            result.hasActiveJobs = input.ReadUInt32(ref result.activeJobs_);
            break;
          }
          case 32: {
            result.hasYieldingJobs = input.ReadUInt32(ref result.yieldingJobs_);
            break;
          }
          case 40: {
            result.hasUserSessions = input.ReadUInt32(ref result.userSessions_);
            break;
          }
          case 48: {
            result.hasGameServerSessions = input.ReadUInt32(ref result.gameServerSessions_);
            break;
          }
          case 56: {
            result.hasSocaches = input.ReadUInt32(ref result.socaches_);
            break;
          }
          case 64: {
            result.hasSocachesToUnload = input.ReadUInt32(ref result.socachesToUnload_);
            break;
          }
          case 72: {
            result.hasSocachesLoading = input.ReadUInt32(ref result.socachesLoading_);
            break;
          }
          case 80: {
            result.hasWritebackQueue = input.ReadUInt32(ref result.writebackQueue_);
            break;
          }
          case 88: {
            result.hasSteamidLocks = input.ReadUInt32(ref result.steamidLocks_);
            break;
          }
          case 96: {
            result.hasLogonQueue = input.ReadUInt32(ref result.logonQueue_);
            break;
          }
          case 104: {
            result.hasLogonJobs = input.ReadUInt32(ref result.logonJobs_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasGcAppId {
      get { return result.hasGcAppId; }
    }
    [global::System.CLSCompliant(false)]
    public uint GcAppId {
      get { return result.GcAppId; }
      set { SetGcAppId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGcAppId(uint value) {
      PrepareBuilder();
      result.hasGcAppId = true;
      result.gcAppId_ = value;
      return this;
    }
    public Builder ClearGcAppId() {
      PrepareBuilder();
      result.hasGcAppId = false;
      result.gcAppId_ = 0;
      return this;
    }
    
    public bool HasStatsKv {
      get { return result.hasStatsKv; }
    }
    public pb::ByteString StatsKv {
      get { return result.StatsKv; }
      set { SetStatsKv(value); }
    }
    public Builder SetStatsKv(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasStatsKv = true;
      result.statsKv_ = value;
      return this;
    }
    public Builder ClearStatsKv() {
      PrepareBuilder();
      result.hasStatsKv = false;
      result.statsKv_ = pb::ByteString.Empty;
      return this;
    }
    
    public bool HasActiveJobs {
      get { return result.hasActiveJobs; }
    }
    [global::System.CLSCompliant(false)]
    public uint ActiveJobs {
      get { return result.ActiveJobs; }
      set { SetActiveJobs(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetActiveJobs(uint value) {
      PrepareBuilder();
      result.hasActiveJobs = true;
      result.activeJobs_ = value;
      return this;
    }
    public Builder ClearActiveJobs() {
      PrepareBuilder();
      result.hasActiveJobs = false;
      result.activeJobs_ = 0;
      return this;
    }
    
    public bool HasYieldingJobs {
      get { return result.hasYieldingJobs; }
    }
    [global::System.CLSCompliant(false)]
    public uint YieldingJobs {
      get { return result.YieldingJobs; }
      set { SetYieldingJobs(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetYieldingJobs(uint value) {
      PrepareBuilder();
      result.hasYieldingJobs = true;
      result.yieldingJobs_ = value;
      return this;
    }
    public Builder ClearYieldingJobs() {
      PrepareBuilder();
      result.hasYieldingJobs = false;
      result.yieldingJobs_ = 0;
      return this;
    }
    
    public bool HasUserSessions {
      get { return result.hasUserSessions; }
    }
    [global::System.CLSCompliant(false)]
    public uint UserSessions {
      get { return result.UserSessions; }
      set { SetUserSessions(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetUserSessions(uint value) {
      PrepareBuilder();
      result.hasUserSessions = true;
      result.userSessions_ = value;
      return this;
    }
    public Builder ClearUserSessions() {
      PrepareBuilder();
      result.hasUserSessions = false;
      result.userSessions_ = 0;
      return this;
    }
    
    public bool HasGameServerSessions {
      get { return result.hasGameServerSessions; }
    }
    [global::System.CLSCompliant(false)]
    public uint GameServerSessions {
      get { return result.GameServerSessions; }
      set { SetGameServerSessions(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGameServerSessions(uint value) {
      PrepareBuilder();
      result.hasGameServerSessions = true;
      result.gameServerSessions_ = value;
      return this;
    }
    public Builder ClearGameServerSessions() {
      PrepareBuilder();
      result.hasGameServerSessions = false;
      result.gameServerSessions_ = 0;
      return this;
    }
    
    public bool HasSocaches {
      get { return result.hasSocaches; }
    }
    [global::System.CLSCompliant(false)]
    public uint Socaches {
      get { return result.Socaches; }
      set { SetSocaches(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSocaches(uint value) {
      PrepareBuilder();
      result.hasSocaches = true;
      result.socaches_ = value;
      return this;
    }
    public Builder ClearSocaches() {
      PrepareBuilder();
      result.hasSocaches = false;
      result.socaches_ = 0;
      return this;
    }
    
    public bool HasSocachesToUnload {
      get { return result.hasSocachesToUnload; }
    }
    [global::System.CLSCompliant(false)]
    public uint SocachesToUnload {
      get { return result.SocachesToUnload; }
      set { SetSocachesToUnload(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSocachesToUnload(uint value) {
      PrepareBuilder();
      result.hasSocachesToUnload = true;
      result.socachesToUnload_ = value;
      return this;
    }
    public Builder ClearSocachesToUnload() {
      PrepareBuilder();
      result.hasSocachesToUnload = false;
      result.socachesToUnload_ = 0;
      return this;
    }
    
    public bool HasSocachesLoading {
      get { return result.hasSocachesLoading; }
    }
    [global::System.CLSCompliant(false)]
    public uint SocachesLoading {
      get { return result.SocachesLoading; }
      set { SetSocachesLoading(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSocachesLoading(uint value) {
      PrepareBuilder();
      result.hasSocachesLoading = true;
      result.socachesLoading_ = value;
      return this;
    }
    public Builder ClearSocachesLoading() {
      PrepareBuilder();
      result.hasSocachesLoading = false;
      result.socachesLoading_ = 0;
      return this;
    }
    
    public bool HasWritebackQueue {
      get { return result.hasWritebackQueue; }
    }
    [global::System.CLSCompliant(false)]
    public uint WritebackQueue {
      get { return result.WritebackQueue; }
      set { SetWritebackQueue(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetWritebackQueue(uint value) {
      PrepareBuilder();
      result.hasWritebackQueue = true;
      result.writebackQueue_ = value;
      return this;
    }
    public Builder ClearWritebackQueue() {
      PrepareBuilder();
      result.hasWritebackQueue = false;
      result.writebackQueue_ = 0;
      return this;
    }
    
    public bool HasSteamidLocks {
      get { return result.hasSteamidLocks; }
    }
    [global::System.CLSCompliant(false)]
    public uint SteamidLocks {
      get { return result.SteamidLocks; }
      set { SetSteamidLocks(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamidLocks(uint value) {
      PrepareBuilder();
      result.hasSteamidLocks = true;
      result.steamidLocks_ = value;
      return this;
    }
    public Builder ClearSteamidLocks() {
      PrepareBuilder();
      result.hasSteamidLocks = false;
      result.steamidLocks_ = 0;
      return this;
    }
    
    public bool HasLogonQueue {
      get { return result.hasLogonQueue; }
    }
    [global::System.CLSCompliant(false)]
    public uint LogonQueue {
      get { return result.LogonQueue; }
      set { SetLogonQueue(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetLogonQueue(uint value) {
      PrepareBuilder();
      result.hasLogonQueue = true;
      result.logonQueue_ = value;
      return this;
    }
    public Builder ClearLogonQueue() {
      PrepareBuilder();
      result.hasLogonQueue = false;
      result.logonQueue_ = 0;
      return this;
    }
    
    public bool HasLogonJobs {
      get { return result.hasLogonJobs; }
    }
    [global::System.CLSCompliant(false)]
    public uint LogonJobs {
      get { return result.LogonJobs; }
      set { SetLogonJobs(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetLogonJobs(uint value) {
      PrepareBuilder();
      result.hasLogonJobs = true;
      result.logonJobs_ = value;
      return this;
    }
    public Builder ClearLogonJobs() {
      PrepareBuilder();
      result.hasLogonJobs = false;
      result.logonJobs_ = 0;
      return this;
    }
  }
  static CGCMsgGetSystemStatsResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMSendEmail : pb::GeneratedMessage<CMsgAMSendEmail, CMsgAMSendEmail.Builder> {
  private CMsgAMSendEmail() { }
  private static readonly CMsgAMSendEmail defaultInstance = new CMsgAMSendEmail().MakeReadOnly();
  private static readonly string[] _cMsgAMSendEmailFieldNames = new string[] { "email_format", "email_msg_type", "persona_name_tokens", "source_gc", "steamid", "tokens" };
  private static readonly uint[] _cMsgAMSendEmailFieldTags = new uint[] { 24, 16, 42, 48, 9, 58 };
  public static CMsgAMSendEmail DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMSendEmail DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMSendEmail ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMSendEmail__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMSendEmail, CMsgAMSendEmail.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMSendEmail__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ReplacementToken : pb::GeneratedMessage<ReplacementToken, ReplacementToken.Builder> {
      private ReplacementToken() { }
      private static readonly ReplacementToken defaultInstance = new ReplacementToken().MakeReadOnly();
      private static readonly string[] _replacementTokenFieldNames = new string[] { "token_name", "token_value" };
      private static readonly uint[] _replacementTokenFieldTags = new uint[] { 10, 18 };
      public static ReplacementToken DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override ReplacementToken DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override ReplacementToken ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgAMSendEmail_ReplacementToken__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<ReplacementToken, ReplacementToken.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgAMSendEmail_ReplacementToken__FieldAccessorTable; }
      }
      
      public const int TokenNameFieldNumber = 1;
      private bool hasTokenName;
      private string tokenName_ = "";
      public bool HasTokenName {
        get { return hasTokenName; }
      }
      public string TokenName {
        get { return tokenName_; }
      }
      
      public const int TokenValueFieldNumber = 2;
      private bool hasTokenValue;
      private string tokenValue_ = "";
      public bool HasTokenValue {
        get { return hasTokenValue; }
      }
      public string TokenValue {
        get { return tokenValue_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _replacementTokenFieldNames;
        if (hasTokenName) {
          output.WriteString(1, field_names[0], TokenName);
        }
        if (hasTokenValue) {
          output.WriteString(2, field_names[1], TokenValue);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasTokenName) {
            size += pb::CodedOutputStream.ComputeStringSize(1, TokenName);
          }
          if (hasTokenValue) {
            size += pb::CodedOutputStream.ComputeStringSize(2, TokenValue);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static ReplacementToken ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ReplacementToken ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ReplacementToken ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ReplacementToken ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ReplacementToken ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ReplacementToken ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static ReplacementToken ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static ReplacementToken ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static ReplacementToken ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ReplacementToken ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private ReplacementToken MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(ReplacementToken prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<ReplacementToken, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(ReplacementToken cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private ReplacementToken result;
        
        private ReplacementToken PrepareBuilder() {
          if (resultIsReadOnly) {
            ReplacementToken original = result;
            result = new ReplacementToken();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override ReplacementToken MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgAMSendEmail.Types.ReplacementToken.Descriptor; }
        }
        
        public override ReplacementToken DefaultInstanceForType {
          get { return global::CMsgAMSendEmail.Types.ReplacementToken.DefaultInstance; }
        }
        
        public override ReplacementToken BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is ReplacementToken) {
            return MergeFrom((ReplacementToken) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(ReplacementToken other) {
          if (other == global::CMsgAMSendEmail.Types.ReplacementToken.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasTokenName) {
            TokenName = other.TokenName;
          }
          if (other.HasTokenValue) {
            TokenValue = other.TokenValue;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_replacementTokenFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _replacementTokenFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasTokenName = input.ReadString(ref result.tokenName_);
                break;
              }
              case 18: {
                result.hasTokenValue = input.ReadString(ref result.tokenValue_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasTokenName {
          get { return result.hasTokenName; }
        }
        public string TokenName {
          get { return result.TokenName; }
          set { SetTokenName(value); }
        }
        public Builder SetTokenName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasTokenName = true;
          result.tokenName_ = value;
          return this;
        }
        public Builder ClearTokenName() {
          PrepareBuilder();
          result.hasTokenName = false;
          result.tokenName_ = "";
          return this;
        }
        
        public bool HasTokenValue {
          get { return result.hasTokenValue; }
        }
        public string TokenValue {
          get { return result.TokenValue; }
          set { SetTokenValue(value); }
        }
        public Builder SetTokenValue(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasTokenValue = true;
          result.tokenValue_ = value;
          return this;
        }
        public Builder ClearTokenValue() {
          PrepareBuilder();
          result.hasTokenValue = false;
          result.tokenValue_ = "";
          return this;
        }
      }
      static ReplacementToken() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class PersonaNameReplacementToken : pb::GeneratedMessage<PersonaNameReplacementToken, PersonaNameReplacementToken.Builder> {
      private PersonaNameReplacementToken() { }
      private static readonly PersonaNameReplacementToken defaultInstance = new PersonaNameReplacementToken().MakeReadOnly();
      private static readonly string[] _personaNameReplacementTokenFieldNames = new string[] { "steamid", "token_name" };
      private static readonly uint[] _personaNameReplacementTokenFieldTags = new uint[] { 9, 18 };
      public static PersonaNameReplacementToken DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override PersonaNameReplacementToken DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override PersonaNameReplacementToken ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgAMSendEmail_PersonaNameReplacementToken__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<PersonaNameReplacementToken, PersonaNameReplacementToken.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgAMSendEmail_PersonaNameReplacementToken__FieldAccessorTable; }
      }
      
      public const int SteamidFieldNumber = 1;
      private bool hasSteamid;
      private ulong steamid_;
      public bool HasSteamid {
        get { return hasSteamid; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Steamid {
        get { return steamid_; }
      }
      
      public const int TokenNameFieldNumber = 2;
      private bool hasTokenName;
      private string tokenName_ = "";
      public bool HasTokenName {
        get { return hasTokenName; }
      }
      public string TokenName {
        get { return tokenName_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _personaNameReplacementTokenFieldNames;
        if (hasSteamid) {
          output.WriteFixed64(1, field_names[0], Steamid);
        }
        if (hasTokenName) {
          output.WriteString(2, field_names[1], TokenName);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasSteamid) {
            size += pb::CodedOutputStream.ComputeFixed64Size(1, Steamid);
          }
          if (hasTokenName) {
            size += pb::CodedOutputStream.ComputeStringSize(2, TokenName);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static PersonaNameReplacementToken ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static PersonaNameReplacementToken ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static PersonaNameReplacementToken ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static PersonaNameReplacementToken ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static PersonaNameReplacementToken ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static PersonaNameReplacementToken ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static PersonaNameReplacementToken ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static PersonaNameReplacementToken ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static PersonaNameReplacementToken ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static PersonaNameReplacementToken ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private PersonaNameReplacementToken MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(PersonaNameReplacementToken prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<PersonaNameReplacementToken, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(PersonaNameReplacementToken cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private PersonaNameReplacementToken result;
        
        private PersonaNameReplacementToken PrepareBuilder() {
          if (resultIsReadOnly) {
            PersonaNameReplacementToken original = result;
            result = new PersonaNameReplacementToken();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override PersonaNameReplacementToken MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgAMSendEmail.Types.PersonaNameReplacementToken.Descriptor; }
        }
        
        public override PersonaNameReplacementToken DefaultInstanceForType {
          get { return global::CMsgAMSendEmail.Types.PersonaNameReplacementToken.DefaultInstance; }
        }
        
        public override PersonaNameReplacementToken BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is PersonaNameReplacementToken) {
            return MergeFrom((PersonaNameReplacementToken) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(PersonaNameReplacementToken other) {
          if (other == global::CMsgAMSendEmail.Types.PersonaNameReplacementToken.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasSteamid) {
            Steamid = other.Steamid;
          }
          if (other.HasTokenName) {
            TokenName = other.TokenName;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_personaNameReplacementTokenFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _personaNameReplacementTokenFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 9: {
                result.hasSteamid = input.ReadFixed64(ref result.steamid_);
                break;
              }
              case 18: {
                result.hasTokenName = input.ReadString(ref result.tokenName_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasSteamid {
          get { return result.hasSteamid; }
        }
        [global::System.CLSCompliant(false)]
        public ulong Steamid {
          get { return result.Steamid; }
          set { SetSteamid(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetSteamid(ulong value) {
          PrepareBuilder();
          result.hasSteamid = true;
          result.steamid_ = value;
          return this;
        }
        public Builder ClearSteamid() {
          PrepareBuilder();
          result.hasSteamid = false;
          result.steamid_ = 0;
          return this;
        }
        
        public bool HasTokenName {
          get { return result.hasTokenName; }
        }
        public string TokenName {
          get { return result.TokenName; }
          set { SetTokenName(value); }
        }
        public Builder SetTokenName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasTokenName = true;
          result.tokenName_ = value;
          return this;
        }
        public Builder ClearTokenName() {
          PrepareBuilder();
          result.hasTokenName = false;
          result.tokenName_ = "";
          return this;
        }
      }
      static PersonaNameReplacementToken() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int SteamidFieldNumber = 1;
  private bool hasSteamid;
  private ulong steamid_;
  public bool HasSteamid {
    get { return hasSteamid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Steamid {
    get { return steamid_; }
  }
  
  public const int EmailMsgTypeFieldNumber = 2;
  private bool hasEmailMsgType;
  private uint emailMsgType_;
  public bool HasEmailMsgType {
    get { return hasEmailMsgType; }
  }
  [global::System.CLSCompliant(false)]
  public uint EmailMsgType {
    get { return emailMsgType_; }
  }
  
  public const int EmailFormatFieldNumber = 3;
  private bool hasEmailFormat;
  private uint emailFormat_;
  public bool HasEmailFormat {
    get { return hasEmailFormat; }
  }
  [global::System.CLSCompliant(false)]
  public uint EmailFormat {
    get { return emailFormat_; }
  }
  
  public const int PersonaNameTokensFieldNumber = 5;
  private pbc::PopsicleList<global::CMsgAMSendEmail.Types.PersonaNameReplacementToken> personaNameTokens_ = new pbc::PopsicleList<global::CMsgAMSendEmail.Types.PersonaNameReplacementToken>();
  public scg::IList<global::CMsgAMSendEmail.Types.PersonaNameReplacementToken> PersonaNameTokensList {
    get { return personaNameTokens_; }
  }
  public int PersonaNameTokensCount {
    get { return personaNameTokens_.Count; }
  }
  public global::CMsgAMSendEmail.Types.PersonaNameReplacementToken GetPersonaNameTokens(int index) {
    return personaNameTokens_[index];
  }
  
  public const int SourceGcFieldNumber = 6;
  private bool hasSourceGc;
  private uint sourceGc_;
  public bool HasSourceGc {
    get { return hasSourceGc; }
  }
  [global::System.CLSCompliant(false)]
  public uint SourceGc {
    get { return sourceGc_; }
  }
  
  public const int TokensFieldNumber = 7;
  private pbc::PopsicleList<global::CMsgAMSendEmail.Types.ReplacementToken> tokens_ = new pbc::PopsicleList<global::CMsgAMSendEmail.Types.ReplacementToken>();
  public scg::IList<global::CMsgAMSendEmail.Types.ReplacementToken> TokensList {
    get { return tokens_; }
  }
  public int TokensCount {
    get { return tokens_.Count; }
  }
  public global::CMsgAMSendEmail.Types.ReplacementToken GetTokens(int index) {
    return tokens_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMSendEmailFieldNames;
    if (hasSteamid) {
      output.WriteFixed64(1, field_names[4], Steamid);
    }
    if (hasEmailMsgType) {
      output.WriteUInt32(2, field_names[1], EmailMsgType);
    }
    if (hasEmailFormat) {
      output.WriteUInt32(3, field_names[0], EmailFormat);
    }
    if (personaNameTokens_.Count > 0) {
      output.WriteMessageArray(5, field_names[2], personaNameTokens_);
    }
    if (hasSourceGc) {
      output.WriteUInt32(6, field_names[3], SourceGc);
    }
    if (tokens_.Count > 0) {
      output.WriteMessageArray(7, field_names[5], tokens_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, Steamid);
      }
      if (hasEmailMsgType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, EmailMsgType);
      }
      if (hasEmailFormat) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, EmailFormat);
      }
      foreach (global::CMsgAMSendEmail.Types.PersonaNameReplacementToken element in PersonaNameTokensList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      if (hasSourceGc) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, SourceGc);
      }
      foreach (global::CMsgAMSendEmail.Types.ReplacementToken element in TokensList) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMSendEmail ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMSendEmail ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMSendEmail ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMSendEmail ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMSendEmail ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMSendEmail ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMSendEmail ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMSendEmail ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMSendEmail ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMSendEmail ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMSendEmail MakeReadOnly() {
    personaNameTokens_.MakeReadOnly();
    tokens_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMSendEmail prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMSendEmail, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMSendEmail cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMSendEmail result;
    
    private CMsgAMSendEmail PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMSendEmail original = result;
        result = new CMsgAMSendEmail();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMSendEmail MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMSendEmail.Descriptor; }
    }
    
    public override CMsgAMSendEmail DefaultInstanceForType {
      get { return global::CMsgAMSendEmail.DefaultInstance; }
    }
    
    public override CMsgAMSendEmail BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMSendEmail) {
        return MergeFrom((CMsgAMSendEmail) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMSendEmail other) {
      if (other == global::CMsgAMSendEmail.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasEmailMsgType) {
        EmailMsgType = other.EmailMsgType;
      }
      if (other.HasEmailFormat) {
        EmailFormat = other.EmailFormat;
      }
      if (other.personaNameTokens_.Count != 0) {
        result.personaNameTokens_.Add(other.personaNameTokens_);
      }
      if (other.HasSourceGc) {
        SourceGc = other.SourceGc;
      }
      if (other.tokens_.Count != 0) {
        result.tokens_.Add(other.tokens_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMSendEmailFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMSendEmailFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamid = input.ReadFixed64(ref result.steamid_);
            break;
          }
          case 16: {
            result.hasEmailMsgType = input.ReadUInt32(ref result.emailMsgType_);
            break;
          }
          case 24: {
            result.hasEmailFormat = input.ReadUInt32(ref result.emailFormat_);
            break;
          }
          case 42: {
            input.ReadMessageArray(tag, field_name, result.personaNameTokens_, global::CMsgAMSendEmail.Types.PersonaNameReplacementToken.DefaultInstance, extensionRegistry);
            break;
          }
          case 48: {
            result.hasSourceGc = input.ReadUInt32(ref result.sourceGc_);
            break;
          }
          case 58: {
            input.ReadMessageArray(tag, field_name, result.tokens_, global::CMsgAMSendEmail.Types.ReplacementToken.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamid {
      get { return result.hasSteamid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Steamid {
      get { return result.Steamid; }
      set { SetSteamid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamid(ulong value) {
      PrepareBuilder();
      result.hasSteamid = true;
      result.steamid_ = value;
      return this;
    }
    public Builder ClearSteamid() {
      PrepareBuilder();
      result.hasSteamid = false;
      result.steamid_ = 0;
      return this;
    }
    
    public bool HasEmailMsgType {
      get { return result.hasEmailMsgType; }
    }
    [global::System.CLSCompliant(false)]
    public uint EmailMsgType {
      get { return result.EmailMsgType; }
      set { SetEmailMsgType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEmailMsgType(uint value) {
      PrepareBuilder();
      result.hasEmailMsgType = true;
      result.emailMsgType_ = value;
      return this;
    }
    public Builder ClearEmailMsgType() {
      PrepareBuilder();
      result.hasEmailMsgType = false;
      result.emailMsgType_ = 0;
      return this;
    }
    
    public bool HasEmailFormat {
      get { return result.hasEmailFormat; }
    }
    [global::System.CLSCompliant(false)]
    public uint EmailFormat {
      get { return result.EmailFormat; }
      set { SetEmailFormat(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEmailFormat(uint value) {
      PrepareBuilder();
      result.hasEmailFormat = true;
      result.emailFormat_ = value;
      return this;
    }
    public Builder ClearEmailFormat() {
      PrepareBuilder();
      result.hasEmailFormat = false;
      result.emailFormat_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgAMSendEmail.Types.PersonaNameReplacementToken> PersonaNameTokensList {
      get { return PrepareBuilder().personaNameTokens_; }
    }
    public int PersonaNameTokensCount {
      get { return result.PersonaNameTokensCount; }
    }
    public global::CMsgAMSendEmail.Types.PersonaNameReplacementToken GetPersonaNameTokens(int index) {
      return result.GetPersonaNameTokens(index);
    }
    public Builder SetPersonaNameTokens(int index, global::CMsgAMSendEmail.Types.PersonaNameReplacementToken value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.personaNameTokens_[index] = value;
      return this;
    }
    public Builder SetPersonaNameTokens(int index, global::CMsgAMSendEmail.Types.PersonaNameReplacementToken.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.personaNameTokens_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddPersonaNameTokens(global::CMsgAMSendEmail.Types.PersonaNameReplacementToken value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.personaNameTokens_.Add(value);
      return this;
    }
    public Builder AddPersonaNameTokens(global::CMsgAMSendEmail.Types.PersonaNameReplacementToken.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.personaNameTokens_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangePersonaNameTokens(scg::IEnumerable<global::CMsgAMSendEmail.Types.PersonaNameReplacementToken> values) {
      PrepareBuilder();
      result.personaNameTokens_.Add(values);
      return this;
    }
    public Builder ClearPersonaNameTokens() {
      PrepareBuilder();
      result.personaNameTokens_.Clear();
      return this;
    }
    
    public bool HasSourceGc {
      get { return result.hasSourceGc; }
    }
    [global::System.CLSCompliant(false)]
    public uint SourceGc {
      get { return result.SourceGc; }
      set { SetSourceGc(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSourceGc(uint value) {
      PrepareBuilder();
      result.hasSourceGc = true;
      result.sourceGc_ = value;
      return this;
    }
    public Builder ClearSourceGc() {
      PrepareBuilder();
      result.hasSourceGc = false;
      result.sourceGc_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgAMSendEmail.Types.ReplacementToken> TokensList {
      get { return PrepareBuilder().tokens_; }
    }
    public int TokensCount {
      get { return result.TokensCount; }
    }
    public global::CMsgAMSendEmail.Types.ReplacementToken GetTokens(int index) {
      return result.GetTokens(index);
    }
    public Builder SetTokens(int index, global::CMsgAMSendEmail.Types.ReplacementToken value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.tokens_[index] = value;
      return this;
    }
    public Builder SetTokens(int index, global::CMsgAMSendEmail.Types.ReplacementToken.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.tokens_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddTokens(global::CMsgAMSendEmail.Types.ReplacementToken value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.tokens_.Add(value);
      return this;
    }
    public Builder AddTokens(global::CMsgAMSendEmail.Types.ReplacementToken.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.tokens_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeTokens(scg::IEnumerable<global::CMsgAMSendEmail.Types.ReplacementToken> values) {
      PrepareBuilder();
      result.tokens_.Add(values);
      return this;
    }
    public Builder ClearTokens() {
      PrepareBuilder();
      result.tokens_.Clear();
      return this;
    }
  }
  static CMsgAMSendEmail() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMSendEmailResponse : pb::GeneratedMessage<CMsgAMSendEmailResponse, CMsgAMSendEmailResponse.Builder> {
  private CMsgAMSendEmailResponse() { }
  private static readonly CMsgAMSendEmailResponse defaultInstance = new CMsgAMSendEmailResponse().MakeReadOnly();
  private static readonly string[] _cMsgAMSendEmailResponseFieldNames = new string[] { "eresult" };
  private static readonly uint[] _cMsgAMSendEmailResponseFieldTags = new uint[] { 8 };
  public static CMsgAMSendEmailResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMSendEmailResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMSendEmailResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMSendEmailResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMSendEmailResponse, CMsgAMSendEmailResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMSendEmailResponse__FieldAccessorTable; }
  }
  
  public const int EresultFieldNumber = 1;
  private bool hasEresult;
  private uint eresult_ = 2;
  public bool HasEresult {
    get { return hasEresult; }
  }
  [global::System.CLSCompliant(false)]
  public uint Eresult {
    get { return eresult_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMSendEmailResponseFieldNames;
    if (hasEresult) {
      output.WriteUInt32(1, field_names[0], Eresult);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEresult) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Eresult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMSendEmailResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMSendEmailResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMSendEmailResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMSendEmailResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMSendEmailResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMSendEmailResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMSendEmailResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMSendEmailResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMSendEmailResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMSendEmailResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMSendEmailResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMSendEmailResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMSendEmailResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMSendEmailResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMSendEmailResponse result;
    
    private CMsgAMSendEmailResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMSendEmailResponse original = result;
        result = new CMsgAMSendEmailResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMSendEmailResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMSendEmailResponse.Descriptor; }
    }
    
    public override CMsgAMSendEmailResponse DefaultInstanceForType {
      get { return global::CMsgAMSendEmailResponse.DefaultInstance; }
    }
    
    public override CMsgAMSendEmailResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMSendEmailResponse) {
        return MergeFrom((CMsgAMSendEmailResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMSendEmailResponse other) {
      if (other == global::CMsgAMSendEmailResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMSendEmailResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMSendEmailResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEresult = input.ReadUInt32(ref result.eresult_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEresult {
      get { return result.hasEresult; }
    }
    [global::System.CLSCompliant(false)]
    public uint Eresult {
      get { return result.Eresult; }
      set { SetEresult(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEresult(uint value) {
      PrepareBuilder();
      result.hasEresult = true;
      result.eresult_ = value;
      return this;
    }
    public Builder ClearEresult() {
      PrepareBuilder();
      result.hasEresult = false;
      result.eresult_ = 2;
      return this;
    }
  }
  static CMsgAMSendEmailResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCGetEmailTemplate : pb::GeneratedMessage<CMsgGCGetEmailTemplate, CMsgGCGetEmailTemplate.Builder> {
  private CMsgGCGetEmailTemplate() { }
  private static readonly CMsgGCGetEmailTemplate defaultInstance = new CMsgGCGetEmailTemplate().MakeReadOnly();
  private static readonly string[] _cMsgGCGetEmailTemplateFieldNames = new string[] { "app_id", "email_format", "email_lang", "email_msg_type" };
  private static readonly uint[] _cMsgGCGetEmailTemplateFieldTags = new uint[] { 8, 32, 24, 16 };
  public static CMsgGCGetEmailTemplate DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCGetEmailTemplate DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCGetEmailTemplate ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCGetEmailTemplate__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCGetEmailTemplate, CMsgGCGetEmailTemplate.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCGetEmailTemplate__FieldAccessorTable; }
  }
  
  public const int AppIdFieldNumber = 1;
  private bool hasAppId;
  private uint appId_;
  public bool HasAppId {
    get { return hasAppId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AppId {
    get { return appId_; }
  }
  
  public const int EmailMsgTypeFieldNumber = 2;
  private bool hasEmailMsgType;
  private uint emailMsgType_;
  public bool HasEmailMsgType {
    get { return hasEmailMsgType; }
  }
  [global::System.CLSCompliant(false)]
  public uint EmailMsgType {
    get { return emailMsgType_; }
  }
  
  public const int EmailLangFieldNumber = 3;
  private bool hasEmailLang;
  private int emailLang_;
  public bool HasEmailLang {
    get { return hasEmailLang; }
  }
  public int EmailLang {
    get { return emailLang_; }
  }
  
  public const int EmailFormatFieldNumber = 4;
  private bool hasEmailFormat;
  private int emailFormat_;
  public bool HasEmailFormat {
    get { return hasEmailFormat; }
  }
  public int EmailFormat {
    get { return emailFormat_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCGetEmailTemplateFieldNames;
    if (hasAppId) {
      output.WriteUInt32(1, field_names[0], AppId);
    }
    if (hasEmailMsgType) {
      output.WriteUInt32(2, field_names[3], EmailMsgType);
    }
    if (hasEmailLang) {
      output.WriteInt32(3, field_names[2], EmailLang);
    }
    if (hasEmailFormat) {
      output.WriteInt32(4, field_names[1], EmailFormat);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAppId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, AppId);
      }
      if (hasEmailMsgType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, EmailMsgType);
      }
      if (hasEmailLang) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, EmailLang);
      }
      if (hasEmailFormat) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, EmailFormat);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCGetEmailTemplate ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplate ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplate ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplate ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplate ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplate ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplate ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCGetEmailTemplate ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCGetEmailTemplate ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplate ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCGetEmailTemplate MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCGetEmailTemplate prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCGetEmailTemplate, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCGetEmailTemplate cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCGetEmailTemplate result;
    
    private CMsgGCGetEmailTemplate PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCGetEmailTemplate original = result;
        result = new CMsgGCGetEmailTemplate();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCGetEmailTemplate MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCGetEmailTemplate.Descriptor; }
    }
    
    public override CMsgGCGetEmailTemplate DefaultInstanceForType {
      get { return global::CMsgGCGetEmailTemplate.DefaultInstance; }
    }
    
    public override CMsgGCGetEmailTemplate BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCGetEmailTemplate) {
        return MergeFrom((CMsgGCGetEmailTemplate) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCGetEmailTemplate other) {
      if (other == global::CMsgGCGetEmailTemplate.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAppId) {
        AppId = other.AppId;
      }
      if (other.HasEmailMsgType) {
        EmailMsgType = other.EmailMsgType;
      }
      if (other.HasEmailLang) {
        EmailLang = other.EmailLang;
      }
      if (other.HasEmailFormat) {
        EmailFormat = other.EmailFormat;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCGetEmailTemplateFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCGetEmailTemplateFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAppId = input.ReadUInt32(ref result.appId_);
            break;
          }
          case 16: {
            result.hasEmailMsgType = input.ReadUInt32(ref result.emailMsgType_);
            break;
          }
          case 24: {
            result.hasEmailLang = input.ReadInt32(ref result.emailLang_);
            break;
          }
          case 32: {
            result.hasEmailFormat = input.ReadInt32(ref result.emailFormat_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAppId {
      get { return result.hasAppId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AppId {
      get { return result.AppId; }
      set { SetAppId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAppId(uint value) {
      PrepareBuilder();
      result.hasAppId = true;
      result.appId_ = value;
      return this;
    }
    public Builder ClearAppId() {
      PrepareBuilder();
      result.hasAppId = false;
      result.appId_ = 0;
      return this;
    }
    
    public bool HasEmailMsgType {
      get { return result.hasEmailMsgType; }
    }
    [global::System.CLSCompliant(false)]
    public uint EmailMsgType {
      get { return result.EmailMsgType; }
      set { SetEmailMsgType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEmailMsgType(uint value) {
      PrepareBuilder();
      result.hasEmailMsgType = true;
      result.emailMsgType_ = value;
      return this;
    }
    public Builder ClearEmailMsgType() {
      PrepareBuilder();
      result.hasEmailMsgType = false;
      result.emailMsgType_ = 0;
      return this;
    }
    
    public bool HasEmailLang {
      get { return result.hasEmailLang; }
    }
    public int EmailLang {
      get { return result.EmailLang; }
      set { SetEmailLang(value); }
    }
    public Builder SetEmailLang(int value) {
      PrepareBuilder();
      result.hasEmailLang = true;
      result.emailLang_ = value;
      return this;
    }
    public Builder ClearEmailLang() {
      PrepareBuilder();
      result.hasEmailLang = false;
      result.emailLang_ = 0;
      return this;
    }
    
    public bool HasEmailFormat {
      get { return result.hasEmailFormat; }
    }
    public int EmailFormat {
      get { return result.EmailFormat; }
      set { SetEmailFormat(value); }
    }
    public Builder SetEmailFormat(int value) {
      PrepareBuilder();
      result.hasEmailFormat = true;
      result.emailFormat_ = value;
      return this;
    }
    public Builder ClearEmailFormat() {
      PrepareBuilder();
      result.hasEmailFormat = false;
      result.emailFormat_ = 0;
      return this;
    }
  }
  static CMsgGCGetEmailTemplate() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCGetEmailTemplateResponse : pb::GeneratedMessage<CMsgGCGetEmailTemplateResponse, CMsgGCGetEmailTemplateResponse.Builder> {
  private CMsgGCGetEmailTemplateResponse() { }
  private static readonly CMsgGCGetEmailTemplateResponse defaultInstance = new CMsgGCGetEmailTemplateResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCGetEmailTemplateResponseFieldNames = new string[] { "eresult", "template", "template_exists" };
  private static readonly uint[] _cMsgGCGetEmailTemplateResponseFieldTags = new uint[] { 8, 26, 16 };
  public static CMsgGCGetEmailTemplateResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCGetEmailTemplateResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCGetEmailTemplateResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCGetEmailTemplateResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCGetEmailTemplateResponse, CMsgGCGetEmailTemplateResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCGetEmailTemplateResponse__FieldAccessorTable; }
  }
  
  public const int EresultFieldNumber = 1;
  private bool hasEresult;
  private uint eresult_ = 2;
  public bool HasEresult {
    get { return hasEresult; }
  }
  [global::System.CLSCompliant(false)]
  public uint Eresult {
    get { return eresult_; }
  }
  
  public const int TemplateExistsFieldNumber = 2;
  private bool hasTemplateExists;
  private bool templateExists_;
  public bool HasTemplateExists {
    get { return hasTemplateExists; }
  }
  public bool TemplateExists {
    get { return templateExists_; }
  }
  
  public const int TemplateFieldNumber = 3;
  private bool hasTemplate;
  private string template_ = "";
  public bool HasTemplate {
    get { return hasTemplate; }
  }
  public string Template {
    get { return template_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCGetEmailTemplateResponseFieldNames;
    if (hasEresult) {
      output.WriteUInt32(1, field_names[0], Eresult);
    }
    if (hasTemplateExists) {
      output.WriteBool(2, field_names[2], TemplateExists);
    }
    if (hasTemplate) {
      output.WriteString(3, field_names[1], Template);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEresult) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Eresult);
      }
      if (hasTemplateExists) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, TemplateExists);
      }
      if (hasTemplate) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Template);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCGetEmailTemplateResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplateResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplateResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplateResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplateResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplateResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplateResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCGetEmailTemplateResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCGetEmailTemplateResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetEmailTemplateResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCGetEmailTemplateResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCGetEmailTemplateResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCGetEmailTemplateResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCGetEmailTemplateResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCGetEmailTemplateResponse result;
    
    private CMsgGCGetEmailTemplateResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCGetEmailTemplateResponse original = result;
        result = new CMsgGCGetEmailTemplateResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCGetEmailTemplateResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCGetEmailTemplateResponse.Descriptor; }
    }
    
    public override CMsgGCGetEmailTemplateResponse DefaultInstanceForType {
      get { return global::CMsgGCGetEmailTemplateResponse.DefaultInstance; }
    }
    
    public override CMsgGCGetEmailTemplateResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCGetEmailTemplateResponse) {
        return MergeFrom((CMsgGCGetEmailTemplateResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCGetEmailTemplateResponse other) {
      if (other == global::CMsgGCGetEmailTemplateResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      if (other.HasTemplateExists) {
        TemplateExists = other.TemplateExists;
      }
      if (other.HasTemplate) {
        Template = other.Template;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCGetEmailTemplateResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCGetEmailTemplateResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEresult = input.ReadUInt32(ref result.eresult_);
            break;
          }
          case 16: {
            result.hasTemplateExists = input.ReadBool(ref result.templateExists_);
            break;
          }
          case 26: {
            result.hasTemplate = input.ReadString(ref result.template_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEresult {
      get { return result.hasEresult; }
    }
    [global::System.CLSCompliant(false)]
    public uint Eresult {
      get { return result.Eresult; }
      set { SetEresult(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEresult(uint value) {
      PrepareBuilder();
      result.hasEresult = true;
      result.eresult_ = value;
      return this;
    }
    public Builder ClearEresult() {
      PrepareBuilder();
      result.hasEresult = false;
      result.eresult_ = 2;
      return this;
    }
    
    public bool HasTemplateExists {
      get { return result.hasTemplateExists; }
    }
    public bool TemplateExists {
      get { return result.TemplateExists; }
      set { SetTemplateExists(value); }
    }
    public Builder SetTemplateExists(bool value) {
      PrepareBuilder();
      result.hasTemplateExists = true;
      result.templateExists_ = value;
      return this;
    }
    public Builder ClearTemplateExists() {
      PrepareBuilder();
      result.hasTemplateExists = false;
      result.templateExists_ = false;
      return this;
    }
    
    public bool HasTemplate {
      get { return result.hasTemplate; }
    }
    public string Template {
      get { return result.Template; }
      set { SetTemplate(value); }
    }
    public Builder SetTemplate(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasTemplate = true;
      result.template_ = value;
      return this;
    }
    public Builder ClearTemplate() {
      PrepareBuilder();
      result.hasTemplate = false;
      result.template_ = "";
      return this;
    }
  }
  static CMsgGCGetEmailTemplateResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMGrantGuestPasses2 : pb::GeneratedMessage<CMsgAMGrantGuestPasses2, CMsgAMGrantGuestPasses2.Builder> {
  private CMsgAMGrantGuestPasses2() { }
  private static readonly CMsgAMGrantGuestPasses2 defaultInstance = new CMsgAMGrantGuestPasses2().MakeReadOnly();
  private static readonly string[] _cMsgAMGrantGuestPasses2FieldNames = new string[] { "action", "days_to_expiration", "package_id", "passes_to_grant", "steam_id" };
  private static readonly uint[] _cMsgAMGrantGuestPasses2FieldTags = new uint[] { 40, 32, 16, 24, 9 };
  public static CMsgAMGrantGuestPasses2 DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMGrantGuestPasses2 DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMGrantGuestPasses2 ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMGrantGuestPasses2__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMGrantGuestPasses2, CMsgAMGrantGuestPasses2.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMGrantGuestPasses2__FieldAccessorTable; }
  }
  
  public const int SteamIdFieldNumber = 1;
  private bool hasSteamId;
  private ulong steamId_;
  public bool HasSteamId {
    get { return hasSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamId {
    get { return steamId_; }
  }
  
  public const int PackageIdFieldNumber = 2;
  private bool hasPackageId;
  private uint packageId_;
  public bool HasPackageId {
    get { return hasPackageId; }
  }
  [global::System.CLSCompliant(false)]
  public uint PackageId {
    get { return packageId_; }
  }
  
  public const int PassesToGrantFieldNumber = 3;
  private bool hasPassesToGrant;
  private int passesToGrant_;
  public bool HasPassesToGrant {
    get { return hasPassesToGrant; }
  }
  public int PassesToGrant {
    get { return passesToGrant_; }
  }
  
  public const int DaysToExpirationFieldNumber = 4;
  private bool hasDaysToExpiration;
  private int daysToExpiration_;
  public bool HasDaysToExpiration {
    get { return hasDaysToExpiration; }
  }
  public int DaysToExpiration {
    get { return daysToExpiration_; }
  }
  
  public const int ActionFieldNumber = 5;
  private bool hasAction;
  private int action_;
  public bool HasAction {
    get { return hasAction; }
  }
  public int Action {
    get { return action_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMGrantGuestPasses2FieldNames;
    if (hasSteamId) {
      output.WriteFixed64(1, field_names[4], SteamId);
    }
    if (hasPackageId) {
      output.WriteUInt32(2, field_names[2], PackageId);
    }
    if (hasPassesToGrant) {
      output.WriteInt32(3, field_names[3], PassesToGrant);
    }
    if (hasDaysToExpiration) {
      output.WriteInt32(4, field_names[1], DaysToExpiration);
    }
    if (hasAction) {
      output.WriteInt32(5, field_names[0], Action);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, SteamId);
      }
      if (hasPackageId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, PackageId);
      }
      if (hasPassesToGrant) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, PassesToGrant);
      }
      if (hasDaysToExpiration) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, DaysToExpiration);
      }
      if (hasAction) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, Action);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMGrantGuestPasses2 ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2 ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2 ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2 ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2 ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2 ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2 ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2 ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2 ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2 ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMGrantGuestPasses2 MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMGrantGuestPasses2 prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMGrantGuestPasses2, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMGrantGuestPasses2 cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMGrantGuestPasses2 result;
    
    private CMsgAMGrantGuestPasses2 PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMGrantGuestPasses2 original = result;
        result = new CMsgAMGrantGuestPasses2();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMGrantGuestPasses2 MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMGrantGuestPasses2.Descriptor; }
    }
    
    public override CMsgAMGrantGuestPasses2 DefaultInstanceForType {
      get { return global::CMsgAMGrantGuestPasses2.DefaultInstance; }
    }
    
    public override CMsgAMGrantGuestPasses2 BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMGrantGuestPasses2) {
        return MergeFrom((CMsgAMGrantGuestPasses2) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMGrantGuestPasses2 other) {
      if (other == global::CMsgAMGrantGuestPasses2.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      if (other.HasPackageId) {
        PackageId = other.PackageId;
      }
      if (other.HasPassesToGrant) {
        PassesToGrant = other.PassesToGrant;
      }
      if (other.HasDaysToExpiration) {
        DaysToExpiration = other.DaysToExpiration;
      }
      if (other.HasAction) {
        Action = other.Action;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMGrantGuestPasses2FieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMGrantGuestPasses2FieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamId = input.ReadFixed64(ref result.steamId_);
            break;
          }
          case 16: {
            result.hasPackageId = input.ReadUInt32(ref result.packageId_);
            break;
          }
          case 24: {
            result.hasPassesToGrant = input.ReadInt32(ref result.passesToGrant_);
            break;
          }
          case 32: {
            result.hasDaysToExpiration = input.ReadInt32(ref result.daysToExpiration_);
            break;
          }
          case 40: {
            result.hasAction = input.ReadInt32(ref result.action_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamId {
      get { return result.hasSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamId {
      get { return result.SteamId; }
      set { SetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamId(ulong value) {
      PrepareBuilder();
      result.hasSteamId = true;
      result.steamId_ = value;
      return this;
    }
    public Builder ClearSteamId() {
      PrepareBuilder();
      result.hasSteamId = false;
      result.steamId_ = 0;
      return this;
    }
    
    public bool HasPackageId {
      get { return result.hasPackageId; }
    }
    [global::System.CLSCompliant(false)]
    public uint PackageId {
      get { return result.PackageId; }
      set { SetPackageId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPackageId(uint value) {
      PrepareBuilder();
      result.hasPackageId = true;
      result.packageId_ = value;
      return this;
    }
    public Builder ClearPackageId() {
      PrepareBuilder();
      result.hasPackageId = false;
      result.packageId_ = 0;
      return this;
    }
    
    public bool HasPassesToGrant {
      get { return result.hasPassesToGrant; }
    }
    public int PassesToGrant {
      get { return result.PassesToGrant; }
      set { SetPassesToGrant(value); }
    }
    public Builder SetPassesToGrant(int value) {
      PrepareBuilder();
      result.hasPassesToGrant = true;
      result.passesToGrant_ = value;
      return this;
    }
    public Builder ClearPassesToGrant() {
      PrepareBuilder();
      result.hasPassesToGrant = false;
      result.passesToGrant_ = 0;
      return this;
    }
    
    public bool HasDaysToExpiration {
      get { return result.hasDaysToExpiration; }
    }
    public int DaysToExpiration {
      get { return result.DaysToExpiration; }
      set { SetDaysToExpiration(value); }
    }
    public Builder SetDaysToExpiration(int value) {
      PrepareBuilder();
      result.hasDaysToExpiration = true;
      result.daysToExpiration_ = value;
      return this;
    }
    public Builder ClearDaysToExpiration() {
      PrepareBuilder();
      result.hasDaysToExpiration = false;
      result.daysToExpiration_ = 0;
      return this;
    }
    
    public bool HasAction {
      get { return result.hasAction; }
    }
    public int Action {
      get { return result.Action; }
      set { SetAction(value); }
    }
    public Builder SetAction(int value) {
      PrepareBuilder();
      result.hasAction = true;
      result.action_ = value;
      return this;
    }
    public Builder ClearAction() {
      PrepareBuilder();
      result.hasAction = false;
      result.action_ = 0;
      return this;
    }
  }
  static CMsgAMGrantGuestPasses2() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAMGrantGuestPasses2Response : pb::GeneratedMessage<CMsgAMGrantGuestPasses2Response, CMsgAMGrantGuestPasses2Response.Builder> {
  private CMsgAMGrantGuestPasses2Response() { }
  private static readonly CMsgAMGrantGuestPasses2Response defaultInstance = new CMsgAMGrantGuestPasses2Response().MakeReadOnly();
  private static readonly string[] _cMsgAMGrantGuestPasses2ResponseFieldNames = new string[] { "eresult", "passes_granted" };
  private static readonly uint[] _cMsgAMGrantGuestPasses2ResponseFieldTags = new uint[] { 8, 16 };
  public static CMsgAMGrantGuestPasses2Response DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAMGrantGuestPasses2Response DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAMGrantGuestPasses2Response ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgAMGrantGuestPasses2Response__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAMGrantGuestPasses2Response, CMsgAMGrantGuestPasses2Response.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgAMGrantGuestPasses2Response__FieldAccessorTable; }
  }
  
  public const int EresultFieldNumber = 1;
  private bool hasEresult;
  private int eresult_ = 2;
  public bool HasEresult {
    get { return hasEresult; }
  }
  public int Eresult {
    get { return eresult_; }
  }
  
  public const int PassesGrantedFieldNumber = 2;
  private bool hasPassesGranted;
  private int passesGranted_;
  public bool HasPassesGranted {
    get { return hasPassesGranted; }
  }
  public int PassesGranted {
    get { return passesGranted_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAMGrantGuestPasses2ResponseFieldNames;
    if (hasEresult) {
      output.WriteInt32(1, field_names[0], Eresult);
    }
    if (hasPassesGranted) {
      output.WriteInt32(2, field_names[1], PassesGranted);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEresult) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Eresult);
      }
      if (hasPassesGranted) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, PassesGranted);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAMGrantGuestPasses2Response ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2Response ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2Response ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2Response ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2Response ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAMGrantGuestPasses2Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAMGrantGuestPasses2Response MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAMGrantGuestPasses2Response prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAMGrantGuestPasses2Response, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAMGrantGuestPasses2Response cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAMGrantGuestPasses2Response result;
    
    private CMsgAMGrantGuestPasses2Response PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAMGrantGuestPasses2Response original = result;
        result = new CMsgAMGrantGuestPasses2Response();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAMGrantGuestPasses2Response MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAMGrantGuestPasses2Response.Descriptor; }
    }
    
    public override CMsgAMGrantGuestPasses2Response DefaultInstanceForType {
      get { return global::CMsgAMGrantGuestPasses2Response.DefaultInstance; }
    }
    
    public override CMsgAMGrantGuestPasses2Response BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAMGrantGuestPasses2Response) {
        return MergeFrom((CMsgAMGrantGuestPasses2Response) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAMGrantGuestPasses2Response other) {
      if (other == global::CMsgAMGrantGuestPasses2Response.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      if (other.HasPassesGranted) {
        PassesGranted = other.PassesGranted;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAMGrantGuestPasses2ResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAMGrantGuestPasses2ResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEresult = input.ReadInt32(ref result.eresult_);
            break;
          }
          case 16: {
            result.hasPassesGranted = input.ReadInt32(ref result.passesGranted_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEresult {
      get { return result.hasEresult; }
    }
    public int Eresult {
      get { return result.Eresult; }
      set { SetEresult(value); }
    }
    public Builder SetEresult(int value) {
      PrepareBuilder();
      result.hasEresult = true;
      result.eresult_ = value;
      return this;
    }
    public Builder ClearEresult() {
      PrepareBuilder();
      result.hasEresult = false;
      result.eresult_ = 2;
      return this;
    }
    
    public bool HasPassesGranted {
      get { return result.hasPassesGranted; }
    }
    public int PassesGranted {
      get { return result.PassesGranted; }
      set { SetPassesGranted(value); }
    }
    public Builder SetPassesGranted(int value) {
      PrepareBuilder();
      result.hasPassesGranted = true;
      result.passesGranted_ = value;
      return this;
    }
    public Builder ClearPassesGranted() {
      PrepareBuilder();
      result.hasPassesGranted = false;
      result.passesGranted_ = 0;
      return this;
    }
  }
  static CMsgAMGrantGuestPasses2Response() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCSystemMsg_GetAccountDetails : pb::GeneratedMessage<CGCSystemMsg_GetAccountDetails, CGCSystemMsg_GetAccountDetails.Builder> {
  private CGCSystemMsg_GetAccountDetails() { }
  private static readonly CGCSystemMsg_GetAccountDetails defaultInstance = new CGCSystemMsg_GetAccountDetails().MakeReadOnly();
  private static readonly string[] _cGCSystemMsgGetAccountDetailsFieldNames = new string[] { "appid", "steamid" };
  private static readonly uint[] _cGCSystemMsgGetAccountDetailsFieldTags = new uint[] { 16, 9 };
  public static CGCSystemMsg_GetAccountDetails DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCSystemMsg_GetAccountDetails DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCSystemMsg_GetAccountDetails ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCSystemMsg_GetAccountDetails__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCSystemMsg_GetAccountDetails, CGCSystemMsg_GetAccountDetails.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCSystemMsg_GetAccountDetails__FieldAccessorTable; }
  }
  
  public const int SteamidFieldNumber = 1;
  private bool hasSteamid;
  private ulong steamid_;
  public bool HasSteamid {
    get { return hasSteamid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Steamid {
    get { return steamid_; }
  }
  
  public const int AppidFieldNumber = 2;
  private bool hasAppid;
  private uint appid_;
  public bool HasAppid {
    get { return hasAppid; }
  }
  [global::System.CLSCompliant(false)]
  public uint Appid {
    get { return appid_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCSystemMsgGetAccountDetailsFieldNames;
    if (hasSteamid) {
      output.WriteFixed64(1, field_names[1], Steamid);
    }
    if (hasAppid) {
      output.WriteUInt32(2, field_names[0], Appid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, Steamid);
      }
      if (hasAppid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Appid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCSystemMsg_GetAccountDetails ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCSystemMsg_GetAccountDetails MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCSystemMsg_GetAccountDetails prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCSystemMsg_GetAccountDetails, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCSystemMsg_GetAccountDetails cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCSystemMsg_GetAccountDetails result;
    
    private CGCSystemMsg_GetAccountDetails PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCSystemMsg_GetAccountDetails original = result;
        result = new CGCSystemMsg_GetAccountDetails();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCSystemMsg_GetAccountDetails MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCSystemMsg_GetAccountDetails.Descriptor; }
    }
    
    public override CGCSystemMsg_GetAccountDetails DefaultInstanceForType {
      get { return global::CGCSystemMsg_GetAccountDetails.DefaultInstance; }
    }
    
    public override CGCSystemMsg_GetAccountDetails BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCSystemMsg_GetAccountDetails) {
        return MergeFrom((CGCSystemMsg_GetAccountDetails) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCSystemMsg_GetAccountDetails other) {
      if (other == global::CGCSystemMsg_GetAccountDetails.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCSystemMsgGetAccountDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCSystemMsgGetAccountDetailsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamid = input.ReadFixed64(ref result.steamid_);
            break;
          }
          case 16: {
            result.hasAppid = input.ReadUInt32(ref result.appid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamid {
      get { return result.hasSteamid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Steamid {
      get { return result.Steamid; }
      set { SetSteamid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamid(ulong value) {
      PrepareBuilder();
      result.hasSteamid = true;
      result.steamid_ = value;
      return this;
    }
    public Builder ClearSteamid() {
      PrepareBuilder();
      result.hasSteamid = false;
      result.steamid_ = 0;
      return this;
    }
    
    public bool HasAppid {
      get { return result.hasAppid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Appid {
      get { return result.Appid; }
      set { SetAppid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAppid(uint value) {
      PrepareBuilder();
      result.hasAppid = true;
      result.appid_ = value;
      return this;
    }
    public Builder ClearAppid() {
      PrepareBuilder();
      result.hasAppid = false;
      result.appid_ = 0;
      return this;
    }
  }
  static CGCSystemMsg_GetAccountDetails() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCSystemMsg_GetAccountDetails_Response : pb::GeneratedMessage<CGCSystemMsg_GetAccountDetails_Response, CGCSystemMsg_GetAccountDetails_Response.Builder> {
  private CGCSystemMsg_GetAccountDetails_Response() { }
  private static readonly CGCSystemMsg_GetAccountDetails_Response defaultInstance = new CGCSystemMsg_GetAccountDetails_Response().MakeReadOnly();
  private static readonly string[] _cGCSystemMsgGetAccountDetailsResponseFieldNames = new string[] { "account_name", "accountid", "currency", "eresult_deprecated", "free_trial_expiration", "is_account_locked_down", "is_community_banned", "is_cyber_cafe", "is_free_trial_account", "is_inventory_public", "is_limited", "is_low_violence", "is_profile_public", "is_school_account", "is_subscribed", "is_trade_banned", "is_vac_banned", "package", "persona_name", "steam_level", "suspension_end_time", "trade_ban_expiration" };
  private static readonly uint[] _cGCSystemMsgGetAccountDetailsResponseFieldTags = new uint[] { 18, 160, 178, 8, 112, 128, 136, 64, 104, 40, 80, 120, 32, 72, 88, 144, 56, 96, 26, 184, 168, 152 };
  public static CGCSystemMsg_GetAccountDetails_Response DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCSystemMsg_GetAccountDetails_Response DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCSystemMsg_GetAccountDetails_Response ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCSystemMsg_GetAccountDetails_Response__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCSystemMsg_GetAccountDetails_Response, CGCSystemMsg_GetAccountDetails_Response.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCSystemMsg_GetAccountDetails_Response__FieldAccessorTable; }
  }
  
  public const int EresultDeprecatedFieldNumber = 1;
  private bool hasEresultDeprecated;
  private uint eresultDeprecated_ = 2;
  public bool HasEresultDeprecated {
    get { return hasEresultDeprecated; }
  }
  [global::System.CLSCompliant(false)]
  public uint EresultDeprecated {
    get { return eresultDeprecated_; }
  }
  
  public const int AccountNameFieldNumber = 2;
  private bool hasAccountName;
  private string accountName_ = "";
  public bool HasAccountName {
    get { return hasAccountName; }
  }
  public string AccountName {
    get { return accountName_; }
  }
  
  public const int PersonaNameFieldNumber = 3;
  private bool hasPersonaName;
  private string personaName_ = "";
  public bool HasPersonaName {
    get { return hasPersonaName; }
  }
  public string PersonaName {
    get { return personaName_; }
  }
  
  public const int IsProfilePublicFieldNumber = 4;
  private bool hasIsProfilePublic;
  private bool isProfilePublic_;
  public bool HasIsProfilePublic {
    get { return hasIsProfilePublic; }
  }
  public bool IsProfilePublic {
    get { return isProfilePublic_; }
  }
  
  public const int IsInventoryPublicFieldNumber = 5;
  private bool hasIsInventoryPublic;
  private bool isInventoryPublic_;
  public bool HasIsInventoryPublic {
    get { return hasIsInventoryPublic; }
  }
  public bool IsInventoryPublic {
    get { return isInventoryPublic_; }
  }
  
  public const int IsVacBannedFieldNumber = 7;
  private bool hasIsVacBanned;
  private bool isVacBanned_;
  public bool HasIsVacBanned {
    get { return hasIsVacBanned; }
  }
  public bool IsVacBanned {
    get { return isVacBanned_; }
  }
  
  public const int IsCyberCafeFieldNumber = 8;
  private bool hasIsCyberCafe;
  private bool isCyberCafe_;
  public bool HasIsCyberCafe {
    get { return hasIsCyberCafe; }
  }
  public bool IsCyberCafe {
    get { return isCyberCafe_; }
  }
  
  public const int IsSchoolAccountFieldNumber = 9;
  private bool hasIsSchoolAccount;
  private bool isSchoolAccount_;
  public bool HasIsSchoolAccount {
    get { return hasIsSchoolAccount; }
  }
  public bool IsSchoolAccount {
    get { return isSchoolAccount_; }
  }
  
  public const int IsLimitedFieldNumber = 10;
  private bool hasIsLimited;
  private bool isLimited_;
  public bool HasIsLimited {
    get { return hasIsLimited; }
  }
  public bool IsLimited {
    get { return isLimited_; }
  }
  
  public const int IsSubscribedFieldNumber = 11;
  private bool hasIsSubscribed;
  private bool isSubscribed_;
  public bool HasIsSubscribed {
    get { return hasIsSubscribed; }
  }
  public bool IsSubscribed {
    get { return isSubscribed_; }
  }
  
  public const int PackageFieldNumber = 12;
  private bool hasPackage;
  private uint package_;
  public bool HasPackage {
    get { return hasPackage; }
  }
  [global::System.CLSCompliant(false)]
  public uint Package {
    get { return package_; }
  }
  
  public const int IsFreeTrialAccountFieldNumber = 13;
  private bool hasIsFreeTrialAccount;
  private bool isFreeTrialAccount_;
  public bool HasIsFreeTrialAccount {
    get { return hasIsFreeTrialAccount; }
  }
  public bool IsFreeTrialAccount {
    get { return isFreeTrialAccount_; }
  }
  
  public const int FreeTrialExpirationFieldNumber = 14;
  private bool hasFreeTrialExpiration;
  private uint freeTrialExpiration_;
  public bool HasFreeTrialExpiration {
    get { return hasFreeTrialExpiration; }
  }
  [global::System.CLSCompliant(false)]
  public uint FreeTrialExpiration {
    get { return freeTrialExpiration_; }
  }
  
  public const int IsLowViolenceFieldNumber = 15;
  private bool hasIsLowViolence;
  private bool isLowViolence_;
  public bool HasIsLowViolence {
    get { return hasIsLowViolence; }
  }
  public bool IsLowViolence {
    get { return isLowViolence_; }
  }
  
  public const int IsAccountLockedDownFieldNumber = 16;
  private bool hasIsAccountLockedDown;
  private bool isAccountLockedDown_;
  public bool HasIsAccountLockedDown {
    get { return hasIsAccountLockedDown; }
  }
  public bool IsAccountLockedDown {
    get { return isAccountLockedDown_; }
  }
  
  public const int IsCommunityBannedFieldNumber = 17;
  private bool hasIsCommunityBanned;
  private bool isCommunityBanned_;
  public bool HasIsCommunityBanned {
    get { return hasIsCommunityBanned; }
  }
  public bool IsCommunityBanned {
    get { return isCommunityBanned_; }
  }
  
  public const int IsTradeBannedFieldNumber = 18;
  private bool hasIsTradeBanned;
  private bool isTradeBanned_;
  public bool HasIsTradeBanned {
    get { return hasIsTradeBanned; }
  }
  public bool IsTradeBanned {
    get { return isTradeBanned_; }
  }
  
  public const int TradeBanExpirationFieldNumber = 19;
  private bool hasTradeBanExpiration;
  private uint tradeBanExpiration_;
  public bool HasTradeBanExpiration {
    get { return hasTradeBanExpiration; }
  }
  [global::System.CLSCompliant(false)]
  public uint TradeBanExpiration {
    get { return tradeBanExpiration_; }
  }
  
  public const int AccountidFieldNumber = 20;
  private bool hasAccountid;
  private uint accountid_;
  public bool HasAccountid {
    get { return hasAccountid; }
  }
  [global::System.CLSCompliant(false)]
  public uint Accountid {
    get { return accountid_; }
  }
  
  public const int SuspensionEndTimeFieldNumber = 21;
  private bool hasSuspensionEndTime;
  private uint suspensionEndTime_;
  public bool HasSuspensionEndTime {
    get { return hasSuspensionEndTime; }
  }
  [global::System.CLSCompliant(false)]
  public uint SuspensionEndTime {
    get { return suspensionEndTime_; }
  }
  
  public const int CurrencyFieldNumber = 22;
  private bool hasCurrency;
  private string currency_ = "";
  public bool HasCurrency {
    get { return hasCurrency; }
  }
  public string Currency {
    get { return currency_; }
  }
  
  public const int SteamLevelFieldNumber = 23;
  private bool hasSteamLevel;
  private uint steamLevel_;
  public bool HasSteamLevel {
    get { return hasSteamLevel; }
  }
  [global::System.CLSCompliant(false)]
  public uint SteamLevel {
    get { return steamLevel_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCSystemMsgGetAccountDetailsResponseFieldNames;
    if (hasEresultDeprecated) {
      output.WriteUInt32(1, field_names[3], EresultDeprecated);
    }
    if (hasAccountName) {
      output.WriteString(2, field_names[0], AccountName);
    }
    if (hasPersonaName) {
      output.WriteString(3, field_names[18], PersonaName);
    }
    if (hasIsProfilePublic) {
      output.WriteBool(4, field_names[12], IsProfilePublic);
    }
    if (hasIsInventoryPublic) {
      output.WriteBool(5, field_names[9], IsInventoryPublic);
    }
    if (hasIsVacBanned) {
      output.WriteBool(7, field_names[16], IsVacBanned);
    }
    if (hasIsCyberCafe) {
      output.WriteBool(8, field_names[7], IsCyberCafe);
    }
    if (hasIsSchoolAccount) {
      output.WriteBool(9, field_names[13], IsSchoolAccount);
    }
    if (hasIsLimited) {
      output.WriteBool(10, field_names[10], IsLimited);
    }
    if (hasIsSubscribed) {
      output.WriteBool(11, field_names[14], IsSubscribed);
    }
    if (hasPackage) {
      output.WriteUInt32(12, field_names[17], Package);
    }
    if (hasIsFreeTrialAccount) {
      output.WriteBool(13, field_names[8], IsFreeTrialAccount);
    }
    if (hasFreeTrialExpiration) {
      output.WriteUInt32(14, field_names[4], FreeTrialExpiration);
    }
    if (hasIsLowViolence) {
      output.WriteBool(15, field_names[11], IsLowViolence);
    }
    if (hasIsAccountLockedDown) {
      output.WriteBool(16, field_names[5], IsAccountLockedDown);
    }
    if (hasIsCommunityBanned) {
      output.WriteBool(17, field_names[6], IsCommunityBanned);
    }
    if (hasIsTradeBanned) {
      output.WriteBool(18, field_names[15], IsTradeBanned);
    }
    if (hasTradeBanExpiration) {
      output.WriteUInt32(19, field_names[21], TradeBanExpiration);
    }
    if (hasAccountid) {
      output.WriteUInt32(20, field_names[1], Accountid);
    }
    if (hasSuspensionEndTime) {
      output.WriteUInt32(21, field_names[20], SuspensionEndTime);
    }
    if (hasCurrency) {
      output.WriteString(22, field_names[2], Currency);
    }
    if (hasSteamLevel) {
      output.WriteUInt32(23, field_names[19], SteamLevel);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEresultDeprecated) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, EresultDeprecated);
      }
      if (hasAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, AccountName);
      }
      if (hasPersonaName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, PersonaName);
      }
      if (hasIsProfilePublic) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IsProfilePublic);
      }
      if (hasIsInventoryPublic) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, IsInventoryPublic);
      }
      if (hasIsVacBanned) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, IsVacBanned);
      }
      if (hasIsCyberCafe) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, IsCyberCafe);
      }
      if (hasIsSchoolAccount) {
        size += pb::CodedOutputStream.ComputeBoolSize(9, IsSchoolAccount);
      }
      if (hasIsLimited) {
        size += pb::CodedOutputStream.ComputeBoolSize(10, IsLimited);
      }
      if (hasIsSubscribed) {
        size += pb::CodedOutputStream.ComputeBoolSize(11, IsSubscribed);
      }
      if (hasPackage) {
        size += pb::CodedOutputStream.ComputeUInt32Size(12, Package);
      }
      if (hasIsFreeTrialAccount) {
        size += pb::CodedOutputStream.ComputeBoolSize(13, IsFreeTrialAccount);
      }
      if (hasFreeTrialExpiration) {
        size += pb::CodedOutputStream.ComputeUInt32Size(14, FreeTrialExpiration);
      }
      if (hasIsLowViolence) {
        size += pb::CodedOutputStream.ComputeBoolSize(15, IsLowViolence);
      }
      if (hasIsAccountLockedDown) {
        size += pb::CodedOutputStream.ComputeBoolSize(16, IsAccountLockedDown);
      }
      if (hasIsCommunityBanned) {
        size += pb::CodedOutputStream.ComputeBoolSize(17, IsCommunityBanned);
      }
      if (hasIsTradeBanned) {
        size += pb::CodedOutputStream.ComputeBoolSize(18, IsTradeBanned);
      }
      if (hasTradeBanExpiration) {
        size += pb::CodedOutputStream.ComputeUInt32Size(19, TradeBanExpiration);
      }
      if (hasAccountid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(20, Accountid);
      }
      if (hasSuspensionEndTime) {
        size += pb::CodedOutputStream.ComputeUInt32Size(21, SuspensionEndTime);
      }
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeStringSize(22, Currency);
      }
      if (hasSteamLevel) {
        size += pb::CodedOutputStream.ComputeUInt32Size(23, SteamLevel);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCSystemMsg_GetAccountDetails_Response ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails_Response ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails_Response ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails_Response ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails_Response ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCSystemMsg_GetAccountDetails_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCSystemMsg_GetAccountDetails_Response MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCSystemMsg_GetAccountDetails_Response prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCSystemMsg_GetAccountDetails_Response, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCSystemMsg_GetAccountDetails_Response cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCSystemMsg_GetAccountDetails_Response result;
    
    private CGCSystemMsg_GetAccountDetails_Response PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCSystemMsg_GetAccountDetails_Response original = result;
        result = new CGCSystemMsg_GetAccountDetails_Response();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCSystemMsg_GetAccountDetails_Response MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCSystemMsg_GetAccountDetails_Response.Descriptor; }
    }
    
    public override CGCSystemMsg_GetAccountDetails_Response DefaultInstanceForType {
      get { return global::CGCSystemMsg_GetAccountDetails_Response.DefaultInstance; }
    }
    
    public override CGCSystemMsg_GetAccountDetails_Response BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCSystemMsg_GetAccountDetails_Response) {
        return MergeFrom((CGCSystemMsg_GetAccountDetails_Response) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCSystemMsg_GetAccountDetails_Response other) {
      if (other == global::CGCSystemMsg_GetAccountDetails_Response.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEresultDeprecated) {
        EresultDeprecated = other.EresultDeprecated;
      }
      if (other.HasAccountName) {
        AccountName = other.AccountName;
      }
      if (other.HasPersonaName) {
        PersonaName = other.PersonaName;
      }
      if (other.HasIsProfilePublic) {
        IsProfilePublic = other.IsProfilePublic;
      }
      if (other.HasIsInventoryPublic) {
        IsInventoryPublic = other.IsInventoryPublic;
      }
      if (other.HasIsVacBanned) {
        IsVacBanned = other.IsVacBanned;
      }
      if (other.HasIsCyberCafe) {
        IsCyberCafe = other.IsCyberCafe;
      }
      if (other.HasIsSchoolAccount) {
        IsSchoolAccount = other.IsSchoolAccount;
      }
      if (other.HasIsLimited) {
        IsLimited = other.IsLimited;
      }
      if (other.HasIsSubscribed) {
        IsSubscribed = other.IsSubscribed;
      }
      if (other.HasPackage) {
        Package = other.Package;
      }
      if (other.HasIsFreeTrialAccount) {
        IsFreeTrialAccount = other.IsFreeTrialAccount;
      }
      if (other.HasFreeTrialExpiration) {
        FreeTrialExpiration = other.FreeTrialExpiration;
      }
      if (other.HasIsLowViolence) {
        IsLowViolence = other.IsLowViolence;
      }
      if (other.HasIsAccountLockedDown) {
        IsAccountLockedDown = other.IsAccountLockedDown;
      }
      if (other.HasIsCommunityBanned) {
        IsCommunityBanned = other.IsCommunityBanned;
      }
      if (other.HasIsTradeBanned) {
        IsTradeBanned = other.IsTradeBanned;
      }
      if (other.HasTradeBanExpiration) {
        TradeBanExpiration = other.TradeBanExpiration;
      }
      if (other.HasAccountid) {
        Accountid = other.Accountid;
      }
      if (other.HasSuspensionEndTime) {
        SuspensionEndTime = other.SuspensionEndTime;
      }
      if (other.HasCurrency) {
        Currency = other.Currency;
      }
      if (other.HasSteamLevel) {
        SteamLevel = other.SteamLevel;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCSystemMsgGetAccountDetailsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCSystemMsgGetAccountDetailsResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEresultDeprecated = input.ReadUInt32(ref result.eresultDeprecated_);
            break;
          }
          case 18: {
            result.hasAccountName = input.ReadString(ref result.accountName_);
            break;
          }
          case 26: {
            result.hasPersonaName = input.ReadString(ref result.personaName_);
            break;
          }
          case 32: {
            result.hasIsProfilePublic = input.ReadBool(ref result.isProfilePublic_);
            break;
          }
          case 40: {
            result.hasIsInventoryPublic = input.ReadBool(ref result.isInventoryPublic_);
            break;
          }
          case 56: {
            result.hasIsVacBanned = input.ReadBool(ref result.isVacBanned_);
            break;
          }
          case 64: {
            result.hasIsCyberCafe = input.ReadBool(ref result.isCyberCafe_);
            break;
          }
          case 72: {
            result.hasIsSchoolAccount = input.ReadBool(ref result.isSchoolAccount_);
            break;
          }
          case 80: {
            result.hasIsLimited = input.ReadBool(ref result.isLimited_);
            break;
          }
          case 88: {
            result.hasIsSubscribed = input.ReadBool(ref result.isSubscribed_);
            break;
          }
          case 96: {
            result.hasPackage = input.ReadUInt32(ref result.package_);
            break;
          }
          case 104: {
            result.hasIsFreeTrialAccount = input.ReadBool(ref result.isFreeTrialAccount_);
            break;
          }
          case 112: {
            result.hasFreeTrialExpiration = input.ReadUInt32(ref result.freeTrialExpiration_);
            break;
          }
          case 120: {
            result.hasIsLowViolence = input.ReadBool(ref result.isLowViolence_);
            break;
          }
          case 128: {
            result.hasIsAccountLockedDown = input.ReadBool(ref result.isAccountLockedDown_);
            break;
          }
          case 136: {
            result.hasIsCommunityBanned = input.ReadBool(ref result.isCommunityBanned_);
            break;
          }
          case 144: {
            result.hasIsTradeBanned = input.ReadBool(ref result.isTradeBanned_);
            break;
          }
          case 152: {
            result.hasTradeBanExpiration = input.ReadUInt32(ref result.tradeBanExpiration_);
            break;
          }
          case 160: {
            result.hasAccountid = input.ReadUInt32(ref result.accountid_);
            break;
          }
          case 168: {
            result.hasSuspensionEndTime = input.ReadUInt32(ref result.suspensionEndTime_);
            break;
          }
          case 178: {
            result.hasCurrency = input.ReadString(ref result.currency_);
            break;
          }
          case 184: {
            result.hasSteamLevel = input.ReadUInt32(ref result.steamLevel_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEresultDeprecated {
      get { return result.hasEresultDeprecated; }
    }
    [global::System.CLSCompliant(false)]
    public uint EresultDeprecated {
      get { return result.EresultDeprecated; }
      set { SetEresultDeprecated(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEresultDeprecated(uint value) {
      PrepareBuilder();
      result.hasEresultDeprecated = true;
      result.eresultDeprecated_ = value;
      return this;
    }
    public Builder ClearEresultDeprecated() {
      PrepareBuilder();
      result.hasEresultDeprecated = false;
      result.eresultDeprecated_ = 2;
      return this;
    }
    
    public bool HasAccountName {
      get { return result.hasAccountName; }
    }
    public string AccountName {
      get { return result.AccountName; }
      set { SetAccountName(value); }
    }
    public Builder SetAccountName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAccountName = true;
      result.accountName_ = value;
      return this;
    }
    public Builder ClearAccountName() {
      PrepareBuilder();
      result.hasAccountName = false;
      result.accountName_ = "";
      return this;
    }
    
    public bool HasPersonaName {
      get { return result.hasPersonaName; }
    }
    public string PersonaName {
      get { return result.PersonaName; }
      set { SetPersonaName(value); }
    }
    public Builder SetPersonaName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPersonaName = true;
      result.personaName_ = value;
      return this;
    }
    public Builder ClearPersonaName() {
      PrepareBuilder();
      result.hasPersonaName = false;
      result.personaName_ = "";
      return this;
    }
    
    public bool HasIsProfilePublic {
      get { return result.hasIsProfilePublic; }
    }
    public bool IsProfilePublic {
      get { return result.IsProfilePublic; }
      set { SetIsProfilePublic(value); }
    }
    public Builder SetIsProfilePublic(bool value) {
      PrepareBuilder();
      result.hasIsProfilePublic = true;
      result.isProfilePublic_ = value;
      return this;
    }
    public Builder ClearIsProfilePublic() {
      PrepareBuilder();
      result.hasIsProfilePublic = false;
      result.isProfilePublic_ = false;
      return this;
    }
    
    public bool HasIsInventoryPublic {
      get { return result.hasIsInventoryPublic; }
    }
    public bool IsInventoryPublic {
      get { return result.IsInventoryPublic; }
      set { SetIsInventoryPublic(value); }
    }
    public Builder SetIsInventoryPublic(bool value) {
      PrepareBuilder();
      result.hasIsInventoryPublic = true;
      result.isInventoryPublic_ = value;
      return this;
    }
    public Builder ClearIsInventoryPublic() {
      PrepareBuilder();
      result.hasIsInventoryPublic = false;
      result.isInventoryPublic_ = false;
      return this;
    }
    
    public bool HasIsVacBanned {
      get { return result.hasIsVacBanned; }
    }
    public bool IsVacBanned {
      get { return result.IsVacBanned; }
      set { SetIsVacBanned(value); }
    }
    public Builder SetIsVacBanned(bool value) {
      PrepareBuilder();
      result.hasIsVacBanned = true;
      result.isVacBanned_ = value;
      return this;
    }
    public Builder ClearIsVacBanned() {
      PrepareBuilder();
      result.hasIsVacBanned = false;
      result.isVacBanned_ = false;
      return this;
    }
    
    public bool HasIsCyberCafe {
      get { return result.hasIsCyberCafe; }
    }
    public bool IsCyberCafe {
      get { return result.IsCyberCafe; }
      set { SetIsCyberCafe(value); }
    }
    public Builder SetIsCyberCafe(bool value) {
      PrepareBuilder();
      result.hasIsCyberCafe = true;
      result.isCyberCafe_ = value;
      return this;
    }
    public Builder ClearIsCyberCafe() {
      PrepareBuilder();
      result.hasIsCyberCafe = false;
      result.isCyberCafe_ = false;
      return this;
    }
    
    public bool HasIsSchoolAccount {
      get { return result.hasIsSchoolAccount; }
    }
    public bool IsSchoolAccount {
      get { return result.IsSchoolAccount; }
      set { SetIsSchoolAccount(value); }
    }
    public Builder SetIsSchoolAccount(bool value) {
      PrepareBuilder();
      result.hasIsSchoolAccount = true;
      result.isSchoolAccount_ = value;
      return this;
    }
    public Builder ClearIsSchoolAccount() {
      PrepareBuilder();
      result.hasIsSchoolAccount = false;
      result.isSchoolAccount_ = false;
      return this;
    }
    
    public bool HasIsLimited {
      get { return result.hasIsLimited; }
    }
    public bool IsLimited {
      get { return result.IsLimited; }
      set { SetIsLimited(value); }
    }
    public Builder SetIsLimited(bool value) {
      PrepareBuilder();
      result.hasIsLimited = true;
      result.isLimited_ = value;
      return this;
    }
    public Builder ClearIsLimited() {
      PrepareBuilder();
      result.hasIsLimited = false;
      result.isLimited_ = false;
      return this;
    }
    
    public bool HasIsSubscribed {
      get { return result.hasIsSubscribed; }
    }
    public bool IsSubscribed {
      get { return result.IsSubscribed; }
      set { SetIsSubscribed(value); }
    }
    public Builder SetIsSubscribed(bool value) {
      PrepareBuilder();
      result.hasIsSubscribed = true;
      result.isSubscribed_ = value;
      return this;
    }
    public Builder ClearIsSubscribed() {
      PrepareBuilder();
      result.hasIsSubscribed = false;
      result.isSubscribed_ = false;
      return this;
    }
    
    public bool HasPackage {
      get { return result.hasPackage; }
    }
    [global::System.CLSCompliant(false)]
    public uint Package {
      get { return result.Package; }
      set { SetPackage(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPackage(uint value) {
      PrepareBuilder();
      result.hasPackage = true;
      result.package_ = value;
      return this;
    }
    public Builder ClearPackage() {
      PrepareBuilder();
      result.hasPackage = false;
      result.package_ = 0;
      return this;
    }
    
    public bool HasIsFreeTrialAccount {
      get { return result.hasIsFreeTrialAccount; }
    }
    public bool IsFreeTrialAccount {
      get { return result.IsFreeTrialAccount; }
      set { SetIsFreeTrialAccount(value); }
    }
    public Builder SetIsFreeTrialAccount(bool value) {
      PrepareBuilder();
      result.hasIsFreeTrialAccount = true;
      result.isFreeTrialAccount_ = value;
      return this;
    }
    public Builder ClearIsFreeTrialAccount() {
      PrepareBuilder();
      result.hasIsFreeTrialAccount = false;
      result.isFreeTrialAccount_ = false;
      return this;
    }
    
    public bool HasFreeTrialExpiration {
      get { return result.hasFreeTrialExpiration; }
    }
    [global::System.CLSCompliant(false)]
    public uint FreeTrialExpiration {
      get { return result.FreeTrialExpiration; }
      set { SetFreeTrialExpiration(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetFreeTrialExpiration(uint value) {
      PrepareBuilder();
      result.hasFreeTrialExpiration = true;
      result.freeTrialExpiration_ = value;
      return this;
    }
    public Builder ClearFreeTrialExpiration() {
      PrepareBuilder();
      result.hasFreeTrialExpiration = false;
      result.freeTrialExpiration_ = 0;
      return this;
    }
    
    public bool HasIsLowViolence {
      get { return result.hasIsLowViolence; }
    }
    public bool IsLowViolence {
      get { return result.IsLowViolence; }
      set { SetIsLowViolence(value); }
    }
    public Builder SetIsLowViolence(bool value) {
      PrepareBuilder();
      result.hasIsLowViolence = true;
      result.isLowViolence_ = value;
      return this;
    }
    public Builder ClearIsLowViolence() {
      PrepareBuilder();
      result.hasIsLowViolence = false;
      result.isLowViolence_ = false;
      return this;
    }
    
    public bool HasIsAccountLockedDown {
      get { return result.hasIsAccountLockedDown; }
    }
    public bool IsAccountLockedDown {
      get { return result.IsAccountLockedDown; }
      set { SetIsAccountLockedDown(value); }
    }
    public Builder SetIsAccountLockedDown(bool value) {
      PrepareBuilder();
      result.hasIsAccountLockedDown = true;
      result.isAccountLockedDown_ = value;
      return this;
    }
    public Builder ClearIsAccountLockedDown() {
      PrepareBuilder();
      result.hasIsAccountLockedDown = false;
      result.isAccountLockedDown_ = false;
      return this;
    }
    
    public bool HasIsCommunityBanned {
      get { return result.hasIsCommunityBanned; }
    }
    public bool IsCommunityBanned {
      get { return result.IsCommunityBanned; }
      set { SetIsCommunityBanned(value); }
    }
    public Builder SetIsCommunityBanned(bool value) {
      PrepareBuilder();
      result.hasIsCommunityBanned = true;
      result.isCommunityBanned_ = value;
      return this;
    }
    public Builder ClearIsCommunityBanned() {
      PrepareBuilder();
      result.hasIsCommunityBanned = false;
      result.isCommunityBanned_ = false;
      return this;
    }
    
    public bool HasIsTradeBanned {
      get { return result.hasIsTradeBanned; }
    }
    public bool IsTradeBanned {
      get { return result.IsTradeBanned; }
      set { SetIsTradeBanned(value); }
    }
    public Builder SetIsTradeBanned(bool value) {
      PrepareBuilder();
      result.hasIsTradeBanned = true;
      result.isTradeBanned_ = value;
      return this;
    }
    public Builder ClearIsTradeBanned() {
      PrepareBuilder();
      result.hasIsTradeBanned = false;
      result.isTradeBanned_ = false;
      return this;
    }
    
    public bool HasTradeBanExpiration {
      get { return result.hasTradeBanExpiration; }
    }
    [global::System.CLSCompliant(false)]
    public uint TradeBanExpiration {
      get { return result.TradeBanExpiration; }
      set { SetTradeBanExpiration(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTradeBanExpiration(uint value) {
      PrepareBuilder();
      result.hasTradeBanExpiration = true;
      result.tradeBanExpiration_ = value;
      return this;
    }
    public Builder ClearTradeBanExpiration() {
      PrepareBuilder();
      result.hasTradeBanExpiration = false;
      result.tradeBanExpiration_ = 0;
      return this;
    }
    
    public bool HasAccountid {
      get { return result.hasAccountid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Accountid {
      get { return result.Accountid; }
      set { SetAccountid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAccountid(uint value) {
      PrepareBuilder();
      result.hasAccountid = true;
      result.accountid_ = value;
      return this;
    }
    public Builder ClearAccountid() {
      PrepareBuilder();
      result.hasAccountid = false;
      result.accountid_ = 0;
      return this;
    }
    
    public bool HasSuspensionEndTime {
      get { return result.hasSuspensionEndTime; }
    }
    [global::System.CLSCompliant(false)]
    public uint SuspensionEndTime {
      get { return result.SuspensionEndTime; }
      set { SetSuspensionEndTime(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSuspensionEndTime(uint value) {
      PrepareBuilder();
      result.hasSuspensionEndTime = true;
      result.suspensionEndTime_ = value;
      return this;
    }
    public Builder ClearSuspensionEndTime() {
      PrepareBuilder();
      result.hasSuspensionEndTime = false;
      result.suspensionEndTime_ = 0;
      return this;
    }
    
    public bool HasCurrency {
      get { return result.hasCurrency; }
    }
    public string Currency {
      get { return result.Currency; }
      set { SetCurrency(value); }
    }
    public Builder SetCurrency(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCurrency = true;
      result.currency_ = value;
      return this;
    }
    public Builder ClearCurrency() {
      PrepareBuilder();
      result.hasCurrency = false;
      result.currency_ = "";
      return this;
    }
    
    public bool HasSteamLevel {
      get { return result.hasSteamLevel; }
    }
    [global::System.CLSCompliant(false)]
    public uint SteamLevel {
      get { return result.SteamLevel; }
      set { SetSteamLevel(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamLevel(uint value) {
      PrepareBuilder();
      result.hasSteamLevel = true;
      result.steamLevel_ = value;
      return this;
    }
    public Builder ClearSteamLevel() {
      PrepareBuilder();
      result.hasSteamLevel = false;
      result.steamLevel_ = 0;
      return this;
    }
  }
  static CGCSystemMsg_GetAccountDetails_Response() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCGetPersonaNames : pb::GeneratedMessage<CMsgGCGetPersonaNames, CMsgGCGetPersonaNames.Builder> {
  private CMsgGCGetPersonaNames() { }
  private static readonly CMsgGCGetPersonaNames defaultInstance = new CMsgGCGetPersonaNames().MakeReadOnly();
  private static readonly string[] _cMsgGCGetPersonaNamesFieldNames = new string[] { "steamids" };
  private static readonly uint[] _cMsgGCGetPersonaNamesFieldTags = new uint[] { 9 };
  public static CMsgGCGetPersonaNames DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCGetPersonaNames DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCGetPersonaNames ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCGetPersonaNames__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCGetPersonaNames, CMsgGCGetPersonaNames.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCGetPersonaNames__FieldAccessorTable; }
  }
  
  public const int SteamidsFieldNumber = 1;
  private pbc::PopsicleList<ulong> steamids_ = new pbc::PopsicleList<ulong>();
  [global::System.CLSCompliant(false)]
  public scg::IList<ulong> SteamidsList {
    get { return pbc::Lists.AsReadOnly(steamids_); }
  }
  public int SteamidsCount {
    get { return steamids_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GetSteamids(int index) {
    return steamids_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCGetPersonaNamesFieldNames;
    if (steamids_.Count > 0) {
      output.WriteFixed64Array(1, field_names[0], steamids_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * steamids_.Count;
        size += dataSize;
        size += 1 * steamids_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCGetPersonaNames ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCGetPersonaNames ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCGetPersonaNames ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCGetPersonaNames MakeReadOnly() {
    steamids_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCGetPersonaNames prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCGetPersonaNames, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCGetPersonaNames cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCGetPersonaNames result;
    
    private CMsgGCGetPersonaNames PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCGetPersonaNames original = result;
        result = new CMsgGCGetPersonaNames();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCGetPersonaNames MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCGetPersonaNames.Descriptor; }
    }
    
    public override CMsgGCGetPersonaNames DefaultInstanceForType {
      get { return global::CMsgGCGetPersonaNames.DefaultInstance; }
    }
    
    public override CMsgGCGetPersonaNames BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCGetPersonaNames) {
        return MergeFrom((CMsgGCGetPersonaNames) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCGetPersonaNames other) {
      if (other == global::CMsgGCGetPersonaNames.DefaultInstance) return this;
      PrepareBuilder();
      if (other.steamids_.Count != 0) {
        result.steamids_.Add(other.steamids_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCGetPersonaNamesFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCGetPersonaNamesFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10:
          case 9: {
            input.ReadFixed64Array(tag, field_name, result.steamids_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<ulong> SteamidsList {
      get { return PrepareBuilder().steamids_; }
    }
    public int SteamidsCount {
      get { return result.SteamidsCount; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetSteamids(int index) {
      return result.GetSteamids(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamids(int index, ulong value) {
      PrepareBuilder();
      result.steamids_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddSteamids(ulong value) {
      PrepareBuilder();
      result.steamids_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeSteamids(scg::IEnumerable<ulong> values) {
      PrepareBuilder();
      result.steamids_.Add(values);
      return this;
    }
    public Builder ClearSteamids() {
      PrepareBuilder();
      result.steamids_.Clear();
      return this;
    }
  }
  static CMsgGCGetPersonaNames() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCGetPersonaNames_Response : pb::GeneratedMessage<CMsgGCGetPersonaNames_Response, CMsgGCGetPersonaNames_Response.Builder> {
  private CMsgGCGetPersonaNames_Response() { }
  private static readonly CMsgGCGetPersonaNames_Response defaultInstance = new CMsgGCGetPersonaNames_Response().MakeReadOnly();
  private static readonly string[] _cMsgGCGetPersonaNamesResponseFieldNames = new string[] { "failed_lookup_steamids", "succeeded_lookups" };
  private static readonly uint[] _cMsgGCGetPersonaNamesResponseFieldTags = new uint[] { 17, 10 };
  public static CMsgGCGetPersonaNames_Response DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCGetPersonaNames_Response DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCGetPersonaNames_Response ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCGetPersonaNames_Response__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCGetPersonaNames_Response, CMsgGCGetPersonaNames_Response.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCGetPersonaNames_Response__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class PersonaName : pb::GeneratedMessage<PersonaName, PersonaName.Builder> {
      private PersonaName() { }
      private static readonly PersonaName defaultInstance = new PersonaName().MakeReadOnly();
      private static readonly string[] _personaNameFieldNames = new string[] { "persona_name", "steamid" };
      private static readonly uint[] _personaNameFieldTags = new uint[] { 18, 9 };
      public static PersonaName DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override PersonaName DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override PersonaName ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgGCGetPersonaNames_Response_PersonaName__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<PersonaName, PersonaName.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgGCGetPersonaNames_Response_PersonaName__FieldAccessorTable; }
      }
      
      public const int SteamidFieldNumber = 1;
      private bool hasSteamid;
      private ulong steamid_;
      public bool HasSteamid {
        get { return hasSteamid; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Steamid {
        get { return steamid_; }
      }
      
      public const int PersonaName_FieldNumber = 2;
      private bool hasPersonaName_;
      private string personaName_ = "";
      public bool HasPersonaName_ {
        get { return hasPersonaName_; }
      }
      public string PersonaName_ {
        get { return personaName_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _personaNameFieldNames;
        if (hasSteamid) {
          output.WriteFixed64(1, field_names[1], Steamid);
        }
        if (hasPersonaName_) {
          output.WriteString(2, field_names[0], PersonaName_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasSteamid) {
            size += pb::CodedOutputStream.ComputeFixed64Size(1, Steamid);
          }
          if (hasPersonaName_) {
            size += pb::CodedOutputStream.ComputeStringSize(2, PersonaName_);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static PersonaName ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static PersonaName ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static PersonaName ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static PersonaName ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static PersonaName ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static PersonaName ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static PersonaName ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static PersonaName ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static PersonaName ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static PersonaName ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private PersonaName MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(PersonaName prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<PersonaName, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(PersonaName cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private PersonaName result;
        
        private PersonaName PrepareBuilder() {
          if (resultIsReadOnly) {
            PersonaName original = result;
            result = new PersonaName();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override PersonaName MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgGCGetPersonaNames_Response.Types.PersonaName.Descriptor; }
        }
        
        public override PersonaName DefaultInstanceForType {
          get { return global::CMsgGCGetPersonaNames_Response.Types.PersonaName.DefaultInstance; }
        }
        
        public override PersonaName BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is PersonaName) {
            return MergeFrom((PersonaName) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(PersonaName other) {
          if (other == global::CMsgGCGetPersonaNames_Response.Types.PersonaName.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasSteamid) {
            Steamid = other.Steamid;
          }
          if (other.HasPersonaName_) {
            PersonaName_ = other.PersonaName_;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_personaNameFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _personaNameFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 9: {
                result.hasSteamid = input.ReadFixed64(ref result.steamid_);
                break;
              }
              case 18: {
                result.hasPersonaName_ = input.ReadString(ref result.personaName_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasSteamid {
          get { return result.hasSteamid; }
        }
        [global::System.CLSCompliant(false)]
        public ulong Steamid {
          get { return result.Steamid; }
          set { SetSteamid(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetSteamid(ulong value) {
          PrepareBuilder();
          result.hasSteamid = true;
          result.steamid_ = value;
          return this;
        }
        public Builder ClearSteamid() {
          PrepareBuilder();
          result.hasSteamid = false;
          result.steamid_ = 0;
          return this;
        }
        
        public bool HasPersonaName_ {
          get { return result.hasPersonaName_; }
        }
        public string PersonaName_ {
          get { return result.PersonaName_; }
          set { SetPersonaName_(value); }
        }
        public Builder SetPersonaName_(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasPersonaName_ = true;
          result.personaName_ = value;
          return this;
        }
        public Builder ClearPersonaName_() {
          PrepareBuilder();
          result.hasPersonaName_ = false;
          result.personaName_ = "";
          return this;
        }
      }
      static PersonaName() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int SucceededLookupsFieldNumber = 1;
  private pbc::PopsicleList<global::CMsgGCGetPersonaNames_Response.Types.PersonaName> succeededLookups_ = new pbc::PopsicleList<global::CMsgGCGetPersonaNames_Response.Types.PersonaName>();
  public scg::IList<global::CMsgGCGetPersonaNames_Response.Types.PersonaName> SucceededLookupsList {
    get { return succeededLookups_; }
  }
  public int SucceededLookupsCount {
    get { return succeededLookups_.Count; }
  }
  public global::CMsgGCGetPersonaNames_Response.Types.PersonaName GetSucceededLookups(int index) {
    return succeededLookups_[index];
  }
  
  public const int FailedLookupSteamidsFieldNumber = 2;
  private pbc::PopsicleList<ulong> failedLookupSteamids_ = new pbc::PopsicleList<ulong>();
  [global::System.CLSCompliant(false)]
  public scg::IList<ulong> FailedLookupSteamidsList {
    get { return pbc::Lists.AsReadOnly(failedLookupSteamids_); }
  }
  public int FailedLookupSteamidsCount {
    get { return failedLookupSteamids_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GetFailedLookupSteamids(int index) {
    return failedLookupSteamids_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCGetPersonaNamesResponseFieldNames;
    if (succeededLookups_.Count > 0) {
      output.WriteMessageArray(1, field_names[1], succeededLookups_);
    }
    if (failedLookupSteamids_.Count > 0) {
      output.WriteFixed64Array(2, field_names[0], failedLookupSteamids_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CMsgGCGetPersonaNames_Response.Types.PersonaName element in SucceededLookupsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      {
        int dataSize = 0;
        dataSize = 8 * failedLookupSteamids_.Count;
        size += dataSize;
        size += 1 * failedLookupSteamids_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCGetPersonaNames_Response ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames_Response ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames_Response ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames_Response ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCGetPersonaNames_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCGetPersonaNames_Response ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetPersonaNames_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCGetPersonaNames_Response MakeReadOnly() {
    succeededLookups_.MakeReadOnly();
    failedLookupSteamids_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCGetPersonaNames_Response prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCGetPersonaNames_Response, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCGetPersonaNames_Response cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCGetPersonaNames_Response result;
    
    private CMsgGCGetPersonaNames_Response PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCGetPersonaNames_Response original = result;
        result = new CMsgGCGetPersonaNames_Response();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCGetPersonaNames_Response MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCGetPersonaNames_Response.Descriptor; }
    }
    
    public override CMsgGCGetPersonaNames_Response DefaultInstanceForType {
      get { return global::CMsgGCGetPersonaNames_Response.DefaultInstance; }
    }
    
    public override CMsgGCGetPersonaNames_Response BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCGetPersonaNames_Response) {
        return MergeFrom((CMsgGCGetPersonaNames_Response) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCGetPersonaNames_Response other) {
      if (other == global::CMsgGCGetPersonaNames_Response.DefaultInstance) return this;
      PrepareBuilder();
      if (other.succeededLookups_.Count != 0) {
        result.succeededLookups_.Add(other.succeededLookups_);
      }
      if (other.failedLookupSteamids_.Count != 0) {
        result.failedLookupSteamids_.Add(other.failedLookupSteamids_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCGetPersonaNamesResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCGetPersonaNamesResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.succeededLookups_, global::CMsgGCGetPersonaNames_Response.Types.PersonaName.DefaultInstance, extensionRegistry);
            break;
          }
          case 18:
          case 17: {
            input.ReadFixed64Array(tag, field_name, result.failedLookupSteamids_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CMsgGCGetPersonaNames_Response.Types.PersonaName> SucceededLookupsList {
      get { return PrepareBuilder().succeededLookups_; }
    }
    public int SucceededLookupsCount {
      get { return result.SucceededLookupsCount; }
    }
    public global::CMsgGCGetPersonaNames_Response.Types.PersonaName GetSucceededLookups(int index) {
      return result.GetSucceededLookups(index);
    }
    public Builder SetSucceededLookups(int index, global::CMsgGCGetPersonaNames_Response.Types.PersonaName value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.succeededLookups_[index] = value;
      return this;
    }
    public Builder SetSucceededLookups(int index, global::CMsgGCGetPersonaNames_Response.Types.PersonaName.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.succeededLookups_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddSucceededLookups(global::CMsgGCGetPersonaNames_Response.Types.PersonaName value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.succeededLookups_.Add(value);
      return this;
    }
    public Builder AddSucceededLookups(global::CMsgGCGetPersonaNames_Response.Types.PersonaName.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.succeededLookups_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeSucceededLookups(scg::IEnumerable<global::CMsgGCGetPersonaNames_Response.Types.PersonaName> values) {
      PrepareBuilder();
      result.succeededLookups_.Add(values);
      return this;
    }
    public Builder ClearSucceededLookups() {
      PrepareBuilder();
      result.succeededLookups_.Clear();
      return this;
    }
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<ulong> FailedLookupSteamidsList {
      get { return PrepareBuilder().failedLookupSteamids_; }
    }
    public int FailedLookupSteamidsCount {
      get { return result.FailedLookupSteamidsCount; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetFailedLookupSteamids(int index) {
      return result.GetFailedLookupSteamids(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetFailedLookupSteamids(int index, ulong value) {
      PrepareBuilder();
      result.failedLookupSteamids_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddFailedLookupSteamids(ulong value) {
      PrepareBuilder();
      result.failedLookupSteamids_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeFailedLookupSteamids(scg::IEnumerable<ulong> values) {
      PrepareBuilder();
      result.failedLookupSteamids_.Add(values);
      return this;
    }
    public Builder ClearFailedLookupSteamids() {
      PrepareBuilder();
      result.failedLookupSteamids_.Clear();
      return this;
    }
  }
  static CMsgGCGetPersonaNames_Response() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCCheckFriendship : pb::GeneratedMessage<CMsgGCCheckFriendship, CMsgGCCheckFriendship.Builder> {
  private CMsgGCCheckFriendship() { }
  private static readonly CMsgGCCheckFriendship defaultInstance = new CMsgGCCheckFriendship().MakeReadOnly();
  private static readonly string[] _cMsgGCCheckFriendshipFieldNames = new string[] { "steamid_left", "steamid_right" };
  private static readonly uint[] _cMsgGCCheckFriendshipFieldTags = new uint[] { 9, 17 };
  public static CMsgGCCheckFriendship DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCCheckFriendship DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCCheckFriendship ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCCheckFriendship__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCCheckFriendship, CMsgGCCheckFriendship.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCCheckFriendship__FieldAccessorTable; }
  }
  
  public const int SteamidLeftFieldNumber = 1;
  private bool hasSteamidLeft;
  private ulong steamidLeft_;
  public bool HasSteamidLeft {
    get { return hasSteamidLeft; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamidLeft {
    get { return steamidLeft_; }
  }
  
  public const int SteamidRightFieldNumber = 2;
  private bool hasSteamidRight;
  private ulong steamidRight_;
  public bool HasSteamidRight {
    get { return hasSteamidRight; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamidRight {
    get { return steamidRight_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCCheckFriendshipFieldNames;
    if (hasSteamidLeft) {
      output.WriteFixed64(1, field_names[0], SteamidLeft);
    }
    if (hasSteamidRight) {
      output.WriteFixed64(2, field_names[1], SteamidRight);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamidLeft) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, SteamidLeft);
      }
      if (hasSteamidRight) {
        size += pb::CodedOutputStream.ComputeFixed64Size(2, SteamidRight);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCCheckFriendship ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCCheckFriendship ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCCheckFriendship ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCCheckFriendship ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCCheckFriendship ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCCheckFriendship ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCCheckFriendship ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCCheckFriendship ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCCheckFriendship ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCCheckFriendship ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCCheckFriendship MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCCheckFriendship prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCCheckFriendship, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCCheckFriendship cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCCheckFriendship result;
    
    private CMsgGCCheckFriendship PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCCheckFriendship original = result;
        result = new CMsgGCCheckFriendship();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCCheckFriendship MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCCheckFriendship.Descriptor; }
    }
    
    public override CMsgGCCheckFriendship DefaultInstanceForType {
      get { return global::CMsgGCCheckFriendship.DefaultInstance; }
    }
    
    public override CMsgGCCheckFriendship BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCCheckFriendship) {
        return MergeFrom((CMsgGCCheckFriendship) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCCheckFriendship other) {
      if (other == global::CMsgGCCheckFriendship.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamidLeft) {
        SteamidLeft = other.SteamidLeft;
      }
      if (other.HasSteamidRight) {
        SteamidRight = other.SteamidRight;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCCheckFriendshipFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCCheckFriendshipFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamidLeft = input.ReadFixed64(ref result.steamidLeft_);
            break;
          }
          case 17: {
            result.hasSteamidRight = input.ReadFixed64(ref result.steamidRight_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamidLeft {
      get { return result.hasSteamidLeft; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamidLeft {
      get { return result.SteamidLeft; }
      set { SetSteamidLeft(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamidLeft(ulong value) {
      PrepareBuilder();
      result.hasSteamidLeft = true;
      result.steamidLeft_ = value;
      return this;
    }
    public Builder ClearSteamidLeft() {
      PrepareBuilder();
      result.hasSteamidLeft = false;
      result.steamidLeft_ = 0;
      return this;
    }
    
    public bool HasSteamidRight {
      get { return result.hasSteamidRight; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamidRight {
      get { return result.SteamidRight; }
      set { SetSteamidRight(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamidRight(ulong value) {
      PrepareBuilder();
      result.hasSteamidRight = true;
      result.steamidRight_ = value;
      return this;
    }
    public Builder ClearSteamidRight() {
      PrepareBuilder();
      result.hasSteamidRight = false;
      result.steamidRight_ = 0;
      return this;
    }
  }
  static CMsgGCCheckFriendship() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCCheckFriendship_Response : pb::GeneratedMessage<CMsgGCCheckFriendship_Response, CMsgGCCheckFriendship_Response.Builder> {
  private CMsgGCCheckFriendship_Response() { }
  private static readonly CMsgGCCheckFriendship_Response defaultInstance = new CMsgGCCheckFriendship_Response().MakeReadOnly();
  private static readonly string[] _cMsgGCCheckFriendshipResponseFieldNames = new string[] { "found_friendship", "success" };
  private static readonly uint[] _cMsgGCCheckFriendshipResponseFieldTags = new uint[] { 16, 8 };
  public static CMsgGCCheckFriendship_Response DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCCheckFriendship_Response DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCCheckFriendship_Response ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCCheckFriendship_Response__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCCheckFriendship_Response, CMsgGCCheckFriendship_Response.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCCheckFriendship_Response__FieldAccessorTable; }
  }
  
  public const int SuccessFieldNumber = 1;
  private bool hasSuccess;
  private bool success_;
  public bool HasSuccess {
    get { return hasSuccess; }
  }
  public bool Success {
    get { return success_; }
  }
  
  public const int FoundFriendshipFieldNumber = 2;
  private bool hasFoundFriendship;
  private bool foundFriendship_;
  public bool HasFoundFriendship {
    get { return hasFoundFriendship; }
  }
  public bool FoundFriendship {
    get { return foundFriendship_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCCheckFriendshipResponseFieldNames;
    if (hasSuccess) {
      output.WriteBool(1, field_names[1], Success);
    }
    if (hasFoundFriendship) {
      output.WriteBool(2, field_names[0], FoundFriendship);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSuccess) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, Success);
      }
      if (hasFoundFriendship) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, FoundFriendship);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCCheckFriendship_Response ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCCheckFriendship_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCCheckFriendship_Response ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCCheckFriendship_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCCheckFriendship_Response ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCCheckFriendship_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCCheckFriendship_Response ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCCheckFriendship_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCCheckFriendship_Response ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCCheckFriendship_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCCheckFriendship_Response MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCCheckFriendship_Response prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCCheckFriendship_Response, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCCheckFriendship_Response cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCCheckFriendship_Response result;
    
    private CMsgGCCheckFriendship_Response PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCCheckFriendship_Response original = result;
        result = new CMsgGCCheckFriendship_Response();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCCheckFriendship_Response MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCCheckFriendship_Response.Descriptor; }
    }
    
    public override CMsgGCCheckFriendship_Response DefaultInstanceForType {
      get { return global::CMsgGCCheckFriendship_Response.DefaultInstance; }
    }
    
    public override CMsgGCCheckFriendship_Response BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCCheckFriendship_Response) {
        return MergeFrom((CMsgGCCheckFriendship_Response) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCCheckFriendship_Response other) {
      if (other == global::CMsgGCCheckFriendship_Response.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSuccess) {
        Success = other.Success;
      }
      if (other.HasFoundFriendship) {
        FoundFriendship = other.FoundFriendship;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCCheckFriendshipResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCCheckFriendshipResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSuccess = input.ReadBool(ref result.success_);
            break;
          }
          case 16: {
            result.hasFoundFriendship = input.ReadBool(ref result.foundFriendship_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSuccess {
      get { return result.hasSuccess; }
    }
    public bool Success {
      get { return result.Success; }
      set { SetSuccess(value); }
    }
    public Builder SetSuccess(bool value) {
      PrepareBuilder();
      result.hasSuccess = true;
      result.success_ = value;
      return this;
    }
    public Builder ClearSuccess() {
      PrepareBuilder();
      result.hasSuccess = false;
      result.success_ = false;
      return this;
    }
    
    public bool HasFoundFriendship {
      get { return result.hasFoundFriendship; }
    }
    public bool FoundFriendship {
      get { return result.FoundFriendship; }
      set { SetFoundFriendship(value); }
    }
    public Builder SetFoundFriendship(bool value) {
      PrepareBuilder();
      result.hasFoundFriendship = true;
      result.foundFriendship_ = value;
      return this;
    }
    public Builder ClearFoundFriendship() {
      PrepareBuilder();
      result.hasFoundFriendship = false;
      result.foundFriendship_ = false;
      return this;
    }
  }
  static CMsgGCCheckFriendship_Response() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCMsgMasterSetDirectory : pb::GeneratedMessage<CMsgGCMsgMasterSetDirectory, CMsgGCMsgMasterSetDirectory.Builder> {
  private CMsgGCMsgMasterSetDirectory() { }
  private static readonly CMsgGCMsgMasterSetDirectory defaultInstance = new CMsgGCMsgMasterSetDirectory().MakeReadOnly();
  private static readonly string[] _cMsgGCMsgMasterSetDirectoryFieldNames = new string[] { "dir", "master_dir_index" };
  private static readonly uint[] _cMsgGCMsgMasterSetDirectoryFieldTags = new uint[] { 18, 8 };
  public static CMsgGCMsgMasterSetDirectory DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCMsgMasterSetDirectory DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCMsgMasterSetDirectory ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetDirectory__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCMsgMasterSetDirectory, CMsgGCMsgMasterSetDirectory.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetDirectory__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class SubGC : pb::GeneratedMessage<SubGC, SubGC.Builder> {
      private SubGC() { }
      private static readonly SubGC defaultInstance = new SubGC().MakeReadOnly();
      private static readonly string[] _subGCFieldNames = new string[] { "box", "command_line", "dir_index", "gc_binary", "name" };
      private static readonly uint[] _subGCFieldTags = new uint[] { 26, 34, 8, 42, 18 };
      public static SubGC DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override SubGC DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override SubGC ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetDirectory_SubGC__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<SubGC, SubGC.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetDirectory_SubGC__FieldAccessorTable; }
      }
      
      public const int DirIndexFieldNumber = 1;
      private bool hasDirIndex;
      private uint dirIndex_;
      public bool HasDirIndex {
        get { return hasDirIndex; }
      }
      [global::System.CLSCompliant(false)]
      public uint DirIndex {
        get { return dirIndex_; }
      }
      
      public const int NameFieldNumber = 2;
      private bool hasName;
      private string name_ = "";
      public bool HasName {
        get { return hasName; }
      }
      public string Name {
        get { return name_; }
      }
      
      public const int BoxFieldNumber = 3;
      private bool hasBox;
      private string box_ = "";
      public bool HasBox {
        get { return hasBox; }
      }
      public string Box {
        get { return box_; }
      }
      
      public const int CommandLineFieldNumber = 4;
      private bool hasCommandLine;
      private string commandLine_ = "";
      public bool HasCommandLine {
        get { return hasCommandLine; }
      }
      public string CommandLine {
        get { return commandLine_; }
      }
      
      public const int GcBinaryFieldNumber = 5;
      private bool hasGcBinary;
      private string gcBinary_ = "";
      public bool HasGcBinary {
        get { return hasGcBinary; }
      }
      public string GcBinary {
        get { return gcBinary_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _subGCFieldNames;
        if (hasDirIndex) {
          output.WriteUInt32(1, field_names[2], DirIndex);
        }
        if (hasName) {
          output.WriteString(2, field_names[4], Name);
        }
        if (hasBox) {
          output.WriteString(3, field_names[0], Box);
        }
        if (hasCommandLine) {
          output.WriteString(4, field_names[1], CommandLine);
        }
        if (hasGcBinary) {
          output.WriteString(5, field_names[3], GcBinary);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasDirIndex) {
            size += pb::CodedOutputStream.ComputeUInt32Size(1, DirIndex);
          }
          if (hasName) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Name);
          }
          if (hasBox) {
            size += pb::CodedOutputStream.ComputeStringSize(3, Box);
          }
          if (hasCommandLine) {
            size += pb::CodedOutputStream.ComputeStringSize(4, CommandLine);
          }
          if (hasGcBinary) {
            size += pb::CodedOutputStream.ComputeStringSize(5, GcBinary);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static SubGC ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SubGC ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SubGC ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SubGC ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SubGC ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SubGC ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static SubGC ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static SubGC ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static SubGC ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SubGC ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private SubGC MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(SubGC prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<SubGC, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(SubGC cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private SubGC result;
        
        private SubGC PrepareBuilder() {
          if (resultIsReadOnly) {
            SubGC original = result;
            result = new SubGC();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override SubGC MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgGCMsgMasterSetDirectory.Types.SubGC.Descriptor; }
        }
        
        public override SubGC DefaultInstanceForType {
          get { return global::CMsgGCMsgMasterSetDirectory.Types.SubGC.DefaultInstance; }
        }
        
        public override SubGC BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is SubGC) {
            return MergeFrom((SubGC) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(SubGC other) {
          if (other == global::CMsgGCMsgMasterSetDirectory.Types.SubGC.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasDirIndex) {
            DirIndex = other.DirIndex;
          }
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasBox) {
            Box = other.Box;
          }
          if (other.HasCommandLine) {
            CommandLine = other.CommandLine;
          }
          if (other.HasGcBinary) {
            GcBinary = other.GcBinary;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_subGCFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _subGCFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasDirIndex = input.ReadUInt32(ref result.dirIndex_);
                break;
              }
              case 18: {
                result.hasName = input.ReadString(ref result.name_);
                break;
              }
              case 26: {
                result.hasBox = input.ReadString(ref result.box_);
                break;
              }
              case 34: {
                result.hasCommandLine = input.ReadString(ref result.commandLine_);
                break;
              }
              case 42: {
                result.hasGcBinary = input.ReadString(ref result.gcBinary_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasDirIndex {
          get { return result.hasDirIndex; }
        }
        [global::System.CLSCompliant(false)]
        public uint DirIndex {
          get { return result.DirIndex; }
          set { SetDirIndex(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetDirIndex(uint value) {
          PrepareBuilder();
          result.hasDirIndex = true;
          result.dirIndex_ = value;
          return this;
        }
        public Builder ClearDirIndex() {
          PrepareBuilder();
          result.hasDirIndex = false;
          result.dirIndex_ = 0;
          return this;
        }
        
        public bool HasName {
          get { return result.hasName; }
        }
        public string Name {
          get { return result.Name; }
          set { SetName(value); }
        }
        public Builder SetName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder ClearName() {
          PrepareBuilder();
          result.hasName = false;
          result.name_ = "";
          return this;
        }
        
        public bool HasBox {
          get { return result.hasBox; }
        }
        public string Box {
          get { return result.Box; }
          set { SetBox(value); }
        }
        public Builder SetBox(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasBox = true;
          result.box_ = value;
          return this;
        }
        public Builder ClearBox() {
          PrepareBuilder();
          result.hasBox = false;
          result.box_ = "";
          return this;
        }
        
        public bool HasCommandLine {
          get { return result.hasCommandLine; }
        }
        public string CommandLine {
          get { return result.CommandLine; }
          set { SetCommandLine(value); }
        }
        public Builder SetCommandLine(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasCommandLine = true;
          result.commandLine_ = value;
          return this;
        }
        public Builder ClearCommandLine() {
          PrepareBuilder();
          result.hasCommandLine = false;
          result.commandLine_ = "";
          return this;
        }
        
        public bool HasGcBinary {
          get { return result.hasGcBinary; }
        }
        public string GcBinary {
          get { return result.GcBinary; }
          set { SetGcBinary(value); }
        }
        public Builder SetGcBinary(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasGcBinary = true;
          result.gcBinary_ = value;
          return this;
        }
        public Builder ClearGcBinary() {
          PrepareBuilder();
          result.hasGcBinary = false;
          result.gcBinary_ = "";
          return this;
        }
      }
      static SubGC() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int MasterDirIndexFieldNumber = 1;
  private bool hasMasterDirIndex;
  private uint masterDirIndex_;
  public bool HasMasterDirIndex {
    get { return hasMasterDirIndex; }
  }
  [global::System.CLSCompliant(false)]
  public uint MasterDirIndex {
    get { return masterDirIndex_; }
  }
  
  public const int DirFieldNumber = 2;
  private pbc::PopsicleList<global::CMsgGCMsgMasterSetDirectory.Types.SubGC> dir_ = new pbc::PopsicleList<global::CMsgGCMsgMasterSetDirectory.Types.SubGC>();
  public scg::IList<global::CMsgGCMsgMasterSetDirectory.Types.SubGC> DirList {
    get { return dir_; }
  }
  public int DirCount {
    get { return dir_.Count; }
  }
  public global::CMsgGCMsgMasterSetDirectory.Types.SubGC GetDir(int index) {
    return dir_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCMsgMasterSetDirectoryFieldNames;
    if (hasMasterDirIndex) {
      output.WriteUInt32(1, field_names[1], MasterDirIndex);
    }
    if (dir_.Count > 0) {
      output.WriteMessageArray(2, field_names[0], dir_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMasterDirIndex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, MasterDirIndex);
      }
      foreach (global::CMsgGCMsgMasterSetDirectory.Types.SubGC element in DirList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCMsgMasterSetDirectory ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCMsgMasterSetDirectory MakeReadOnly() {
    dir_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCMsgMasterSetDirectory prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCMsgMasterSetDirectory, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCMsgMasterSetDirectory cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCMsgMasterSetDirectory result;
    
    private CMsgGCMsgMasterSetDirectory PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCMsgMasterSetDirectory original = result;
        result = new CMsgGCMsgMasterSetDirectory();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCMsgMasterSetDirectory MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCMsgMasterSetDirectory.Descriptor; }
    }
    
    public override CMsgGCMsgMasterSetDirectory DefaultInstanceForType {
      get { return global::CMsgGCMsgMasterSetDirectory.DefaultInstance; }
    }
    
    public override CMsgGCMsgMasterSetDirectory BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCMsgMasterSetDirectory) {
        return MergeFrom((CMsgGCMsgMasterSetDirectory) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCMsgMasterSetDirectory other) {
      if (other == global::CMsgGCMsgMasterSetDirectory.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasMasterDirIndex) {
        MasterDirIndex = other.MasterDirIndex;
      }
      if (other.dir_.Count != 0) {
        result.dir_.Add(other.dir_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCMsgMasterSetDirectoryFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCMsgMasterSetDirectoryFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasMasterDirIndex = input.ReadUInt32(ref result.masterDirIndex_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.dir_, global::CMsgGCMsgMasterSetDirectory.Types.SubGC.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasMasterDirIndex {
      get { return result.hasMasterDirIndex; }
    }
    [global::System.CLSCompliant(false)]
    public uint MasterDirIndex {
      get { return result.MasterDirIndex; }
      set { SetMasterDirIndex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetMasterDirIndex(uint value) {
      PrepareBuilder();
      result.hasMasterDirIndex = true;
      result.masterDirIndex_ = value;
      return this;
    }
    public Builder ClearMasterDirIndex() {
      PrepareBuilder();
      result.hasMasterDirIndex = false;
      result.masterDirIndex_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgGCMsgMasterSetDirectory.Types.SubGC> DirList {
      get { return PrepareBuilder().dir_; }
    }
    public int DirCount {
      get { return result.DirCount; }
    }
    public global::CMsgGCMsgMasterSetDirectory.Types.SubGC GetDir(int index) {
      return result.GetDir(index);
    }
    public Builder SetDir(int index, global::CMsgGCMsgMasterSetDirectory.Types.SubGC value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.dir_[index] = value;
      return this;
    }
    public Builder SetDir(int index, global::CMsgGCMsgMasterSetDirectory.Types.SubGC.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.dir_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddDir(global::CMsgGCMsgMasterSetDirectory.Types.SubGC value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.dir_.Add(value);
      return this;
    }
    public Builder AddDir(global::CMsgGCMsgMasterSetDirectory.Types.SubGC.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.dir_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeDir(scg::IEnumerable<global::CMsgGCMsgMasterSetDirectory.Types.SubGC> values) {
      PrepareBuilder();
      result.dir_.Add(values);
      return this;
    }
    public Builder ClearDir() {
      PrepareBuilder();
      result.dir_.Clear();
      return this;
    }
  }
  static CMsgGCMsgMasterSetDirectory() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCMsgMasterSetDirectory_Response : pb::GeneratedMessage<CMsgGCMsgMasterSetDirectory_Response, CMsgGCMsgMasterSetDirectory_Response.Builder> {
  private CMsgGCMsgMasterSetDirectory_Response() { }
  private static readonly CMsgGCMsgMasterSetDirectory_Response defaultInstance = new CMsgGCMsgMasterSetDirectory_Response().MakeReadOnly();
  private static readonly string[] _cMsgGCMsgMasterSetDirectoryResponseFieldNames = new string[] { "eresult" };
  private static readonly uint[] _cMsgGCMsgMasterSetDirectoryResponseFieldTags = new uint[] { 8 };
  public static CMsgGCMsgMasterSetDirectory_Response DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCMsgMasterSetDirectory_Response DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCMsgMasterSetDirectory_Response ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetDirectory_Response__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCMsgMasterSetDirectory_Response, CMsgGCMsgMasterSetDirectory_Response.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetDirectory_Response__FieldAccessorTable; }
  }
  
  public const int EresultFieldNumber = 1;
  private bool hasEresult;
  private int eresult_ = 2;
  public bool HasEresult {
    get { return hasEresult; }
  }
  public int Eresult {
    get { return eresult_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCMsgMasterSetDirectoryResponseFieldNames;
    if (hasEresult) {
      output.WriteInt32(1, field_names[0], Eresult);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEresult) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Eresult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCMsgMasterSetDirectory_Response ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory_Response ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory_Response ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory_Response ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory_Response ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetDirectory_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCMsgMasterSetDirectory_Response MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCMsgMasterSetDirectory_Response prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCMsgMasterSetDirectory_Response, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCMsgMasterSetDirectory_Response cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCMsgMasterSetDirectory_Response result;
    
    private CMsgGCMsgMasterSetDirectory_Response PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCMsgMasterSetDirectory_Response original = result;
        result = new CMsgGCMsgMasterSetDirectory_Response();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCMsgMasterSetDirectory_Response MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCMsgMasterSetDirectory_Response.Descriptor; }
    }
    
    public override CMsgGCMsgMasterSetDirectory_Response DefaultInstanceForType {
      get { return global::CMsgGCMsgMasterSetDirectory_Response.DefaultInstance; }
    }
    
    public override CMsgGCMsgMasterSetDirectory_Response BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCMsgMasterSetDirectory_Response) {
        return MergeFrom((CMsgGCMsgMasterSetDirectory_Response) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCMsgMasterSetDirectory_Response other) {
      if (other == global::CMsgGCMsgMasterSetDirectory_Response.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCMsgMasterSetDirectoryResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCMsgMasterSetDirectoryResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEresult = input.ReadInt32(ref result.eresult_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEresult {
      get { return result.hasEresult; }
    }
    public int Eresult {
      get { return result.Eresult; }
      set { SetEresult(value); }
    }
    public Builder SetEresult(int value) {
      PrepareBuilder();
      result.hasEresult = true;
      result.eresult_ = value;
      return this;
    }
    public Builder ClearEresult() {
      PrepareBuilder();
      result.hasEresult = false;
      result.eresult_ = 2;
      return this;
    }
  }
  static CMsgGCMsgMasterSetDirectory_Response() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCMsgWebAPIJobRequestForwardResponse : pb::GeneratedMessage<CMsgGCMsgWebAPIJobRequestForwardResponse, CMsgGCMsgWebAPIJobRequestForwardResponse.Builder> {
  private CMsgGCMsgWebAPIJobRequestForwardResponse() { }
  private static readonly CMsgGCMsgWebAPIJobRequestForwardResponse defaultInstance = new CMsgGCMsgWebAPIJobRequestForwardResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCMsgWebAPIJobRequestForwardResponseFieldNames = new string[] { "dir_index" };
  private static readonly uint[] _cMsgGCMsgWebAPIJobRequestForwardResponseFieldTags = new uint[] { 8 };
  public static CMsgGCMsgWebAPIJobRequestForwardResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCMsgWebAPIJobRequestForwardResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCMsgWebAPIJobRequestForwardResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCMsgWebAPIJobRequestForwardResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCMsgWebAPIJobRequestForwardResponse, CMsgGCMsgWebAPIJobRequestForwardResponse.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCMsgWebAPIJobRequestForwardResponse__FieldAccessorTable; }
  }
  
  public const int DirIndexFieldNumber = 1;
  private bool hasDirIndex;
  private uint dirIndex_;
  public bool HasDirIndex {
    get { return hasDirIndex; }
  }
  [global::System.CLSCompliant(false)]
  public uint DirIndex {
    get { return dirIndex_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCMsgWebAPIJobRequestForwardResponseFieldNames;
    if (hasDirIndex) {
      output.WriteUInt32(1, field_names[0], DirIndex);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDirIndex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, DirIndex);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCMsgWebAPIJobRequestForwardResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgWebAPIJobRequestForwardResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgWebAPIJobRequestForwardResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgWebAPIJobRequestForwardResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgWebAPIJobRequestForwardResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgWebAPIJobRequestForwardResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgWebAPIJobRequestForwardResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCMsgWebAPIJobRequestForwardResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCMsgWebAPIJobRequestForwardResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgWebAPIJobRequestForwardResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCMsgWebAPIJobRequestForwardResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCMsgWebAPIJobRequestForwardResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCMsgWebAPIJobRequestForwardResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCMsgWebAPIJobRequestForwardResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCMsgWebAPIJobRequestForwardResponse result;
    
    private CMsgGCMsgWebAPIJobRequestForwardResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCMsgWebAPIJobRequestForwardResponse original = result;
        result = new CMsgGCMsgWebAPIJobRequestForwardResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCMsgWebAPIJobRequestForwardResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCMsgWebAPIJobRequestForwardResponse.Descriptor; }
    }
    
    public override CMsgGCMsgWebAPIJobRequestForwardResponse DefaultInstanceForType {
      get { return global::CMsgGCMsgWebAPIJobRequestForwardResponse.DefaultInstance; }
    }
    
    public override CMsgGCMsgWebAPIJobRequestForwardResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCMsgWebAPIJobRequestForwardResponse) {
        return MergeFrom((CMsgGCMsgWebAPIJobRequestForwardResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCMsgWebAPIJobRequestForwardResponse other) {
      if (other == global::CMsgGCMsgWebAPIJobRequestForwardResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDirIndex) {
        DirIndex = other.DirIndex;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCMsgWebAPIJobRequestForwardResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCMsgWebAPIJobRequestForwardResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDirIndex = input.ReadUInt32(ref result.dirIndex_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDirIndex {
      get { return result.hasDirIndex; }
    }
    [global::System.CLSCompliant(false)]
    public uint DirIndex {
      get { return result.DirIndex; }
      set { SetDirIndex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDirIndex(uint value) {
      PrepareBuilder();
      result.hasDirIndex = true;
      result.dirIndex_ = value;
      return this;
    }
    public Builder ClearDirIndex() {
      PrepareBuilder();
      result.hasDirIndex = false;
      result.dirIndex_ = 0;
      return this;
    }
  }
  static CMsgGCMsgWebAPIJobRequestForwardResponse() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCSystemMsg_GetPurchaseTrust_Request : pb::GeneratedMessage<CGCSystemMsg_GetPurchaseTrust_Request, CGCSystemMsg_GetPurchaseTrust_Request.Builder> {
  private CGCSystemMsg_GetPurchaseTrust_Request() { }
  private static readonly CGCSystemMsg_GetPurchaseTrust_Request defaultInstance = new CGCSystemMsg_GetPurchaseTrust_Request().MakeReadOnly();
  private static readonly string[] _cGCSystemMsgGetPurchaseTrustRequestFieldNames = new string[] { "steamid" };
  private static readonly uint[] _cGCSystemMsgGetPurchaseTrustRequestFieldTags = new uint[] { 9 };
  public static CGCSystemMsg_GetPurchaseTrust_Request DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCSystemMsg_GetPurchaseTrust_Request DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCSystemMsg_GetPurchaseTrust_Request ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCSystemMsg_GetPurchaseTrust_Request__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCSystemMsg_GetPurchaseTrust_Request, CGCSystemMsg_GetPurchaseTrust_Request.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCSystemMsg_GetPurchaseTrust_Request__FieldAccessorTable; }
  }
  
  public const int SteamidFieldNumber = 1;
  private bool hasSteamid;
  private ulong steamid_;
  public bool HasSteamid {
    get { return hasSteamid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Steamid {
    get { return steamid_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCSystemMsgGetPurchaseTrustRequestFieldNames;
    if (hasSteamid) {
      output.WriteFixed64(1, field_names[0], Steamid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, Steamid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCSystemMsg_GetPurchaseTrust_Request ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Request ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Request ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Request ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Request ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCSystemMsg_GetPurchaseTrust_Request MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCSystemMsg_GetPurchaseTrust_Request prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCSystemMsg_GetPurchaseTrust_Request, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCSystemMsg_GetPurchaseTrust_Request cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCSystemMsg_GetPurchaseTrust_Request result;
    
    private CGCSystemMsg_GetPurchaseTrust_Request PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCSystemMsg_GetPurchaseTrust_Request original = result;
        result = new CGCSystemMsg_GetPurchaseTrust_Request();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCSystemMsg_GetPurchaseTrust_Request MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCSystemMsg_GetPurchaseTrust_Request.Descriptor; }
    }
    
    public override CGCSystemMsg_GetPurchaseTrust_Request DefaultInstanceForType {
      get { return global::CGCSystemMsg_GetPurchaseTrust_Request.DefaultInstance; }
    }
    
    public override CGCSystemMsg_GetPurchaseTrust_Request BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCSystemMsg_GetPurchaseTrust_Request) {
        return MergeFrom((CGCSystemMsg_GetPurchaseTrust_Request) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCSystemMsg_GetPurchaseTrust_Request other) {
      if (other == global::CGCSystemMsg_GetPurchaseTrust_Request.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCSystemMsgGetPurchaseTrustRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCSystemMsgGetPurchaseTrustRequestFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamid = input.ReadFixed64(ref result.steamid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamid {
      get { return result.hasSteamid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Steamid {
      get { return result.Steamid; }
      set { SetSteamid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamid(ulong value) {
      PrepareBuilder();
      result.hasSteamid = true;
      result.steamid_ = value;
      return this;
    }
    public Builder ClearSteamid() {
      PrepareBuilder();
      result.hasSteamid = false;
      result.steamid_ = 0;
      return this;
    }
  }
  static CGCSystemMsg_GetPurchaseTrust_Request() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCSystemMsg_GetPurchaseTrust_Response : pb::GeneratedMessage<CGCSystemMsg_GetPurchaseTrust_Response, CGCSystemMsg_GetPurchaseTrust_Response.Builder> {
  private CGCSystemMsg_GetPurchaseTrust_Response() { }
  private static readonly CGCSystemMsg_GetPurchaseTrust_Response defaultInstance = new CGCSystemMsg_GetPurchaseTrust_Response().MakeReadOnly();
  private static readonly string[] _cGCSystemMsgGetPurchaseTrustResponseFieldNames = new string[] { "has_no_recent_password_resets", "has_prior_purchase_history", "is_wallet_cash_trusted", "time_all_trusted" };
  private static readonly uint[] _cGCSystemMsgGetPurchaseTrustResponseFieldTags = new uint[] { 16, 8, 24, 32 };
  public static CGCSystemMsg_GetPurchaseTrust_Response DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCSystemMsg_GetPurchaseTrust_Response DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCSystemMsg_GetPurchaseTrust_Response ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CGCSystemMsg_GetPurchaseTrust_Response__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCSystemMsg_GetPurchaseTrust_Response, CGCSystemMsg_GetPurchaseTrust_Response.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CGCSystemMsg_GetPurchaseTrust_Response__FieldAccessorTable; }
  }
  
  public const int HasPriorPurchaseHistoryFieldNumber = 1;
  private bool hasHasPriorPurchaseHistory;
  private bool hasPriorPurchaseHistory_;
  public bool HasHasPriorPurchaseHistory {
    get { return hasHasPriorPurchaseHistory; }
  }
  public bool HasPriorPurchaseHistory {
    get { return hasPriorPurchaseHistory_; }
  }
  
  public const int HasNoRecentPasswordResetsFieldNumber = 2;
  private bool hasHasNoRecentPasswordResets;
  private bool hasNoRecentPasswordResets_;
  public bool HasHasNoRecentPasswordResets {
    get { return hasHasNoRecentPasswordResets; }
  }
  public bool HasNoRecentPasswordResets {
    get { return hasNoRecentPasswordResets_; }
  }
  
  public const int IsWalletCashTrustedFieldNumber = 3;
  private bool hasIsWalletCashTrusted;
  private bool isWalletCashTrusted_;
  public bool HasIsWalletCashTrusted {
    get { return hasIsWalletCashTrusted; }
  }
  public bool IsWalletCashTrusted {
    get { return isWalletCashTrusted_; }
  }
  
  public const int TimeAllTrustedFieldNumber = 4;
  private bool hasTimeAllTrusted;
  private uint timeAllTrusted_;
  public bool HasTimeAllTrusted {
    get { return hasTimeAllTrusted; }
  }
  [global::System.CLSCompliant(false)]
  public uint TimeAllTrusted {
    get { return timeAllTrusted_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCSystemMsgGetPurchaseTrustResponseFieldNames;
    if (hasHasPriorPurchaseHistory) {
      output.WriteBool(1, field_names[1], HasPriorPurchaseHistory);
    }
    if (hasHasNoRecentPasswordResets) {
      output.WriteBool(2, field_names[0], HasNoRecentPasswordResets);
    }
    if (hasIsWalletCashTrusted) {
      output.WriteBool(3, field_names[2], IsWalletCashTrusted);
    }
    if (hasTimeAllTrusted) {
      output.WriteUInt32(4, field_names[3], TimeAllTrusted);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasHasPriorPurchaseHistory) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, HasPriorPurchaseHistory);
      }
      if (hasHasNoRecentPasswordResets) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, HasNoRecentPasswordResets);
      }
      if (hasIsWalletCashTrusted) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, IsWalletCashTrusted);
      }
      if (hasTimeAllTrusted) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, TimeAllTrusted);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCSystemMsg_GetPurchaseTrust_Response ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Response ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Response ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Response ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Response ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCSystemMsg_GetPurchaseTrust_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCSystemMsg_GetPurchaseTrust_Response MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCSystemMsg_GetPurchaseTrust_Response prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCSystemMsg_GetPurchaseTrust_Response, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCSystemMsg_GetPurchaseTrust_Response cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCSystemMsg_GetPurchaseTrust_Response result;
    
    private CGCSystemMsg_GetPurchaseTrust_Response PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCSystemMsg_GetPurchaseTrust_Response original = result;
        result = new CGCSystemMsg_GetPurchaseTrust_Response();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCSystemMsg_GetPurchaseTrust_Response MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCSystemMsg_GetPurchaseTrust_Response.Descriptor; }
    }
    
    public override CGCSystemMsg_GetPurchaseTrust_Response DefaultInstanceForType {
      get { return global::CGCSystemMsg_GetPurchaseTrust_Response.DefaultInstance; }
    }
    
    public override CGCSystemMsg_GetPurchaseTrust_Response BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCSystemMsg_GetPurchaseTrust_Response) {
        return MergeFrom((CGCSystemMsg_GetPurchaseTrust_Response) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCSystemMsg_GetPurchaseTrust_Response other) {
      if (other == global::CGCSystemMsg_GetPurchaseTrust_Response.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasHasPriorPurchaseHistory) {
        HasPriorPurchaseHistory = other.HasPriorPurchaseHistory;
      }
      if (other.HasHasNoRecentPasswordResets) {
        HasNoRecentPasswordResets = other.HasNoRecentPasswordResets;
      }
      if (other.HasIsWalletCashTrusted) {
        IsWalletCashTrusted = other.IsWalletCashTrusted;
      }
      if (other.HasTimeAllTrusted) {
        TimeAllTrusted = other.TimeAllTrusted;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCSystemMsgGetPurchaseTrustResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCSystemMsgGetPurchaseTrustResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasHasPriorPurchaseHistory = input.ReadBool(ref result.hasPriorPurchaseHistory_);
            break;
          }
          case 16: {
            result.hasHasNoRecentPasswordResets = input.ReadBool(ref result.hasNoRecentPasswordResets_);
            break;
          }
          case 24: {
            result.hasIsWalletCashTrusted = input.ReadBool(ref result.isWalletCashTrusted_);
            break;
          }
          case 32: {
            result.hasTimeAllTrusted = input.ReadUInt32(ref result.timeAllTrusted_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasHasPriorPurchaseHistory {
      get { return result.hasHasPriorPurchaseHistory; }
    }
    public bool HasPriorPurchaseHistory {
      get { return result.HasPriorPurchaseHistory; }
      set { SetHasPriorPurchaseHistory(value); }
    }
    public Builder SetHasPriorPurchaseHistory(bool value) {
      PrepareBuilder();
      result.hasHasPriorPurchaseHistory = true;
      result.hasPriorPurchaseHistory_ = value;
      return this;
    }
    public Builder ClearHasPriorPurchaseHistory() {
      PrepareBuilder();
      result.hasHasPriorPurchaseHistory = false;
      result.hasPriorPurchaseHistory_ = false;
      return this;
    }
    
    public bool HasHasNoRecentPasswordResets {
      get { return result.hasHasNoRecentPasswordResets; }
    }
    public bool HasNoRecentPasswordResets {
      get { return result.HasNoRecentPasswordResets; }
      set { SetHasNoRecentPasswordResets(value); }
    }
    public Builder SetHasNoRecentPasswordResets(bool value) {
      PrepareBuilder();
      result.hasHasNoRecentPasswordResets = true;
      result.hasNoRecentPasswordResets_ = value;
      return this;
    }
    public Builder ClearHasNoRecentPasswordResets() {
      PrepareBuilder();
      result.hasHasNoRecentPasswordResets = false;
      result.hasNoRecentPasswordResets_ = false;
      return this;
    }
    
    public bool HasIsWalletCashTrusted {
      get { return result.hasIsWalletCashTrusted; }
    }
    public bool IsWalletCashTrusted {
      get { return result.IsWalletCashTrusted; }
      set { SetIsWalletCashTrusted(value); }
    }
    public Builder SetIsWalletCashTrusted(bool value) {
      PrepareBuilder();
      result.hasIsWalletCashTrusted = true;
      result.isWalletCashTrusted_ = value;
      return this;
    }
    public Builder ClearIsWalletCashTrusted() {
      PrepareBuilder();
      result.hasIsWalletCashTrusted = false;
      result.isWalletCashTrusted_ = false;
      return this;
    }
    
    public bool HasTimeAllTrusted {
      get { return result.hasTimeAllTrusted; }
    }
    [global::System.CLSCompliant(false)]
    public uint TimeAllTrusted {
      get { return result.TimeAllTrusted; }
      set { SetTimeAllTrusted(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTimeAllTrusted(uint value) {
      PrepareBuilder();
      result.hasTimeAllTrusted = true;
      result.timeAllTrusted_ = value;
      return this;
    }
    public Builder ClearTimeAllTrusted() {
      PrepareBuilder();
      result.hasTimeAllTrusted = false;
      result.timeAllTrusted_ = 0;
      return this;
    }
  }
  static CGCSystemMsg_GetPurchaseTrust_Response() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCHAccountVacStatusChange : pb::GeneratedMessage<CMsgGCHAccountVacStatusChange, CMsgGCHAccountVacStatusChange.Builder> {
  private CMsgGCHAccountVacStatusChange() { }
  private static readonly CMsgGCHAccountVacStatusChange defaultInstance = new CMsgGCHAccountVacStatusChange().MakeReadOnly();
  private static readonly string[] _cMsgGCHAccountVacStatusChangeFieldNames = new string[] { "app_id", "is_banned_future", "is_banned_now", "rtime_vacban_starts", "steam_id" };
  private static readonly uint[] _cMsgGCHAccountVacStatusChangeFieldTags = new uint[] { 16, 40, 32, 24, 9 };
  public static CMsgGCHAccountVacStatusChange DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCHAccountVacStatusChange DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCHAccountVacStatusChange ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCHAccountVacStatusChange__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCHAccountVacStatusChange, CMsgGCHAccountVacStatusChange.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCHAccountVacStatusChange__FieldAccessorTable; }
  }
  
  public const int SteamIdFieldNumber = 1;
  private bool hasSteamId;
  private ulong steamId_;
  public bool HasSteamId {
    get { return hasSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamId {
    get { return steamId_; }
  }
  
  public const int AppIdFieldNumber = 2;
  private bool hasAppId;
  private uint appId_;
  public bool HasAppId {
    get { return hasAppId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AppId {
    get { return appId_; }
  }
  
  public const int RtimeVacbanStartsFieldNumber = 3;
  private bool hasRtimeVacbanStarts;
  private uint rtimeVacbanStarts_;
  public bool HasRtimeVacbanStarts {
    get { return hasRtimeVacbanStarts; }
  }
  [global::System.CLSCompliant(false)]
  public uint RtimeVacbanStarts {
    get { return rtimeVacbanStarts_; }
  }
  
  public const int IsBannedNowFieldNumber = 4;
  private bool hasIsBannedNow;
  private bool isBannedNow_;
  public bool HasIsBannedNow {
    get { return hasIsBannedNow; }
  }
  public bool IsBannedNow {
    get { return isBannedNow_; }
  }
  
  public const int IsBannedFutureFieldNumber = 5;
  private bool hasIsBannedFuture;
  private bool isBannedFuture_;
  public bool HasIsBannedFuture {
    get { return hasIsBannedFuture; }
  }
  public bool IsBannedFuture {
    get { return isBannedFuture_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCHAccountVacStatusChangeFieldNames;
    if (hasSteamId) {
      output.WriteFixed64(1, field_names[4], SteamId);
    }
    if (hasAppId) {
      output.WriteUInt32(2, field_names[0], AppId);
    }
    if (hasRtimeVacbanStarts) {
      output.WriteUInt32(3, field_names[3], RtimeVacbanStarts);
    }
    if (hasIsBannedNow) {
      output.WriteBool(4, field_names[2], IsBannedNow);
    }
    if (hasIsBannedFuture) {
      output.WriteBool(5, field_names[1], IsBannedFuture);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, SteamId);
      }
      if (hasAppId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, AppId);
      }
      if (hasRtimeVacbanStarts) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, RtimeVacbanStarts);
      }
      if (hasIsBannedNow) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, IsBannedNow);
      }
      if (hasIsBannedFuture) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, IsBannedFuture);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCHAccountVacStatusChange ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCHAccountVacStatusChange ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCHAccountVacStatusChange ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCHAccountVacStatusChange ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCHAccountVacStatusChange ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCHAccountVacStatusChange ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCHAccountVacStatusChange ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCHAccountVacStatusChange ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCHAccountVacStatusChange ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCHAccountVacStatusChange ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCHAccountVacStatusChange MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCHAccountVacStatusChange prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCHAccountVacStatusChange, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCHAccountVacStatusChange cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCHAccountVacStatusChange result;
    
    private CMsgGCHAccountVacStatusChange PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCHAccountVacStatusChange original = result;
        result = new CMsgGCHAccountVacStatusChange();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCHAccountVacStatusChange MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCHAccountVacStatusChange.Descriptor; }
    }
    
    public override CMsgGCHAccountVacStatusChange DefaultInstanceForType {
      get { return global::CMsgGCHAccountVacStatusChange.DefaultInstance; }
    }
    
    public override CMsgGCHAccountVacStatusChange BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCHAccountVacStatusChange) {
        return MergeFrom((CMsgGCHAccountVacStatusChange) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCHAccountVacStatusChange other) {
      if (other == global::CMsgGCHAccountVacStatusChange.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      if (other.HasAppId) {
        AppId = other.AppId;
      }
      if (other.HasRtimeVacbanStarts) {
        RtimeVacbanStarts = other.RtimeVacbanStarts;
      }
      if (other.HasIsBannedNow) {
        IsBannedNow = other.IsBannedNow;
      }
      if (other.HasIsBannedFuture) {
        IsBannedFuture = other.IsBannedFuture;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCHAccountVacStatusChangeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCHAccountVacStatusChangeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamId = input.ReadFixed64(ref result.steamId_);
            break;
          }
          case 16: {
            result.hasAppId = input.ReadUInt32(ref result.appId_);
            break;
          }
          case 24: {
            result.hasRtimeVacbanStarts = input.ReadUInt32(ref result.rtimeVacbanStarts_);
            break;
          }
          case 32: {
            result.hasIsBannedNow = input.ReadBool(ref result.isBannedNow_);
            break;
          }
          case 40: {
            result.hasIsBannedFuture = input.ReadBool(ref result.isBannedFuture_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamId {
      get { return result.hasSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamId {
      get { return result.SteamId; }
      set { SetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamId(ulong value) {
      PrepareBuilder();
      result.hasSteamId = true;
      result.steamId_ = value;
      return this;
    }
    public Builder ClearSteamId() {
      PrepareBuilder();
      result.hasSteamId = false;
      result.steamId_ = 0;
      return this;
    }
    
    public bool HasAppId {
      get { return result.hasAppId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AppId {
      get { return result.AppId; }
      set { SetAppId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAppId(uint value) {
      PrepareBuilder();
      result.hasAppId = true;
      result.appId_ = value;
      return this;
    }
    public Builder ClearAppId() {
      PrepareBuilder();
      result.hasAppId = false;
      result.appId_ = 0;
      return this;
    }
    
    public bool HasRtimeVacbanStarts {
      get { return result.hasRtimeVacbanStarts; }
    }
    [global::System.CLSCompliant(false)]
    public uint RtimeVacbanStarts {
      get { return result.RtimeVacbanStarts; }
      set { SetRtimeVacbanStarts(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetRtimeVacbanStarts(uint value) {
      PrepareBuilder();
      result.hasRtimeVacbanStarts = true;
      result.rtimeVacbanStarts_ = value;
      return this;
    }
    public Builder ClearRtimeVacbanStarts() {
      PrepareBuilder();
      result.hasRtimeVacbanStarts = false;
      result.rtimeVacbanStarts_ = 0;
      return this;
    }
    
    public bool HasIsBannedNow {
      get { return result.hasIsBannedNow; }
    }
    public bool IsBannedNow {
      get { return result.IsBannedNow; }
      set { SetIsBannedNow(value); }
    }
    public Builder SetIsBannedNow(bool value) {
      PrepareBuilder();
      result.hasIsBannedNow = true;
      result.isBannedNow_ = value;
      return this;
    }
    public Builder ClearIsBannedNow() {
      PrepareBuilder();
      result.hasIsBannedNow = false;
      result.isBannedNow_ = false;
      return this;
    }
    
    public bool HasIsBannedFuture {
      get { return result.hasIsBannedFuture; }
    }
    public bool IsBannedFuture {
      get { return result.IsBannedFuture; }
      set { SetIsBannedFuture(value); }
    }
    public Builder SetIsBannedFuture(bool value) {
      PrepareBuilder();
      result.hasIsBannedFuture = true;
      result.isBannedFuture_ = value;
      return this;
    }
    public Builder ClearIsBannedFuture() {
      PrepareBuilder();
      result.hasIsBannedFuture = false;
      result.isBannedFuture_ = false;
      return this;
    }
  }
  static CMsgGCHAccountVacStatusChange() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCGetPartnerAccountLink : pb::GeneratedMessage<CMsgGCGetPartnerAccountLink, CMsgGCGetPartnerAccountLink.Builder> {
  private CMsgGCGetPartnerAccountLink() { }
  private static readonly CMsgGCGetPartnerAccountLink defaultInstance = new CMsgGCGetPartnerAccountLink().MakeReadOnly();
  private static readonly string[] _cMsgGCGetPartnerAccountLinkFieldNames = new string[] { "steamid" };
  private static readonly uint[] _cMsgGCGetPartnerAccountLinkFieldTags = new uint[] { 9 };
  public static CMsgGCGetPartnerAccountLink DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCGetPartnerAccountLink DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCGetPartnerAccountLink ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCGetPartnerAccountLink__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCGetPartnerAccountLink, CMsgGCGetPartnerAccountLink.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCGetPartnerAccountLink__FieldAccessorTable; }
  }
  
  public const int SteamidFieldNumber = 1;
  private bool hasSteamid;
  private ulong steamid_;
  public bool HasSteamid {
    get { return hasSteamid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Steamid {
    get { return steamid_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCGetPartnerAccountLinkFieldNames;
    if (hasSteamid) {
      output.WriteFixed64(1, field_names[0], Steamid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, Steamid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCGetPartnerAccountLink ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCGetPartnerAccountLink MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCGetPartnerAccountLink prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCGetPartnerAccountLink, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCGetPartnerAccountLink cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCGetPartnerAccountLink result;
    
    private CMsgGCGetPartnerAccountLink PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCGetPartnerAccountLink original = result;
        result = new CMsgGCGetPartnerAccountLink();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCGetPartnerAccountLink MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCGetPartnerAccountLink.Descriptor; }
    }
    
    public override CMsgGCGetPartnerAccountLink DefaultInstanceForType {
      get { return global::CMsgGCGetPartnerAccountLink.DefaultInstance; }
    }
    
    public override CMsgGCGetPartnerAccountLink BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCGetPartnerAccountLink) {
        return MergeFrom((CMsgGCGetPartnerAccountLink) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCGetPartnerAccountLink other) {
      if (other == global::CMsgGCGetPartnerAccountLink.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCGetPartnerAccountLinkFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCGetPartnerAccountLinkFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamid = input.ReadFixed64(ref result.steamid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamid {
      get { return result.hasSteamid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Steamid {
      get { return result.Steamid; }
      set { SetSteamid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamid(ulong value) {
      PrepareBuilder();
      result.hasSteamid = true;
      result.steamid_ = value;
      return this;
    }
    public Builder ClearSteamid() {
      PrepareBuilder();
      result.hasSteamid = false;
      result.steamid_ = 0;
      return this;
    }
  }
  static CMsgGCGetPartnerAccountLink() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCGetPartnerAccountLink_Response : pb::GeneratedMessage<CMsgGCGetPartnerAccountLink_Response, CMsgGCGetPartnerAccountLink_Response.Builder> {
  private CMsgGCGetPartnerAccountLink_Response() { }
  private static readonly CMsgGCGetPartnerAccountLink_Response defaultInstance = new CMsgGCGetPartnerAccountLink_Response().MakeReadOnly();
  private static readonly string[] _cMsgGCGetPartnerAccountLinkResponseFieldNames = new string[] { "nexonid", "pwid" };
  private static readonly uint[] _cMsgGCGetPartnerAccountLinkResponseFieldTags = new uint[] { 16, 8 };
  public static CMsgGCGetPartnerAccountLink_Response DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCGetPartnerAccountLink_Response DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCGetPartnerAccountLink_Response ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCGetPartnerAccountLink_Response__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCGetPartnerAccountLink_Response, CMsgGCGetPartnerAccountLink_Response.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCGetPartnerAccountLink_Response__FieldAccessorTable; }
  }
  
  public const int PwidFieldNumber = 1;
  private bool hasPwid;
  private uint pwid_;
  public bool HasPwid {
    get { return hasPwid; }
  }
  [global::System.CLSCompliant(false)]
  public uint Pwid {
    get { return pwid_; }
  }
  
  public const int NexonidFieldNumber = 2;
  private bool hasNexonid;
  private uint nexonid_;
  public bool HasNexonid {
    get { return hasNexonid; }
  }
  [global::System.CLSCompliant(false)]
  public uint Nexonid {
    get { return nexonid_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCGetPartnerAccountLinkResponseFieldNames;
    if (hasPwid) {
      output.WriteUInt32(1, field_names[1], Pwid);
    }
    if (hasNexonid) {
      output.WriteUInt32(2, field_names[0], Nexonid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPwid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Pwid);
      }
      if (hasNexonid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Nexonid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCGetPartnerAccountLink_Response ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink_Response ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink_Response ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink_Response ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink_Response ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCGetPartnerAccountLink_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCGetPartnerAccountLink_Response MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCGetPartnerAccountLink_Response prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCGetPartnerAccountLink_Response, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCGetPartnerAccountLink_Response cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCGetPartnerAccountLink_Response result;
    
    private CMsgGCGetPartnerAccountLink_Response PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCGetPartnerAccountLink_Response original = result;
        result = new CMsgGCGetPartnerAccountLink_Response();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCGetPartnerAccountLink_Response MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCGetPartnerAccountLink_Response.Descriptor; }
    }
    
    public override CMsgGCGetPartnerAccountLink_Response DefaultInstanceForType {
      get { return global::CMsgGCGetPartnerAccountLink_Response.DefaultInstance; }
    }
    
    public override CMsgGCGetPartnerAccountLink_Response BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCGetPartnerAccountLink_Response) {
        return MergeFrom((CMsgGCGetPartnerAccountLink_Response) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCGetPartnerAccountLink_Response other) {
      if (other == global::CMsgGCGetPartnerAccountLink_Response.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPwid) {
        Pwid = other.Pwid;
      }
      if (other.HasNexonid) {
        Nexonid = other.Nexonid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCGetPartnerAccountLinkResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCGetPartnerAccountLinkResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasPwid = input.ReadUInt32(ref result.pwid_);
            break;
          }
          case 16: {
            result.hasNexonid = input.ReadUInt32(ref result.nexonid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPwid {
      get { return result.hasPwid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Pwid {
      get { return result.Pwid; }
      set { SetPwid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPwid(uint value) {
      PrepareBuilder();
      result.hasPwid = true;
      result.pwid_ = value;
      return this;
    }
    public Builder ClearPwid() {
      PrepareBuilder();
      result.hasPwid = false;
      result.pwid_ = 0;
      return this;
    }
    
    public bool HasNexonid {
      get { return result.hasNexonid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Nexonid {
      get { return result.Nexonid; }
      set { SetNexonid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetNexonid(uint value) {
      PrepareBuilder();
      result.hasNexonid = true;
      result.nexonid_ = value;
      return this;
    }
    public Builder ClearNexonid() {
      PrepareBuilder();
      result.hasNexonid = false;
      result.nexonid_ = 0;
      return this;
    }
  }
  static CMsgGCGetPartnerAccountLink_Response() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCRoutingInfo : pb::GeneratedMessage<CMsgGCRoutingInfo, CMsgGCRoutingInfo.Builder> {
  private CMsgGCRoutingInfo() { }
  private static readonly CMsgGCRoutingInfo defaultInstance = new CMsgGCRoutingInfo().MakeReadOnly();
  private static readonly string[] _cMsgGCRoutingInfoFieldNames = new string[] { "dir_index", "fallback", "method", "protobuf_field", "webapi_param" };
  private static readonly uint[] _cMsgGCRoutingInfoFieldTags = new uint[] { 8, 24, 16, 32, 42 };
  public static CMsgGCRoutingInfo DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCRoutingInfo DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCRoutingInfo ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCRoutingInfo__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCRoutingInfo, CMsgGCRoutingInfo.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCRoutingInfo__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    public enum RoutingMethod {
      RANDOM = 0,
      DISCARD = 1,
      CLIENT_STEAMID = 2,
      PROTOBUF_FIELD_UINT64 = 3,
      WEBAPI_PARAM_UINT64 = 4,
    }
    
  }
  #endregion
  
  public const int DirIndexFieldNumber = 1;
  private pbc::PopsicleList<uint> dirIndex_ = new pbc::PopsicleList<uint>();
  [global::System.CLSCompliant(false)]
  public scg::IList<uint> DirIndexList {
    get { return pbc::Lists.AsReadOnly(dirIndex_); }
  }
  public int DirIndexCount {
    get { return dirIndex_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public uint GetDirIndex(int index) {
    return dirIndex_[index];
  }
  
  public const int MethodFieldNumber = 2;
  private bool hasMethod;
  private global::CMsgGCRoutingInfo.Types.RoutingMethod method_ = global::CMsgGCRoutingInfo.Types.RoutingMethod.RANDOM;
  public bool HasMethod {
    get { return hasMethod; }
  }
  public global::CMsgGCRoutingInfo.Types.RoutingMethod Method {
    get { return method_; }
  }
  
  public const int FallbackFieldNumber = 3;
  private bool hasFallback;
  private global::CMsgGCRoutingInfo.Types.RoutingMethod fallback_ = global::CMsgGCRoutingInfo.Types.RoutingMethod.DISCARD;
  public bool HasFallback {
    get { return hasFallback; }
  }
  public global::CMsgGCRoutingInfo.Types.RoutingMethod Fallback {
    get { return fallback_; }
  }
  
  public const int ProtobufFieldFieldNumber = 4;
  private bool hasProtobufField;
  private uint protobufField_;
  public bool HasProtobufField {
    get { return hasProtobufField; }
  }
  [global::System.CLSCompliant(false)]
  public uint ProtobufField {
    get { return protobufField_; }
  }
  
  public const int WebapiParamFieldNumber = 5;
  private bool hasWebapiParam;
  private string webapiParam_ = "";
  public bool HasWebapiParam {
    get { return hasWebapiParam; }
  }
  public string WebapiParam {
    get { return webapiParam_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCRoutingInfoFieldNames;
    if (dirIndex_.Count > 0) {
      output.WriteUInt32Array(1, field_names[0], dirIndex_);
    }
    if (hasMethod) {
      output.WriteEnum(2, field_names[2], (int) Method, Method);
    }
    if (hasFallback) {
      output.WriteEnum(3, field_names[1], (int) Fallback, Fallback);
    }
    if (hasProtobufField) {
      output.WriteUInt32(4, field_names[3], ProtobufField);
    }
    if (hasWebapiParam) {
      output.WriteString(5, field_names[4], WebapiParam);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        foreach (uint element in DirIndexList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * dirIndex_.Count;
      }
      if (hasMethod) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Method);
      }
      if (hasFallback) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Fallback);
      }
      if (hasProtobufField) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, ProtobufField);
      }
      if (hasWebapiParam) {
        size += pb::CodedOutputStream.ComputeStringSize(5, WebapiParam);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCRoutingInfo ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCRoutingInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRoutingInfo ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCRoutingInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRoutingInfo ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCRoutingInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRoutingInfo ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCRoutingInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCRoutingInfo ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCRoutingInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCRoutingInfo MakeReadOnly() {
    dirIndex_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCRoutingInfo prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCRoutingInfo, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCRoutingInfo cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCRoutingInfo result;
    
    private CMsgGCRoutingInfo PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCRoutingInfo original = result;
        result = new CMsgGCRoutingInfo();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCRoutingInfo MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCRoutingInfo.Descriptor; }
    }
    
    public override CMsgGCRoutingInfo DefaultInstanceForType {
      get { return global::CMsgGCRoutingInfo.DefaultInstance; }
    }
    
    public override CMsgGCRoutingInfo BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCRoutingInfo) {
        return MergeFrom((CMsgGCRoutingInfo) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCRoutingInfo other) {
      if (other == global::CMsgGCRoutingInfo.DefaultInstance) return this;
      PrepareBuilder();
      if (other.dirIndex_.Count != 0) {
        result.dirIndex_.Add(other.dirIndex_);
      }
      if (other.HasMethod) {
        Method = other.Method;
      }
      if (other.HasFallback) {
        Fallback = other.Fallback;
      }
      if (other.HasProtobufField) {
        ProtobufField = other.ProtobufField;
      }
      if (other.HasWebapiParam) {
        WebapiParam = other.WebapiParam;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCRoutingInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCRoutingInfoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10:
          case 8: {
            input.ReadUInt32Array(tag, field_name, result.dirIndex_);
            break;
          }
          case 16: {
            object unknown;
            if(input.ReadEnum(ref result.method_, out unknown)) {
              result.hasMethod = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(2, (ulong)(int)unknown);
            }
            break;
          }
          case 24: {
            object unknown;
            if(input.ReadEnum(ref result.fallback_, out unknown)) {
              result.hasFallback = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(3, (ulong)(int)unknown);
            }
            break;
          }
          case 32: {
            result.hasProtobufField = input.ReadUInt32(ref result.protobufField_);
            break;
          }
          case 42: {
            result.hasWebapiParam = input.ReadString(ref result.webapiParam_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<uint> DirIndexList {
      get { return PrepareBuilder().dirIndex_; }
    }
    public int DirIndexCount {
      get { return result.DirIndexCount; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetDirIndex(int index) {
      return result.GetDirIndex(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDirIndex(int index, uint value) {
      PrepareBuilder();
      result.dirIndex_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddDirIndex(uint value) {
      PrepareBuilder();
      result.dirIndex_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeDirIndex(scg::IEnumerable<uint> values) {
      PrepareBuilder();
      result.dirIndex_.Add(values);
      return this;
    }
    public Builder ClearDirIndex() {
      PrepareBuilder();
      result.dirIndex_.Clear();
      return this;
    }
    
    public bool HasMethod {
     get { return result.hasMethod; }
    }
    public global::CMsgGCRoutingInfo.Types.RoutingMethod Method {
      get { return result.Method; }
      set { SetMethod(value); }
    }
    public Builder SetMethod(global::CMsgGCRoutingInfo.Types.RoutingMethod value) {
      PrepareBuilder();
      result.hasMethod = true;
      result.method_ = value;
      return this;
    }
    public Builder ClearMethod() {
      PrepareBuilder();
      result.hasMethod = false;
      result.method_ = global::CMsgGCRoutingInfo.Types.RoutingMethod.RANDOM;
      return this;
    }
    
    public bool HasFallback {
     get { return result.hasFallback; }
    }
    public global::CMsgGCRoutingInfo.Types.RoutingMethod Fallback {
      get { return result.Fallback; }
      set { SetFallback(value); }
    }
    public Builder SetFallback(global::CMsgGCRoutingInfo.Types.RoutingMethod value) {
      PrepareBuilder();
      result.hasFallback = true;
      result.fallback_ = value;
      return this;
    }
    public Builder ClearFallback() {
      PrepareBuilder();
      result.hasFallback = false;
      result.fallback_ = global::CMsgGCRoutingInfo.Types.RoutingMethod.DISCARD;
      return this;
    }
    
    public bool HasProtobufField {
      get { return result.hasProtobufField; }
    }
    [global::System.CLSCompliant(false)]
    public uint ProtobufField {
      get { return result.ProtobufField; }
      set { SetProtobufField(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetProtobufField(uint value) {
      PrepareBuilder();
      result.hasProtobufField = true;
      result.protobufField_ = value;
      return this;
    }
    public Builder ClearProtobufField() {
      PrepareBuilder();
      result.hasProtobufField = false;
      result.protobufField_ = 0;
      return this;
    }
    
    public bool HasWebapiParam {
      get { return result.hasWebapiParam; }
    }
    public string WebapiParam {
      get { return result.WebapiParam; }
      set { SetWebapiParam(value); }
    }
    public Builder SetWebapiParam(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasWebapiParam = true;
      result.webapiParam_ = value;
      return this;
    }
    public Builder ClearWebapiParam() {
      PrepareBuilder();
      result.hasWebapiParam = false;
      result.webapiParam_ = "";
      return this;
    }
  }
  static CMsgGCRoutingInfo() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCMsgMasterSetWebAPIRouting : pb::GeneratedMessage<CMsgGCMsgMasterSetWebAPIRouting, CMsgGCMsgMasterSetWebAPIRouting.Builder> {
  private CMsgGCMsgMasterSetWebAPIRouting() { }
  private static readonly CMsgGCMsgMasterSetWebAPIRouting defaultInstance = new CMsgGCMsgMasterSetWebAPIRouting().MakeReadOnly();
  private static readonly string[] _cMsgGCMsgMasterSetWebAPIRoutingFieldNames = new string[] { "entries" };
  private static readonly uint[] _cMsgGCMsgMasterSetWebAPIRoutingFieldTags = new uint[] { 10 };
  public static CMsgGCMsgMasterSetWebAPIRouting DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCMsgMasterSetWebAPIRouting DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCMsgMasterSetWebAPIRouting ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetWebAPIRouting__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCMsgMasterSetWebAPIRouting, CMsgGCMsgMasterSetWebAPIRouting.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetWebAPIRouting__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Entry : pb::GeneratedMessage<Entry, Entry.Builder> {
      private Entry() { }
      private static readonly Entry defaultInstance = new Entry().MakeReadOnly();
      private static readonly string[] _entryFieldNames = new string[] { "interface_name", "method_name", "routing" };
      private static readonly uint[] _entryFieldTags = new uint[] { 10, 18, 26 };
      public static Entry DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Entry DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Entry ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetWebAPIRouting_Entry__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Entry, Entry.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetWebAPIRouting_Entry__FieldAccessorTable; }
      }
      
      public const int InterfaceNameFieldNumber = 1;
      private bool hasInterfaceName;
      private string interfaceName_ = "";
      public bool HasInterfaceName {
        get { return hasInterfaceName; }
      }
      public string InterfaceName {
        get { return interfaceName_; }
      }
      
      public const int MethodNameFieldNumber = 2;
      private bool hasMethodName;
      private string methodName_ = "";
      public bool HasMethodName {
        get { return hasMethodName; }
      }
      public string MethodName {
        get { return methodName_; }
      }
      
      public const int RoutingFieldNumber = 3;
      private bool hasRouting;
      private global::CMsgGCRoutingInfo routing_;
      public bool HasRouting {
        get { return hasRouting; }
      }
      public global::CMsgGCRoutingInfo Routing {
        get { return routing_ ?? global::CMsgGCRoutingInfo.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _entryFieldNames;
        if (hasInterfaceName) {
          output.WriteString(1, field_names[0], InterfaceName);
        }
        if (hasMethodName) {
          output.WriteString(2, field_names[1], MethodName);
        }
        if (hasRouting) {
          output.WriteMessage(3, field_names[2], Routing);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasInterfaceName) {
            size += pb::CodedOutputStream.ComputeStringSize(1, InterfaceName);
          }
          if (hasMethodName) {
            size += pb::CodedOutputStream.ComputeStringSize(2, MethodName);
          }
          if (hasRouting) {
            size += pb::CodedOutputStream.ComputeMessageSize(3, Routing);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static Entry ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Entry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Entry ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Entry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Entry ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Entry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Entry ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Entry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Entry ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Entry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Entry MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Entry prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Entry, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Entry cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Entry result;
        
        private Entry PrepareBuilder() {
          if (resultIsReadOnly) {
            Entry original = result;
            result = new Entry();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Entry MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry.Descriptor; }
        }
        
        public override Entry DefaultInstanceForType {
          get { return global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry.DefaultInstance; }
        }
        
        public override Entry BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Entry) {
            return MergeFrom((Entry) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Entry other) {
          if (other == global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasInterfaceName) {
            InterfaceName = other.InterfaceName;
          }
          if (other.HasMethodName) {
            MethodName = other.MethodName;
          }
          if (other.HasRouting) {
            MergeRouting(other.Routing);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_entryFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _entryFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasInterfaceName = input.ReadString(ref result.interfaceName_);
                break;
              }
              case 18: {
                result.hasMethodName = input.ReadString(ref result.methodName_);
                break;
              }
              case 26: {
                global::CMsgGCRoutingInfo.Builder subBuilder = global::CMsgGCRoutingInfo.CreateBuilder();
                if (result.hasRouting) {
                  subBuilder.MergeFrom(Routing);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Routing = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasInterfaceName {
          get { return result.hasInterfaceName; }
        }
        public string InterfaceName {
          get { return result.InterfaceName; }
          set { SetInterfaceName(value); }
        }
        public Builder SetInterfaceName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasInterfaceName = true;
          result.interfaceName_ = value;
          return this;
        }
        public Builder ClearInterfaceName() {
          PrepareBuilder();
          result.hasInterfaceName = false;
          result.interfaceName_ = "";
          return this;
        }
        
        public bool HasMethodName {
          get { return result.hasMethodName; }
        }
        public string MethodName {
          get { return result.MethodName; }
          set { SetMethodName(value); }
        }
        public Builder SetMethodName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasMethodName = true;
          result.methodName_ = value;
          return this;
        }
        public Builder ClearMethodName() {
          PrepareBuilder();
          result.hasMethodName = false;
          result.methodName_ = "";
          return this;
        }
        
        public bool HasRouting {
         get { return result.hasRouting; }
        }
        public global::CMsgGCRoutingInfo Routing {
          get { return result.Routing; }
          set { SetRouting(value); }
        }
        public Builder SetRouting(global::CMsgGCRoutingInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRouting = true;
          result.routing_ = value;
          return this;
        }
        public Builder SetRouting(global::CMsgGCRoutingInfo.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasRouting = true;
          result.routing_ = builderForValue.Build();
          return this;
        }
        public Builder MergeRouting(global::CMsgGCRoutingInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasRouting &&
              result.routing_ != global::CMsgGCRoutingInfo.DefaultInstance) {
              result.routing_ = global::CMsgGCRoutingInfo.CreateBuilder(result.routing_).MergeFrom(value).BuildPartial();
          } else {
            result.routing_ = value;
          }
          result.hasRouting = true;
          return this;
        }
        public Builder ClearRouting() {
          PrepareBuilder();
          result.hasRouting = false;
          result.routing_ = null;
          return this;
        }
      }
      static Entry() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int EntriesFieldNumber = 1;
  private pbc::PopsicleList<global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry> entries_ = new pbc::PopsicleList<global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry>();
  public scg::IList<global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry> EntriesList {
    get { return entries_; }
  }
  public int EntriesCount {
    get { return entries_.Count; }
  }
  public global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry GetEntries(int index) {
    return entries_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCMsgMasterSetWebAPIRoutingFieldNames;
    if (entries_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], entries_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry element in EntriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCMsgMasterSetWebAPIRouting ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCMsgMasterSetWebAPIRouting MakeReadOnly() {
    entries_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCMsgMasterSetWebAPIRouting prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCMsgMasterSetWebAPIRouting, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCMsgMasterSetWebAPIRouting cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCMsgMasterSetWebAPIRouting result;
    
    private CMsgGCMsgMasterSetWebAPIRouting PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCMsgMasterSetWebAPIRouting original = result;
        result = new CMsgGCMsgMasterSetWebAPIRouting();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCMsgMasterSetWebAPIRouting MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCMsgMasterSetWebAPIRouting.Descriptor; }
    }
    
    public override CMsgGCMsgMasterSetWebAPIRouting DefaultInstanceForType {
      get { return global::CMsgGCMsgMasterSetWebAPIRouting.DefaultInstance; }
    }
    
    public override CMsgGCMsgMasterSetWebAPIRouting BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCMsgMasterSetWebAPIRouting) {
        return MergeFrom((CMsgGCMsgMasterSetWebAPIRouting) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCMsgMasterSetWebAPIRouting other) {
      if (other == global::CMsgGCMsgMasterSetWebAPIRouting.DefaultInstance) return this;
      PrepareBuilder();
      if (other.entries_.Count != 0) {
        result.entries_.Add(other.entries_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCMsgMasterSetWebAPIRoutingFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCMsgMasterSetWebAPIRoutingFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.entries_, global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry> EntriesList {
      get { return PrepareBuilder().entries_; }
    }
    public int EntriesCount {
      get { return result.EntriesCount; }
    }
    public global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry GetEntries(int index) {
      return result.GetEntries(index);
    }
    public Builder SetEntries(int index, global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.entries_[index] = value;
      return this;
    }
    public Builder SetEntries(int index, global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.entries_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddEntries(global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.entries_.Add(value);
      return this;
    }
    public Builder AddEntries(global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.entries_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeEntries(scg::IEnumerable<global::CMsgGCMsgMasterSetWebAPIRouting.Types.Entry> values) {
      PrepareBuilder();
      result.entries_.Add(values);
      return this;
    }
    public Builder ClearEntries() {
      PrepareBuilder();
      result.entries_.Clear();
      return this;
    }
  }
  static CMsgGCMsgMasterSetWebAPIRouting() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCMsgMasterSetClientMsgRouting : pb::GeneratedMessage<CMsgGCMsgMasterSetClientMsgRouting, CMsgGCMsgMasterSetClientMsgRouting.Builder> {
  private CMsgGCMsgMasterSetClientMsgRouting() { }
  private static readonly CMsgGCMsgMasterSetClientMsgRouting defaultInstance = new CMsgGCMsgMasterSetClientMsgRouting().MakeReadOnly();
  private static readonly string[] _cMsgGCMsgMasterSetClientMsgRoutingFieldNames = new string[] { "entries" };
  private static readonly uint[] _cMsgGCMsgMasterSetClientMsgRoutingFieldTags = new uint[] { 10 };
  public static CMsgGCMsgMasterSetClientMsgRouting DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCMsgMasterSetClientMsgRouting DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCMsgMasterSetClientMsgRouting ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetClientMsgRouting__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCMsgMasterSetClientMsgRouting, CMsgGCMsgMasterSetClientMsgRouting.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetClientMsgRouting__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Entry : pb::GeneratedMessage<Entry, Entry.Builder> {
      private Entry() { }
      private static readonly Entry defaultInstance = new Entry().MakeReadOnly();
      private static readonly string[] _entryFieldNames = new string[] { "msg_type", "routing" };
      private static readonly uint[] _entryFieldTags = new uint[] { 8, 18 };
      public static Entry DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Entry DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Entry ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetClientMsgRouting_Entry__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Entry, Entry.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetClientMsgRouting_Entry__FieldAccessorTable; }
      }
      
      public const int MsgTypeFieldNumber = 1;
      private bool hasMsgType;
      private uint msgType_;
      public bool HasMsgType {
        get { return hasMsgType; }
      }
      [global::System.CLSCompliant(false)]
      public uint MsgType {
        get { return msgType_; }
      }
      
      public const int RoutingFieldNumber = 2;
      private bool hasRouting;
      private global::CMsgGCRoutingInfo routing_;
      public bool HasRouting {
        get { return hasRouting; }
      }
      public global::CMsgGCRoutingInfo Routing {
        get { return routing_ ?? global::CMsgGCRoutingInfo.DefaultInstance; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _entryFieldNames;
        if (hasMsgType) {
          output.WriteUInt32(1, field_names[0], MsgType);
        }
        if (hasRouting) {
          output.WriteMessage(2, field_names[1], Routing);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasMsgType) {
            size += pb::CodedOutputStream.ComputeUInt32Size(1, MsgType);
          }
          if (hasRouting) {
            size += pb::CodedOutputStream.ComputeMessageSize(2, Routing);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static Entry ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Entry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Entry ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Entry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Entry ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Entry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Entry ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Entry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Entry ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Entry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Entry MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Entry prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Entry, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Entry cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Entry result;
        
        private Entry PrepareBuilder() {
          if (resultIsReadOnly) {
            Entry original = result;
            result = new Entry();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Entry MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry.Descriptor; }
        }
        
        public override Entry DefaultInstanceForType {
          get { return global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry.DefaultInstance; }
        }
        
        public override Entry BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Entry) {
            return MergeFrom((Entry) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Entry other) {
          if (other == global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasMsgType) {
            MsgType = other.MsgType;
          }
          if (other.HasRouting) {
            MergeRouting(other.Routing);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_entryFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _entryFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasMsgType = input.ReadUInt32(ref result.msgType_);
                break;
              }
              case 18: {
                global::CMsgGCRoutingInfo.Builder subBuilder = global::CMsgGCRoutingInfo.CreateBuilder();
                if (result.hasRouting) {
                  subBuilder.MergeFrom(Routing);
                }
                input.ReadMessage(subBuilder, extensionRegistry);
                Routing = subBuilder.BuildPartial();
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasMsgType {
          get { return result.hasMsgType; }
        }
        [global::System.CLSCompliant(false)]
        public uint MsgType {
          get { return result.MsgType; }
          set { SetMsgType(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetMsgType(uint value) {
          PrepareBuilder();
          result.hasMsgType = true;
          result.msgType_ = value;
          return this;
        }
        public Builder ClearMsgType() {
          PrepareBuilder();
          result.hasMsgType = false;
          result.msgType_ = 0;
          return this;
        }
        
        public bool HasRouting {
         get { return result.hasRouting; }
        }
        public global::CMsgGCRoutingInfo Routing {
          get { return result.Routing; }
          set { SetRouting(value); }
        }
        public Builder SetRouting(global::CMsgGCRoutingInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasRouting = true;
          result.routing_ = value;
          return this;
        }
        public Builder SetRouting(global::CMsgGCRoutingInfo.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.hasRouting = true;
          result.routing_ = builderForValue.Build();
          return this;
        }
        public Builder MergeRouting(global::CMsgGCRoutingInfo value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          if (result.hasRouting &&
              result.routing_ != global::CMsgGCRoutingInfo.DefaultInstance) {
              result.routing_ = global::CMsgGCRoutingInfo.CreateBuilder(result.routing_).MergeFrom(value).BuildPartial();
          } else {
            result.routing_ = value;
          }
          result.hasRouting = true;
          return this;
        }
        public Builder ClearRouting() {
          PrepareBuilder();
          result.hasRouting = false;
          result.routing_ = null;
          return this;
        }
      }
      static Entry() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int EntriesFieldNumber = 1;
  private pbc::PopsicleList<global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry> entries_ = new pbc::PopsicleList<global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry>();
  public scg::IList<global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry> EntriesList {
    get { return entries_; }
  }
  public int EntriesCount {
    get { return entries_.Count; }
  }
  public global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry GetEntries(int index) {
    return entries_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCMsgMasterSetClientMsgRoutingFieldNames;
    if (entries_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], entries_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry element in EntriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCMsgMasterSetClientMsgRouting ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCMsgMasterSetClientMsgRouting MakeReadOnly() {
    entries_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCMsgMasterSetClientMsgRouting prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCMsgMasterSetClientMsgRouting, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCMsgMasterSetClientMsgRouting cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCMsgMasterSetClientMsgRouting result;
    
    private CMsgGCMsgMasterSetClientMsgRouting PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCMsgMasterSetClientMsgRouting original = result;
        result = new CMsgGCMsgMasterSetClientMsgRouting();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCMsgMasterSetClientMsgRouting MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCMsgMasterSetClientMsgRouting.Descriptor; }
    }
    
    public override CMsgGCMsgMasterSetClientMsgRouting DefaultInstanceForType {
      get { return global::CMsgGCMsgMasterSetClientMsgRouting.DefaultInstance; }
    }
    
    public override CMsgGCMsgMasterSetClientMsgRouting BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCMsgMasterSetClientMsgRouting) {
        return MergeFrom((CMsgGCMsgMasterSetClientMsgRouting) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCMsgMasterSetClientMsgRouting other) {
      if (other == global::CMsgGCMsgMasterSetClientMsgRouting.DefaultInstance) return this;
      PrepareBuilder();
      if (other.entries_.Count != 0) {
        result.entries_.Add(other.entries_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCMsgMasterSetClientMsgRoutingFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCMsgMasterSetClientMsgRoutingFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.entries_, global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry> EntriesList {
      get { return PrepareBuilder().entries_; }
    }
    public int EntriesCount {
      get { return result.EntriesCount; }
    }
    public global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry GetEntries(int index) {
      return result.GetEntries(index);
    }
    public Builder SetEntries(int index, global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.entries_[index] = value;
      return this;
    }
    public Builder SetEntries(int index, global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.entries_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddEntries(global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.entries_.Add(value);
      return this;
    }
    public Builder AddEntries(global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.entries_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeEntries(scg::IEnumerable<global::CMsgGCMsgMasterSetClientMsgRouting.Types.Entry> values) {
      PrepareBuilder();
      result.entries_.Add(values);
      return this;
    }
    public Builder ClearEntries() {
      PrepareBuilder();
      result.entries_.Clear();
      return this;
    }
  }
  static CMsgGCMsgMasterSetClientMsgRouting() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCMsgMasterSetWebAPIRouting_Response : pb::GeneratedMessage<CMsgGCMsgMasterSetWebAPIRouting_Response, CMsgGCMsgMasterSetWebAPIRouting_Response.Builder> {
  private CMsgGCMsgMasterSetWebAPIRouting_Response() { }
  private static readonly CMsgGCMsgMasterSetWebAPIRouting_Response defaultInstance = new CMsgGCMsgMasterSetWebAPIRouting_Response().MakeReadOnly();
  private static readonly string[] _cMsgGCMsgMasterSetWebAPIRoutingResponseFieldNames = new string[] { "eresult" };
  private static readonly uint[] _cMsgGCMsgMasterSetWebAPIRoutingResponseFieldTags = new uint[] { 8 };
  public static CMsgGCMsgMasterSetWebAPIRouting_Response DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCMsgMasterSetWebAPIRouting_Response DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCMsgMasterSetWebAPIRouting_Response ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetWebAPIRouting_Response__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCMsgMasterSetWebAPIRouting_Response, CMsgGCMsgMasterSetWebAPIRouting_Response.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetWebAPIRouting_Response__FieldAccessorTable; }
  }
  
  public const int EresultFieldNumber = 1;
  private bool hasEresult;
  private int eresult_ = 2;
  public bool HasEresult {
    get { return hasEresult; }
  }
  public int Eresult {
    get { return eresult_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCMsgMasterSetWebAPIRoutingResponseFieldNames;
    if (hasEresult) {
      output.WriteInt32(1, field_names[0], Eresult);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEresult) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Eresult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCMsgMasterSetWebAPIRouting_Response ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting_Response ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting_Response ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting_Response ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting_Response ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetWebAPIRouting_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCMsgMasterSetWebAPIRouting_Response MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCMsgMasterSetWebAPIRouting_Response prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCMsgMasterSetWebAPIRouting_Response, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCMsgMasterSetWebAPIRouting_Response cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCMsgMasterSetWebAPIRouting_Response result;
    
    private CMsgGCMsgMasterSetWebAPIRouting_Response PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCMsgMasterSetWebAPIRouting_Response original = result;
        result = new CMsgGCMsgMasterSetWebAPIRouting_Response();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCMsgMasterSetWebAPIRouting_Response MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCMsgMasterSetWebAPIRouting_Response.Descriptor; }
    }
    
    public override CMsgGCMsgMasterSetWebAPIRouting_Response DefaultInstanceForType {
      get { return global::CMsgGCMsgMasterSetWebAPIRouting_Response.DefaultInstance; }
    }
    
    public override CMsgGCMsgMasterSetWebAPIRouting_Response BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCMsgMasterSetWebAPIRouting_Response) {
        return MergeFrom((CMsgGCMsgMasterSetWebAPIRouting_Response) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCMsgMasterSetWebAPIRouting_Response other) {
      if (other == global::CMsgGCMsgMasterSetWebAPIRouting_Response.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCMsgMasterSetWebAPIRoutingResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCMsgMasterSetWebAPIRoutingResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEresult = input.ReadInt32(ref result.eresult_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEresult {
      get { return result.hasEresult; }
    }
    public int Eresult {
      get { return result.Eresult; }
      set { SetEresult(value); }
    }
    public Builder SetEresult(int value) {
      PrepareBuilder();
      result.hasEresult = true;
      result.eresult_ = value;
      return this;
    }
    public Builder ClearEresult() {
      PrepareBuilder();
      result.hasEresult = false;
      result.eresult_ = 2;
      return this;
    }
  }
  static CMsgGCMsgMasterSetWebAPIRouting_Response() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCMsgMasterSetClientMsgRouting_Response : pb::GeneratedMessage<CMsgGCMsgMasterSetClientMsgRouting_Response, CMsgGCMsgMasterSetClientMsgRouting_Response.Builder> {
  private CMsgGCMsgMasterSetClientMsgRouting_Response() { }
  private static readonly CMsgGCMsgMasterSetClientMsgRouting_Response defaultInstance = new CMsgGCMsgMasterSetClientMsgRouting_Response().MakeReadOnly();
  private static readonly string[] _cMsgGCMsgMasterSetClientMsgRoutingResponseFieldNames = new string[] { "eresult" };
  private static readonly uint[] _cMsgGCMsgMasterSetClientMsgRoutingResponseFieldTags = new uint[] { 8 };
  public static CMsgGCMsgMasterSetClientMsgRouting_Response DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCMsgMasterSetClientMsgRouting_Response DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCMsgMasterSetClientMsgRouting_Response ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetClientMsgRouting_Response__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCMsgMasterSetClientMsgRouting_Response, CMsgGCMsgMasterSetClientMsgRouting_Response.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCMsgMasterSetClientMsgRouting_Response__FieldAccessorTable; }
  }
  
  public const int EresultFieldNumber = 1;
  private bool hasEresult;
  private int eresult_ = 2;
  public bool HasEresult {
    get { return hasEresult; }
  }
  public int Eresult {
    get { return eresult_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCMsgMasterSetClientMsgRoutingResponseFieldNames;
    if (hasEresult) {
      output.WriteInt32(1, field_names[0], Eresult);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEresult) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Eresult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCMsgMasterSetClientMsgRouting_Response ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting_Response ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting_Response ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting_Response ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting_Response ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgMasterSetClientMsgRouting_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCMsgMasterSetClientMsgRouting_Response MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCMsgMasterSetClientMsgRouting_Response prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCMsgMasterSetClientMsgRouting_Response, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCMsgMasterSetClientMsgRouting_Response cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCMsgMasterSetClientMsgRouting_Response result;
    
    private CMsgGCMsgMasterSetClientMsgRouting_Response PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCMsgMasterSetClientMsgRouting_Response original = result;
        result = new CMsgGCMsgMasterSetClientMsgRouting_Response();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCMsgMasterSetClientMsgRouting_Response MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCMsgMasterSetClientMsgRouting_Response.Descriptor; }
    }
    
    public override CMsgGCMsgMasterSetClientMsgRouting_Response DefaultInstanceForType {
      get { return global::CMsgGCMsgMasterSetClientMsgRouting_Response.DefaultInstance; }
    }
    
    public override CMsgGCMsgMasterSetClientMsgRouting_Response BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCMsgMasterSetClientMsgRouting_Response) {
        return MergeFrom((CMsgGCMsgMasterSetClientMsgRouting_Response) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCMsgMasterSetClientMsgRouting_Response other) {
      if (other == global::CMsgGCMsgMasterSetClientMsgRouting_Response.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCMsgMasterSetClientMsgRoutingResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCMsgMasterSetClientMsgRoutingResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEresult = input.ReadInt32(ref result.eresult_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEresult {
      get { return result.hasEresult; }
    }
    public int Eresult {
      get { return result.Eresult; }
      set { SetEresult(value); }
    }
    public Builder SetEresult(int value) {
      PrepareBuilder();
      result.hasEresult = true;
      result.eresult_ = value;
      return this;
    }
    public Builder ClearEresult() {
      PrepareBuilder();
      result.hasEresult = false;
      result.eresult_ = 2;
      return this;
    }
  }
  static CMsgGCMsgMasterSetClientMsgRouting_Response() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCMsgSetOptions : pb::GeneratedMessage<CMsgGCMsgSetOptions, CMsgGCMsgSetOptions.Builder> {
  private CMsgGCMsgSetOptions() { }
  private static readonly CMsgGCMsgSetOptions defaultInstance = new CMsgGCMsgSetOptions().MakeReadOnly();
  private static readonly string[] _cMsgGCMsgSetOptionsFieldNames = new string[] { "client_msg_ranges", "options" };
  private static readonly uint[] _cMsgGCMsgSetOptionsFieldTags = new uint[] { 18, 8 };
  public static CMsgGCMsgSetOptions DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCMsgSetOptions DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCMsgSetOptions ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCMsgSetOptions__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCMsgSetOptions, CMsgGCMsgSetOptions.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCMsgSetOptions__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    public enum Option {
      NOTIFY_USER_SESSIONS = 0,
      NOTIFY_SERVER_SESSIONS = 1,
      NOTIFY_ACHIEVEMENTS = 2,
      NOTIFY_VAC_ACTION = 3,
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class MessageRange : pb::GeneratedMessage<MessageRange, MessageRange.Builder> {
      private MessageRange() { }
      private static readonly MessageRange defaultInstance = new MessageRange().MakeReadOnly();
      private static readonly string[] _messageRangeFieldNames = new string[] { "high", "low" };
      private static readonly uint[] _messageRangeFieldTags = new uint[] { 16, 8 };
      public static MessageRange DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override MessageRange DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override MessageRange ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgGCMsgSetOptions_MessageRange__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<MessageRange, MessageRange.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgGCMsgSetOptions_MessageRange__FieldAccessorTable; }
      }
      
      public const int LowFieldNumber = 1;
      private bool hasLow;
      private uint low_;
      public bool HasLow {
        get { return hasLow; }
      }
      [global::System.CLSCompliant(false)]
      public uint Low {
        get { return low_; }
      }
      
      public const int HighFieldNumber = 2;
      private bool hasHigh;
      private uint high_;
      public bool HasHigh {
        get { return hasHigh; }
      }
      [global::System.CLSCompliant(false)]
      public uint High {
        get { return high_; }
      }
      
      public override bool IsInitialized {
        get {
          if (!hasLow) return false;
          if (!hasHigh) return false;
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _messageRangeFieldNames;
        if (hasLow) {
          output.WriteUInt32(1, field_names[1], Low);
        }
        if (hasHigh) {
          output.WriteUInt32(2, field_names[0], High);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasLow) {
            size += pb::CodedOutputStream.ComputeUInt32Size(1, Low);
          }
          if (hasHigh) {
            size += pb::CodedOutputStream.ComputeUInt32Size(2, High);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static MessageRange ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static MessageRange ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static MessageRange ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static MessageRange ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static MessageRange ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static MessageRange ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static MessageRange ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static MessageRange ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static MessageRange ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static MessageRange ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private MessageRange MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(MessageRange prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<MessageRange, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(MessageRange cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private MessageRange result;
        
        private MessageRange PrepareBuilder() {
          if (resultIsReadOnly) {
            MessageRange original = result;
            result = new MessageRange();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override MessageRange MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgGCMsgSetOptions.Types.MessageRange.Descriptor; }
        }
        
        public override MessageRange DefaultInstanceForType {
          get { return global::CMsgGCMsgSetOptions.Types.MessageRange.DefaultInstance; }
        }
        
        public override MessageRange BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is MessageRange) {
            return MergeFrom((MessageRange) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(MessageRange other) {
          if (other == global::CMsgGCMsgSetOptions.Types.MessageRange.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasLow) {
            Low = other.Low;
          }
          if (other.HasHigh) {
            High = other.High;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_messageRangeFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _messageRangeFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasLow = input.ReadUInt32(ref result.low_);
                break;
              }
              case 16: {
                result.hasHigh = input.ReadUInt32(ref result.high_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasLow {
          get { return result.hasLow; }
        }
        [global::System.CLSCompliant(false)]
        public uint Low {
          get { return result.Low; }
          set { SetLow(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetLow(uint value) {
          PrepareBuilder();
          result.hasLow = true;
          result.low_ = value;
          return this;
        }
        public Builder ClearLow() {
          PrepareBuilder();
          result.hasLow = false;
          result.low_ = 0;
          return this;
        }
        
        public bool HasHigh {
          get { return result.hasHigh; }
        }
        [global::System.CLSCompliant(false)]
        public uint High {
          get { return result.High; }
          set { SetHigh(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetHigh(uint value) {
          PrepareBuilder();
          result.hasHigh = true;
          result.high_ = value;
          return this;
        }
        public Builder ClearHigh() {
          PrepareBuilder();
          result.hasHigh = false;
          result.high_ = 0;
          return this;
        }
      }
      static MessageRange() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int OptionsFieldNumber = 1;
  private pbc::PopsicleList<global::CMsgGCMsgSetOptions.Types.Option> options_ = new pbc::PopsicleList<global::CMsgGCMsgSetOptions.Types.Option>();
  public scg::IList<global::CMsgGCMsgSetOptions.Types.Option> OptionsList {
    get { return pbc::Lists.AsReadOnly(options_); }
  }
  public int OptionsCount {
    get { return options_.Count; }
  }
  public global::CMsgGCMsgSetOptions.Types.Option GetOptions(int index) {
    return options_[index];
  }
  
  public const int ClientMsgRangesFieldNumber = 2;
  private pbc::PopsicleList<global::CMsgGCMsgSetOptions.Types.MessageRange> clientMsgRanges_ = new pbc::PopsicleList<global::CMsgGCMsgSetOptions.Types.MessageRange>();
  public scg::IList<global::CMsgGCMsgSetOptions.Types.MessageRange> ClientMsgRangesList {
    get { return clientMsgRanges_; }
  }
  public int ClientMsgRangesCount {
    get { return clientMsgRanges_.Count; }
  }
  public global::CMsgGCMsgSetOptions.Types.MessageRange GetClientMsgRanges(int index) {
    return clientMsgRanges_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::CMsgGCMsgSetOptions.Types.MessageRange element in ClientMsgRangesList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCMsgSetOptionsFieldNames;
    if (options_.Count > 0) {
      output.WriteEnumArray(1, field_names[1], options_);
    }
    if (clientMsgRanges_.Count > 0) {
      output.WriteMessageArray(2, field_names[0], clientMsgRanges_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        if (options_.Count > 0) {
          foreach (global::CMsgGCMsgSetOptions.Types.Option element in options_) {
            dataSize += pb::CodedOutputStream.ComputeEnumSizeNoTag((int) element);
          }
          size += dataSize;
          size += 1 * options_.Count;
        }
      }
      foreach (global::CMsgGCMsgSetOptions.Types.MessageRange element in ClientMsgRangesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCMsgSetOptions ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgSetOptions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgSetOptions ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMsgSetOptions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgSetOptions ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgSetOptions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMsgSetOptions ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCMsgSetOptions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCMsgSetOptions ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMsgSetOptions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCMsgSetOptions MakeReadOnly() {
    options_.MakeReadOnly();
    clientMsgRanges_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCMsgSetOptions prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCMsgSetOptions, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCMsgSetOptions cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCMsgSetOptions result;
    
    private CMsgGCMsgSetOptions PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCMsgSetOptions original = result;
        result = new CMsgGCMsgSetOptions();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCMsgSetOptions MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCMsgSetOptions.Descriptor; }
    }
    
    public override CMsgGCMsgSetOptions DefaultInstanceForType {
      get { return global::CMsgGCMsgSetOptions.DefaultInstance; }
    }
    
    public override CMsgGCMsgSetOptions BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCMsgSetOptions) {
        return MergeFrom((CMsgGCMsgSetOptions) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCMsgSetOptions other) {
      if (other == global::CMsgGCMsgSetOptions.DefaultInstance) return this;
      PrepareBuilder();
      if (other.options_.Count != 0) {
        result.options_.Add(other.options_);
      }
      if (other.clientMsgRanges_.Count != 0) {
        result.clientMsgRanges_.Add(other.clientMsgRanges_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCMsgSetOptionsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCMsgSetOptionsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10:
          case 8: {
            scg::ICollection<object> unknownItems;
            input.ReadEnumArray<global::CMsgGCMsgSetOptions.Types.Option>(tag, field_name, result.options_, out unknownItems);
            if (unknownItems != null) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              foreach (object rawValue in unknownItems)
                if (rawValue is int)
                  unknownFields.MergeVarintField(1, (ulong)(int)rawValue);
            }
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.clientMsgRanges_, global::CMsgGCMsgSetOptions.Types.MessageRange.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CMsgGCMsgSetOptions.Types.Option> OptionsList {
      get { return PrepareBuilder().options_; }
    }
    public int OptionsCount {
      get { return result.OptionsCount; }
    }
    public global::CMsgGCMsgSetOptions.Types.Option GetOptions(int index) {
      return result.GetOptions(index);
    }
    public Builder SetOptions(int index, global::CMsgGCMsgSetOptions.Types.Option value) {
      PrepareBuilder();
      result.options_[index] = value;
      return this;
    }
    public Builder AddOptions(global::CMsgGCMsgSetOptions.Types.Option value) {
      PrepareBuilder();
      result.options_.Add(value);
      return this;
    }
    public Builder AddRangeOptions(scg::IEnumerable<global::CMsgGCMsgSetOptions.Types.Option> values) {
      PrepareBuilder();
      result.options_.Add(values);
      return this;
    }
    public Builder ClearOptions() {
      PrepareBuilder();
      result.options_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgGCMsgSetOptions.Types.MessageRange> ClientMsgRangesList {
      get { return PrepareBuilder().clientMsgRanges_; }
    }
    public int ClientMsgRangesCount {
      get { return result.ClientMsgRangesCount; }
    }
    public global::CMsgGCMsgSetOptions.Types.MessageRange GetClientMsgRanges(int index) {
      return result.GetClientMsgRanges(index);
    }
    public Builder SetClientMsgRanges(int index, global::CMsgGCMsgSetOptions.Types.MessageRange value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.clientMsgRanges_[index] = value;
      return this;
    }
    public Builder SetClientMsgRanges(int index, global::CMsgGCMsgSetOptions.Types.MessageRange.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.clientMsgRanges_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddClientMsgRanges(global::CMsgGCMsgSetOptions.Types.MessageRange value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.clientMsgRanges_.Add(value);
      return this;
    }
    public Builder AddClientMsgRanges(global::CMsgGCMsgSetOptions.Types.MessageRange.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.clientMsgRanges_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeClientMsgRanges(scg::IEnumerable<global::CMsgGCMsgSetOptions.Types.MessageRange> values) {
      PrepareBuilder();
      result.clientMsgRanges_.Add(values);
      return this;
    }
    public Builder ClearClientMsgRanges() {
      PrepareBuilder();
      result.clientMsgRanges_.Clear();
      return this;
    }
  }
  static CMsgGCMsgSetOptions() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCHUpdateSession : pb::GeneratedMessage<CMsgGCHUpdateSession, CMsgGCHUpdateSession.Builder> {
  private CMsgGCHUpdateSession() { }
  private static readonly CMsgGCHUpdateSession defaultInstance = new CMsgGCHUpdateSession().MakeReadOnly();
  private static readonly string[] _cMsgGCHUpdateSessionFieldNames = new string[] { "app_id", "client_addr", "extra_fields", "online", "os_type", "server_addr", "server_port", "server_steam_id", "steam_id" };
  private static readonly uint[] _cMsgGCHUpdateSessionFieldTags = new uint[] { 16, 64, 74, 24, 56, 40, 48, 33, 9 };
  public static CMsgGCHUpdateSession DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCHUpdateSession DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCHUpdateSession ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgGCHUpdateSession__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCHUpdateSession, CMsgGCHUpdateSession.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgGCHUpdateSession__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ExtraField : pb::GeneratedMessage<ExtraField, ExtraField.Builder> {
      private ExtraField() { }
      private static readonly ExtraField defaultInstance = new ExtraField().MakeReadOnly();
      private static readonly string[] _extraFieldFieldNames = new string[] { "name", "value" };
      private static readonly uint[] _extraFieldFieldTags = new uint[] { 10, 18 };
      public static ExtraField DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override ExtraField DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override ExtraField ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgGCHUpdateSession_ExtraField__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<ExtraField, ExtraField.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgGCHUpdateSession_ExtraField__FieldAccessorTable; }
      }
      
      public const int NameFieldNumber = 1;
      private bool hasName;
      private string name_ = "";
      public bool HasName {
        get { return hasName; }
      }
      public string Name {
        get { return name_; }
      }
      
      public const int ValueFieldNumber = 2;
      private bool hasValue;
      private string value_ = "";
      public bool HasValue {
        get { return hasValue; }
      }
      public string Value {
        get { return value_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _extraFieldFieldNames;
        if (hasName) {
          output.WriteString(1, field_names[0], Name);
        }
        if (hasValue) {
          output.WriteString(2, field_names[1], Value);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasName) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Name);
          }
          if (hasValue) {
            size += pb::CodedOutputStream.ComputeStringSize(2, Value);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static ExtraField ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ExtraField ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ExtraField ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ExtraField ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ExtraField ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ExtraField ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static ExtraField ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static ExtraField ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static ExtraField ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ExtraField ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private ExtraField MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(ExtraField prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<ExtraField, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(ExtraField cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private ExtraField result;
        
        private ExtraField PrepareBuilder() {
          if (resultIsReadOnly) {
            ExtraField original = result;
            result = new ExtraField();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override ExtraField MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgGCHUpdateSession.Types.ExtraField.Descriptor; }
        }
        
        public override ExtraField DefaultInstanceForType {
          get { return global::CMsgGCHUpdateSession.Types.ExtraField.DefaultInstance; }
        }
        
        public override ExtraField BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is ExtraField) {
            return MergeFrom((ExtraField) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(ExtraField other) {
          if (other == global::CMsgGCHUpdateSession.Types.ExtraField.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasName) {
            Name = other.Name;
          }
          if (other.HasValue) {
            Value = other.Value;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_extraFieldFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _extraFieldFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasName = input.ReadString(ref result.name_);
                break;
              }
              case 18: {
                result.hasValue = input.ReadString(ref result.value_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasName {
          get { return result.hasName; }
        }
        public string Name {
          get { return result.Name; }
          set { SetName(value); }
        }
        public Builder SetName(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder ClearName() {
          PrepareBuilder();
          result.hasName = false;
          result.name_ = "";
          return this;
        }
        
        public bool HasValue {
          get { return result.hasValue; }
        }
        public string Value {
          get { return result.Value; }
          set { SetValue(value); }
        }
        public Builder SetValue(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasValue = true;
          result.value_ = value;
          return this;
        }
        public Builder ClearValue() {
          PrepareBuilder();
          result.hasValue = false;
          result.value_ = "";
          return this;
        }
      }
      static ExtraField() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int SteamIdFieldNumber = 1;
  private bool hasSteamId;
  private ulong steamId_;
  public bool HasSteamId {
    get { return hasSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamId {
    get { return steamId_; }
  }
  
  public const int AppIdFieldNumber = 2;
  private bool hasAppId;
  private uint appId_;
  public bool HasAppId {
    get { return hasAppId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AppId {
    get { return appId_; }
  }
  
  public const int OnlineFieldNumber = 3;
  private bool hasOnline;
  private bool online_;
  public bool HasOnline {
    get { return hasOnline; }
  }
  public bool Online {
    get { return online_; }
  }
  
  public const int ServerSteamIdFieldNumber = 4;
  private bool hasServerSteamId;
  private ulong serverSteamId_;
  public bool HasServerSteamId {
    get { return hasServerSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ServerSteamId {
    get { return serverSteamId_; }
  }
  
  public const int ServerAddrFieldNumber = 5;
  private bool hasServerAddr;
  private uint serverAddr_;
  public bool HasServerAddr {
    get { return hasServerAddr; }
  }
  [global::System.CLSCompliant(false)]
  public uint ServerAddr {
    get { return serverAddr_; }
  }
  
  public const int ServerPortFieldNumber = 6;
  private bool hasServerPort;
  private uint serverPort_;
  public bool HasServerPort {
    get { return hasServerPort; }
  }
  [global::System.CLSCompliant(false)]
  public uint ServerPort {
    get { return serverPort_; }
  }
  
  public const int OsTypeFieldNumber = 7;
  private bool hasOsType;
  private uint osType_;
  public bool HasOsType {
    get { return hasOsType; }
  }
  [global::System.CLSCompliant(false)]
  public uint OsType {
    get { return osType_; }
  }
  
  public const int ClientAddrFieldNumber = 8;
  private bool hasClientAddr;
  private uint clientAddr_;
  public bool HasClientAddr {
    get { return hasClientAddr; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClientAddr {
    get { return clientAddr_; }
  }
  
  public const int ExtraFieldsFieldNumber = 9;
  private pbc::PopsicleList<global::CMsgGCHUpdateSession.Types.ExtraField> extraFields_ = new pbc::PopsicleList<global::CMsgGCHUpdateSession.Types.ExtraField>();
  public scg::IList<global::CMsgGCHUpdateSession.Types.ExtraField> ExtraFieldsList {
    get { return extraFields_; }
  }
  public int ExtraFieldsCount {
    get { return extraFields_.Count; }
  }
  public global::CMsgGCHUpdateSession.Types.ExtraField GetExtraFields(int index) {
    return extraFields_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCHUpdateSessionFieldNames;
    if (hasSteamId) {
      output.WriteFixed64(1, field_names[8], SteamId);
    }
    if (hasAppId) {
      output.WriteUInt32(2, field_names[0], AppId);
    }
    if (hasOnline) {
      output.WriteBool(3, field_names[3], Online);
    }
    if (hasServerSteamId) {
      output.WriteFixed64(4, field_names[7], ServerSteamId);
    }
    if (hasServerAddr) {
      output.WriteUInt32(5, field_names[5], ServerAddr);
    }
    if (hasServerPort) {
      output.WriteUInt32(6, field_names[6], ServerPort);
    }
    if (hasOsType) {
      output.WriteUInt32(7, field_names[4], OsType);
    }
    if (hasClientAddr) {
      output.WriteUInt32(8, field_names[1], ClientAddr);
    }
    if (extraFields_.Count > 0) {
      output.WriteMessageArray(9, field_names[2], extraFields_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, SteamId);
      }
      if (hasAppId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, AppId);
      }
      if (hasOnline) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, Online);
      }
      if (hasServerSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(4, ServerSteamId);
      }
      if (hasServerAddr) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, ServerAddr);
      }
      if (hasServerPort) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, ServerPort);
      }
      if (hasOsType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, OsType);
      }
      if (hasClientAddr) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, ClientAddr);
      }
      foreach (global::CMsgGCHUpdateSession.Types.ExtraField element in ExtraFieldsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCHUpdateSession ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCHUpdateSession ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCHUpdateSession ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCHUpdateSession ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCHUpdateSession ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCHUpdateSession ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCHUpdateSession ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCHUpdateSession ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCHUpdateSession ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCHUpdateSession ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCHUpdateSession MakeReadOnly() {
    extraFields_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCHUpdateSession prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCHUpdateSession, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCHUpdateSession cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCHUpdateSession result;
    
    private CMsgGCHUpdateSession PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCHUpdateSession original = result;
        result = new CMsgGCHUpdateSession();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCHUpdateSession MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCHUpdateSession.Descriptor; }
    }
    
    public override CMsgGCHUpdateSession DefaultInstanceForType {
      get { return global::CMsgGCHUpdateSession.DefaultInstance; }
    }
    
    public override CMsgGCHUpdateSession BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCHUpdateSession) {
        return MergeFrom((CMsgGCHUpdateSession) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCHUpdateSession other) {
      if (other == global::CMsgGCHUpdateSession.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      if (other.HasAppId) {
        AppId = other.AppId;
      }
      if (other.HasOnline) {
        Online = other.Online;
      }
      if (other.HasServerSteamId) {
        ServerSteamId = other.ServerSteamId;
      }
      if (other.HasServerAddr) {
        ServerAddr = other.ServerAddr;
      }
      if (other.HasServerPort) {
        ServerPort = other.ServerPort;
      }
      if (other.HasOsType) {
        OsType = other.OsType;
      }
      if (other.HasClientAddr) {
        ClientAddr = other.ClientAddr;
      }
      if (other.extraFields_.Count != 0) {
        result.extraFields_.Add(other.extraFields_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCHUpdateSessionFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCHUpdateSessionFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamId = input.ReadFixed64(ref result.steamId_);
            break;
          }
          case 16: {
            result.hasAppId = input.ReadUInt32(ref result.appId_);
            break;
          }
          case 24: {
            result.hasOnline = input.ReadBool(ref result.online_);
            break;
          }
          case 33: {
            result.hasServerSteamId = input.ReadFixed64(ref result.serverSteamId_);
            break;
          }
          case 40: {
            result.hasServerAddr = input.ReadUInt32(ref result.serverAddr_);
            break;
          }
          case 48: {
            result.hasServerPort = input.ReadUInt32(ref result.serverPort_);
            break;
          }
          case 56: {
            result.hasOsType = input.ReadUInt32(ref result.osType_);
            break;
          }
          case 64: {
            result.hasClientAddr = input.ReadUInt32(ref result.clientAddr_);
            break;
          }
          case 74: {
            input.ReadMessageArray(tag, field_name, result.extraFields_, global::CMsgGCHUpdateSession.Types.ExtraField.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamId {
      get { return result.hasSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamId {
      get { return result.SteamId; }
      set { SetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamId(ulong value) {
      PrepareBuilder();
      result.hasSteamId = true;
      result.steamId_ = value;
      return this;
    }
    public Builder ClearSteamId() {
      PrepareBuilder();
      result.hasSteamId = false;
      result.steamId_ = 0;
      return this;
    }
    
    public bool HasAppId {
      get { return result.hasAppId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AppId {
      get { return result.AppId; }
      set { SetAppId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAppId(uint value) {
      PrepareBuilder();
      result.hasAppId = true;
      result.appId_ = value;
      return this;
    }
    public Builder ClearAppId() {
      PrepareBuilder();
      result.hasAppId = false;
      result.appId_ = 0;
      return this;
    }
    
    public bool HasOnline {
      get { return result.hasOnline; }
    }
    public bool Online {
      get { return result.Online; }
      set { SetOnline(value); }
    }
    public Builder SetOnline(bool value) {
      PrepareBuilder();
      result.hasOnline = true;
      result.online_ = value;
      return this;
    }
    public Builder ClearOnline() {
      PrepareBuilder();
      result.hasOnline = false;
      result.online_ = false;
      return this;
    }
    
    public bool HasServerSteamId {
      get { return result.hasServerSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ServerSteamId {
      get { return result.ServerSteamId; }
      set { SetServerSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetServerSteamId(ulong value) {
      PrepareBuilder();
      result.hasServerSteamId = true;
      result.serverSteamId_ = value;
      return this;
    }
    public Builder ClearServerSteamId() {
      PrepareBuilder();
      result.hasServerSteamId = false;
      result.serverSteamId_ = 0;
      return this;
    }
    
    public bool HasServerAddr {
      get { return result.hasServerAddr; }
    }
    [global::System.CLSCompliant(false)]
    public uint ServerAddr {
      get { return result.ServerAddr; }
      set { SetServerAddr(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetServerAddr(uint value) {
      PrepareBuilder();
      result.hasServerAddr = true;
      result.serverAddr_ = value;
      return this;
    }
    public Builder ClearServerAddr() {
      PrepareBuilder();
      result.hasServerAddr = false;
      result.serverAddr_ = 0;
      return this;
    }
    
    public bool HasServerPort {
      get { return result.hasServerPort; }
    }
    [global::System.CLSCompliant(false)]
    public uint ServerPort {
      get { return result.ServerPort; }
      set { SetServerPort(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetServerPort(uint value) {
      PrepareBuilder();
      result.hasServerPort = true;
      result.serverPort_ = value;
      return this;
    }
    public Builder ClearServerPort() {
      PrepareBuilder();
      result.hasServerPort = false;
      result.serverPort_ = 0;
      return this;
    }
    
    public bool HasOsType {
      get { return result.hasOsType; }
    }
    [global::System.CLSCompliant(false)]
    public uint OsType {
      get { return result.OsType; }
      set { SetOsType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetOsType(uint value) {
      PrepareBuilder();
      result.hasOsType = true;
      result.osType_ = value;
      return this;
    }
    public Builder ClearOsType() {
      PrepareBuilder();
      result.hasOsType = false;
      result.osType_ = 0;
      return this;
    }
    
    public bool HasClientAddr {
      get { return result.hasClientAddr; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClientAddr {
      get { return result.ClientAddr; }
      set { SetClientAddr(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClientAddr(uint value) {
      PrepareBuilder();
      result.hasClientAddr = true;
      result.clientAddr_ = value;
      return this;
    }
    public Builder ClearClientAddr() {
      PrepareBuilder();
      result.hasClientAddr = false;
      result.clientAddr_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgGCHUpdateSession.Types.ExtraField> ExtraFieldsList {
      get { return PrepareBuilder().extraFields_; }
    }
    public int ExtraFieldsCount {
      get { return result.ExtraFieldsCount; }
    }
    public global::CMsgGCHUpdateSession.Types.ExtraField GetExtraFields(int index) {
      return result.GetExtraFields(index);
    }
    public Builder SetExtraFields(int index, global::CMsgGCHUpdateSession.Types.ExtraField value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.extraFields_[index] = value;
      return this;
    }
    public Builder SetExtraFields(int index, global::CMsgGCHUpdateSession.Types.ExtraField.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.extraFields_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddExtraFields(global::CMsgGCHUpdateSession.Types.ExtraField value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.extraFields_.Add(value);
      return this;
    }
    public Builder AddExtraFields(global::CMsgGCHUpdateSession.Types.ExtraField.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.extraFields_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeExtraFields(scg::IEnumerable<global::CMsgGCHUpdateSession.Types.ExtraField> values) {
      PrepareBuilder();
      result.extraFields_.Add(values);
      return this;
    }
    public Builder ClearExtraFields() {
      PrepareBuilder();
      result.extraFields_.Clear();
      return this;
    }
  }
  static CMsgGCHUpdateSession() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgNotificationOfSuspiciousActivity : pb::GeneratedMessage<CMsgNotificationOfSuspiciousActivity, CMsgNotificationOfSuspiciousActivity.Builder> {
  private CMsgNotificationOfSuspiciousActivity() { }
  private static readonly CMsgNotificationOfSuspiciousActivity defaultInstance = new CMsgNotificationOfSuspiciousActivity().MakeReadOnly();
  private static readonly string[] _cMsgNotificationOfSuspiciousActivityFieldNames = new string[] { "appid", "multiple_instances", "steamid" };
  private static readonly uint[] _cMsgNotificationOfSuspiciousActivityFieldTags = new uint[] { 16, 26, 9 };
  public static CMsgNotificationOfSuspiciousActivity DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgNotificationOfSuspiciousActivity DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgNotificationOfSuspiciousActivity ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::Steammessages.internal__static_CMsgNotificationOfSuspiciousActivity__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgNotificationOfSuspiciousActivity, CMsgNotificationOfSuspiciousActivity.Builder> InternalFieldAccessors {
    get { return global::Steammessages.internal__static_CMsgNotificationOfSuspiciousActivity__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class MultipleGameInstances : pb::GeneratedMessage<MultipleGameInstances, MultipleGameInstances.Builder> {
      private MultipleGameInstances() { }
      private static readonly MultipleGameInstances defaultInstance = new MultipleGameInstances().MakeReadOnly();
      private static readonly string[] _multipleGameInstancesFieldNames = new string[] { "app_instance_count", "other_steamids" };
      private static readonly uint[] _multipleGameInstancesFieldTags = new uint[] { 8, 17 };
      public static MultipleGameInstances DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override MultipleGameInstances DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override MultipleGameInstances ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::Steammessages.internal__static_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<MultipleGameInstances, MultipleGameInstances.Builder> InternalFieldAccessors {
        get { return global::Steammessages.internal__static_CMsgNotificationOfSuspiciousActivity_MultipleGameInstances__FieldAccessorTable; }
      }
      
      public const int AppInstanceCountFieldNumber = 1;
      private bool hasAppInstanceCount;
      private uint appInstanceCount_;
      public bool HasAppInstanceCount {
        get { return hasAppInstanceCount; }
      }
      [global::System.CLSCompliant(false)]
      public uint AppInstanceCount {
        get { return appInstanceCount_; }
      }
      
      public const int OtherSteamidsFieldNumber = 2;
      private pbc::PopsicleList<ulong> otherSteamids_ = new pbc::PopsicleList<ulong>();
      [global::System.CLSCompliant(false)]
      public scg::IList<ulong> OtherSteamidsList {
        get { return pbc::Lists.AsReadOnly(otherSteamids_); }
      }
      public int OtherSteamidsCount {
        get { return otherSteamids_.Count; }
      }
      [global::System.CLSCompliant(false)]
      public ulong GetOtherSteamids(int index) {
        return otherSteamids_[index];
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _multipleGameInstancesFieldNames;
        if (hasAppInstanceCount) {
          output.WriteUInt32(1, field_names[0], AppInstanceCount);
        }
        if (otherSteamids_.Count > 0) {
          output.WriteFixed64Array(2, field_names[1], otherSteamids_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasAppInstanceCount) {
            size += pb::CodedOutputStream.ComputeUInt32Size(1, AppInstanceCount);
          }
          {
            int dataSize = 0;
            dataSize = 8 * otherSteamids_.Count;
            size += dataSize;
            size += 1 * otherSteamids_.Count;
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static MultipleGameInstances ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static MultipleGameInstances ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static MultipleGameInstances ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static MultipleGameInstances ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static MultipleGameInstances ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static MultipleGameInstances ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static MultipleGameInstances ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static MultipleGameInstances ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static MultipleGameInstances ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static MultipleGameInstances ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private MultipleGameInstances MakeReadOnly() {
        otherSteamids_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(MultipleGameInstances prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<MultipleGameInstances, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(MultipleGameInstances cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private MultipleGameInstances result;
        
        private MultipleGameInstances PrepareBuilder() {
          if (resultIsReadOnly) {
            MultipleGameInstances original = result;
            result = new MultipleGameInstances();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override MultipleGameInstances MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances.Descriptor; }
        }
        
        public override MultipleGameInstances DefaultInstanceForType {
          get { return global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances.DefaultInstance; }
        }
        
        public override MultipleGameInstances BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is MultipleGameInstances) {
            return MergeFrom((MultipleGameInstances) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(MultipleGameInstances other) {
          if (other == global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasAppInstanceCount) {
            AppInstanceCount = other.AppInstanceCount;
          }
          if (other.otherSteamids_.Count != 0) {
            result.otherSteamids_.Add(other.otherSteamids_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_multipleGameInstancesFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _multipleGameInstancesFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasAppInstanceCount = input.ReadUInt32(ref result.appInstanceCount_);
                break;
              }
              case 18:
              case 17: {
                input.ReadFixed64Array(tag, field_name, result.otherSteamids_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasAppInstanceCount {
          get { return result.hasAppInstanceCount; }
        }
        [global::System.CLSCompliant(false)]
        public uint AppInstanceCount {
          get { return result.AppInstanceCount; }
          set { SetAppInstanceCount(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetAppInstanceCount(uint value) {
          PrepareBuilder();
          result.hasAppInstanceCount = true;
          result.appInstanceCount_ = value;
          return this;
        }
        public Builder ClearAppInstanceCount() {
          PrepareBuilder();
          result.hasAppInstanceCount = false;
          result.appInstanceCount_ = 0;
          return this;
        }
        
        [global::System.CLSCompliant(false)]
        public pbc::IPopsicleList<ulong> OtherSteamidsList {
          get { return PrepareBuilder().otherSteamids_; }
        }
        public int OtherSteamidsCount {
          get { return result.OtherSteamidsCount; }
        }
        [global::System.CLSCompliant(false)]
        public ulong GetOtherSteamids(int index) {
          return result.GetOtherSteamids(index);
        }
        [global::System.CLSCompliant(false)]
        public Builder SetOtherSteamids(int index, ulong value) {
          PrepareBuilder();
          result.otherSteamids_[index] = value;
          return this;
        }
        [global::System.CLSCompliant(false)]
        public Builder AddOtherSteamids(ulong value) {
          PrepareBuilder();
          result.otherSteamids_.Add(value);
          return this;
        }
        [global::System.CLSCompliant(false)]
        public Builder AddRangeOtherSteamids(scg::IEnumerable<ulong> values) {
          PrepareBuilder();
          result.otherSteamids_.Add(values);
          return this;
        }
        public Builder ClearOtherSteamids() {
          PrepareBuilder();
          result.otherSteamids_.Clear();
          return this;
        }
      }
      static MultipleGameInstances() {
        object.ReferenceEquals(global::Steammessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int SteamidFieldNumber = 1;
  private bool hasSteamid;
  private ulong steamid_;
  public bool HasSteamid {
    get { return hasSteamid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Steamid {
    get { return steamid_; }
  }
  
  public const int AppidFieldNumber = 2;
  private bool hasAppid;
  private uint appid_;
  public bool HasAppid {
    get { return hasAppid; }
  }
  [global::System.CLSCompliant(false)]
  public uint Appid {
    get { return appid_; }
  }
  
  public const int MultipleInstancesFieldNumber = 3;
  private bool hasMultipleInstances;
  private global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances multipleInstances_;
  public bool HasMultipleInstances {
    get { return hasMultipleInstances; }
  }
  public global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances MultipleInstances {
    get { return multipleInstances_ ?? global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgNotificationOfSuspiciousActivityFieldNames;
    if (hasSteamid) {
      output.WriteFixed64(1, field_names[2], Steamid);
    }
    if (hasAppid) {
      output.WriteUInt32(2, field_names[0], Appid);
    }
    if (hasMultipleInstances) {
      output.WriteMessage(3, field_names[1], MultipleInstances);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, Steamid);
      }
      if (hasAppid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Appid);
      }
      if (hasMultipleInstances) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, MultipleInstances);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgNotificationOfSuspiciousActivity ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgNotificationOfSuspiciousActivity ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgNotificationOfSuspiciousActivity ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgNotificationOfSuspiciousActivity ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgNotificationOfSuspiciousActivity ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgNotificationOfSuspiciousActivity ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgNotificationOfSuspiciousActivity ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgNotificationOfSuspiciousActivity ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgNotificationOfSuspiciousActivity ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgNotificationOfSuspiciousActivity ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgNotificationOfSuspiciousActivity MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgNotificationOfSuspiciousActivity prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgNotificationOfSuspiciousActivity, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgNotificationOfSuspiciousActivity cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgNotificationOfSuspiciousActivity result;
    
    private CMsgNotificationOfSuspiciousActivity PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgNotificationOfSuspiciousActivity original = result;
        result = new CMsgNotificationOfSuspiciousActivity();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgNotificationOfSuspiciousActivity MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgNotificationOfSuspiciousActivity.Descriptor; }
    }
    
    public override CMsgNotificationOfSuspiciousActivity DefaultInstanceForType {
      get { return global::CMsgNotificationOfSuspiciousActivity.DefaultInstance; }
    }
    
    public override CMsgNotificationOfSuspiciousActivity BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgNotificationOfSuspiciousActivity) {
        return MergeFrom((CMsgNotificationOfSuspiciousActivity) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgNotificationOfSuspiciousActivity other) {
      if (other == global::CMsgNotificationOfSuspiciousActivity.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasMultipleInstances) {
        MergeMultipleInstances(other.MultipleInstances);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgNotificationOfSuspiciousActivityFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgNotificationOfSuspiciousActivityFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamid = input.ReadFixed64(ref result.steamid_);
            break;
          }
          case 16: {
            result.hasAppid = input.ReadUInt32(ref result.appid_);
            break;
          }
          case 26: {
            global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances.Builder subBuilder = global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances.CreateBuilder();
            if (result.hasMultipleInstances) {
              subBuilder.MergeFrom(MultipleInstances);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            MultipleInstances = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamid {
      get { return result.hasSteamid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Steamid {
      get { return result.Steamid; }
      set { SetSteamid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamid(ulong value) {
      PrepareBuilder();
      result.hasSteamid = true;
      result.steamid_ = value;
      return this;
    }
    public Builder ClearSteamid() {
      PrepareBuilder();
      result.hasSteamid = false;
      result.steamid_ = 0;
      return this;
    }
    
    public bool HasAppid {
      get { return result.hasAppid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Appid {
      get { return result.Appid; }
      set { SetAppid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAppid(uint value) {
      PrepareBuilder();
      result.hasAppid = true;
      result.appid_ = value;
      return this;
    }
    public Builder ClearAppid() {
      PrepareBuilder();
      result.hasAppid = false;
      result.appid_ = 0;
      return this;
    }
    
    public bool HasMultipleInstances {
     get { return result.hasMultipleInstances; }
    }
    public global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances MultipleInstances {
      get { return result.MultipleInstances; }
      set { SetMultipleInstances(value); }
    }
    public Builder SetMultipleInstances(global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasMultipleInstances = true;
      result.multipleInstances_ = value;
      return this;
    }
    public Builder SetMultipleInstances(global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasMultipleInstances = true;
      result.multipleInstances_ = builderForValue.Build();
      return this;
    }
    public Builder MergeMultipleInstances(global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasMultipleInstances &&
          result.multipleInstances_ != global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances.DefaultInstance) {
          result.multipleInstances_ = global::CMsgNotificationOfSuspiciousActivity.Types.MultipleGameInstances.CreateBuilder(result.multipleInstances_).MergeFrom(value).BuildPartial();
      } else {
        result.multipleInstances_ = value;
      }
      result.hasMultipleInstances = true;
      return this;
    }
    public Builder ClearMultipleInstances() {
      PrepareBuilder();
      result.hasMultipleInstances = false;
      result.multipleInstances_ = null;
      return this;
    }
  }
  static CMsgNotificationOfSuspiciousActivity() {
    object.ReferenceEquals(global::Steammessages.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
