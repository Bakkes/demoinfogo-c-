// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class GcsdkGcmessages {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_CMsgSOIDOwner__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSOIDOwner, global::CMsgSOIDOwner.Builder> internal__static_CMsgSOIDOwner__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSOSingleObject__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSOSingleObject, global::CMsgSOSingleObject.Builder> internal__static_CMsgSOSingleObject__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSOMultipleObjects__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSOMultipleObjects, global::CMsgSOMultipleObjects.Builder> internal__static_CMsgSOMultipleObjects__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSOMultipleObjects_SingleObject__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSOMultipleObjects.Types.SingleObject, global::CMsgSOMultipleObjects.Types.SingleObject.Builder> internal__static_CMsgSOMultipleObjects_SingleObject__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSOCacheSubscribed__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheSubscribed, global::CMsgSOCacheSubscribed.Builder> internal__static_CMsgSOCacheSubscribed__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSOCacheSubscribed_SubscribedType__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheSubscribed.Types.SubscribedType, global::CMsgSOCacheSubscribed.Types.SubscribedType.Builder> internal__static_CMsgSOCacheSubscribed_SubscribedType__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSOCacheUnsubscribed__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheUnsubscribed, global::CMsgSOCacheUnsubscribed.Builder> internal__static_CMsgSOCacheUnsubscribed__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSOCacheSubscriptionCheck__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheSubscriptionCheck, global::CMsgSOCacheSubscriptionCheck.Builder> internal__static_CMsgSOCacheSubscriptionCheck__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSOCacheSubscriptionRefresh__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheSubscriptionRefresh, global::CMsgSOCacheSubscriptionRefresh.Builder> internal__static_CMsgSOCacheSubscriptionRefresh__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSOCacheVersion__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheVersion, global::CMsgSOCacheVersion.Builder> internal__static_CMsgSOCacheVersion__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAccountDetails__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAccountDetails, global::CMsgAccountDetails.Builder> internal__static_CMsgAccountDetails__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCMultiplexMessage__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCMultiplexMessage, global::CMsgGCMultiplexMessage.Builder> internal__static_CMsgGCMultiplexMessage__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCToGCMsgMasterAck__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCToGCMsgMasterAck, global::CGCToGCMsgMasterAck.Builder> internal__static_CGCToGCMsgMasterAck__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCToGCMsgMasterAck_Response__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCToGCMsgMasterAck_Response, global::CGCToGCMsgMasterAck_Response.Builder> internal__static_CGCToGCMsgMasterAck_Response__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCToGCMsgMasterStartupComplete__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCToGCMsgMasterStartupComplete, global::CGCToGCMsgMasterStartupComplete.Builder> internal__static_CGCToGCMsgMasterStartupComplete__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCToGCMsgRouted__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCToGCMsgRouted, global::CGCToGCMsgRouted.Builder> internal__static_CGCToGCMsgRouted__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CGCToGCMsgRoutedReply__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCToGCMsgRoutedReply, global::CGCToGCMsgRoutedReply.Builder> internal__static_CGCToGCMsgRoutedReply__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCUpdateSessionIP__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCUpdateSessionIP, global::CMsgGCUpdateSessionIP.Builder> internal__static_CMsgGCUpdateSessionIP__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCRequestSessionIP__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCRequestSessionIP, global::CMsgGCRequestSessionIP.Builder> internal__static_CMsgGCRequestSessionIP__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCRequestSessionIPResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCRequestSessionIPResponse, global::CMsgGCRequestSessionIPResponse.Builder> internal__static_CMsgGCRequestSessionIPResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSOCacheHaveVersion__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheHaveVersion, global::CMsgSOCacheHaveVersion.Builder> internal__static_CMsgSOCacheHaveVersion__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgClientHello__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgClientHello, global::CMsgClientHello.Builder> internal__static_CMsgClientHello__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgClientWelcome__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgClientWelcome, global::CMsgClientWelcome.Builder> internal__static_CMsgClientWelcome__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgClientWelcome_Location__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgClientWelcome.Types.Location, global::CMsgClientWelcome.Types.Location.Builder> internal__static_CMsgClientWelcome_Location__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgConnectionStatus__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgConnectionStatus, global::CMsgConnectionStatus.Builder> internal__static_CMsgConnectionStatus__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CWorkshop_PopulateItemDescriptions_Request__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CWorkshop_PopulateItemDescriptions_Request, global::CWorkshop_PopulateItemDescriptions_Request.Builder> internal__static_CWorkshop_PopulateItemDescriptions_Request__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription, global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription.Builder> internal__static_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock, global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock.Builder> internal__static_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CWorkshop_GetContributors_Request__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CWorkshop_GetContributors_Request, global::CWorkshop_GetContributors_Request.Builder> internal__static_CWorkshop_GetContributors_Request__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CWorkshop_GetContributors_Response__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CWorkshop_GetContributors_Response, global::CWorkshop_GetContributors_Response.Builder> internal__static_CWorkshop_GetContributors_Response__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static GcsdkGcmessages() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        "ChZnY3Nka19nY21lc3NhZ2VzLnByb3RvGhNzdGVhbW1lc3NhZ2VzLnByb3Rv" + 
        "IikKDUNNc2dTT0lET3duZXISDAoEdHlwZRgBIAEoDRIKCgJpZBgCIAEoBCJv" + 
        "ChJDTXNnU09TaW5nbGVPYmplY3QSDwoHdHlwZV9pZBgCIAEoBRITCgtvYmpl" + 
        "Y3RfZGF0YRgDIAEoDBIPCgd2ZXJzaW9uGAQgASgGEiIKCm93bmVyX3NvaWQY" + 
        "BSABKAsyDi5DTXNnU09JRE93bmVyIscCChVDTXNnU09NdWx0aXBsZU9iamVj" + 
        "dHMSPQoQb2JqZWN0c19tb2RpZmllZBgCIAMoCzIjLkNNc2dTT011bHRpcGxl" + 
        "T2JqZWN0cy5TaW5nbGVPYmplY3QSDwoHdmVyc2lvbhgDIAEoBhI6Cg1vYmpl" + 
        "Y3RzX2FkZGVkGAQgAygLMiMuQ01zZ1NPTXVsdGlwbGVPYmplY3RzLlNpbmds" + 
        "ZU9iamVjdBI8Cg9vYmplY3RzX3JlbW92ZWQYBSADKAsyIy5DTXNnU09NdWx0" + 
        "aXBsZU9iamVjdHMuU2luZ2xlT2JqZWN0EiIKCm93bmVyX3NvaWQYBiABKAsy" + 
        "Di5DTXNnU09JRE93bmVyGkAKDFNpbmdsZU9iamVjdBIPCgd0eXBlX2lkGAEg" + 
        "ASgFEhMKC29iamVjdF9kYXRhGAIgASgMOgqAph2AAoimHYAIIrwBChVDTXNn" + 
        "U09DYWNoZVN1YnNjcmliZWQSNgoHb2JqZWN0cxgCIAMoCzIlLkNNc2dTT0Nh" + 
        "Y2hlU3Vic2NyaWJlZC5TdWJzY3JpYmVkVHlwZRIPCgd2ZXJzaW9uGAMgASgG" + 
        "EiIKCm93bmVyX3NvaWQYBCABKAsyDi5DTXNnU09JRE93bmVyGjYKDlN1YnNj" + 
        "cmliZWRUeXBlEg8KB3R5cGVfaWQYASABKAUSEwoLb2JqZWN0X2RhdGEYAiAD" + 
        "KAwiPQoXQ01zZ1NPQ2FjaGVVbnN1YnNjcmliZWQSIgoKb3duZXJfc29pZBgC" + 
        "IAEoCzIOLkNNc2dTT0lET3duZXIiUwocQ01zZ1NPQ2FjaGVTdWJzY3JpcHRp" + 
        "b25DaGVjaxIPCgd2ZXJzaW9uGAIgASgGEiIKCm93bmVyX3NvaWQYAyABKAsy" + 
        "Di5DTXNnU09JRE93bmVyIkQKHkNNc2dTT0NhY2hlU3Vic2NyaXB0aW9uUmVm" + 
        "cmVzaBIiCgpvd25lcl9zb2lkGAIgASgLMg4uQ01zZ1NPSURPd25lciIlChJD" + 
        "TXNnU09DYWNoZVZlcnNpb24SDwoHdmVyc2lvbhgBIAEoBiKoAwoSQ01zZ0Fj" + 
        "Y291bnREZXRhaWxzEg0KBXZhbGlkGAEgASgIEhQKDGFjY291bnRfbmFtZRgC" + 
        "IAEoCRIWCg5wdWJsaWNfcHJvZmlsZRgEIAEoCBIYChBwdWJsaWNfaW52ZW50" + 
        "b3J5GAUgASgIEhIKCnZhY19iYW5uZWQYBiABKAgSEgoKY3liZXJfY2FmZRgH" + 
        "IAEoCBIWCg5zY2hvb2xfYWNjb3VudBgIIAEoCBIaChJmcmVlX3RyaWFsX2Fj" + 
        "Y291bnQYCSABKAgSEgoKc3Vic2NyaWJlZBgKIAEoCBIUCgxsb3dfdmlvbGVu" + 
        "Y2UYCyABKAgSDwoHbGltaXRlZBgMIAEoCBIPCgd0cnVzdGVkGA0gASgIEg8K" + 
        "B3BhY2thZ2UYDiABKA0SEwoLdGltZV9jYWNoZWQYDyABKAcSFgoOYWNjb3Vu" + 
        "dF9sb2NrZWQYECABKAgSGAoQY29tbXVuaXR5X2Jhbm5lZBgRIAEoCBIUCgx0" + 
        "cmFkZV9iYW5uZWQYEiABKAgSJQodZWxpZ2libGVfZm9yX2NvbW11bml0eV9t" + 
        "YXJrZXQYEyABKAgiTAoWQ01zZ0dDTXVsdGlwbGV4TWVzc2FnZRIPCgdtc2d0" + 
        "eXBlGAEgASgNEg8KB3BheWxvYWQYAiABKAwSEAoIc3RlYW1pZHMYAyADKAYi" + 
        "OQoTQ0dDVG9HQ01zZ01hc3RlckFjaxIRCglkaXJfaW5kZXgYASABKA0SDwoH" + 
        "Z2NfdHlwZRgCIAEoDSIyChxDR0NUb0dDTXNnTWFzdGVyQWNrX1Jlc3BvbnNl" + 
        "EhIKB2VyZXN1bHQYASABKAU6ATIiIQofQ0dDVG9HQ01zZ01hc3RlclN0YXJ0" + 
        "dXBDb21wbGV0ZSJMChBDR0NUb0dDTXNnUm91dGVkEhAKCG1zZ190eXBlGAEg" + 
        "ASgNEhEKCXNlbmRlcl9pZBgCIAEoBhITCgtuZXRfbWVzc2FnZRgDIAEoDCI+" + 
        "ChVDR0NUb0dDTXNnUm91dGVkUmVwbHkSEAoIbXNnX3R5cGUYASABKA0SEwoL" + 
        "bmV0X21lc3NhZ2UYAiABKAwiNAoVQ01zZ0dDVXBkYXRlU2Vzc2lvbklQEg8K" + 
        "B3N0ZWFtaWQYASABKAYSCgoCaXAYAiABKAciKQoWQ01zZ0dDUmVxdWVzdFNl" + 
        "c3Npb25JUBIPCgdzdGVhbWlkGAEgASgGIiwKHkNNc2dHQ1JlcXVlc3RTZXNz" + 
        "aW9uSVBSZXNwb25zZRIKCgJpcBgBIAEoByJHChZDTXNnU09DYWNoZUhhdmVW" + 
        "ZXJzaW9uEhwKBHNvaWQYASABKAsyDi5DTXNnU09JRE93bmVyEg8KB3ZlcnNp" + 
        "b24YAiABKAYikAEKD0NNc2dDbGllbnRIZWxsbxIPCgd2ZXJzaW9uGAEgASgN" + 
        "EjYKFXNvY2FjaGVfaGF2ZV92ZXJzaW9ucxgCIAMoCzIXLkNNc2dTT0NhY2hl" + 
        "SGF2ZVZlcnNpb24SGwoTY2xpZW50X3Nlc3Npb25fbmVlZBgDIAEoDRIXCg9j" + 
        "bGllbnRfbGF1bmNoZXIYBCABKA0ivAIKEUNNc2dDbGllbnRXZWxjb21lEg8K" + 
        "B3ZlcnNpb24YASABKA0SEQoJZ2FtZV9kYXRhGAIgASgMEjsKG291dG9mZGF0" + 
        "ZV9zdWJzY3JpYmVkX2NhY2hlcxgDIAMoCzIWLkNNc2dTT0NhY2hlU3Vic2Ny" + 
        "aWJlZBJBChp1cHRvZGF0ZV9zdWJzY3JpYmVkX2NhY2hlcxgEIAMoCzIdLkNN" + 
        "c2dTT0NhY2hlU3Vic2NyaXB0aW9uQ2hlY2sSLQoIbG9jYXRpb24YBSABKAsy" + 
        "Gy5DTXNnQ2xpZW50V2VsY29tZS5Mb2NhdGlvbhISCgpnYW1lX2RhdGEyGAYg" + 
        "ASgMGkAKCExvY2F0aW9uEhAKCGxhdGl0dWRlGAEgASgCEhEKCWxvbmdpdHVk" + 
        "ZRgCIAEoAhIPCgdjb3VudHJ5GAMgASgJIuUBChRDTXNnQ29ubmVjdGlvblN0" + 
        "YXR1cxJECgZzdGF0dXMYASABKA4yEy5HQ0Nvbm5lY3Rpb25TdGF0dXM6H0dD" + 
        "Q29ubmVjdGlvblN0YXR1c19IQVZFX1NFU1NJT04SGwoTY2xpZW50X3Nlc3Np" + 
        "b25fbmVlZBgCIAEoDRIWCg5xdWV1ZV9wb3NpdGlvbhgDIAEoBRISCgpxdWV1" + 
        "ZV9zaXplGAQgASgFEhQKDHdhaXRfc2Vjb25kcxgFIAEoBRIoCiBlc3RpbWF0" + 
        "ZWRfd2FpdF9zZWNvbmRzX3JlbWFpbmluZxgGIAEoBSLtAgoqQ1dvcmtzaG9w" + 
        "X1BvcHVsYXRlSXRlbURlc2NyaXB0aW9uc19SZXF1ZXN0Eg0KBWFwcGlkGAEg" + 
        "ASgNElwKCWxhbmd1YWdlcxgCIAMoCzJJLkNXb3Jrc2hvcF9Qb3B1bGF0ZUl0" + 
        "ZW1EZXNjcmlwdGlvbnNfUmVxdWVzdC5JdGVtRGVzY3JpcHRpb25zTGFuZ3Vh" + 
        "Z2VCbG9jaxpFChVTaW5nbGVJdGVtRGVzY3JpcHRpb24SEgoKZ2FtZWl0ZW1p" + 
        "ZBgBIAEoDRIYChBpdGVtX2Rlc2NyaXB0aW9uGAIgASgJGooBCh1JdGVtRGVz" + 
        "Y3JpcHRpb25zTGFuZ3VhZ2VCbG9jaxIQCghsYW5ndWFnZRgBIAEoCRJXCgxk" + 
        "ZXNjcmlwdGlvbnMYAiADKAsyQS5DV29ya3Nob3BfUG9wdWxhdGVJdGVtRGVz" + 
        "Y3JpcHRpb25zX1JlcXVlc3QuU2luZ2xlSXRlbURlc2NyaXB0aW9uIkYKIUNX" + 
        "b3Jrc2hvcF9HZXRDb250cmlidXRvcnNfUmVxdWVzdBINCgVhcHBpZBgBIAEo" + 
        "DRISCgpnYW1laXRlbWlkGAIgASgNIjoKIkNXb3Jrc2hvcF9HZXRDb250cmli" + 
        "dXRvcnNfUmVzcG9uc2USFAoMY29udHJpYnV0b3JzGAEgAygGKtUBChJHQ0Nv" + 
        "bm5lY3Rpb25TdGF0dXMSIwofR0NDb25uZWN0aW9uU3RhdHVzX0hBVkVfU0VT" + 
        "U0lPThAAEiQKIEdDQ29ubmVjdGlvblN0YXR1c19HQ19HT0lOR19ET1dOEAES" + 
        "IQodR0NDb25uZWN0aW9uU3RhdHVzX05PX1NFU1NJT04QAhIwCixHQ0Nvbm5l" + 
        "Y3Rpb25TdGF0dXNfTk9fU0VTU0lPTl9JTl9MT0dPTl9RVUVVRRADEh8KG0dD" + 
        "Q29ubmVjdGlvblN0YXR1c19OT19TVEVBTRAE");
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_CMsgSOIDOwner__Descriptor = Descriptor.MessageTypes[0];
      internal__static_CMsgSOIDOwner__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSOIDOwner, global::CMsgSOIDOwner.Builder>(internal__static_CMsgSOIDOwner__Descriptor,
              new string[] { "Type", "Id", });
      internal__static_CMsgSOSingleObject__Descriptor = Descriptor.MessageTypes[1];
      internal__static_CMsgSOSingleObject__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSOSingleObject, global::CMsgSOSingleObject.Builder>(internal__static_CMsgSOSingleObject__Descriptor,
              new string[] { "TypeId", "ObjectData", "Version", "OwnerSoid", });
      internal__static_CMsgSOMultipleObjects__Descriptor = Descriptor.MessageTypes[2];
      internal__static_CMsgSOMultipleObjects__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSOMultipleObjects, global::CMsgSOMultipleObjects.Builder>(internal__static_CMsgSOMultipleObjects__Descriptor,
              new string[] { "ObjectsModified", "Version", "ObjectsAdded", "ObjectsRemoved", "OwnerSoid", });
      internal__static_CMsgSOMultipleObjects_SingleObject__Descriptor = internal__static_CMsgSOMultipleObjects__Descriptor.NestedTypes[0];
      internal__static_CMsgSOMultipleObjects_SingleObject__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSOMultipleObjects.Types.SingleObject, global::CMsgSOMultipleObjects.Types.SingleObject.Builder>(internal__static_CMsgSOMultipleObjects_SingleObject__Descriptor,
              new string[] { "TypeId", "ObjectData", });
      internal__static_CMsgSOCacheSubscribed__Descriptor = Descriptor.MessageTypes[3];
      internal__static_CMsgSOCacheSubscribed__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheSubscribed, global::CMsgSOCacheSubscribed.Builder>(internal__static_CMsgSOCacheSubscribed__Descriptor,
              new string[] { "Objects", "Version", "OwnerSoid", });
      internal__static_CMsgSOCacheSubscribed_SubscribedType__Descriptor = internal__static_CMsgSOCacheSubscribed__Descriptor.NestedTypes[0];
      internal__static_CMsgSOCacheSubscribed_SubscribedType__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheSubscribed.Types.SubscribedType, global::CMsgSOCacheSubscribed.Types.SubscribedType.Builder>(internal__static_CMsgSOCacheSubscribed_SubscribedType__Descriptor,
              new string[] { "TypeId", "ObjectData", });
      internal__static_CMsgSOCacheUnsubscribed__Descriptor = Descriptor.MessageTypes[4];
      internal__static_CMsgSOCacheUnsubscribed__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheUnsubscribed, global::CMsgSOCacheUnsubscribed.Builder>(internal__static_CMsgSOCacheUnsubscribed__Descriptor,
              new string[] { "OwnerSoid", });
      internal__static_CMsgSOCacheSubscriptionCheck__Descriptor = Descriptor.MessageTypes[5];
      internal__static_CMsgSOCacheSubscriptionCheck__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheSubscriptionCheck, global::CMsgSOCacheSubscriptionCheck.Builder>(internal__static_CMsgSOCacheSubscriptionCheck__Descriptor,
              new string[] { "Version", "OwnerSoid", });
      internal__static_CMsgSOCacheSubscriptionRefresh__Descriptor = Descriptor.MessageTypes[6];
      internal__static_CMsgSOCacheSubscriptionRefresh__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheSubscriptionRefresh, global::CMsgSOCacheSubscriptionRefresh.Builder>(internal__static_CMsgSOCacheSubscriptionRefresh__Descriptor,
              new string[] { "OwnerSoid", });
      internal__static_CMsgSOCacheVersion__Descriptor = Descriptor.MessageTypes[7];
      internal__static_CMsgSOCacheVersion__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheVersion, global::CMsgSOCacheVersion.Builder>(internal__static_CMsgSOCacheVersion__Descriptor,
              new string[] { "Version", });
      internal__static_CMsgAccountDetails__Descriptor = Descriptor.MessageTypes[8];
      internal__static_CMsgAccountDetails__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAccountDetails, global::CMsgAccountDetails.Builder>(internal__static_CMsgAccountDetails__Descriptor,
              new string[] { "Valid", "AccountName", "PublicProfile", "PublicInventory", "VacBanned", "CyberCafe", "SchoolAccount", "FreeTrialAccount", "Subscribed", "LowViolence", "Limited", "Trusted", "Package", "TimeCached", "AccountLocked", "CommunityBanned", "TradeBanned", "EligibleForCommunityMarket", });
      internal__static_CMsgGCMultiplexMessage__Descriptor = Descriptor.MessageTypes[9];
      internal__static_CMsgGCMultiplexMessage__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCMultiplexMessage, global::CMsgGCMultiplexMessage.Builder>(internal__static_CMsgGCMultiplexMessage__Descriptor,
              new string[] { "Msgtype", "Payload", "Steamids", });
      internal__static_CGCToGCMsgMasterAck__Descriptor = Descriptor.MessageTypes[10];
      internal__static_CGCToGCMsgMasterAck__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCToGCMsgMasterAck, global::CGCToGCMsgMasterAck.Builder>(internal__static_CGCToGCMsgMasterAck__Descriptor,
              new string[] { "DirIndex", "GcType", });
      internal__static_CGCToGCMsgMasterAck_Response__Descriptor = Descriptor.MessageTypes[11];
      internal__static_CGCToGCMsgMasterAck_Response__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCToGCMsgMasterAck_Response, global::CGCToGCMsgMasterAck_Response.Builder>(internal__static_CGCToGCMsgMasterAck_Response__Descriptor,
              new string[] { "Eresult", });
      internal__static_CGCToGCMsgMasterStartupComplete__Descriptor = Descriptor.MessageTypes[12];
      internal__static_CGCToGCMsgMasterStartupComplete__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCToGCMsgMasterStartupComplete, global::CGCToGCMsgMasterStartupComplete.Builder>(internal__static_CGCToGCMsgMasterStartupComplete__Descriptor,
              new string[] { });
      internal__static_CGCToGCMsgRouted__Descriptor = Descriptor.MessageTypes[13];
      internal__static_CGCToGCMsgRouted__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCToGCMsgRouted, global::CGCToGCMsgRouted.Builder>(internal__static_CGCToGCMsgRouted__Descriptor,
              new string[] { "MsgType", "SenderId", "NetMessage", });
      internal__static_CGCToGCMsgRoutedReply__Descriptor = Descriptor.MessageTypes[14];
      internal__static_CGCToGCMsgRoutedReply__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCToGCMsgRoutedReply, global::CGCToGCMsgRoutedReply.Builder>(internal__static_CGCToGCMsgRoutedReply__Descriptor,
              new string[] { "MsgType", "NetMessage", });
      internal__static_CMsgGCUpdateSessionIP__Descriptor = Descriptor.MessageTypes[15];
      internal__static_CMsgGCUpdateSessionIP__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCUpdateSessionIP, global::CMsgGCUpdateSessionIP.Builder>(internal__static_CMsgGCUpdateSessionIP__Descriptor,
              new string[] { "Steamid", "Ip", });
      internal__static_CMsgGCRequestSessionIP__Descriptor = Descriptor.MessageTypes[16];
      internal__static_CMsgGCRequestSessionIP__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCRequestSessionIP, global::CMsgGCRequestSessionIP.Builder>(internal__static_CMsgGCRequestSessionIP__Descriptor,
              new string[] { "Steamid", });
      internal__static_CMsgGCRequestSessionIPResponse__Descriptor = Descriptor.MessageTypes[17];
      internal__static_CMsgGCRequestSessionIPResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCRequestSessionIPResponse, global::CMsgGCRequestSessionIPResponse.Builder>(internal__static_CMsgGCRequestSessionIPResponse__Descriptor,
              new string[] { "Ip", });
      internal__static_CMsgSOCacheHaveVersion__Descriptor = Descriptor.MessageTypes[18];
      internal__static_CMsgSOCacheHaveVersion__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSOCacheHaveVersion, global::CMsgSOCacheHaveVersion.Builder>(internal__static_CMsgSOCacheHaveVersion__Descriptor,
              new string[] { "Soid", "Version", });
      internal__static_CMsgClientHello__Descriptor = Descriptor.MessageTypes[19];
      internal__static_CMsgClientHello__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgClientHello, global::CMsgClientHello.Builder>(internal__static_CMsgClientHello__Descriptor,
              new string[] { "Version", "SocacheHaveVersions", "ClientSessionNeed", "ClientLauncher", });
      internal__static_CMsgClientWelcome__Descriptor = Descriptor.MessageTypes[20];
      internal__static_CMsgClientWelcome__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgClientWelcome, global::CMsgClientWelcome.Builder>(internal__static_CMsgClientWelcome__Descriptor,
              new string[] { "Version", "GameData", "OutofdateSubscribedCaches", "UptodateSubscribedCaches", "Location", "GameData2", });
      internal__static_CMsgClientWelcome_Location__Descriptor = internal__static_CMsgClientWelcome__Descriptor.NestedTypes[0];
      internal__static_CMsgClientWelcome_Location__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgClientWelcome.Types.Location, global::CMsgClientWelcome.Types.Location.Builder>(internal__static_CMsgClientWelcome_Location__Descriptor,
              new string[] { "Latitude", "Longitude", "Country", });
      internal__static_CMsgConnectionStatus__Descriptor = Descriptor.MessageTypes[21];
      internal__static_CMsgConnectionStatus__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgConnectionStatus, global::CMsgConnectionStatus.Builder>(internal__static_CMsgConnectionStatus__Descriptor,
              new string[] { "Status", "ClientSessionNeed", "QueuePosition", "QueueSize", "WaitSeconds", "EstimatedWaitSecondsRemaining", });
      internal__static_CWorkshop_PopulateItemDescriptions_Request__Descriptor = Descriptor.MessageTypes[22];
      internal__static_CWorkshop_PopulateItemDescriptions_Request__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CWorkshop_PopulateItemDescriptions_Request, global::CWorkshop_PopulateItemDescriptions_Request.Builder>(internal__static_CWorkshop_PopulateItemDescriptions_Request__Descriptor,
              new string[] { "Appid", "Languages", });
      internal__static_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription__Descriptor = internal__static_CWorkshop_PopulateItemDescriptions_Request__Descriptor.NestedTypes[0];
      internal__static_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription, global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription.Builder>(internal__static_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription__Descriptor,
              new string[] { "Gameitemid", "ItemDescription", });
      internal__static_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock__Descriptor = internal__static_CWorkshop_PopulateItemDescriptions_Request__Descriptor.NestedTypes[1];
      internal__static_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock, global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock.Builder>(internal__static_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock__Descriptor,
              new string[] { "Language", "Descriptions", });
      internal__static_CWorkshop_GetContributors_Request__Descriptor = Descriptor.MessageTypes[23];
      internal__static_CWorkshop_GetContributors_Request__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CWorkshop_GetContributors_Request, global::CWorkshop_GetContributors_Request.Builder>(internal__static_CWorkshop_GetContributors_Request__Descriptor,
              new string[] { "Appid", "Gameitemid", });
      internal__static_CWorkshop_GetContributors_Response__Descriptor = Descriptor.MessageTypes[24];
      internal__static_CWorkshop_GetContributors_Response__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CWorkshop_GetContributors_Response, global::CWorkshop_GetContributors_Response.Builder>(internal__static_CWorkshop_GetContributors_Response__Descriptor,
              new string[] { "Contributors", });
      pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
      RegisterAllExtensions(registry);
      global::Steammessages.RegisterAllExtensions(registry);
      return registry;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        global::Steammessages.Descriptor, 
        }, assigner);
  }
  #endregion
  
}
#region Enums
public enum GCConnectionStatus {
  GCConnectionStatus_HAVE_SESSION = 0,
  GCConnectionStatus_GC_GOING_DOWN = 1,
  GCConnectionStatus_NO_SESSION = 2,
  GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE = 3,
  GCConnectionStatus_NO_STEAM = 4,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSOIDOwner : pb::GeneratedMessage<CMsgSOIDOwner, CMsgSOIDOwner.Builder> {
  private CMsgSOIDOwner() { }
  private static readonly CMsgSOIDOwner defaultInstance = new CMsgSOIDOwner().MakeReadOnly();
  private static readonly string[] _cMsgSOIDOwnerFieldNames = new string[] { "id", "type" };
  private static readonly uint[] _cMsgSOIDOwnerFieldTags = new uint[] { 16, 8 };
  public static CMsgSOIDOwner DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSOIDOwner DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSOIDOwner ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOIDOwner__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSOIDOwner, CMsgSOIDOwner.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOIDOwner__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private uint type_;
  public bool HasType {
    get { return hasType; }
  }
  [global::System.CLSCompliant(false)]
  public uint Type {
    get { return type_; }
  }
  
  public const int IdFieldNumber = 2;
  private bool hasId;
  private ulong id_;
  public bool HasId {
    get { return hasId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Id {
    get { return id_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSOIDOwnerFieldNames;
    if (hasType) {
      output.WriteUInt32(1, field_names[1], Type);
    }
    if (hasId) {
      output.WriteUInt64(2, field_names[0], Id);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Type);
      }
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, Id);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSOIDOwner ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOIDOwner ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOIDOwner ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOIDOwner ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOIDOwner ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOIDOwner ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOIDOwner ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSOIDOwner ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSOIDOwner ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOIDOwner ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSOIDOwner MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSOIDOwner prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSOIDOwner, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSOIDOwner cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSOIDOwner result;
    
    private CMsgSOIDOwner PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSOIDOwner original = result;
        result = new CMsgSOIDOwner();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSOIDOwner MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSOIDOwner.Descriptor; }
    }
    
    public override CMsgSOIDOwner DefaultInstanceForType {
      get { return global::CMsgSOIDOwner.DefaultInstance; }
    }
    
    public override CMsgSOIDOwner BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSOIDOwner) {
        return MergeFrom((CMsgSOIDOwner) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSOIDOwner other) {
      if (other == global::CMsgSOIDOwner.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSOIDOwnerFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSOIDOwnerFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasType = input.ReadUInt32(ref result.type_);
            break;
          }
          case 16: {
            result.hasId = input.ReadUInt64(ref result.id_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    [global::System.CLSCompliant(false)]
    public uint Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetType(uint value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
    
    public bool HasId {
      get { return result.hasId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetId(ulong value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0UL;
      return this;
    }
  }
  static CMsgSOIDOwner() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSOSingleObject : pb::GeneratedMessage<CMsgSOSingleObject, CMsgSOSingleObject.Builder> {
  private CMsgSOSingleObject() { }
  private static readonly CMsgSOSingleObject defaultInstance = new CMsgSOSingleObject().MakeReadOnly();
  private static readonly string[] _cMsgSOSingleObjectFieldNames = new string[] { "object_data", "owner_soid", "type_id", "version" };
  private static readonly uint[] _cMsgSOSingleObjectFieldTags = new uint[] { 26, 42, 16, 33 };
  public static CMsgSOSingleObject DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSOSingleObject DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSOSingleObject ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOSingleObject__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSOSingleObject, CMsgSOSingleObject.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOSingleObject__FieldAccessorTable; }
  }
  
  public const int TypeIdFieldNumber = 2;
  private bool hasTypeId;
  private int typeId_;
  public bool HasTypeId {
    get { return hasTypeId; }
  }
  public int TypeId {
    get { return typeId_; }
  }
  
  public const int ObjectDataFieldNumber = 3;
  private bool hasObjectData;
  private pb::ByteString objectData_ = pb::ByteString.Empty;
  public bool HasObjectData {
    get { return hasObjectData; }
  }
  public pb::ByteString ObjectData {
    get { return objectData_; }
  }
  
  public const int VersionFieldNumber = 4;
  private bool hasVersion;
  private ulong version_;
  public bool HasVersion {
    get { return hasVersion; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Version {
    get { return version_; }
  }
  
  public const int OwnerSoidFieldNumber = 5;
  private bool hasOwnerSoid;
  private global::CMsgSOIDOwner ownerSoid_;
  public bool HasOwnerSoid {
    get { return hasOwnerSoid; }
  }
  public global::CMsgSOIDOwner OwnerSoid {
    get { return ownerSoid_ ?? global::CMsgSOIDOwner.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSOSingleObjectFieldNames;
    if (hasTypeId) {
      output.WriteInt32(2, field_names[2], TypeId);
    }
    if (hasObjectData) {
      output.WriteBytes(3, field_names[0], ObjectData);
    }
    if (hasVersion) {
      output.WriteFixed64(4, field_names[3], Version);
    }
    if (hasOwnerSoid) {
      output.WriteMessage(5, field_names[1], OwnerSoid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTypeId) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, TypeId);
      }
      if (hasObjectData) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, ObjectData);
      }
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeFixed64Size(4, Version);
      }
      if (hasOwnerSoid) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, OwnerSoid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSOSingleObject ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOSingleObject ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOSingleObject ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOSingleObject ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOSingleObject ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOSingleObject ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOSingleObject ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSOSingleObject ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSOSingleObject ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOSingleObject ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSOSingleObject MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSOSingleObject prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSOSingleObject, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSOSingleObject cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSOSingleObject result;
    
    private CMsgSOSingleObject PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSOSingleObject original = result;
        result = new CMsgSOSingleObject();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSOSingleObject MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSOSingleObject.Descriptor; }
    }
    
    public override CMsgSOSingleObject DefaultInstanceForType {
      get { return global::CMsgSOSingleObject.DefaultInstance; }
    }
    
    public override CMsgSOSingleObject BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSOSingleObject) {
        return MergeFrom((CMsgSOSingleObject) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSOSingleObject other) {
      if (other == global::CMsgSOSingleObject.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTypeId) {
        TypeId = other.TypeId;
      }
      if (other.HasObjectData) {
        ObjectData = other.ObjectData;
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasOwnerSoid) {
        MergeOwnerSoid(other.OwnerSoid);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSOSingleObjectFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSOSingleObjectFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 16: {
            result.hasTypeId = input.ReadInt32(ref result.typeId_);
            break;
          }
          case 26: {
            result.hasObjectData = input.ReadBytes(ref result.objectData_);
            break;
          }
          case 33: {
            result.hasVersion = input.ReadFixed64(ref result.version_);
            break;
          }
          case 42: {
            global::CMsgSOIDOwner.Builder subBuilder = global::CMsgSOIDOwner.CreateBuilder();
            if (result.hasOwnerSoid) {
              subBuilder.MergeFrom(OwnerSoid);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            OwnerSoid = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTypeId {
      get { return result.hasTypeId; }
    }
    public int TypeId {
      get { return result.TypeId; }
      set { SetTypeId(value); }
    }
    public Builder SetTypeId(int value) {
      PrepareBuilder();
      result.hasTypeId = true;
      result.typeId_ = value;
      return this;
    }
    public Builder ClearTypeId() {
      PrepareBuilder();
      result.hasTypeId = false;
      result.typeId_ = 0;
      return this;
    }
    
    public bool HasObjectData {
      get { return result.hasObjectData; }
    }
    public pb::ByteString ObjectData {
      get { return result.ObjectData; }
      set { SetObjectData(value); }
    }
    public Builder SetObjectData(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasObjectData = true;
      result.objectData_ = value;
      return this;
    }
    public Builder ClearObjectData() {
      PrepareBuilder();
      result.hasObjectData = false;
      result.objectData_ = pb::ByteString.Empty;
      return this;
    }
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVersion(ulong value) {
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = 0;
      return this;
    }
    
    public bool HasOwnerSoid {
     get { return result.hasOwnerSoid; }
    }
    public global::CMsgSOIDOwner OwnerSoid {
      get { return result.OwnerSoid; }
      set { SetOwnerSoid(value); }
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = value;
      return this;
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = builderForValue.Build();
      return this;
    }
    public Builder MergeOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasOwnerSoid &&
          result.ownerSoid_ != global::CMsgSOIDOwner.DefaultInstance) {
          result.ownerSoid_ = global::CMsgSOIDOwner.CreateBuilder(result.ownerSoid_).MergeFrom(value).BuildPartial();
      } else {
        result.ownerSoid_ = value;
      }
      result.hasOwnerSoid = true;
      return this;
    }
    public Builder ClearOwnerSoid() {
      PrepareBuilder();
      result.hasOwnerSoid = false;
      result.ownerSoid_ = null;
      return this;
    }
  }
  static CMsgSOSingleObject() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSOMultipleObjects : pb::GeneratedMessage<CMsgSOMultipleObjects, CMsgSOMultipleObjects.Builder> {
  private CMsgSOMultipleObjects() { }
  private static readonly CMsgSOMultipleObjects defaultInstance = new CMsgSOMultipleObjects().MakeReadOnly();
  private static readonly string[] _cMsgSOMultipleObjectsFieldNames = new string[] { "objects_added", "objects_modified", "objects_removed", "owner_soid", "version" };
  private static readonly uint[] _cMsgSOMultipleObjectsFieldTags = new uint[] { 34, 18, 42, 50, 25 };
  public static CMsgSOMultipleObjects DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSOMultipleObjects DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSOMultipleObjects ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOMultipleObjects__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSOMultipleObjects, CMsgSOMultipleObjects.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOMultipleObjects__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class SingleObject : pb::GeneratedMessage<SingleObject, SingleObject.Builder> {
      private SingleObject() { }
      private static readonly SingleObject defaultInstance = new SingleObject().MakeReadOnly();
      private static readonly string[] _singleObjectFieldNames = new string[] { "object_data", "type_id" };
      private static readonly uint[] _singleObjectFieldTags = new uint[] { 18, 8 };
      public static SingleObject DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override SingleObject DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override SingleObject ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::GcsdkGcmessages.internal__static_CMsgSOMultipleObjects_SingleObject__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<SingleObject, SingleObject.Builder> InternalFieldAccessors {
        get { return global::GcsdkGcmessages.internal__static_CMsgSOMultipleObjects_SingleObject__FieldAccessorTable; }
      }
      
      public const int TypeIdFieldNumber = 1;
      private bool hasTypeId;
      private int typeId_;
      public bool HasTypeId {
        get { return hasTypeId; }
      }
      public int TypeId {
        get { return typeId_; }
      }
      
      public const int ObjectDataFieldNumber = 2;
      private bool hasObjectData;
      private pb::ByteString objectData_ = pb::ByteString.Empty;
      public bool HasObjectData {
        get { return hasObjectData; }
      }
      public pb::ByteString ObjectData {
        get { return objectData_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _singleObjectFieldNames;
        if (hasTypeId) {
          output.WriteInt32(1, field_names[1], TypeId);
        }
        if (hasObjectData) {
          output.WriteBytes(2, field_names[0], ObjectData);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasTypeId) {
            size += pb::CodedOutputStream.ComputeInt32Size(1, TypeId);
          }
          if (hasObjectData) {
            size += pb::CodedOutputStream.ComputeBytesSize(2, ObjectData);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static SingleObject ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SingleObject ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SingleObject ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SingleObject ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SingleObject ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SingleObject ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static SingleObject ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static SingleObject ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static SingleObject ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SingleObject ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private SingleObject MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(SingleObject prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<SingleObject, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(SingleObject cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private SingleObject result;
        
        private SingleObject PrepareBuilder() {
          if (resultIsReadOnly) {
            SingleObject original = result;
            result = new SingleObject();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override SingleObject MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgSOMultipleObjects.Types.SingleObject.Descriptor; }
        }
        
        public override SingleObject DefaultInstanceForType {
          get { return global::CMsgSOMultipleObjects.Types.SingleObject.DefaultInstance; }
        }
        
        public override SingleObject BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is SingleObject) {
            return MergeFrom((SingleObject) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(SingleObject other) {
          if (other == global::CMsgSOMultipleObjects.Types.SingleObject.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasTypeId) {
            TypeId = other.TypeId;
          }
          if (other.HasObjectData) {
            ObjectData = other.ObjectData;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_singleObjectFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _singleObjectFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasTypeId = input.ReadInt32(ref result.typeId_);
                break;
              }
              case 18: {
                result.hasObjectData = input.ReadBytes(ref result.objectData_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasTypeId {
          get { return result.hasTypeId; }
        }
        public int TypeId {
          get { return result.TypeId; }
          set { SetTypeId(value); }
        }
        public Builder SetTypeId(int value) {
          PrepareBuilder();
          result.hasTypeId = true;
          result.typeId_ = value;
          return this;
        }
        public Builder ClearTypeId() {
          PrepareBuilder();
          result.hasTypeId = false;
          result.typeId_ = 0;
          return this;
        }
        
        public bool HasObjectData {
          get { return result.hasObjectData; }
        }
        public pb::ByteString ObjectData {
          get { return result.ObjectData; }
          set { SetObjectData(value); }
        }
        public Builder SetObjectData(pb::ByteString value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasObjectData = true;
          result.objectData_ = value;
          return this;
        }
        public Builder ClearObjectData() {
          PrepareBuilder();
          result.hasObjectData = false;
          result.objectData_ = pb::ByteString.Empty;
          return this;
        }
      }
      static SingleObject() {
        object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int ObjectsModifiedFieldNumber = 2;
  private pbc::PopsicleList<global::CMsgSOMultipleObjects.Types.SingleObject> objectsModified_ = new pbc::PopsicleList<global::CMsgSOMultipleObjects.Types.SingleObject>();
  public scg::IList<global::CMsgSOMultipleObjects.Types.SingleObject> ObjectsModifiedList {
    get { return objectsModified_; }
  }
  public int ObjectsModifiedCount {
    get { return objectsModified_.Count; }
  }
  public global::CMsgSOMultipleObjects.Types.SingleObject GetObjectsModified(int index) {
    return objectsModified_[index];
  }
  
  public const int VersionFieldNumber = 3;
  private bool hasVersion;
  private ulong version_;
  public bool HasVersion {
    get { return hasVersion; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Version {
    get { return version_; }
  }
  
  public const int ObjectsAddedFieldNumber = 4;
  private pbc::PopsicleList<global::CMsgSOMultipleObjects.Types.SingleObject> objectsAdded_ = new pbc::PopsicleList<global::CMsgSOMultipleObjects.Types.SingleObject>();
  public scg::IList<global::CMsgSOMultipleObjects.Types.SingleObject> ObjectsAddedList {
    get { return objectsAdded_; }
  }
  public int ObjectsAddedCount {
    get { return objectsAdded_.Count; }
  }
  public global::CMsgSOMultipleObjects.Types.SingleObject GetObjectsAdded(int index) {
    return objectsAdded_[index];
  }
  
  public const int ObjectsRemovedFieldNumber = 5;
  private pbc::PopsicleList<global::CMsgSOMultipleObjects.Types.SingleObject> objectsRemoved_ = new pbc::PopsicleList<global::CMsgSOMultipleObjects.Types.SingleObject>();
  public scg::IList<global::CMsgSOMultipleObjects.Types.SingleObject> ObjectsRemovedList {
    get { return objectsRemoved_; }
  }
  public int ObjectsRemovedCount {
    get { return objectsRemoved_.Count; }
  }
  public global::CMsgSOMultipleObjects.Types.SingleObject GetObjectsRemoved(int index) {
    return objectsRemoved_[index];
  }
  
  public const int OwnerSoidFieldNumber = 6;
  private bool hasOwnerSoid;
  private global::CMsgSOIDOwner ownerSoid_;
  public bool HasOwnerSoid {
    get { return hasOwnerSoid; }
  }
  public global::CMsgSOIDOwner OwnerSoid {
    get { return ownerSoid_ ?? global::CMsgSOIDOwner.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSOMultipleObjectsFieldNames;
    if (objectsModified_.Count > 0) {
      output.WriteMessageArray(2, field_names[1], objectsModified_);
    }
    if (hasVersion) {
      output.WriteFixed64(3, field_names[4], Version);
    }
    if (objectsAdded_.Count > 0) {
      output.WriteMessageArray(4, field_names[0], objectsAdded_);
    }
    if (objectsRemoved_.Count > 0) {
      output.WriteMessageArray(5, field_names[2], objectsRemoved_);
    }
    if (hasOwnerSoid) {
      output.WriteMessage(6, field_names[3], OwnerSoid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CMsgSOMultipleObjects.Types.SingleObject element in ObjectsModifiedList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeFixed64Size(3, Version);
      }
      foreach (global::CMsgSOMultipleObjects.Types.SingleObject element in ObjectsAddedList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      foreach (global::CMsgSOMultipleObjects.Types.SingleObject element in ObjectsRemovedList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      if (hasOwnerSoid) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, OwnerSoid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSOMultipleObjects ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOMultipleObjects ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOMultipleObjects ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOMultipleObjects ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOMultipleObjects ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOMultipleObjects ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOMultipleObjects ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSOMultipleObjects ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSOMultipleObjects ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOMultipleObjects ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSOMultipleObjects MakeReadOnly() {
    objectsModified_.MakeReadOnly();
    objectsAdded_.MakeReadOnly();
    objectsRemoved_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSOMultipleObjects prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSOMultipleObjects, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSOMultipleObjects cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSOMultipleObjects result;
    
    private CMsgSOMultipleObjects PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSOMultipleObjects original = result;
        result = new CMsgSOMultipleObjects();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSOMultipleObjects MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSOMultipleObjects.Descriptor; }
    }
    
    public override CMsgSOMultipleObjects DefaultInstanceForType {
      get { return global::CMsgSOMultipleObjects.DefaultInstance; }
    }
    
    public override CMsgSOMultipleObjects BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSOMultipleObjects) {
        return MergeFrom((CMsgSOMultipleObjects) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSOMultipleObjects other) {
      if (other == global::CMsgSOMultipleObjects.DefaultInstance) return this;
      PrepareBuilder();
      if (other.objectsModified_.Count != 0) {
        result.objectsModified_.Add(other.objectsModified_);
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.objectsAdded_.Count != 0) {
        result.objectsAdded_.Add(other.objectsAdded_);
      }
      if (other.objectsRemoved_.Count != 0) {
        result.objectsRemoved_.Add(other.objectsRemoved_);
      }
      if (other.HasOwnerSoid) {
        MergeOwnerSoid(other.OwnerSoid);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSOMultipleObjectsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSOMultipleObjectsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.objectsModified_, global::CMsgSOMultipleObjects.Types.SingleObject.DefaultInstance, extensionRegistry);
            break;
          }
          case 25: {
            result.hasVersion = input.ReadFixed64(ref result.version_);
            break;
          }
          case 34: {
            input.ReadMessageArray(tag, field_name, result.objectsAdded_, global::CMsgSOMultipleObjects.Types.SingleObject.DefaultInstance, extensionRegistry);
            break;
          }
          case 42: {
            input.ReadMessageArray(tag, field_name, result.objectsRemoved_, global::CMsgSOMultipleObjects.Types.SingleObject.DefaultInstance, extensionRegistry);
            break;
          }
          case 50: {
            global::CMsgSOIDOwner.Builder subBuilder = global::CMsgSOIDOwner.CreateBuilder();
            if (result.hasOwnerSoid) {
              subBuilder.MergeFrom(OwnerSoid);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            OwnerSoid = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CMsgSOMultipleObjects.Types.SingleObject> ObjectsModifiedList {
      get { return PrepareBuilder().objectsModified_; }
    }
    public int ObjectsModifiedCount {
      get { return result.ObjectsModifiedCount; }
    }
    public global::CMsgSOMultipleObjects.Types.SingleObject GetObjectsModified(int index) {
      return result.GetObjectsModified(index);
    }
    public Builder SetObjectsModified(int index, global::CMsgSOMultipleObjects.Types.SingleObject value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objectsModified_[index] = value;
      return this;
    }
    public Builder SetObjectsModified(int index, global::CMsgSOMultipleObjects.Types.SingleObject.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objectsModified_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddObjectsModified(global::CMsgSOMultipleObjects.Types.SingleObject value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objectsModified_.Add(value);
      return this;
    }
    public Builder AddObjectsModified(global::CMsgSOMultipleObjects.Types.SingleObject.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objectsModified_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeObjectsModified(scg::IEnumerable<global::CMsgSOMultipleObjects.Types.SingleObject> values) {
      PrepareBuilder();
      result.objectsModified_.Add(values);
      return this;
    }
    public Builder ClearObjectsModified() {
      PrepareBuilder();
      result.objectsModified_.Clear();
      return this;
    }
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVersion(ulong value) {
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgSOMultipleObjects.Types.SingleObject> ObjectsAddedList {
      get { return PrepareBuilder().objectsAdded_; }
    }
    public int ObjectsAddedCount {
      get { return result.ObjectsAddedCount; }
    }
    public global::CMsgSOMultipleObjects.Types.SingleObject GetObjectsAdded(int index) {
      return result.GetObjectsAdded(index);
    }
    public Builder SetObjectsAdded(int index, global::CMsgSOMultipleObjects.Types.SingleObject value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objectsAdded_[index] = value;
      return this;
    }
    public Builder SetObjectsAdded(int index, global::CMsgSOMultipleObjects.Types.SingleObject.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objectsAdded_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddObjectsAdded(global::CMsgSOMultipleObjects.Types.SingleObject value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objectsAdded_.Add(value);
      return this;
    }
    public Builder AddObjectsAdded(global::CMsgSOMultipleObjects.Types.SingleObject.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objectsAdded_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeObjectsAdded(scg::IEnumerable<global::CMsgSOMultipleObjects.Types.SingleObject> values) {
      PrepareBuilder();
      result.objectsAdded_.Add(values);
      return this;
    }
    public Builder ClearObjectsAdded() {
      PrepareBuilder();
      result.objectsAdded_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgSOMultipleObjects.Types.SingleObject> ObjectsRemovedList {
      get { return PrepareBuilder().objectsRemoved_; }
    }
    public int ObjectsRemovedCount {
      get { return result.ObjectsRemovedCount; }
    }
    public global::CMsgSOMultipleObjects.Types.SingleObject GetObjectsRemoved(int index) {
      return result.GetObjectsRemoved(index);
    }
    public Builder SetObjectsRemoved(int index, global::CMsgSOMultipleObjects.Types.SingleObject value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objectsRemoved_[index] = value;
      return this;
    }
    public Builder SetObjectsRemoved(int index, global::CMsgSOMultipleObjects.Types.SingleObject.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objectsRemoved_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddObjectsRemoved(global::CMsgSOMultipleObjects.Types.SingleObject value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objectsRemoved_.Add(value);
      return this;
    }
    public Builder AddObjectsRemoved(global::CMsgSOMultipleObjects.Types.SingleObject.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objectsRemoved_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeObjectsRemoved(scg::IEnumerable<global::CMsgSOMultipleObjects.Types.SingleObject> values) {
      PrepareBuilder();
      result.objectsRemoved_.Add(values);
      return this;
    }
    public Builder ClearObjectsRemoved() {
      PrepareBuilder();
      result.objectsRemoved_.Clear();
      return this;
    }
    
    public bool HasOwnerSoid {
     get { return result.hasOwnerSoid; }
    }
    public global::CMsgSOIDOwner OwnerSoid {
      get { return result.OwnerSoid; }
      set { SetOwnerSoid(value); }
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = value;
      return this;
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = builderForValue.Build();
      return this;
    }
    public Builder MergeOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasOwnerSoid &&
          result.ownerSoid_ != global::CMsgSOIDOwner.DefaultInstance) {
          result.ownerSoid_ = global::CMsgSOIDOwner.CreateBuilder(result.ownerSoid_).MergeFrom(value).BuildPartial();
      } else {
        result.ownerSoid_ = value;
      }
      result.hasOwnerSoid = true;
      return this;
    }
    public Builder ClearOwnerSoid() {
      PrepareBuilder();
      result.hasOwnerSoid = false;
      result.ownerSoid_ = null;
      return this;
    }
  }
  static CMsgSOMultipleObjects() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSOCacheSubscribed : pb::GeneratedMessage<CMsgSOCacheSubscribed, CMsgSOCacheSubscribed.Builder> {
  private CMsgSOCacheSubscribed() { }
  private static readonly CMsgSOCacheSubscribed defaultInstance = new CMsgSOCacheSubscribed().MakeReadOnly();
  private static readonly string[] _cMsgSOCacheSubscribedFieldNames = new string[] { "objects", "owner_soid", "version" };
  private static readonly uint[] _cMsgSOCacheSubscribedFieldTags = new uint[] { 18, 34, 25 };
  public static CMsgSOCacheSubscribed DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSOCacheSubscribed DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSOCacheSubscribed ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheSubscribed__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSOCacheSubscribed, CMsgSOCacheSubscribed.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheSubscribed__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class SubscribedType : pb::GeneratedMessage<SubscribedType, SubscribedType.Builder> {
      private SubscribedType() { }
      private static readonly SubscribedType defaultInstance = new SubscribedType().MakeReadOnly();
      private static readonly string[] _subscribedTypeFieldNames = new string[] { "object_data", "type_id" };
      private static readonly uint[] _subscribedTypeFieldTags = new uint[] { 18, 8 };
      public static SubscribedType DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override SubscribedType DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override SubscribedType ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheSubscribed_SubscribedType__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<SubscribedType, SubscribedType.Builder> InternalFieldAccessors {
        get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheSubscribed_SubscribedType__FieldAccessorTable; }
      }
      
      public const int TypeIdFieldNumber = 1;
      private bool hasTypeId;
      private int typeId_;
      public bool HasTypeId {
        get { return hasTypeId; }
      }
      public int TypeId {
        get { return typeId_; }
      }
      
      public const int ObjectDataFieldNumber = 2;
      private pbc::PopsicleList<pb::ByteString> objectData_ = new pbc::PopsicleList<pb::ByteString>();
      public scg::IList<pb::ByteString> ObjectDataList {
        get { return pbc::Lists.AsReadOnly(objectData_); }
      }
      public int ObjectDataCount {
        get { return objectData_.Count; }
      }
      public pb::ByteString GetObjectData(int index) {
        return objectData_[index];
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _subscribedTypeFieldNames;
        if (hasTypeId) {
          output.WriteInt32(1, field_names[1], TypeId);
        }
        if (objectData_.Count > 0) {
          output.WriteBytesArray(2, field_names[0], objectData_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasTypeId) {
            size += pb::CodedOutputStream.ComputeInt32Size(1, TypeId);
          }
          {
            int dataSize = 0;
            foreach (pb::ByteString element in ObjectDataList) {
              dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
            }
            size += dataSize;
            size += 1 * objectData_.Count;
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static SubscribedType ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SubscribedType ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SubscribedType ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SubscribedType ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SubscribedType ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SubscribedType ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static SubscribedType ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static SubscribedType ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static SubscribedType ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SubscribedType ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private SubscribedType MakeReadOnly() {
        objectData_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(SubscribedType prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<SubscribedType, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(SubscribedType cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private SubscribedType result;
        
        private SubscribedType PrepareBuilder() {
          if (resultIsReadOnly) {
            SubscribedType original = result;
            result = new SubscribedType();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override SubscribedType MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgSOCacheSubscribed.Types.SubscribedType.Descriptor; }
        }
        
        public override SubscribedType DefaultInstanceForType {
          get { return global::CMsgSOCacheSubscribed.Types.SubscribedType.DefaultInstance; }
        }
        
        public override SubscribedType BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is SubscribedType) {
            return MergeFrom((SubscribedType) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(SubscribedType other) {
          if (other == global::CMsgSOCacheSubscribed.Types.SubscribedType.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasTypeId) {
            TypeId = other.TypeId;
          }
          if (other.objectData_.Count != 0) {
            result.objectData_.Add(other.objectData_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_subscribedTypeFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _subscribedTypeFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasTypeId = input.ReadInt32(ref result.typeId_);
                break;
              }
              case 18: {
                input.ReadBytesArray(tag, field_name, result.objectData_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasTypeId {
          get { return result.hasTypeId; }
        }
        public int TypeId {
          get { return result.TypeId; }
          set { SetTypeId(value); }
        }
        public Builder SetTypeId(int value) {
          PrepareBuilder();
          result.hasTypeId = true;
          result.typeId_ = value;
          return this;
        }
        public Builder ClearTypeId() {
          PrepareBuilder();
          result.hasTypeId = false;
          result.typeId_ = 0;
          return this;
        }
        
        public pbc::IPopsicleList<pb::ByteString> ObjectDataList {
          get { return PrepareBuilder().objectData_; }
        }
        public int ObjectDataCount {
          get { return result.ObjectDataCount; }
        }
        public pb::ByteString GetObjectData(int index) {
          return result.GetObjectData(index);
        }
        public Builder SetObjectData(int index, pb::ByteString value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.objectData_[index] = value;
          return this;
        }
        public Builder AddObjectData(pb::ByteString value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.objectData_.Add(value);
          return this;
        }
        public Builder AddRangeObjectData(scg::IEnumerable<pb::ByteString> values) {
          PrepareBuilder();
          result.objectData_.Add(values);
          return this;
        }
        public Builder ClearObjectData() {
          PrepareBuilder();
          result.objectData_.Clear();
          return this;
        }
      }
      static SubscribedType() {
        object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int ObjectsFieldNumber = 2;
  private pbc::PopsicleList<global::CMsgSOCacheSubscribed.Types.SubscribedType> objects_ = new pbc::PopsicleList<global::CMsgSOCacheSubscribed.Types.SubscribedType>();
  public scg::IList<global::CMsgSOCacheSubscribed.Types.SubscribedType> ObjectsList {
    get { return objects_; }
  }
  public int ObjectsCount {
    get { return objects_.Count; }
  }
  public global::CMsgSOCacheSubscribed.Types.SubscribedType GetObjects(int index) {
    return objects_[index];
  }
  
  public const int VersionFieldNumber = 3;
  private bool hasVersion;
  private ulong version_;
  public bool HasVersion {
    get { return hasVersion; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Version {
    get { return version_; }
  }
  
  public const int OwnerSoidFieldNumber = 4;
  private bool hasOwnerSoid;
  private global::CMsgSOIDOwner ownerSoid_;
  public bool HasOwnerSoid {
    get { return hasOwnerSoid; }
  }
  public global::CMsgSOIDOwner OwnerSoid {
    get { return ownerSoid_ ?? global::CMsgSOIDOwner.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSOCacheSubscribedFieldNames;
    if (objects_.Count > 0) {
      output.WriteMessageArray(2, field_names[0], objects_);
    }
    if (hasVersion) {
      output.WriteFixed64(3, field_names[2], Version);
    }
    if (hasOwnerSoid) {
      output.WriteMessage(4, field_names[1], OwnerSoid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CMsgSOCacheSubscribed.Types.SubscribedType element in ObjectsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeFixed64Size(3, Version);
      }
      if (hasOwnerSoid) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, OwnerSoid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSOCacheSubscribed ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheSubscribed ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheSubscribed ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheSubscribed ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheSubscribed ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheSubscribed ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheSubscribed ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSOCacheSubscribed ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSOCacheSubscribed ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheSubscribed ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSOCacheSubscribed MakeReadOnly() {
    objects_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSOCacheSubscribed prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSOCacheSubscribed, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSOCacheSubscribed cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSOCacheSubscribed result;
    
    private CMsgSOCacheSubscribed PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSOCacheSubscribed original = result;
        result = new CMsgSOCacheSubscribed();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSOCacheSubscribed MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSOCacheSubscribed.Descriptor; }
    }
    
    public override CMsgSOCacheSubscribed DefaultInstanceForType {
      get { return global::CMsgSOCacheSubscribed.DefaultInstance; }
    }
    
    public override CMsgSOCacheSubscribed BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSOCacheSubscribed) {
        return MergeFrom((CMsgSOCacheSubscribed) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSOCacheSubscribed other) {
      if (other == global::CMsgSOCacheSubscribed.DefaultInstance) return this;
      PrepareBuilder();
      if (other.objects_.Count != 0) {
        result.objects_.Add(other.objects_);
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasOwnerSoid) {
        MergeOwnerSoid(other.OwnerSoid);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSOCacheSubscribedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSOCacheSubscribedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.objects_, global::CMsgSOCacheSubscribed.Types.SubscribedType.DefaultInstance, extensionRegistry);
            break;
          }
          case 25: {
            result.hasVersion = input.ReadFixed64(ref result.version_);
            break;
          }
          case 34: {
            global::CMsgSOIDOwner.Builder subBuilder = global::CMsgSOIDOwner.CreateBuilder();
            if (result.hasOwnerSoid) {
              subBuilder.MergeFrom(OwnerSoid);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            OwnerSoid = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CMsgSOCacheSubscribed.Types.SubscribedType> ObjectsList {
      get { return PrepareBuilder().objects_; }
    }
    public int ObjectsCount {
      get { return result.ObjectsCount; }
    }
    public global::CMsgSOCacheSubscribed.Types.SubscribedType GetObjects(int index) {
      return result.GetObjects(index);
    }
    public Builder SetObjects(int index, global::CMsgSOCacheSubscribed.Types.SubscribedType value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objects_[index] = value;
      return this;
    }
    public Builder SetObjects(int index, global::CMsgSOCacheSubscribed.Types.SubscribedType.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objects_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddObjects(global::CMsgSOCacheSubscribed.Types.SubscribedType value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objects_.Add(value);
      return this;
    }
    public Builder AddObjects(global::CMsgSOCacheSubscribed.Types.SubscribedType.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objects_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeObjects(scg::IEnumerable<global::CMsgSOCacheSubscribed.Types.SubscribedType> values) {
      PrepareBuilder();
      result.objects_.Add(values);
      return this;
    }
    public Builder ClearObjects() {
      PrepareBuilder();
      result.objects_.Clear();
      return this;
    }
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVersion(ulong value) {
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = 0;
      return this;
    }
    
    public bool HasOwnerSoid {
     get { return result.hasOwnerSoid; }
    }
    public global::CMsgSOIDOwner OwnerSoid {
      get { return result.OwnerSoid; }
      set { SetOwnerSoid(value); }
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = value;
      return this;
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = builderForValue.Build();
      return this;
    }
    public Builder MergeOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasOwnerSoid &&
          result.ownerSoid_ != global::CMsgSOIDOwner.DefaultInstance) {
          result.ownerSoid_ = global::CMsgSOIDOwner.CreateBuilder(result.ownerSoid_).MergeFrom(value).BuildPartial();
      } else {
        result.ownerSoid_ = value;
      }
      result.hasOwnerSoid = true;
      return this;
    }
    public Builder ClearOwnerSoid() {
      PrepareBuilder();
      result.hasOwnerSoid = false;
      result.ownerSoid_ = null;
      return this;
    }
  }
  static CMsgSOCacheSubscribed() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSOCacheUnsubscribed : pb::GeneratedMessage<CMsgSOCacheUnsubscribed, CMsgSOCacheUnsubscribed.Builder> {
  private CMsgSOCacheUnsubscribed() { }
  private static readonly CMsgSOCacheUnsubscribed defaultInstance = new CMsgSOCacheUnsubscribed().MakeReadOnly();
  private static readonly string[] _cMsgSOCacheUnsubscribedFieldNames = new string[] { "owner_soid" };
  private static readonly uint[] _cMsgSOCacheUnsubscribedFieldTags = new uint[] { 18 };
  public static CMsgSOCacheUnsubscribed DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSOCacheUnsubscribed DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSOCacheUnsubscribed ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheUnsubscribed__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSOCacheUnsubscribed, CMsgSOCacheUnsubscribed.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheUnsubscribed__FieldAccessorTable; }
  }
  
  public const int OwnerSoidFieldNumber = 2;
  private bool hasOwnerSoid;
  private global::CMsgSOIDOwner ownerSoid_;
  public bool HasOwnerSoid {
    get { return hasOwnerSoid; }
  }
  public global::CMsgSOIDOwner OwnerSoid {
    get { return ownerSoid_ ?? global::CMsgSOIDOwner.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSOCacheUnsubscribedFieldNames;
    if (hasOwnerSoid) {
      output.WriteMessage(2, field_names[0], OwnerSoid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOwnerSoid) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, OwnerSoid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSOCacheUnsubscribed ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheUnsubscribed ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheUnsubscribed ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheUnsubscribed ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheUnsubscribed ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheUnsubscribed ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheUnsubscribed ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSOCacheUnsubscribed ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSOCacheUnsubscribed ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheUnsubscribed ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSOCacheUnsubscribed MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSOCacheUnsubscribed prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSOCacheUnsubscribed, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSOCacheUnsubscribed cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSOCacheUnsubscribed result;
    
    private CMsgSOCacheUnsubscribed PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSOCacheUnsubscribed original = result;
        result = new CMsgSOCacheUnsubscribed();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSOCacheUnsubscribed MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSOCacheUnsubscribed.Descriptor; }
    }
    
    public override CMsgSOCacheUnsubscribed DefaultInstanceForType {
      get { return global::CMsgSOCacheUnsubscribed.DefaultInstance; }
    }
    
    public override CMsgSOCacheUnsubscribed BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSOCacheUnsubscribed) {
        return MergeFrom((CMsgSOCacheUnsubscribed) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSOCacheUnsubscribed other) {
      if (other == global::CMsgSOCacheUnsubscribed.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasOwnerSoid) {
        MergeOwnerSoid(other.OwnerSoid);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSOCacheUnsubscribedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSOCacheUnsubscribedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 18: {
            global::CMsgSOIDOwner.Builder subBuilder = global::CMsgSOIDOwner.CreateBuilder();
            if (result.hasOwnerSoid) {
              subBuilder.MergeFrom(OwnerSoid);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            OwnerSoid = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasOwnerSoid {
     get { return result.hasOwnerSoid; }
    }
    public global::CMsgSOIDOwner OwnerSoid {
      get { return result.OwnerSoid; }
      set { SetOwnerSoid(value); }
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = value;
      return this;
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = builderForValue.Build();
      return this;
    }
    public Builder MergeOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasOwnerSoid &&
          result.ownerSoid_ != global::CMsgSOIDOwner.DefaultInstance) {
          result.ownerSoid_ = global::CMsgSOIDOwner.CreateBuilder(result.ownerSoid_).MergeFrom(value).BuildPartial();
      } else {
        result.ownerSoid_ = value;
      }
      result.hasOwnerSoid = true;
      return this;
    }
    public Builder ClearOwnerSoid() {
      PrepareBuilder();
      result.hasOwnerSoid = false;
      result.ownerSoid_ = null;
      return this;
    }
  }
  static CMsgSOCacheUnsubscribed() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSOCacheSubscriptionCheck : pb::GeneratedMessage<CMsgSOCacheSubscriptionCheck, CMsgSOCacheSubscriptionCheck.Builder> {
  private CMsgSOCacheSubscriptionCheck() { }
  private static readonly CMsgSOCacheSubscriptionCheck defaultInstance = new CMsgSOCacheSubscriptionCheck().MakeReadOnly();
  private static readonly string[] _cMsgSOCacheSubscriptionCheckFieldNames = new string[] { "owner_soid", "version" };
  private static readonly uint[] _cMsgSOCacheSubscriptionCheckFieldTags = new uint[] { 26, 17 };
  public static CMsgSOCacheSubscriptionCheck DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSOCacheSubscriptionCheck DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSOCacheSubscriptionCheck ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheSubscriptionCheck__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSOCacheSubscriptionCheck, CMsgSOCacheSubscriptionCheck.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheSubscriptionCheck__FieldAccessorTable; }
  }
  
  public const int VersionFieldNumber = 2;
  private bool hasVersion;
  private ulong version_;
  public bool HasVersion {
    get { return hasVersion; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Version {
    get { return version_; }
  }
  
  public const int OwnerSoidFieldNumber = 3;
  private bool hasOwnerSoid;
  private global::CMsgSOIDOwner ownerSoid_;
  public bool HasOwnerSoid {
    get { return hasOwnerSoid; }
  }
  public global::CMsgSOIDOwner OwnerSoid {
    get { return ownerSoid_ ?? global::CMsgSOIDOwner.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSOCacheSubscriptionCheckFieldNames;
    if (hasVersion) {
      output.WriteFixed64(2, field_names[1], Version);
    }
    if (hasOwnerSoid) {
      output.WriteMessage(3, field_names[0], OwnerSoid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeFixed64Size(2, Version);
      }
      if (hasOwnerSoid) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, OwnerSoid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSOCacheSubscriptionCheck ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionCheck ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionCheck ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionCheck ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionCheck ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionCheck ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionCheck ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionCheck ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionCheck ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionCheck ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSOCacheSubscriptionCheck MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSOCacheSubscriptionCheck prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSOCacheSubscriptionCheck, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSOCacheSubscriptionCheck cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSOCacheSubscriptionCheck result;
    
    private CMsgSOCacheSubscriptionCheck PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSOCacheSubscriptionCheck original = result;
        result = new CMsgSOCacheSubscriptionCheck();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSOCacheSubscriptionCheck MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSOCacheSubscriptionCheck.Descriptor; }
    }
    
    public override CMsgSOCacheSubscriptionCheck DefaultInstanceForType {
      get { return global::CMsgSOCacheSubscriptionCheck.DefaultInstance; }
    }
    
    public override CMsgSOCacheSubscriptionCheck BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSOCacheSubscriptionCheck) {
        return MergeFrom((CMsgSOCacheSubscriptionCheck) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSOCacheSubscriptionCheck other) {
      if (other == global::CMsgSOCacheSubscriptionCheck.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasOwnerSoid) {
        MergeOwnerSoid(other.OwnerSoid);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSOCacheSubscriptionCheckFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSOCacheSubscriptionCheckFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 17: {
            result.hasVersion = input.ReadFixed64(ref result.version_);
            break;
          }
          case 26: {
            global::CMsgSOIDOwner.Builder subBuilder = global::CMsgSOIDOwner.CreateBuilder();
            if (result.hasOwnerSoid) {
              subBuilder.MergeFrom(OwnerSoid);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            OwnerSoid = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVersion(ulong value) {
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = 0;
      return this;
    }
    
    public bool HasOwnerSoid {
     get { return result.hasOwnerSoid; }
    }
    public global::CMsgSOIDOwner OwnerSoid {
      get { return result.OwnerSoid; }
      set { SetOwnerSoid(value); }
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = value;
      return this;
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = builderForValue.Build();
      return this;
    }
    public Builder MergeOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasOwnerSoid &&
          result.ownerSoid_ != global::CMsgSOIDOwner.DefaultInstance) {
          result.ownerSoid_ = global::CMsgSOIDOwner.CreateBuilder(result.ownerSoid_).MergeFrom(value).BuildPartial();
      } else {
        result.ownerSoid_ = value;
      }
      result.hasOwnerSoid = true;
      return this;
    }
    public Builder ClearOwnerSoid() {
      PrepareBuilder();
      result.hasOwnerSoid = false;
      result.ownerSoid_ = null;
      return this;
    }
  }
  static CMsgSOCacheSubscriptionCheck() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSOCacheSubscriptionRefresh : pb::GeneratedMessage<CMsgSOCacheSubscriptionRefresh, CMsgSOCacheSubscriptionRefresh.Builder> {
  private CMsgSOCacheSubscriptionRefresh() { }
  private static readonly CMsgSOCacheSubscriptionRefresh defaultInstance = new CMsgSOCacheSubscriptionRefresh().MakeReadOnly();
  private static readonly string[] _cMsgSOCacheSubscriptionRefreshFieldNames = new string[] { "owner_soid" };
  private static readonly uint[] _cMsgSOCacheSubscriptionRefreshFieldTags = new uint[] { 18 };
  public static CMsgSOCacheSubscriptionRefresh DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSOCacheSubscriptionRefresh DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSOCacheSubscriptionRefresh ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheSubscriptionRefresh__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSOCacheSubscriptionRefresh, CMsgSOCacheSubscriptionRefresh.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheSubscriptionRefresh__FieldAccessorTable; }
  }
  
  public const int OwnerSoidFieldNumber = 2;
  private bool hasOwnerSoid;
  private global::CMsgSOIDOwner ownerSoid_;
  public bool HasOwnerSoid {
    get { return hasOwnerSoid; }
  }
  public global::CMsgSOIDOwner OwnerSoid {
    get { return ownerSoid_ ?? global::CMsgSOIDOwner.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSOCacheSubscriptionRefreshFieldNames;
    if (hasOwnerSoid) {
      output.WriteMessage(2, field_names[0], OwnerSoid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOwnerSoid) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, OwnerSoid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSOCacheSubscriptionRefresh ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionRefresh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionRefresh ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionRefresh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionRefresh ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionRefresh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionRefresh ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionRefresh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionRefresh ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheSubscriptionRefresh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSOCacheSubscriptionRefresh MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSOCacheSubscriptionRefresh prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSOCacheSubscriptionRefresh, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSOCacheSubscriptionRefresh cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSOCacheSubscriptionRefresh result;
    
    private CMsgSOCacheSubscriptionRefresh PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSOCacheSubscriptionRefresh original = result;
        result = new CMsgSOCacheSubscriptionRefresh();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSOCacheSubscriptionRefresh MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSOCacheSubscriptionRefresh.Descriptor; }
    }
    
    public override CMsgSOCacheSubscriptionRefresh DefaultInstanceForType {
      get { return global::CMsgSOCacheSubscriptionRefresh.DefaultInstance; }
    }
    
    public override CMsgSOCacheSubscriptionRefresh BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSOCacheSubscriptionRefresh) {
        return MergeFrom((CMsgSOCacheSubscriptionRefresh) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSOCacheSubscriptionRefresh other) {
      if (other == global::CMsgSOCacheSubscriptionRefresh.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasOwnerSoid) {
        MergeOwnerSoid(other.OwnerSoid);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSOCacheSubscriptionRefreshFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSOCacheSubscriptionRefreshFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 18: {
            global::CMsgSOIDOwner.Builder subBuilder = global::CMsgSOIDOwner.CreateBuilder();
            if (result.hasOwnerSoid) {
              subBuilder.MergeFrom(OwnerSoid);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            OwnerSoid = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasOwnerSoid {
     get { return result.hasOwnerSoid; }
    }
    public global::CMsgSOIDOwner OwnerSoid {
      get { return result.OwnerSoid; }
      set { SetOwnerSoid(value); }
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = value;
      return this;
    }
    public Builder SetOwnerSoid(global::CMsgSOIDOwner.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasOwnerSoid = true;
      result.ownerSoid_ = builderForValue.Build();
      return this;
    }
    public Builder MergeOwnerSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasOwnerSoid &&
          result.ownerSoid_ != global::CMsgSOIDOwner.DefaultInstance) {
          result.ownerSoid_ = global::CMsgSOIDOwner.CreateBuilder(result.ownerSoid_).MergeFrom(value).BuildPartial();
      } else {
        result.ownerSoid_ = value;
      }
      result.hasOwnerSoid = true;
      return this;
    }
    public Builder ClearOwnerSoid() {
      PrepareBuilder();
      result.hasOwnerSoid = false;
      result.ownerSoid_ = null;
      return this;
    }
  }
  static CMsgSOCacheSubscriptionRefresh() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSOCacheVersion : pb::GeneratedMessage<CMsgSOCacheVersion, CMsgSOCacheVersion.Builder> {
  private CMsgSOCacheVersion() { }
  private static readonly CMsgSOCacheVersion defaultInstance = new CMsgSOCacheVersion().MakeReadOnly();
  private static readonly string[] _cMsgSOCacheVersionFieldNames = new string[] { "version" };
  private static readonly uint[] _cMsgSOCacheVersionFieldTags = new uint[] { 9 };
  public static CMsgSOCacheVersion DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSOCacheVersion DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSOCacheVersion ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheVersion__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSOCacheVersion, CMsgSOCacheVersion.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheVersion__FieldAccessorTable; }
  }
  
  public const int VersionFieldNumber = 1;
  private bool hasVersion;
  private ulong version_;
  public bool HasVersion {
    get { return hasVersion; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Version {
    get { return version_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSOCacheVersionFieldNames;
    if (hasVersion) {
      output.WriteFixed64(1, field_names[0], Version);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, Version);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSOCacheVersion ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheVersion ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheVersion ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheVersion ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheVersion ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheVersion ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheVersion ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSOCacheVersion ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSOCacheVersion ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheVersion ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSOCacheVersion MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSOCacheVersion prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSOCacheVersion, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSOCacheVersion cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSOCacheVersion result;
    
    private CMsgSOCacheVersion PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSOCacheVersion original = result;
        result = new CMsgSOCacheVersion();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSOCacheVersion MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSOCacheVersion.Descriptor; }
    }
    
    public override CMsgSOCacheVersion DefaultInstanceForType {
      get { return global::CMsgSOCacheVersion.DefaultInstance; }
    }
    
    public override CMsgSOCacheVersion BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSOCacheVersion) {
        return MergeFrom((CMsgSOCacheVersion) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSOCacheVersion other) {
      if (other == global::CMsgSOCacheVersion.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasVersion) {
        Version = other.Version;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSOCacheVersionFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSOCacheVersionFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasVersion = input.ReadFixed64(ref result.version_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVersion(ulong value) {
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = 0;
      return this;
    }
  }
  static CMsgSOCacheVersion() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAccountDetails : pb::GeneratedMessage<CMsgAccountDetails, CMsgAccountDetails.Builder> {
  private CMsgAccountDetails() { }
  private static readonly CMsgAccountDetails defaultInstance = new CMsgAccountDetails().MakeReadOnly();
  private static readonly string[] _cMsgAccountDetailsFieldNames = new string[] { "account_locked", "account_name", "community_banned", "cyber_cafe", "eligible_for_community_market", "free_trial_account", "limited", "low_violence", "package", "public_inventory", "public_profile", "school_account", "subscribed", "time_cached", "trade_banned", "trusted", "vac_banned", "valid" };
  private static readonly uint[] _cMsgAccountDetailsFieldTags = new uint[] { 128, 18, 136, 56, 152, 72, 96, 88, 112, 40, 32, 64, 80, 125, 144, 104, 48, 8 };
  public static CMsgAccountDetails DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAccountDetails DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAccountDetails ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgAccountDetails__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAccountDetails, CMsgAccountDetails.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgAccountDetails__FieldAccessorTable; }
  }
  
  public const int ValidFieldNumber = 1;
  private bool hasValid;
  private bool valid_;
  public bool HasValid {
    get { return hasValid; }
  }
  public bool Valid {
    get { return valid_; }
  }
  
  public const int AccountNameFieldNumber = 2;
  private bool hasAccountName;
  private string accountName_ = "";
  public bool HasAccountName {
    get { return hasAccountName; }
  }
  public string AccountName {
    get { return accountName_; }
  }
  
  public const int PublicProfileFieldNumber = 4;
  private bool hasPublicProfile;
  private bool publicProfile_;
  public bool HasPublicProfile {
    get { return hasPublicProfile; }
  }
  public bool PublicProfile {
    get { return publicProfile_; }
  }
  
  public const int PublicInventoryFieldNumber = 5;
  private bool hasPublicInventory;
  private bool publicInventory_;
  public bool HasPublicInventory {
    get { return hasPublicInventory; }
  }
  public bool PublicInventory {
    get { return publicInventory_; }
  }
  
  public const int VacBannedFieldNumber = 6;
  private bool hasVacBanned;
  private bool vacBanned_;
  public bool HasVacBanned {
    get { return hasVacBanned; }
  }
  public bool VacBanned {
    get { return vacBanned_; }
  }
  
  public const int CyberCafeFieldNumber = 7;
  private bool hasCyberCafe;
  private bool cyberCafe_;
  public bool HasCyberCafe {
    get { return hasCyberCafe; }
  }
  public bool CyberCafe {
    get { return cyberCafe_; }
  }
  
  public const int SchoolAccountFieldNumber = 8;
  private bool hasSchoolAccount;
  private bool schoolAccount_;
  public bool HasSchoolAccount {
    get { return hasSchoolAccount; }
  }
  public bool SchoolAccount {
    get { return schoolAccount_; }
  }
  
  public const int FreeTrialAccountFieldNumber = 9;
  private bool hasFreeTrialAccount;
  private bool freeTrialAccount_;
  public bool HasFreeTrialAccount {
    get { return hasFreeTrialAccount; }
  }
  public bool FreeTrialAccount {
    get { return freeTrialAccount_; }
  }
  
  public const int SubscribedFieldNumber = 10;
  private bool hasSubscribed;
  private bool subscribed_;
  public bool HasSubscribed {
    get { return hasSubscribed; }
  }
  public bool Subscribed {
    get { return subscribed_; }
  }
  
  public const int LowViolenceFieldNumber = 11;
  private bool hasLowViolence;
  private bool lowViolence_;
  public bool HasLowViolence {
    get { return hasLowViolence; }
  }
  public bool LowViolence {
    get { return lowViolence_; }
  }
  
  public const int LimitedFieldNumber = 12;
  private bool hasLimited;
  private bool limited_;
  public bool HasLimited {
    get { return hasLimited; }
  }
  public bool Limited {
    get { return limited_; }
  }
  
  public const int TrustedFieldNumber = 13;
  private bool hasTrusted;
  private bool trusted_;
  public bool HasTrusted {
    get { return hasTrusted; }
  }
  public bool Trusted {
    get { return trusted_; }
  }
  
  public const int PackageFieldNumber = 14;
  private bool hasPackage;
  private uint package_;
  public bool HasPackage {
    get { return hasPackage; }
  }
  [global::System.CLSCompliant(false)]
  public uint Package {
    get { return package_; }
  }
  
  public const int TimeCachedFieldNumber = 15;
  private bool hasTimeCached;
  private uint timeCached_;
  public bool HasTimeCached {
    get { return hasTimeCached; }
  }
  [global::System.CLSCompliant(false)]
  public uint TimeCached {
    get { return timeCached_; }
  }
  
  public const int AccountLockedFieldNumber = 16;
  private bool hasAccountLocked;
  private bool accountLocked_;
  public bool HasAccountLocked {
    get { return hasAccountLocked; }
  }
  public bool AccountLocked {
    get { return accountLocked_; }
  }
  
  public const int CommunityBannedFieldNumber = 17;
  private bool hasCommunityBanned;
  private bool communityBanned_;
  public bool HasCommunityBanned {
    get { return hasCommunityBanned; }
  }
  public bool CommunityBanned {
    get { return communityBanned_; }
  }
  
  public const int TradeBannedFieldNumber = 18;
  private bool hasTradeBanned;
  private bool tradeBanned_;
  public bool HasTradeBanned {
    get { return hasTradeBanned; }
  }
  public bool TradeBanned {
    get { return tradeBanned_; }
  }
  
  public const int EligibleForCommunityMarketFieldNumber = 19;
  private bool hasEligibleForCommunityMarket;
  private bool eligibleForCommunityMarket_;
  public bool HasEligibleForCommunityMarket {
    get { return hasEligibleForCommunityMarket; }
  }
  public bool EligibleForCommunityMarket {
    get { return eligibleForCommunityMarket_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAccountDetailsFieldNames;
    if (hasValid) {
      output.WriteBool(1, field_names[17], Valid);
    }
    if (hasAccountName) {
      output.WriteString(2, field_names[1], AccountName);
    }
    if (hasPublicProfile) {
      output.WriteBool(4, field_names[10], PublicProfile);
    }
    if (hasPublicInventory) {
      output.WriteBool(5, field_names[9], PublicInventory);
    }
    if (hasVacBanned) {
      output.WriteBool(6, field_names[16], VacBanned);
    }
    if (hasCyberCafe) {
      output.WriteBool(7, field_names[3], CyberCafe);
    }
    if (hasSchoolAccount) {
      output.WriteBool(8, field_names[11], SchoolAccount);
    }
    if (hasFreeTrialAccount) {
      output.WriteBool(9, field_names[5], FreeTrialAccount);
    }
    if (hasSubscribed) {
      output.WriteBool(10, field_names[12], Subscribed);
    }
    if (hasLowViolence) {
      output.WriteBool(11, field_names[7], LowViolence);
    }
    if (hasLimited) {
      output.WriteBool(12, field_names[6], Limited);
    }
    if (hasTrusted) {
      output.WriteBool(13, field_names[15], Trusted);
    }
    if (hasPackage) {
      output.WriteUInt32(14, field_names[8], Package);
    }
    if (hasTimeCached) {
      output.WriteFixed32(15, field_names[13], TimeCached);
    }
    if (hasAccountLocked) {
      output.WriteBool(16, field_names[0], AccountLocked);
    }
    if (hasCommunityBanned) {
      output.WriteBool(17, field_names[2], CommunityBanned);
    }
    if (hasTradeBanned) {
      output.WriteBool(18, field_names[14], TradeBanned);
    }
    if (hasEligibleForCommunityMarket) {
      output.WriteBool(19, field_names[4], EligibleForCommunityMarket);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasValid) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, Valid);
      }
      if (hasAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, AccountName);
      }
      if (hasPublicProfile) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, PublicProfile);
      }
      if (hasPublicInventory) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, PublicInventory);
      }
      if (hasVacBanned) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, VacBanned);
      }
      if (hasCyberCafe) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, CyberCafe);
      }
      if (hasSchoolAccount) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, SchoolAccount);
      }
      if (hasFreeTrialAccount) {
        size += pb::CodedOutputStream.ComputeBoolSize(9, FreeTrialAccount);
      }
      if (hasSubscribed) {
        size += pb::CodedOutputStream.ComputeBoolSize(10, Subscribed);
      }
      if (hasLowViolence) {
        size += pb::CodedOutputStream.ComputeBoolSize(11, LowViolence);
      }
      if (hasLimited) {
        size += pb::CodedOutputStream.ComputeBoolSize(12, Limited);
      }
      if (hasTrusted) {
        size += pb::CodedOutputStream.ComputeBoolSize(13, Trusted);
      }
      if (hasPackage) {
        size += pb::CodedOutputStream.ComputeUInt32Size(14, Package);
      }
      if (hasTimeCached) {
        size += pb::CodedOutputStream.ComputeFixed32Size(15, TimeCached);
      }
      if (hasAccountLocked) {
        size += pb::CodedOutputStream.ComputeBoolSize(16, AccountLocked);
      }
      if (hasCommunityBanned) {
        size += pb::CodedOutputStream.ComputeBoolSize(17, CommunityBanned);
      }
      if (hasTradeBanned) {
        size += pb::CodedOutputStream.ComputeBoolSize(18, TradeBanned);
      }
      if (hasEligibleForCommunityMarket) {
        size += pb::CodedOutputStream.ComputeBoolSize(19, EligibleForCommunityMarket);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAccountDetails ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAccountDetails ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAccountDetails ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAccountDetails ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAccountDetails ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAccountDetails ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAccountDetails ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAccountDetails ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAccountDetails ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAccountDetails ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAccountDetails MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAccountDetails prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAccountDetails, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAccountDetails cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAccountDetails result;
    
    private CMsgAccountDetails PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAccountDetails original = result;
        result = new CMsgAccountDetails();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAccountDetails MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAccountDetails.Descriptor; }
    }
    
    public override CMsgAccountDetails DefaultInstanceForType {
      get { return global::CMsgAccountDetails.DefaultInstance; }
    }
    
    public override CMsgAccountDetails BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAccountDetails) {
        return MergeFrom((CMsgAccountDetails) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAccountDetails other) {
      if (other == global::CMsgAccountDetails.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasValid) {
        Valid = other.Valid;
      }
      if (other.HasAccountName) {
        AccountName = other.AccountName;
      }
      if (other.HasPublicProfile) {
        PublicProfile = other.PublicProfile;
      }
      if (other.HasPublicInventory) {
        PublicInventory = other.PublicInventory;
      }
      if (other.HasVacBanned) {
        VacBanned = other.VacBanned;
      }
      if (other.HasCyberCafe) {
        CyberCafe = other.CyberCafe;
      }
      if (other.HasSchoolAccount) {
        SchoolAccount = other.SchoolAccount;
      }
      if (other.HasFreeTrialAccount) {
        FreeTrialAccount = other.FreeTrialAccount;
      }
      if (other.HasSubscribed) {
        Subscribed = other.Subscribed;
      }
      if (other.HasLowViolence) {
        LowViolence = other.LowViolence;
      }
      if (other.HasLimited) {
        Limited = other.Limited;
      }
      if (other.HasTrusted) {
        Trusted = other.Trusted;
      }
      if (other.HasPackage) {
        Package = other.Package;
      }
      if (other.HasTimeCached) {
        TimeCached = other.TimeCached;
      }
      if (other.HasAccountLocked) {
        AccountLocked = other.AccountLocked;
      }
      if (other.HasCommunityBanned) {
        CommunityBanned = other.CommunityBanned;
      }
      if (other.HasTradeBanned) {
        TradeBanned = other.TradeBanned;
      }
      if (other.HasEligibleForCommunityMarket) {
        EligibleForCommunityMarket = other.EligibleForCommunityMarket;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAccountDetailsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAccountDetailsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasValid = input.ReadBool(ref result.valid_);
            break;
          }
          case 18: {
            result.hasAccountName = input.ReadString(ref result.accountName_);
            break;
          }
          case 32: {
            result.hasPublicProfile = input.ReadBool(ref result.publicProfile_);
            break;
          }
          case 40: {
            result.hasPublicInventory = input.ReadBool(ref result.publicInventory_);
            break;
          }
          case 48: {
            result.hasVacBanned = input.ReadBool(ref result.vacBanned_);
            break;
          }
          case 56: {
            result.hasCyberCafe = input.ReadBool(ref result.cyberCafe_);
            break;
          }
          case 64: {
            result.hasSchoolAccount = input.ReadBool(ref result.schoolAccount_);
            break;
          }
          case 72: {
            result.hasFreeTrialAccount = input.ReadBool(ref result.freeTrialAccount_);
            break;
          }
          case 80: {
            result.hasSubscribed = input.ReadBool(ref result.subscribed_);
            break;
          }
          case 88: {
            result.hasLowViolence = input.ReadBool(ref result.lowViolence_);
            break;
          }
          case 96: {
            result.hasLimited = input.ReadBool(ref result.limited_);
            break;
          }
          case 104: {
            result.hasTrusted = input.ReadBool(ref result.trusted_);
            break;
          }
          case 112: {
            result.hasPackage = input.ReadUInt32(ref result.package_);
            break;
          }
          case 125: {
            result.hasTimeCached = input.ReadFixed32(ref result.timeCached_);
            break;
          }
          case 128: {
            result.hasAccountLocked = input.ReadBool(ref result.accountLocked_);
            break;
          }
          case 136: {
            result.hasCommunityBanned = input.ReadBool(ref result.communityBanned_);
            break;
          }
          case 144: {
            result.hasTradeBanned = input.ReadBool(ref result.tradeBanned_);
            break;
          }
          case 152: {
            result.hasEligibleForCommunityMarket = input.ReadBool(ref result.eligibleForCommunityMarket_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasValid {
      get { return result.hasValid; }
    }
    public bool Valid {
      get { return result.Valid; }
      set { SetValid(value); }
    }
    public Builder SetValid(bool value) {
      PrepareBuilder();
      result.hasValid = true;
      result.valid_ = value;
      return this;
    }
    public Builder ClearValid() {
      PrepareBuilder();
      result.hasValid = false;
      result.valid_ = false;
      return this;
    }
    
    public bool HasAccountName {
      get { return result.hasAccountName; }
    }
    public string AccountName {
      get { return result.AccountName; }
      set { SetAccountName(value); }
    }
    public Builder SetAccountName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAccountName = true;
      result.accountName_ = value;
      return this;
    }
    public Builder ClearAccountName() {
      PrepareBuilder();
      result.hasAccountName = false;
      result.accountName_ = "";
      return this;
    }
    
    public bool HasPublicProfile {
      get { return result.hasPublicProfile; }
    }
    public bool PublicProfile {
      get { return result.PublicProfile; }
      set { SetPublicProfile(value); }
    }
    public Builder SetPublicProfile(bool value) {
      PrepareBuilder();
      result.hasPublicProfile = true;
      result.publicProfile_ = value;
      return this;
    }
    public Builder ClearPublicProfile() {
      PrepareBuilder();
      result.hasPublicProfile = false;
      result.publicProfile_ = false;
      return this;
    }
    
    public bool HasPublicInventory {
      get { return result.hasPublicInventory; }
    }
    public bool PublicInventory {
      get { return result.PublicInventory; }
      set { SetPublicInventory(value); }
    }
    public Builder SetPublicInventory(bool value) {
      PrepareBuilder();
      result.hasPublicInventory = true;
      result.publicInventory_ = value;
      return this;
    }
    public Builder ClearPublicInventory() {
      PrepareBuilder();
      result.hasPublicInventory = false;
      result.publicInventory_ = false;
      return this;
    }
    
    public bool HasVacBanned {
      get { return result.hasVacBanned; }
    }
    public bool VacBanned {
      get { return result.VacBanned; }
      set { SetVacBanned(value); }
    }
    public Builder SetVacBanned(bool value) {
      PrepareBuilder();
      result.hasVacBanned = true;
      result.vacBanned_ = value;
      return this;
    }
    public Builder ClearVacBanned() {
      PrepareBuilder();
      result.hasVacBanned = false;
      result.vacBanned_ = false;
      return this;
    }
    
    public bool HasCyberCafe {
      get { return result.hasCyberCafe; }
    }
    public bool CyberCafe {
      get { return result.CyberCafe; }
      set { SetCyberCafe(value); }
    }
    public Builder SetCyberCafe(bool value) {
      PrepareBuilder();
      result.hasCyberCafe = true;
      result.cyberCafe_ = value;
      return this;
    }
    public Builder ClearCyberCafe() {
      PrepareBuilder();
      result.hasCyberCafe = false;
      result.cyberCafe_ = false;
      return this;
    }
    
    public bool HasSchoolAccount {
      get { return result.hasSchoolAccount; }
    }
    public bool SchoolAccount {
      get { return result.SchoolAccount; }
      set { SetSchoolAccount(value); }
    }
    public Builder SetSchoolAccount(bool value) {
      PrepareBuilder();
      result.hasSchoolAccount = true;
      result.schoolAccount_ = value;
      return this;
    }
    public Builder ClearSchoolAccount() {
      PrepareBuilder();
      result.hasSchoolAccount = false;
      result.schoolAccount_ = false;
      return this;
    }
    
    public bool HasFreeTrialAccount {
      get { return result.hasFreeTrialAccount; }
    }
    public bool FreeTrialAccount {
      get { return result.FreeTrialAccount; }
      set { SetFreeTrialAccount(value); }
    }
    public Builder SetFreeTrialAccount(bool value) {
      PrepareBuilder();
      result.hasFreeTrialAccount = true;
      result.freeTrialAccount_ = value;
      return this;
    }
    public Builder ClearFreeTrialAccount() {
      PrepareBuilder();
      result.hasFreeTrialAccount = false;
      result.freeTrialAccount_ = false;
      return this;
    }
    
    public bool HasSubscribed {
      get { return result.hasSubscribed; }
    }
    public bool Subscribed {
      get { return result.Subscribed; }
      set { SetSubscribed(value); }
    }
    public Builder SetSubscribed(bool value) {
      PrepareBuilder();
      result.hasSubscribed = true;
      result.subscribed_ = value;
      return this;
    }
    public Builder ClearSubscribed() {
      PrepareBuilder();
      result.hasSubscribed = false;
      result.subscribed_ = false;
      return this;
    }
    
    public bool HasLowViolence {
      get { return result.hasLowViolence; }
    }
    public bool LowViolence {
      get { return result.LowViolence; }
      set { SetLowViolence(value); }
    }
    public Builder SetLowViolence(bool value) {
      PrepareBuilder();
      result.hasLowViolence = true;
      result.lowViolence_ = value;
      return this;
    }
    public Builder ClearLowViolence() {
      PrepareBuilder();
      result.hasLowViolence = false;
      result.lowViolence_ = false;
      return this;
    }
    
    public bool HasLimited {
      get { return result.hasLimited; }
    }
    public bool Limited {
      get { return result.Limited; }
      set { SetLimited(value); }
    }
    public Builder SetLimited(bool value) {
      PrepareBuilder();
      result.hasLimited = true;
      result.limited_ = value;
      return this;
    }
    public Builder ClearLimited() {
      PrepareBuilder();
      result.hasLimited = false;
      result.limited_ = false;
      return this;
    }
    
    public bool HasTrusted {
      get { return result.hasTrusted; }
    }
    public bool Trusted {
      get { return result.Trusted; }
      set { SetTrusted(value); }
    }
    public Builder SetTrusted(bool value) {
      PrepareBuilder();
      result.hasTrusted = true;
      result.trusted_ = value;
      return this;
    }
    public Builder ClearTrusted() {
      PrepareBuilder();
      result.hasTrusted = false;
      result.trusted_ = false;
      return this;
    }
    
    public bool HasPackage {
      get { return result.hasPackage; }
    }
    [global::System.CLSCompliant(false)]
    public uint Package {
      get { return result.Package; }
      set { SetPackage(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPackage(uint value) {
      PrepareBuilder();
      result.hasPackage = true;
      result.package_ = value;
      return this;
    }
    public Builder ClearPackage() {
      PrepareBuilder();
      result.hasPackage = false;
      result.package_ = 0;
      return this;
    }
    
    public bool HasTimeCached {
      get { return result.hasTimeCached; }
    }
    [global::System.CLSCompliant(false)]
    public uint TimeCached {
      get { return result.TimeCached; }
      set { SetTimeCached(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTimeCached(uint value) {
      PrepareBuilder();
      result.hasTimeCached = true;
      result.timeCached_ = value;
      return this;
    }
    public Builder ClearTimeCached() {
      PrepareBuilder();
      result.hasTimeCached = false;
      result.timeCached_ = 0;
      return this;
    }
    
    public bool HasAccountLocked {
      get { return result.hasAccountLocked; }
    }
    public bool AccountLocked {
      get { return result.AccountLocked; }
      set { SetAccountLocked(value); }
    }
    public Builder SetAccountLocked(bool value) {
      PrepareBuilder();
      result.hasAccountLocked = true;
      result.accountLocked_ = value;
      return this;
    }
    public Builder ClearAccountLocked() {
      PrepareBuilder();
      result.hasAccountLocked = false;
      result.accountLocked_ = false;
      return this;
    }
    
    public bool HasCommunityBanned {
      get { return result.hasCommunityBanned; }
    }
    public bool CommunityBanned {
      get { return result.CommunityBanned; }
      set { SetCommunityBanned(value); }
    }
    public Builder SetCommunityBanned(bool value) {
      PrepareBuilder();
      result.hasCommunityBanned = true;
      result.communityBanned_ = value;
      return this;
    }
    public Builder ClearCommunityBanned() {
      PrepareBuilder();
      result.hasCommunityBanned = false;
      result.communityBanned_ = false;
      return this;
    }
    
    public bool HasTradeBanned {
      get { return result.hasTradeBanned; }
    }
    public bool TradeBanned {
      get { return result.TradeBanned; }
      set { SetTradeBanned(value); }
    }
    public Builder SetTradeBanned(bool value) {
      PrepareBuilder();
      result.hasTradeBanned = true;
      result.tradeBanned_ = value;
      return this;
    }
    public Builder ClearTradeBanned() {
      PrepareBuilder();
      result.hasTradeBanned = false;
      result.tradeBanned_ = false;
      return this;
    }
    
    public bool HasEligibleForCommunityMarket {
      get { return result.hasEligibleForCommunityMarket; }
    }
    public bool EligibleForCommunityMarket {
      get { return result.EligibleForCommunityMarket; }
      set { SetEligibleForCommunityMarket(value); }
    }
    public Builder SetEligibleForCommunityMarket(bool value) {
      PrepareBuilder();
      result.hasEligibleForCommunityMarket = true;
      result.eligibleForCommunityMarket_ = value;
      return this;
    }
    public Builder ClearEligibleForCommunityMarket() {
      PrepareBuilder();
      result.hasEligibleForCommunityMarket = false;
      result.eligibleForCommunityMarket_ = false;
      return this;
    }
  }
  static CMsgAccountDetails() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCMultiplexMessage : pb::GeneratedMessage<CMsgGCMultiplexMessage, CMsgGCMultiplexMessage.Builder> {
  private CMsgGCMultiplexMessage() { }
  private static readonly CMsgGCMultiplexMessage defaultInstance = new CMsgGCMultiplexMessage().MakeReadOnly();
  private static readonly string[] _cMsgGCMultiplexMessageFieldNames = new string[] { "msgtype", "payload", "steamids" };
  private static readonly uint[] _cMsgGCMultiplexMessageFieldTags = new uint[] { 8, 18, 25 };
  public static CMsgGCMultiplexMessage DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCMultiplexMessage DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCMultiplexMessage ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgGCMultiplexMessage__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCMultiplexMessage, CMsgGCMultiplexMessage.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgGCMultiplexMessage__FieldAccessorTable; }
  }
  
  public const int MsgtypeFieldNumber = 1;
  private bool hasMsgtype;
  private uint msgtype_;
  public bool HasMsgtype {
    get { return hasMsgtype; }
  }
  [global::System.CLSCompliant(false)]
  public uint Msgtype {
    get { return msgtype_; }
  }
  
  public const int PayloadFieldNumber = 2;
  private bool hasPayload;
  private pb::ByteString payload_ = pb::ByteString.Empty;
  public bool HasPayload {
    get { return hasPayload; }
  }
  public pb::ByteString Payload {
    get { return payload_; }
  }
  
  public const int SteamidsFieldNumber = 3;
  private pbc::PopsicleList<ulong> steamids_ = new pbc::PopsicleList<ulong>();
  [global::System.CLSCompliant(false)]
  public scg::IList<ulong> SteamidsList {
    get { return pbc::Lists.AsReadOnly(steamids_); }
  }
  public int SteamidsCount {
    get { return steamids_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GetSteamids(int index) {
    return steamids_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCMultiplexMessageFieldNames;
    if (hasMsgtype) {
      output.WriteUInt32(1, field_names[0], Msgtype);
    }
    if (hasPayload) {
      output.WriteBytes(2, field_names[1], Payload);
    }
    if (steamids_.Count > 0) {
      output.WriteFixed64Array(3, field_names[2], steamids_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMsgtype) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Msgtype);
      }
      if (hasPayload) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, Payload);
      }
      {
        int dataSize = 0;
        dataSize = 8 * steamids_.Count;
        size += dataSize;
        size += 1 * steamids_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCMultiplexMessage ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMultiplexMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMultiplexMessage ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCMultiplexMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMultiplexMessage ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMultiplexMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCMultiplexMessage ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCMultiplexMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCMultiplexMessage ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCMultiplexMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCMultiplexMessage MakeReadOnly() {
    steamids_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCMultiplexMessage prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCMultiplexMessage, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCMultiplexMessage cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCMultiplexMessage result;
    
    private CMsgGCMultiplexMessage PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCMultiplexMessage original = result;
        result = new CMsgGCMultiplexMessage();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCMultiplexMessage MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCMultiplexMessage.Descriptor; }
    }
    
    public override CMsgGCMultiplexMessage DefaultInstanceForType {
      get { return global::CMsgGCMultiplexMessage.DefaultInstance; }
    }
    
    public override CMsgGCMultiplexMessage BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCMultiplexMessage) {
        return MergeFrom((CMsgGCMultiplexMessage) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCMultiplexMessage other) {
      if (other == global::CMsgGCMultiplexMessage.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasMsgtype) {
        Msgtype = other.Msgtype;
      }
      if (other.HasPayload) {
        Payload = other.Payload;
      }
      if (other.steamids_.Count != 0) {
        result.steamids_.Add(other.steamids_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCMultiplexMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCMultiplexMessageFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasMsgtype = input.ReadUInt32(ref result.msgtype_);
            break;
          }
          case 18: {
            result.hasPayload = input.ReadBytes(ref result.payload_);
            break;
          }
          case 26:
          case 25: {
            input.ReadFixed64Array(tag, field_name, result.steamids_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasMsgtype {
      get { return result.hasMsgtype; }
    }
    [global::System.CLSCompliant(false)]
    public uint Msgtype {
      get { return result.Msgtype; }
      set { SetMsgtype(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetMsgtype(uint value) {
      PrepareBuilder();
      result.hasMsgtype = true;
      result.msgtype_ = value;
      return this;
    }
    public Builder ClearMsgtype() {
      PrepareBuilder();
      result.hasMsgtype = false;
      result.msgtype_ = 0;
      return this;
    }
    
    public bool HasPayload {
      get { return result.hasPayload; }
    }
    public pb::ByteString Payload {
      get { return result.Payload; }
      set { SetPayload(value); }
    }
    public Builder SetPayload(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPayload = true;
      result.payload_ = value;
      return this;
    }
    public Builder ClearPayload() {
      PrepareBuilder();
      result.hasPayload = false;
      result.payload_ = pb::ByteString.Empty;
      return this;
    }
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<ulong> SteamidsList {
      get { return PrepareBuilder().steamids_; }
    }
    public int SteamidsCount {
      get { return result.SteamidsCount; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetSteamids(int index) {
      return result.GetSteamids(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamids(int index, ulong value) {
      PrepareBuilder();
      result.steamids_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddSteamids(ulong value) {
      PrepareBuilder();
      result.steamids_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeSteamids(scg::IEnumerable<ulong> values) {
      PrepareBuilder();
      result.steamids_.Add(values);
      return this;
    }
    public Builder ClearSteamids() {
      PrepareBuilder();
      result.steamids_.Clear();
      return this;
    }
  }
  static CMsgGCMultiplexMessage() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCToGCMsgMasterAck : pb::GeneratedMessage<CGCToGCMsgMasterAck, CGCToGCMsgMasterAck.Builder> {
  private CGCToGCMsgMasterAck() { }
  private static readonly CGCToGCMsgMasterAck defaultInstance = new CGCToGCMsgMasterAck().MakeReadOnly();
  private static readonly string[] _cGCToGCMsgMasterAckFieldNames = new string[] { "dir_index", "gc_type" };
  private static readonly uint[] _cGCToGCMsgMasterAckFieldTags = new uint[] { 8, 16 };
  public static CGCToGCMsgMasterAck DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCToGCMsgMasterAck DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCToGCMsgMasterAck ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CGCToGCMsgMasterAck__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCToGCMsgMasterAck, CGCToGCMsgMasterAck.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CGCToGCMsgMasterAck__FieldAccessorTable; }
  }
  
  public const int DirIndexFieldNumber = 1;
  private bool hasDirIndex;
  private uint dirIndex_;
  public bool HasDirIndex {
    get { return hasDirIndex; }
  }
  [global::System.CLSCompliant(false)]
  public uint DirIndex {
    get { return dirIndex_; }
  }
  
  public const int GcTypeFieldNumber = 2;
  private bool hasGcType;
  private uint gcType_;
  public bool HasGcType {
    get { return hasGcType; }
  }
  [global::System.CLSCompliant(false)]
  public uint GcType {
    get { return gcType_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCToGCMsgMasterAckFieldNames;
    if (hasDirIndex) {
      output.WriteUInt32(1, field_names[0], DirIndex);
    }
    if (hasGcType) {
      output.WriteUInt32(2, field_names[1], GcType);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDirIndex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, DirIndex);
      }
      if (hasGcType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, GcType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCToGCMsgMasterAck ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCToGCMsgMasterAck ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCToGCMsgMasterAck ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCToGCMsgMasterAck MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCToGCMsgMasterAck prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCToGCMsgMasterAck, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCToGCMsgMasterAck cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCToGCMsgMasterAck result;
    
    private CGCToGCMsgMasterAck PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCToGCMsgMasterAck original = result;
        result = new CGCToGCMsgMasterAck();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCToGCMsgMasterAck MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCToGCMsgMasterAck.Descriptor; }
    }
    
    public override CGCToGCMsgMasterAck DefaultInstanceForType {
      get { return global::CGCToGCMsgMasterAck.DefaultInstance; }
    }
    
    public override CGCToGCMsgMasterAck BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCToGCMsgMasterAck) {
        return MergeFrom((CGCToGCMsgMasterAck) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCToGCMsgMasterAck other) {
      if (other == global::CGCToGCMsgMasterAck.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDirIndex) {
        DirIndex = other.DirIndex;
      }
      if (other.HasGcType) {
        GcType = other.GcType;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCToGCMsgMasterAckFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCToGCMsgMasterAckFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDirIndex = input.ReadUInt32(ref result.dirIndex_);
            break;
          }
          case 16: {
            result.hasGcType = input.ReadUInt32(ref result.gcType_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDirIndex {
      get { return result.hasDirIndex; }
    }
    [global::System.CLSCompliant(false)]
    public uint DirIndex {
      get { return result.DirIndex; }
      set { SetDirIndex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDirIndex(uint value) {
      PrepareBuilder();
      result.hasDirIndex = true;
      result.dirIndex_ = value;
      return this;
    }
    public Builder ClearDirIndex() {
      PrepareBuilder();
      result.hasDirIndex = false;
      result.dirIndex_ = 0;
      return this;
    }
    
    public bool HasGcType {
      get { return result.hasGcType; }
    }
    [global::System.CLSCompliant(false)]
    public uint GcType {
      get { return result.GcType; }
      set { SetGcType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGcType(uint value) {
      PrepareBuilder();
      result.hasGcType = true;
      result.gcType_ = value;
      return this;
    }
    public Builder ClearGcType() {
      PrepareBuilder();
      result.hasGcType = false;
      result.gcType_ = 0;
      return this;
    }
  }
  static CGCToGCMsgMasterAck() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCToGCMsgMasterAck_Response : pb::GeneratedMessage<CGCToGCMsgMasterAck_Response, CGCToGCMsgMasterAck_Response.Builder> {
  private CGCToGCMsgMasterAck_Response() { }
  private static readonly CGCToGCMsgMasterAck_Response defaultInstance = new CGCToGCMsgMasterAck_Response().MakeReadOnly();
  private static readonly string[] _cGCToGCMsgMasterAckResponseFieldNames = new string[] { "eresult" };
  private static readonly uint[] _cGCToGCMsgMasterAckResponseFieldTags = new uint[] { 8 };
  public static CGCToGCMsgMasterAck_Response DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCToGCMsgMasterAck_Response DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCToGCMsgMasterAck_Response ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CGCToGCMsgMasterAck_Response__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCToGCMsgMasterAck_Response, CGCToGCMsgMasterAck_Response.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CGCToGCMsgMasterAck_Response__FieldAccessorTable; }
  }
  
  public const int EresultFieldNumber = 1;
  private bool hasEresult;
  private int eresult_ = 2;
  public bool HasEresult {
    get { return hasEresult; }
  }
  public int Eresult {
    get { return eresult_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCToGCMsgMasterAckResponseFieldNames;
    if (hasEresult) {
      output.WriteInt32(1, field_names[0], Eresult);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEresult) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Eresult);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCToGCMsgMasterAck_Response ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck_Response ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck_Response ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck_Response ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCToGCMsgMasterAck_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCToGCMsgMasterAck_Response ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCToGCMsgMasterAck_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCToGCMsgMasterAck_Response MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCToGCMsgMasterAck_Response prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCToGCMsgMasterAck_Response, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCToGCMsgMasterAck_Response cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCToGCMsgMasterAck_Response result;
    
    private CGCToGCMsgMasterAck_Response PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCToGCMsgMasterAck_Response original = result;
        result = new CGCToGCMsgMasterAck_Response();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCToGCMsgMasterAck_Response MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCToGCMsgMasterAck_Response.Descriptor; }
    }
    
    public override CGCToGCMsgMasterAck_Response DefaultInstanceForType {
      get { return global::CGCToGCMsgMasterAck_Response.DefaultInstance; }
    }
    
    public override CGCToGCMsgMasterAck_Response BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCToGCMsgMasterAck_Response) {
        return MergeFrom((CGCToGCMsgMasterAck_Response) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCToGCMsgMasterAck_Response other) {
      if (other == global::CGCToGCMsgMasterAck_Response.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEresult) {
        Eresult = other.Eresult;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCToGCMsgMasterAckResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCToGCMsgMasterAckResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEresult = input.ReadInt32(ref result.eresult_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEresult {
      get { return result.hasEresult; }
    }
    public int Eresult {
      get { return result.Eresult; }
      set { SetEresult(value); }
    }
    public Builder SetEresult(int value) {
      PrepareBuilder();
      result.hasEresult = true;
      result.eresult_ = value;
      return this;
    }
    public Builder ClearEresult() {
      PrepareBuilder();
      result.hasEresult = false;
      result.eresult_ = 2;
      return this;
    }
  }
  static CGCToGCMsgMasterAck_Response() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCToGCMsgMasterStartupComplete : pb::GeneratedMessage<CGCToGCMsgMasterStartupComplete, CGCToGCMsgMasterStartupComplete.Builder> {
  private CGCToGCMsgMasterStartupComplete() { }
  private static readonly CGCToGCMsgMasterStartupComplete defaultInstance = new CGCToGCMsgMasterStartupComplete().MakeReadOnly();
  private static readonly string[] _cGCToGCMsgMasterStartupCompleteFieldNames = new string[] {  };
  private static readonly uint[] _cGCToGCMsgMasterStartupCompleteFieldTags = new uint[] {  };
  public static CGCToGCMsgMasterStartupComplete DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCToGCMsgMasterStartupComplete DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCToGCMsgMasterStartupComplete ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CGCToGCMsgMasterStartupComplete__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCToGCMsgMasterStartupComplete, CGCToGCMsgMasterStartupComplete.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CGCToGCMsgMasterStartupComplete__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCToGCMsgMasterStartupCompleteFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCToGCMsgMasterStartupComplete ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCToGCMsgMasterStartupComplete ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgMasterStartupComplete ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCToGCMsgMasterStartupComplete ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgMasterStartupComplete ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCToGCMsgMasterStartupComplete ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgMasterStartupComplete ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCToGCMsgMasterStartupComplete ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCToGCMsgMasterStartupComplete ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCToGCMsgMasterStartupComplete ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCToGCMsgMasterStartupComplete MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCToGCMsgMasterStartupComplete prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCToGCMsgMasterStartupComplete, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCToGCMsgMasterStartupComplete cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCToGCMsgMasterStartupComplete result;
    
    private CGCToGCMsgMasterStartupComplete PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCToGCMsgMasterStartupComplete original = result;
        result = new CGCToGCMsgMasterStartupComplete();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCToGCMsgMasterStartupComplete MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCToGCMsgMasterStartupComplete.Descriptor; }
    }
    
    public override CGCToGCMsgMasterStartupComplete DefaultInstanceForType {
      get { return global::CGCToGCMsgMasterStartupComplete.DefaultInstance; }
    }
    
    public override CGCToGCMsgMasterStartupComplete BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCToGCMsgMasterStartupComplete) {
        return MergeFrom((CGCToGCMsgMasterStartupComplete) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCToGCMsgMasterStartupComplete other) {
      if (other == global::CGCToGCMsgMasterStartupComplete.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCToGCMsgMasterStartupCompleteFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCToGCMsgMasterStartupCompleteFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static CGCToGCMsgMasterStartupComplete() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCToGCMsgRouted : pb::GeneratedMessage<CGCToGCMsgRouted, CGCToGCMsgRouted.Builder> {
  private CGCToGCMsgRouted() { }
  private static readonly CGCToGCMsgRouted defaultInstance = new CGCToGCMsgRouted().MakeReadOnly();
  private static readonly string[] _cGCToGCMsgRoutedFieldNames = new string[] { "msg_type", "net_message", "sender_id" };
  private static readonly uint[] _cGCToGCMsgRoutedFieldTags = new uint[] { 8, 26, 17 };
  public static CGCToGCMsgRouted DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCToGCMsgRouted DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCToGCMsgRouted ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CGCToGCMsgRouted__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCToGCMsgRouted, CGCToGCMsgRouted.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CGCToGCMsgRouted__FieldAccessorTable; }
  }
  
  public const int MsgTypeFieldNumber = 1;
  private bool hasMsgType;
  private uint msgType_;
  public bool HasMsgType {
    get { return hasMsgType; }
  }
  [global::System.CLSCompliant(false)]
  public uint MsgType {
    get { return msgType_; }
  }
  
  public const int SenderIdFieldNumber = 2;
  private bool hasSenderId;
  private ulong senderId_;
  public bool HasSenderId {
    get { return hasSenderId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SenderId {
    get { return senderId_; }
  }
  
  public const int NetMessageFieldNumber = 3;
  private bool hasNetMessage;
  private pb::ByteString netMessage_ = pb::ByteString.Empty;
  public bool HasNetMessage {
    get { return hasNetMessage; }
  }
  public pb::ByteString NetMessage {
    get { return netMessage_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCToGCMsgRoutedFieldNames;
    if (hasMsgType) {
      output.WriteUInt32(1, field_names[0], MsgType);
    }
    if (hasSenderId) {
      output.WriteFixed64(2, field_names[2], SenderId);
    }
    if (hasNetMessage) {
      output.WriteBytes(3, field_names[1], NetMessage);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMsgType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, MsgType);
      }
      if (hasSenderId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(2, SenderId);
      }
      if (hasNetMessage) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, NetMessage);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCToGCMsgRouted ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCToGCMsgRouted ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgRouted ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCToGCMsgRouted ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgRouted ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCToGCMsgRouted ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgRouted ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCToGCMsgRouted ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCToGCMsgRouted ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCToGCMsgRouted ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCToGCMsgRouted MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCToGCMsgRouted prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCToGCMsgRouted, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCToGCMsgRouted cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCToGCMsgRouted result;
    
    private CGCToGCMsgRouted PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCToGCMsgRouted original = result;
        result = new CGCToGCMsgRouted();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCToGCMsgRouted MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCToGCMsgRouted.Descriptor; }
    }
    
    public override CGCToGCMsgRouted DefaultInstanceForType {
      get { return global::CGCToGCMsgRouted.DefaultInstance; }
    }
    
    public override CGCToGCMsgRouted BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCToGCMsgRouted) {
        return MergeFrom((CGCToGCMsgRouted) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCToGCMsgRouted other) {
      if (other == global::CGCToGCMsgRouted.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasMsgType) {
        MsgType = other.MsgType;
      }
      if (other.HasSenderId) {
        SenderId = other.SenderId;
      }
      if (other.HasNetMessage) {
        NetMessage = other.NetMessage;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCToGCMsgRoutedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCToGCMsgRoutedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasMsgType = input.ReadUInt32(ref result.msgType_);
            break;
          }
          case 17: {
            result.hasSenderId = input.ReadFixed64(ref result.senderId_);
            break;
          }
          case 26: {
            result.hasNetMessage = input.ReadBytes(ref result.netMessage_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasMsgType {
      get { return result.hasMsgType; }
    }
    [global::System.CLSCompliant(false)]
    public uint MsgType {
      get { return result.MsgType; }
      set { SetMsgType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetMsgType(uint value) {
      PrepareBuilder();
      result.hasMsgType = true;
      result.msgType_ = value;
      return this;
    }
    public Builder ClearMsgType() {
      PrepareBuilder();
      result.hasMsgType = false;
      result.msgType_ = 0;
      return this;
    }
    
    public bool HasSenderId {
      get { return result.hasSenderId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SenderId {
      get { return result.SenderId; }
      set { SetSenderId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSenderId(ulong value) {
      PrepareBuilder();
      result.hasSenderId = true;
      result.senderId_ = value;
      return this;
    }
    public Builder ClearSenderId() {
      PrepareBuilder();
      result.hasSenderId = false;
      result.senderId_ = 0;
      return this;
    }
    
    public bool HasNetMessage {
      get { return result.hasNetMessage; }
    }
    public pb::ByteString NetMessage {
      get { return result.NetMessage; }
      set { SetNetMessage(value); }
    }
    public Builder SetNetMessage(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasNetMessage = true;
      result.netMessage_ = value;
      return this;
    }
    public Builder ClearNetMessage() {
      PrepareBuilder();
      result.hasNetMessage = false;
      result.netMessage_ = pb::ByteString.Empty;
      return this;
    }
  }
  static CGCToGCMsgRouted() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCToGCMsgRoutedReply : pb::GeneratedMessage<CGCToGCMsgRoutedReply, CGCToGCMsgRoutedReply.Builder> {
  private CGCToGCMsgRoutedReply() { }
  private static readonly CGCToGCMsgRoutedReply defaultInstance = new CGCToGCMsgRoutedReply().MakeReadOnly();
  private static readonly string[] _cGCToGCMsgRoutedReplyFieldNames = new string[] { "msg_type", "net_message" };
  private static readonly uint[] _cGCToGCMsgRoutedReplyFieldTags = new uint[] { 8, 18 };
  public static CGCToGCMsgRoutedReply DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCToGCMsgRoutedReply DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCToGCMsgRoutedReply ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CGCToGCMsgRoutedReply__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCToGCMsgRoutedReply, CGCToGCMsgRoutedReply.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CGCToGCMsgRoutedReply__FieldAccessorTable; }
  }
  
  public const int MsgTypeFieldNumber = 1;
  private bool hasMsgType;
  private uint msgType_;
  public bool HasMsgType {
    get { return hasMsgType; }
  }
  [global::System.CLSCompliant(false)]
  public uint MsgType {
    get { return msgType_; }
  }
  
  public const int NetMessageFieldNumber = 2;
  private bool hasNetMessage;
  private pb::ByteString netMessage_ = pb::ByteString.Empty;
  public bool HasNetMessage {
    get { return hasNetMessage; }
  }
  public pb::ByteString NetMessage {
    get { return netMessage_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCToGCMsgRoutedReplyFieldNames;
    if (hasMsgType) {
      output.WriteUInt32(1, field_names[0], MsgType);
    }
    if (hasNetMessage) {
      output.WriteBytes(2, field_names[1], NetMessage);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMsgType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, MsgType);
      }
      if (hasNetMessage) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, NetMessage);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCToGCMsgRoutedReply ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCToGCMsgRoutedReply ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgRoutedReply ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCToGCMsgRoutedReply ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgRoutedReply ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCToGCMsgRoutedReply ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCToGCMsgRoutedReply ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCToGCMsgRoutedReply ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCToGCMsgRoutedReply ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCToGCMsgRoutedReply ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCToGCMsgRoutedReply MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCToGCMsgRoutedReply prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCToGCMsgRoutedReply, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCToGCMsgRoutedReply cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCToGCMsgRoutedReply result;
    
    private CGCToGCMsgRoutedReply PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCToGCMsgRoutedReply original = result;
        result = new CGCToGCMsgRoutedReply();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCToGCMsgRoutedReply MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCToGCMsgRoutedReply.Descriptor; }
    }
    
    public override CGCToGCMsgRoutedReply DefaultInstanceForType {
      get { return global::CGCToGCMsgRoutedReply.DefaultInstance; }
    }
    
    public override CGCToGCMsgRoutedReply BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCToGCMsgRoutedReply) {
        return MergeFrom((CGCToGCMsgRoutedReply) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCToGCMsgRoutedReply other) {
      if (other == global::CGCToGCMsgRoutedReply.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasMsgType) {
        MsgType = other.MsgType;
      }
      if (other.HasNetMessage) {
        NetMessage = other.NetMessage;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCToGCMsgRoutedReplyFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCToGCMsgRoutedReplyFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasMsgType = input.ReadUInt32(ref result.msgType_);
            break;
          }
          case 18: {
            result.hasNetMessage = input.ReadBytes(ref result.netMessage_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasMsgType {
      get { return result.hasMsgType; }
    }
    [global::System.CLSCompliant(false)]
    public uint MsgType {
      get { return result.MsgType; }
      set { SetMsgType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetMsgType(uint value) {
      PrepareBuilder();
      result.hasMsgType = true;
      result.msgType_ = value;
      return this;
    }
    public Builder ClearMsgType() {
      PrepareBuilder();
      result.hasMsgType = false;
      result.msgType_ = 0;
      return this;
    }
    
    public bool HasNetMessage {
      get { return result.hasNetMessage; }
    }
    public pb::ByteString NetMessage {
      get { return result.NetMessage; }
      set { SetNetMessage(value); }
    }
    public Builder SetNetMessage(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasNetMessage = true;
      result.netMessage_ = value;
      return this;
    }
    public Builder ClearNetMessage() {
      PrepareBuilder();
      result.hasNetMessage = false;
      result.netMessage_ = pb::ByteString.Empty;
      return this;
    }
  }
  static CGCToGCMsgRoutedReply() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCUpdateSessionIP : pb::GeneratedMessage<CMsgGCUpdateSessionIP, CMsgGCUpdateSessionIP.Builder> {
  private CMsgGCUpdateSessionIP() { }
  private static readonly CMsgGCUpdateSessionIP defaultInstance = new CMsgGCUpdateSessionIP().MakeReadOnly();
  private static readonly string[] _cMsgGCUpdateSessionIPFieldNames = new string[] { "ip", "steamid" };
  private static readonly uint[] _cMsgGCUpdateSessionIPFieldTags = new uint[] { 21, 9 };
  public static CMsgGCUpdateSessionIP DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCUpdateSessionIP DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCUpdateSessionIP ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgGCUpdateSessionIP__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCUpdateSessionIP, CMsgGCUpdateSessionIP.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgGCUpdateSessionIP__FieldAccessorTable; }
  }
  
  public const int SteamidFieldNumber = 1;
  private bool hasSteamid;
  private ulong steamid_;
  public bool HasSteamid {
    get { return hasSteamid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Steamid {
    get { return steamid_; }
  }
  
  public const int IpFieldNumber = 2;
  private bool hasIp;
  private uint ip_;
  public bool HasIp {
    get { return hasIp; }
  }
  [global::System.CLSCompliant(false)]
  public uint Ip {
    get { return ip_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCUpdateSessionIPFieldNames;
    if (hasSteamid) {
      output.WriteFixed64(1, field_names[1], Steamid);
    }
    if (hasIp) {
      output.WriteFixed32(2, field_names[0], Ip);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, Steamid);
      }
      if (hasIp) {
        size += pb::CodedOutputStream.ComputeFixed32Size(2, Ip);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCUpdateSessionIP ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCUpdateSessionIP ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCUpdateSessionIP ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCUpdateSessionIP ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCUpdateSessionIP ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCUpdateSessionIP ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCUpdateSessionIP ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCUpdateSessionIP ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCUpdateSessionIP ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCUpdateSessionIP ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCUpdateSessionIP MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCUpdateSessionIP prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCUpdateSessionIP, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCUpdateSessionIP cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCUpdateSessionIP result;
    
    private CMsgGCUpdateSessionIP PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCUpdateSessionIP original = result;
        result = new CMsgGCUpdateSessionIP();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCUpdateSessionIP MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCUpdateSessionIP.Descriptor; }
    }
    
    public override CMsgGCUpdateSessionIP DefaultInstanceForType {
      get { return global::CMsgGCUpdateSessionIP.DefaultInstance; }
    }
    
    public override CMsgGCUpdateSessionIP BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCUpdateSessionIP) {
        return MergeFrom((CMsgGCUpdateSessionIP) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCUpdateSessionIP other) {
      if (other == global::CMsgGCUpdateSessionIP.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasIp) {
        Ip = other.Ip;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCUpdateSessionIPFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCUpdateSessionIPFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamid = input.ReadFixed64(ref result.steamid_);
            break;
          }
          case 21: {
            result.hasIp = input.ReadFixed32(ref result.ip_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamid {
      get { return result.hasSteamid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Steamid {
      get { return result.Steamid; }
      set { SetSteamid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamid(ulong value) {
      PrepareBuilder();
      result.hasSteamid = true;
      result.steamid_ = value;
      return this;
    }
    public Builder ClearSteamid() {
      PrepareBuilder();
      result.hasSteamid = false;
      result.steamid_ = 0;
      return this;
    }
    
    public bool HasIp {
      get { return result.hasIp; }
    }
    [global::System.CLSCompliant(false)]
    public uint Ip {
      get { return result.Ip; }
      set { SetIp(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetIp(uint value) {
      PrepareBuilder();
      result.hasIp = true;
      result.ip_ = value;
      return this;
    }
    public Builder ClearIp() {
      PrepareBuilder();
      result.hasIp = false;
      result.ip_ = 0;
      return this;
    }
  }
  static CMsgGCUpdateSessionIP() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCRequestSessionIP : pb::GeneratedMessage<CMsgGCRequestSessionIP, CMsgGCRequestSessionIP.Builder> {
  private CMsgGCRequestSessionIP() { }
  private static readonly CMsgGCRequestSessionIP defaultInstance = new CMsgGCRequestSessionIP().MakeReadOnly();
  private static readonly string[] _cMsgGCRequestSessionIPFieldNames = new string[] { "steamid" };
  private static readonly uint[] _cMsgGCRequestSessionIPFieldTags = new uint[] { 9 };
  public static CMsgGCRequestSessionIP DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCRequestSessionIP DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCRequestSessionIP ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgGCRequestSessionIP__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCRequestSessionIP, CMsgGCRequestSessionIP.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgGCRequestSessionIP__FieldAccessorTable; }
  }
  
  public const int SteamidFieldNumber = 1;
  private bool hasSteamid;
  private ulong steamid_;
  public bool HasSteamid {
    get { return hasSteamid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Steamid {
    get { return steamid_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCRequestSessionIPFieldNames;
    if (hasSteamid) {
      output.WriteFixed64(1, field_names[0], Steamid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, Steamid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCRequestSessionIP ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCRequestSessionIP ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestSessionIP ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCRequestSessionIP ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestSessionIP ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCRequestSessionIP ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestSessionIP ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCRequestSessionIP ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCRequestSessionIP ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCRequestSessionIP ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCRequestSessionIP MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCRequestSessionIP prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCRequestSessionIP, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCRequestSessionIP cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCRequestSessionIP result;
    
    private CMsgGCRequestSessionIP PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCRequestSessionIP original = result;
        result = new CMsgGCRequestSessionIP();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCRequestSessionIP MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCRequestSessionIP.Descriptor; }
    }
    
    public override CMsgGCRequestSessionIP DefaultInstanceForType {
      get { return global::CMsgGCRequestSessionIP.DefaultInstance; }
    }
    
    public override CMsgGCRequestSessionIP BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCRequestSessionIP) {
        return MergeFrom((CMsgGCRequestSessionIP) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCRequestSessionIP other) {
      if (other == global::CMsgGCRequestSessionIP.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCRequestSessionIPFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCRequestSessionIPFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamid = input.ReadFixed64(ref result.steamid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamid {
      get { return result.hasSteamid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Steamid {
      get { return result.Steamid; }
      set { SetSteamid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamid(ulong value) {
      PrepareBuilder();
      result.hasSteamid = true;
      result.steamid_ = value;
      return this;
    }
    public Builder ClearSteamid() {
      PrepareBuilder();
      result.hasSteamid = false;
      result.steamid_ = 0;
      return this;
    }
  }
  static CMsgGCRequestSessionIP() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCRequestSessionIPResponse : pb::GeneratedMessage<CMsgGCRequestSessionIPResponse, CMsgGCRequestSessionIPResponse.Builder> {
  private CMsgGCRequestSessionIPResponse() { }
  private static readonly CMsgGCRequestSessionIPResponse defaultInstance = new CMsgGCRequestSessionIPResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCRequestSessionIPResponseFieldNames = new string[] { "ip" };
  private static readonly uint[] _cMsgGCRequestSessionIPResponseFieldTags = new uint[] { 13 };
  public static CMsgGCRequestSessionIPResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCRequestSessionIPResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCRequestSessionIPResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgGCRequestSessionIPResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCRequestSessionIPResponse, CMsgGCRequestSessionIPResponse.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgGCRequestSessionIPResponse__FieldAccessorTable; }
  }
  
  public const int IpFieldNumber = 1;
  private bool hasIp;
  private uint ip_;
  public bool HasIp {
    get { return hasIp; }
  }
  [global::System.CLSCompliant(false)]
  public uint Ip {
    get { return ip_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCRequestSessionIPResponseFieldNames;
    if (hasIp) {
      output.WriteFixed32(1, field_names[0], Ip);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIp) {
        size += pb::CodedOutputStream.ComputeFixed32Size(1, Ip);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCRequestSessionIPResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCRequestSessionIPResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestSessionIPResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCRequestSessionIPResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestSessionIPResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCRequestSessionIPResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestSessionIPResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCRequestSessionIPResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCRequestSessionIPResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCRequestSessionIPResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCRequestSessionIPResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCRequestSessionIPResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCRequestSessionIPResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCRequestSessionIPResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCRequestSessionIPResponse result;
    
    private CMsgGCRequestSessionIPResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCRequestSessionIPResponse original = result;
        result = new CMsgGCRequestSessionIPResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCRequestSessionIPResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCRequestSessionIPResponse.Descriptor; }
    }
    
    public override CMsgGCRequestSessionIPResponse DefaultInstanceForType {
      get { return global::CMsgGCRequestSessionIPResponse.DefaultInstance; }
    }
    
    public override CMsgGCRequestSessionIPResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCRequestSessionIPResponse) {
        return MergeFrom((CMsgGCRequestSessionIPResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCRequestSessionIPResponse other) {
      if (other == global::CMsgGCRequestSessionIPResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasIp) {
        Ip = other.Ip;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCRequestSessionIPResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCRequestSessionIPResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 13: {
            result.hasIp = input.ReadFixed32(ref result.ip_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasIp {
      get { return result.hasIp; }
    }
    [global::System.CLSCompliant(false)]
    public uint Ip {
      get { return result.Ip; }
      set { SetIp(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetIp(uint value) {
      PrepareBuilder();
      result.hasIp = true;
      result.ip_ = value;
      return this;
    }
    public Builder ClearIp() {
      PrepareBuilder();
      result.hasIp = false;
      result.ip_ = 0;
      return this;
    }
  }
  static CMsgGCRequestSessionIPResponse() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSOCacheHaveVersion : pb::GeneratedMessage<CMsgSOCacheHaveVersion, CMsgSOCacheHaveVersion.Builder> {
  private CMsgSOCacheHaveVersion() { }
  private static readonly CMsgSOCacheHaveVersion defaultInstance = new CMsgSOCacheHaveVersion().MakeReadOnly();
  private static readonly string[] _cMsgSOCacheHaveVersionFieldNames = new string[] { "soid", "version" };
  private static readonly uint[] _cMsgSOCacheHaveVersionFieldTags = new uint[] { 10, 17 };
  public static CMsgSOCacheHaveVersion DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSOCacheHaveVersion DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSOCacheHaveVersion ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheHaveVersion__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSOCacheHaveVersion, CMsgSOCacheHaveVersion.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgSOCacheHaveVersion__FieldAccessorTable; }
  }
  
  public const int SoidFieldNumber = 1;
  private bool hasSoid;
  private global::CMsgSOIDOwner soid_;
  public bool HasSoid {
    get { return hasSoid; }
  }
  public global::CMsgSOIDOwner Soid {
    get { return soid_ ?? global::CMsgSOIDOwner.DefaultInstance; }
  }
  
  public const int VersionFieldNumber = 2;
  private bool hasVersion;
  private ulong version_;
  public bool HasVersion {
    get { return hasVersion; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Version {
    get { return version_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSOCacheHaveVersionFieldNames;
    if (hasSoid) {
      output.WriteMessage(1, field_names[0], Soid);
    }
    if (hasVersion) {
      output.WriteFixed64(2, field_names[1], Version);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSoid) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Soid);
      }
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeFixed64Size(2, Version);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSOCacheHaveVersion ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheHaveVersion ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheHaveVersion ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSOCacheHaveVersion ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheHaveVersion ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheHaveVersion ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSOCacheHaveVersion ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSOCacheHaveVersion ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSOCacheHaveVersion ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSOCacheHaveVersion ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSOCacheHaveVersion MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSOCacheHaveVersion prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSOCacheHaveVersion, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSOCacheHaveVersion cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSOCacheHaveVersion result;
    
    private CMsgSOCacheHaveVersion PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSOCacheHaveVersion original = result;
        result = new CMsgSOCacheHaveVersion();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSOCacheHaveVersion MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSOCacheHaveVersion.Descriptor; }
    }
    
    public override CMsgSOCacheHaveVersion DefaultInstanceForType {
      get { return global::CMsgSOCacheHaveVersion.DefaultInstance; }
    }
    
    public override CMsgSOCacheHaveVersion BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSOCacheHaveVersion) {
        return MergeFrom((CMsgSOCacheHaveVersion) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSOCacheHaveVersion other) {
      if (other == global::CMsgSOCacheHaveVersion.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSoid) {
        MergeSoid(other.Soid);
      }
      if (other.HasVersion) {
        Version = other.Version;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSOCacheHaveVersionFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSOCacheHaveVersionFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CMsgSOIDOwner.Builder subBuilder = global::CMsgSOIDOwner.CreateBuilder();
            if (result.hasSoid) {
              subBuilder.MergeFrom(Soid);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Soid = subBuilder.BuildPartial();
            break;
          }
          case 17: {
            result.hasVersion = input.ReadFixed64(ref result.version_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSoid {
     get { return result.hasSoid; }
    }
    public global::CMsgSOIDOwner Soid {
      get { return result.Soid; }
      set { SetSoid(value); }
    }
    public Builder SetSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSoid = true;
      result.soid_ = value;
      return this;
    }
    public Builder SetSoid(global::CMsgSOIDOwner.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasSoid = true;
      result.soid_ = builderForValue.Build();
      return this;
    }
    public Builder MergeSoid(global::CMsgSOIDOwner value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasSoid &&
          result.soid_ != global::CMsgSOIDOwner.DefaultInstance) {
          result.soid_ = global::CMsgSOIDOwner.CreateBuilder(result.soid_).MergeFrom(value).BuildPartial();
      } else {
        result.soid_ = value;
      }
      result.hasSoid = true;
      return this;
    }
    public Builder ClearSoid() {
      PrepareBuilder();
      result.hasSoid = false;
      result.soid_ = null;
      return this;
    }
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVersion(ulong value) {
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = 0;
      return this;
    }
  }
  static CMsgSOCacheHaveVersion() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgClientHello : pb::GeneratedMessage<CMsgClientHello, CMsgClientHello.Builder> {
  private CMsgClientHello() { }
  private static readonly CMsgClientHello defaultInstance = new CMsgClientHello().MakeReadOnly();
  private static readonly string[] _cMsgClientHelloFieldNames = new string[] { "client_launcher", "client_session_need", "socache_have_versions", "version" };
  private static readonly uint[] _cMsgClientHelloFieldTags = new uint[] { 32, 24, 18, 8 };
  public static CMsgClientHello DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgClientHello DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgClientHello ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgClientHello__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgClientHello, CMsgClientHello.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgClientHello__FieldAccessorTable; }
  }
  
  public const int VersionFieldNumber = 1;
  private bool hasVersion;
  private uint version_;
  public bool HasVersion {
    get { return hasVersion; }
  }
  [global::System.CLSCompliant(false)]
  public uint Version {
    get { return version_; }
  }
  
  public const int SocacheHaveVersionsFieldNumber = 2;
  private pbc::PopsicleList<global::CMsgSOCacheHaveVersion> socacheHaveVersions_ = new pbc::PopsicleList<global::CMsgSOCacheHaveVersion>();
  public scg::IList<global::CMsgSOCacheHaveVersion> SocacheHaveVersionsList {
    get { return socacheHaveVersions_; }
  }
  public int SocacheHaveVersionsCount {
    get { return socacheHaveVersions_.Count; }
  }
  public global::CMsgSOCacheHaveVersion GetSocacheHaveVersions(int index) {
    return socacheHaveVersions_[index];
  }
  
  public const int ClientSessionNeedFieldNumber = 3;
  private bool hasClientSessionNeed;
  private uint clientSessionNeed_;
  public bool HasClientSessionNeed {
    get { return hasClientSessionNeed; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClientSessionNeed {
    get { return clientSessionNeed_; }
  }
  
  public const int ClientLauncherFieldNumber = 4;
  private bool hasClientLauncher;
  private uint clientLauncher_;
  public bool HasClientLauncher {
    get { return hasClientLauncher; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClientLauncher {
    get { return clientLauncher_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgClientHelloFieldNames;
    if (hasVersion) {
      output.WriteUInt32(1, field_names[3], Version);
    }
    if (socacheHaveVersions_.Count > 0) {
      output.WriteMessageArray(2, field_names[2], socacheHaveVersions_);
    }
    if (hasClientSessionNeed) {
      output.WriteUInt32(3, field_names[1], ClientSessionNeed);
    }
    if (hasClientLauncher) {
      output.WriteUInt32(4, field_names[0], ClientLauncher);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Version);
      }
      foreach (global::CMsgSOCacheHaveVersion element in SocacheHaveVersionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      if (hasClientSessionNeed) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, ClientSessionNeed);
      }
      if (hasClientLauncher) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, ClientLauncher);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgClientHello ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgClientHello ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgClientHello ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgClientHello ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgClientHello ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgClientHello ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgClientHello ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgClientHello ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgClientHello ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgClientHello ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgClientHello MakeReadOnly() {
    socacheHaveVersions_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgClientHello prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgClientHello, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgClientHello cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgClientHello result;
    
    private CMsgClientHello PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgClientHello original = result;
        result = new CMsgClientHello();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgClientHello MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgClientHello.Descriptor; }
    }
    
    public override CMsgClientHello DefaultInstanceForType {
      get { return global::CMsgClientHello.DefaultInstance; }
    }
    
    public override CMsgClientHello BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgClientHello) {
        return MergeFrom((CMsgClientHello) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgClientHello other) {
      if (other == global::CMsgClientHello.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.socacheHaveVersions_.Count != 0) {
        result.socacheHaveVersions_.Add(other.socacheHaveVersions_);
      }
      if (other.HasClientSessionNeed) {
        ClientSessionNeed = other.ClientSessionNeed;
      }
      if (other.HasClientLauncher) {
        ClientLauncher = other.ClientLauncher;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgClientHelloFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgClientHelloFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasVersion = input.ReadUInt32(ref result.version_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.socacheHaveVersions_, global::CMsgSOCacheHaveVersion.DefaultInstance, extensionRegistry);
            break;
          }
          case 24: {
            result.hasClientSessionNeed = input.ReadUInt32(ref result.clientSessionNeed_);
            break;
          }
          case 32: {
            result.hasClientLauncher = input.ReadUInt32(ref result.clientLauncher_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVersion(uint value) {
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgSOCacheHaveVersion> SocacheHaveVersionsList {
      get { return PrepareBuilder().socacheHaveVersions_; }
    }
    public int SocacheHaveVersionsCount {
      get { return result.SocacheHaveVersionsCount; }
    }
    public global::CMsgSOCacheHaveVersion GetSocacheHaveVersions(int index) {
      return result.GetSocacheHaveVersions(index);
    }
    public Builder SetSocacheHaveVersions(int index, global::CMsgSOCacheHaveVersion value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.socacheHaveVersions_[index] = value;
      return this;
    }
    public Builder SetSocacheHaveVersions(int index, global::CMsgSOCacheHaveVersion.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.socacheHaveVersions_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddSocacheHaveVersions(global::CMsgSOCacheHaveVersion value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.socacheHaveVersions_.Add(value);
      return this;
    }
    public Builder AddSocacheHaveVersions(global::CMsgSOCacheHaveVersion.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.socacheHaveVersions_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeSocacheHaveVersions(scg::IEnumerable<global::CMsgSOCacheHaveVersion> values) {
      PrepareBuilder();
      result.socacheHaveVersions_.Add(values);
      return this;
    }
    public Builder ClearSocacheHaveVersions() {
      PrepareBuilder();
      result.socacheHaveVersions_.Clear();
      return this;
    }
    
    public bool HasClientSessionNeed {
      get { return result.hasClientSessionNeed; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClientSessionNeed {
      get { return result.ClientSessionNeed; }
      set { SetClientSessionNeed(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClientSessionNeed(uint value) {
      PrepareBuilder();
      result.hasClientSessionNeed = true;
      result.clientSessionNeed_ = value;
      return this;
    }
    public Builder ClearClientSessionNeed() {
      PrepareBuilder();
      result.hasClientSessionNeed = false;
      result.clientSessionNeed_ = 0;
      return this;
    }
    
    public bool HasClientLauncher {
      get { return result.hasClientLauncher; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClientLauncher {
      get { return result.ClientLauncher; }
      set { SetClientLauncher(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClientLauncher(uint value) {
      PrepareBuilder();
      result.hasClientLauncher = true;
      result.clientLauncher_ = value;
      return this;
    }
    public Builder ClearClientLauncher() {
      PrepareBuilder();
      result.hasClientLauncher = false;
      result.clientLauncher_ = 0;
      return this;
    }
  }
  static CMsgClientHello() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgClientWelcome : pb::GeneratedMessage<CMsgClientWelcome, CMsgClientWelcome.Builder> {
  private CMsgClientWelcome() { }
  private static readonly CMsgClientWelcome defaultInstance = new CMsgClientWelcome().MakeReadOnly();
  private static readonly string[] _cMsgClientWelcomeFieldNames = new string[] { "game_data", "game_data2", "location", "outofdate_subscribed_caches", "uptodate_subscribed_caches", "version" };
  private static readonly uint[] _cMsgClientWelcomeFieldTags = new uint[] { 18, 50, 42, 26, 34, 8 };
  public static CMsgClientWelcome DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgClientWelcome DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgClientWelcome ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgClientWelcome__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgClientWelcome, CMsgClientWelcome.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgClientWelcome__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Location : pb::GeneratedMessage<Location, Location.Builder> {
      private Location() { }
      private static readonly Location defaultInstance = new Location().MakeReadOnly();
      private static readonly string[] _locationFieldNames = new string[] { "country", "latitude", "longitude" };
      private static readonly uint[] _locationFieldTags = new uint[] { 26, 13, 21 };
      public static Location DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override Location DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override Location ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::GcsdkGcmessages.internal__static_CMsgClientWelcome_Location__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<Location, Location.Builder> InternalFieldAccessors {
        get { return global::GcsdkGcmessages.internal__static_CMsgClientWelcome_Location__FieldAccessorTable; }
      }
      
      public const int LatitudeFieldNumber = 1;
      private bool hasLatitude;
      private float latitude_;
      public bool HasLatitude {
        get { return hasLatitude; }
      }
      public float Latitude {
        get { return latitude_; }
      }
      
      public const int LongitudeFieldNumber = 2;
      private bool hasLongitude;
      private float longitude_;
      public bool HasLongitude {
        get { return hasLongitude; }
      }
      public float Longitude {
        get { return longitude_; }
      }
      
      public const int CountryFieldNumber = 3;
      private bool hasCountry;
      private string country_ = "";
      public bool HasCountry {
        get { return hasCountry; }
      }
      public string Country {
        get { return country_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _locationFieldNames;
        if (hasLatitude) {
          output.WriteFloat(1, field_names[1], Latitude);
        }
        if (hasLongitude) {
          output.WriteFloat(2, field_names[2], Longitude);
        }
        if (hasCountry) {
          output.WriteString(3, field_names[0], Country);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasLatitude) {
            size += pb::CodedOutputStream.ComputeFloatSize(1, Latitude);
          }
          if (hasLongitude) {
            size += pb::CodedOutputStream.ComputeFloatSize(2, Longitude);
          }
          if (hasCountry) {
            size += pb::CodedOutputStream.ComputeStringSize(3, Country);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static Location ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Location ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Location ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static Location ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static Location ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Location ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static Location ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static Location ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static Location ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static Location ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private Location MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(Location prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<Location, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(Location cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private Location result;
        
        private Location PrepareBuilder() {
          if (resultIsReadOnly) {
            Location original = result;
            result = new Location();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override Location MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgClientWelcome.Types.Location.Descriptor; }
        }
        
        public override Location DefaultInstanceForType {
          get { return global::CMsgClientWelcome.Types.Location.DefaultInstance; }
        }
        
        public override Location BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is Location) {
            return MergeFrom((Location) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(Location other) {
          if (other == global::CMsgClientWelcome.Types.Location.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasLatitude) {
            Latitude = other.Latitude;
          }
          if (other.HasLongitude) {
            Longitude = other.Longitude;
          }
          if (other.HasCountry) {
            Country = other.Country;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_locationFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _locationFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 13: {
                result.hasLatitude = input.ReadFloat(ref result.latitude_);
                break;
              }
              case 21: {
                result.hasLongitude = input.ReadFloat(ref result.longitude_);
                break;
              }
              case 26: {
                result.hasCountry = input.ReadString(ref result.country_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasLatitude {
          get { return result.hasLatitude; }
        }
        public float Latitude {
          get { return result.Latitude; }
          set { SetLatitude(value); }
        }
        public Builder SetLatitude(float value) {
          PrepareBuilder();
          result.hasLatitude = true;
          result.latitude_ = value;
          return this;
        }
        public Builder ClearLatitude() {
          PrepareBuilder();
          result.hasLatitude = false;
          result.latitude_ = 0F;
          return this;
        }
        
        public bool HasLongitude {
          get { return result.hasLongitude; }
        }
        public float Longitude {
          get { return result.Longitude; }
          set { SetLongitude(value); }
        }
        public Builder SetLongitude(float value) {
          PrepareBuilder();
          result.hasLongitude = true;
          result.longitude_ = value;
          return this;
        }
        public Builder ClearLongitude() {
          PrepareBuilder();
          result.hasLongitude = false;
          result.longitude_ = 0F;
          return this;
        }
        
        public bool HasCountry {
          get { return result.hasCountry; }
        }
        public string Country {
          get { return result.Country; }
          set { SetCountry(value); }
        }
        public Builder SetCountry(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasCountry = true;
          result.country_ = value;
          return this;
        }
        public Builder ClearCountry() {
          PrepareBuilder();
          result.hasCountry = false;
          result.country_ = "";
          return this;
        }
      }
      static Location() {
        object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int VersionFieldNumber = 1;
  private bool hasVersion;
  private uint version_;
  public bool HasVersion {
    get { return hasVersion; }
  }
  [global::System.CLSCompliant(false)]
  public uint Version {
    get { return version_; }
  }
  
  public const int GameDataFieldNumber = 2;
  private bool hasGameData;
  private pb::ByteString gameData_ = pb::ByteString.Empty;
  public bool HasGameData {
    get { return hasGameData; }
  }
  public pb::ByteString GameData {
    get { return gameData_; }
  }
  
  public const int OutofdateSubscribedCachesFieldNumber = 3;
  private pbc::PopsicleList<global::CMsgSOCacheSubscribed> outofdateSubscribedCaches_ = new pbc::PopsicleList<global::CMsgSOCacheSubscribed>();
  public scg::IList<global::CMsgSOCacheSubscribed> OutofdateSubscribedCachesList {
    get { return outofdateSubscribedCaches_; }
  }
  public int OutofdateSubscribedCachesCount {
    get { return outofdateSubscribedCaches_.Count; }
  }
  public global::CMsgSOCacheSubscribed GetOutofdateSubscribedCaches(int index) {
    return outofdateSubscribedCaches_[index];
  }
  
  public const int UptodateSubscribedCachesFieldNumber = 4;
  private pbc::PopsicleList<global::CMsgSOCacheSubscriptionCheck> uptodateSubscribedCaches_ = new pbc::PopsicleList<global::CMsgSOCacheSubscriptionCheck>();
  public scg::IList<global::CMsgSOCacheSubscriptionCheck> UptodateSubscribedCachesList {
    get { return uptodateSubscribedCaches_; }
  }
  public int UptodateSubscribedCachesCount {
    get { return uptodateSubscribedCaches_.Count; }
  }
  public global::CMsgSOCacheSubscriptionCheck GetUptodateSubscribedCaches(int index) {
    return uptodateSubscribedCaches_[index];
  }
  
  public const int LocationFieldNumber = 5;
  private bool hasLocation;
  private global::CMsgClientWelcome.Types.Location location_;
  public bool HasLocation {
    get { return hasLocation; }
  }
  public global::CMsgClientWelcome.Types.Location Location {
    get { return location_ ?? global::CMsgClientWelcome.Types.Location.DefaultInstance; }
  }
  
  public const int GameData2FieldNumber = 6;
  private bool hasGameData2;
  private pb::ByteString gameData2_ = pb::ByteString.Empty;
  public bool HasGameData2 {
    get { return hasGameData2; }
  }
  public pb::ByteString GameData2 {
    get { return gameData2_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgClientWelcomeFieldNames;
    if (hasVersion) {
      output.WriteUInt32(1, field_names[5], Version);
    }
    if (hasGameData) {
      output.WriteBytes(2, field_names[0], GameData);
    }
    if (outofdateSubscribedCaches_.Count > 0) {
      output.WriteMessageArray(3, field_names[3], outofdateSubscribedCaches_);
    }
    if (uptodateSubscribedCaches_.Count > 0) {
      output.WriteMessageArray(4, field_names[4], uptodateSubscribedCaches_);
    }
    if (hasLocation) {
      output.WriteMessage(5, field_names[2], Location);
    }
    if (hasGameData2) {
      output.WriteBytes(6, field_names[1], GameData2);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasVersion) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Version);
      }
      if (hasGameData) {
        size += pb::CodedOutputStream.ComputeBytesSize(2, GameData);
      }
      foreach (global::CMsgSOCacheSubscribed element in OutofdateSubscribedCachesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      foreach (global::CMsgSOCacheSubscriptionCheck element in UptodateSubscribedCachesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      if (hasLocation) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, Location);
      }
      if (hasGameData2) {
        size += pb::CodedOutputStream.ComputeBytesSize(6, GameData2);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgClientWelcome ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgClientWelcome ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgClientWelcome ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgClientWelcome ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgClientWelcome ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgClientWelcome ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgClientWelcome ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgClientWelcome ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgClientWelcome ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgClientWelcome ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgClientWelcome MakeReadOnly() {
    outofdateSubscribedCaches_.MakeReadOnly();
    uptodateSubscribedCaches_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgClientWelcome prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgClientWelcome, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgClientWelcome cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgClientWelcome result;
    
    private CMsgClientWelcome PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgClientWelcome original = result;
        result = new CMsgClientWelcome();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgClientWelcome MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgClientWelcome.Descriptor; }
    }
    
    public override CMsgClientWelcome DefaultInstanceForType {
      get { return global::CMsgClientWelcome.DefaultInstance; }
    }
    
    public override CMsgClientWelcome BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgClientWelcome) {
        return MergeFrom((CMsgClientWelcome) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgClientWelcome other) {
      if (other == global::CMsgClientWelcome.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasVersion) {
        Version = other.Version;
      }
      if (other.HasGameData) {
        GameData = other.GameData;
      }
      if (other.outofdateSubscribedCaches_.Count != 0) {
        result.outofdateSubscribedCaches_.Add(other.outofdateSubscribedCaches_);
      }
      if (other.uptodateSubscribedCaches_.Count != 0) {
        result.uptodateSubscribedCaches_.Add(other.uptodateSubscribedCaches_);
      }
      if (other.HasLocation) {
        MergeLocation(other.Location);
      }
      if (other.HasGameData2) {
        GameData2 = other.GameData2;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgClientWelcomeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgClientWelcomeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasVersion = input.ReadUInt32(ref result.version_);
            break;
          }
          case 18: {
            result.hasGameData = input.ReadBytes(ref result.gameData_);
            break;
          }
          case 26: {
            input.ReadMessageArray(tag, field_name, result.outofdateSubscribedCaches_, global::CMsgSOCacheSubscribed.DefaultInstance, extensionRegistry);
            break;
          }
          case 34: {
            input.ReadMessageArray(tag, field_name, result.uptodateSubscribedCaches_, global::CMsgSOCacheSubscriptionCheck.DefaultInstance, extensionRegistry);
            break;
          }
          case 42: {
            global::CMsgClientWelcome.Types.Location.Builder subBuilder = global::CMsgClientWelcome.Types.Location.CreateBuilder();
            if (result.hasLocation) {
              subBuilder.MergeFrom(Location);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Location = subBuilder.BuildPartial();
            break;
          }
          case 50: {
            result.hasGameData2 = input.ReadBytes(ref result.gameData2_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasVersion {
      get { return result.hasVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint Version {
      get { return result.Version; }
      set { SetVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVersion(uint value) {
      PrepareBuilder();
      result.hasVersion = true;
      result.version_ = value;
      return this;
    }
    public Builder ClearVersion() {
      PrepareBuilder();
      result.hasVersion = false;
      result.version_ = 0;
      return this;
    }
    
    public bool HasGameData {
      get { return result.hasGameData; }
    }
    public pb::ByteString GameData {
      get { return result.GameData; }
      set { SetGameData(value); }
    }
    public Builder SetGameData(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasGameData = true;
      result.gameData_ = value;
      return this;
    }
    public Builder ClearGameData() {
      PrepareBuilder();
      result.hasGameData = false;
      result.gameData_ = pb::ByteString.Empty;
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgSOCacheSubscribed> OutofdateSubscribedCachesList {
      get { return PrepareBuilder().outofdateSubscribedCaches_; }
    }
    public int OutofdateSubscribedCachesCount {
      get { return result.OutofdateSubscribedCachesCount; }
    }
    public global::CMsgSOCacheSubscribed GetOutofdateSubscribedCaches(int index) {
      return result.GetOutofdateSubscribedCaches(index);
    }
    public Builder SetOutofdateSubscribedCaches(int index, global::CMsgSOCacheSubscribed value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.outofdateSubscribedCaches_[index] = value;
      return this;
    }
    public Builder SetOutofdateSubscribedCaches(int index, global::CMsgSOCacheSubscribed.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.outofdateSubscribedCaches_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddOutofdateSubscribedCaches(global::CMsgSOCacheSubscribed value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.outofdateSubscribedCaches_.Add(value);
      return this;
    }
    public Builder AddOutofdateSubscribedCaches(global::CMsgSOCacheSubscribed.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.outofdateSubscribedCaches_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeOutofdateSubscribedCaches(scg::IEnumerable<global::CMsgSOCacheSubscribed> values) {
      PrepareBuilder();
      result.outofdateSubscribedCaches_.Add(values);
      return this;
    }
    public Builder ClearOutofdateSubscribedCaches() {
      PrepareBuilder();
      result.outofdateSubscribedCaches_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgSOCacheSubscriptionCheck> UptodateSubscribedCachesList {
      get { return PrepareBuilder().uptodateSubscribedCaches_; }
    }
    public int UptodateSubscribedCachesCount {
      get { return result.UptodateSubscribedCachesCount; }
    }
    public global::CMsgSOCacheSubscriptionCheck GetUptodateSubscribedCaches(int index) {
      return result.GetUptodateSubscribedCaches(index);
    }
    public Builder SetUptodateSubscribedCaches(int index, global::CMsgSOCacheSubscriptionCheck value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.uptodateSubscribedCaches_[index] = value;
      return this;
    }
    public Builder SetUptodateSubscribedCaches(int index, global::CMsgSOCacheSubscriptionCheck.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.uptodateSubscribedCaches_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddUptodateSubscribedCaches(global::CMsgSOCacheSubscriptionCheck value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.uptodateSubscribedCaches_.Add(value);
      return this;
    }
    public Builder AddUptodateSubscribedCaches(global::CMsgSOCacheSubscriptionCheck.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.uptodateSubscribedCaches_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeUptodateSubscribedCaches(scg::IEnumerable<global::CMsgSOCacheSubscriptionCheck> values) {
      PrepareBuilder();
      result.uptodateSubscribedCaches_.Add(values);
      return this;
    }
    public Builder ClearUptodateSubscribedCaches() {
      PrepareBuilder();
      result.uptodateSubscribedCaches_.Clear();
      return this;
    }
    
    public bool HasLocation {
     get { return result.hasLocation; }
    }
    public global::CMsgClientWelcome.Types.Location Location {
      get { return result.Location; }
      set { SetLocation(value); }
    }
    public Builder SetLocation(global::CMsgClientWelcome.Types.Location value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasLocation = true;
      result.location_ = value;
      return this;
    }
    public Builder SetLocation(global::CMsgClientWelcome.Types.Location.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasLocation = true;
      result.location_ = builderForValue.Build();
      return this;
    }
    public Builder MergeLocation(global::CMsgClientWelcome.Types.Location value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasLocation &&
          result.location_ != global::CMsgClientWelcome.Types.Location.DefaultInstance) {
          result.location_ = global::CMsgClientWelcome.Types.Location.CreateBuilder(result.location_).MergeFrom(value).BuildPartial();
      } else {
        result.location_ = value;
      }
      result.hasLocation = true;
      return this;
    }
    public Builder ClearLocation() {
      PrepareBuilder();
      result.hasLocation = false;
      result.location_ = null;
      return this;
    }
    
    public bool HasGameData2 {
      get { return result.hasGameData2; }
    }
    public pb::ByteString GameData2 {
      get { return result.GameData2; }
      set { SetGameData2(value); }
    }
    public Builder SetGameData2(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasGameData2 = true;
      result.gameData2_ = value;
      return this;
    }
    public Builder ClearGameData2() {
      PrepareBuilder();
      result.hasGameData2 = false;
      result.gameData2_ = pb::ByteString.Empty;
      return this;
    }
  }
  static CMsgClientWelcome() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgConnectionStatus : pb::GeneratedMessage<CMsgConnectionStatus, CMsgConnectionStatus.Builder> {
  private CMsgConnectionStatus() { }
  private static readonly CMsgConnectionStatus defaultInstance = new CMsgConnectionStatus().MakeReadOnly();
  private static readonly string[] _cMsgConnectionStatusFieldNames = new string[] { "client_session_need", "estimated_wait_seconds_remaining", "queue_position", "queue_size", "status", "wait_seconds" };
  private static readonly uint[] _cMsgConnectionStatusFieldTags = new uint[] { 16, 48, 24, 32, 8, 40 };
  public static CMsgConnectionStatus DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgConnectionStatus DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgConnectionStatus ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CMsgConnectionStatus__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgConnectionStatus, CMsgConnectionStatus.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CMsgConnectionStatus__FieldAccessorTable; }
  }
  
  public const int StatusFieldNumber = 1;
  private bool hasStatus;
  private global::GCConnectionStatus status_ = global::GCConnectionStatus.GCConnectionStatus_HAVE_SESSION;
  public bool HasStatus {
    get { return hasStatus; }
  }
  public global::GCConnectionStatus Status {
    get { return status_; }
  }
  
  public const int ClientSessionNeedFieldNumber = 2;
  private bool hasClientSessionNeed;
  private uint clientSessionNeed_;
  public bool HasClientSessionNeed {
    get { return hasClientSessionNeed; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClientSessionNeed {
    get { return clientSessionNeed_; }
  }
  
  public const int QueuePositionFieldNumber = 3;
  private bool hasQueuePosition;
  private int queuePosition_;
  public bool HasQueuePosition {
    get { return hasQueuePosition; }
  }
  public int QueuePosition {
    get { return queuePosition_; }
  }
  
  public const int QueueSizeFieldNumber = 4;
  private bool hasQueueSize;
  private int queueSize_;
  public bool HasQueueSize {
    get { return hasQueueSize; }
  }
  public int QueueSize {
    get { return queueSize_; }
  }
  
  public const int WaitSecondsFieldNumber = 5;
  private bool hasWaitSeconds;
  private int waitSeconds_;
  public bool HasWaitSeconds {
    get { return hasWaitSeconds; }
  }
  public int WaitSeconds {
    get { return waitSeconds_; }
  }
  
  public const int EstimatedWaitSecondsRemainingFieldNumber = 6;
  private bool hasEstimatedWaitSecondsRemaining;
  private int estimatedWaitSecondsRemaining_;
  public bool HasEstimatedWaitSecondsRemaining {
    get { return hasEstimatedWaitSecondsRemaining; }
  }
  public int EstimatedWaitSecondsRemaining {
    get { return estimatedWaitSecondsRemaining_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgConnectionStatusFieldNames;
    if (hasStatus) {
      output.WriteEnum(1, field_names[4], (int) Status, Status);
    }
    if (hasClientSessionNeed) {
      output.WriteUInt32(2, field_names[0], ClientSessionNeed);
    }
    if (hasQueuePosition) {
      output.WriteInt32(3, field_names[2], QueuePosition);
    }
    if (hasQueueSize) {
      output.WriteInt32(4, field_names[3], QueueSize);
    }
    if (hasWaitSeconds) {
      output.WriteInt32(5, field_names[5], WaitSeconds);
    }
    if (hasEstimatedWaitSecondsRemaining) {
      output.WriteInt32(6, field_names[1], EstimatedWaitSecondsRemaining);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Status);
      }
      if (hasClientSessionNeed) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, ClientSessionNeed);
      }
      if (hasQueuePosition) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, QueuePosition);
      }
      if (hasQueueSize) {
        size += pb::CodedOutputStream.ComputeInt32Size(4, QueueSize);
      }
      if (hasWaitSeconds) {
        size += pb::CodedOutputStream.ComputeInt32Size(5, WaitSeconds);
      }
      if (hasEstimatedWaitSecondsRemaining) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, EstimatedWaitSecondsRemaining);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgConnectionStatus ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgConnectionStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgConnectionStatus ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgConnectionStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgConnectionStatus ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgConnectionStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgConnectionStatus ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgConnectionStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgConnectionStatus ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgConnectionStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgConnectionStatus MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgConnectionStatus prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgConnectionStatus, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgConnectionStatus cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgConnectionStatus result;
    
    private CMsgConnectionStatus PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgConnectionStatus original = result;
        result = new CMsgConnectionStatus();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgConnectionStatus MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgConnectionStatus.Descriptor; }
    }
    
    public override CMsgConnectionStatus DefaultInstanceForType {
      get { return global::CMsgConnectionStatus.DefaultInstance; }
    }
    
    public override CMsgConnectionStatus BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgConnectionStatus) {
        return MergeFrom((CMsgConnectionStatus) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgConnectionStatus other) {
      if (other == global::CMsgConnectionStatus.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasClientSessionNeed) {
        ClientSessionNeed = other.ClientSessionNeed;
      }
      if (other.HasQueuePosition) {
        QueuePosition = other.QueuePosition;
      }
      if (other.HasQueueSize) {
        QueueSize = other.QueueSize;
      }
      if (other.HasWaitSeconds) {
        WaitSeconds = other.WaitSeconds;
      }
      if (other.HasEstimatedWaitSecondsRemaining) {
        EstimatedWaitSecondsRemaining = other.EstimatedWaitSecondsRemaining;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgConnectionStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgConnectionStatusFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            object unknown;
            if(input.ReadEnum(ref result.status_, out unknown)) {
              result.hasStatus = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(1, (ulong)(int)unknown);
            }
            break;
          }
          case 16: {
            result.hasClientSessionNeed = input.ReadUInt32(ref result.clientSessionNeed_);
            break;
          }
          case 24: {
            result.hasQueuePosition = input.ReadInt32(ref result.queuePosition_);
            break;
          }
          case 32: {
            result.hasQueueSize = input.ReadInt32(ref result.queueSize_);
            break;
          }
          case 40: {
            result.hasWaitSeconds = input.ReadInt32(ref result.waitSeconds_);
            break;
          }
          case 48: {
            result.hasEstimatedWaitSecondsRemaining = input.ReadInt32(ref result.estimatedWaitSecondsRemaining_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasStatus {
     get { return result.hasStatus; }
    }
    public global::GCConnectionStatus Status {
      get { return result.Status; }
      set { SetStatus(value); }
    }
    public Builder SetStatus(global::GCConnectionStatus value) {
      PrepareBuilder();
      result.hasStatus = true;
      result.status_ = value;
      return this;
    }
    public Builder ClearStatus() {
      PrepareBuilder();
      result.hasStatus = false;
      result.status_ = global::GCConnectionStatus.GCConnectionStatus_HAVE_SESSION;
      return this;
    }
    
    public bool HasClientSessionNeed {
      get { return result.hasClientSessionNeed; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClientSessionNeed {
      get { return result.ClientSessionNeed; }
      set { SetClientSessionNeed(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClientSessionNeed(uint value) {
      PrepareBuilder();
      result.hasClientSessionNeed = true;
      result.clientSessionNeed_ = value;
      return this;
    }
    public Builder ClearClientSessionNeed() {
      PrepareBuilder();
      result.hasClientSessionNeed = false;
      result.clientSessionNeed_ = 0;
      return this;
    }
    
    public bool HasQueuePosition {
      get { return result.hasQueuePosition; }
    }
    public int QueuePosition {
      get { return result.QueuePosition; }
      set { SetQueuePosition(value); }
    }
    public Builder SetQueuePosition(int value) {
      PrepareBuilder();
      result.hasQueuePosition = true;
      result.queuePosition_ = value;
      return this;
    }
    public Builder ClearQueuePosition() {
      PrepareBuilder();
      result.hasQueuePosition = false;
      result.queuePosition_ = 0;
      return this;
    }
    
    public bool HasQueueSize {
      get { return result.hasQueueSize; }
    }
    public int QueueSize {
      get { return result.QueueSize; }
      set { SetQueueSize(value); }
    }
    public Builder SetQueueSize(int value) {
      PrepareBuilder();
      result.hasQueueSize = true;
      result.queueSize_ = value;
      return this;
    }
    public Builder ClearQueueSize() {
      PrepareBuilder();
      result.hasQueueSize = false;
      result.queueSize_ = 0;
      return this;
    }
    
    public bool HasWaitSeconds {
      get { return result.hasWaitSeconds; }
    }
    public int WaitSeconds {
      get { return result.WaitSeconds; }
      set { SetWaitSeconds(value); }
    }
    public Builder SetWaitSeconds(int value) {
      PrepareBuilder();
      result.hasWaitSeconds = true;
      result.waitSeconds_ = value;
      return this;
    }
    public Builder ClearWaitSeconds() {
      PrepareBuilder();
      result.hasWaitSeconds = false;
      result.waitSeconds_ = 0;
      return this;
    }
    
    public bool HasEstimatedWaitSecondsRemaining {
      get { return result.hasEstimatedWaitSecondsRemaining; }
    }
    public int EstimatedWaitSecondsRemaining {
      get { return result.EstimatedWaitSecondsRemaining; }
      set { SetEstimatedWaitSecondsRemaining(value); }
    }
    public Builder SetEstimatedWaitSecondsRemaining(int value) {
      PrepareBuilder();
      result.hasEstimatedWaitSecondsRemaining = true;
      result.estimatedWaitSecondsRemaining_ = value;
      return this;
    }
    public Builder ClearEstimatedWaitSecondsRemaining() {
      PrepareBuilder();
      result.hasEstimatedWaitSecondsRemaining = false;
      result.estimatedWaitSecondsRemaining_ = 0;
      return this;
    }
  }
  static CMsgConnectionStatus() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CWorkshop_PopulateItemDescriptions_Request : pb::GeneratedMessage<CWorkshop_PopulateItemDescriptions_Request, CWorkshop_PopulateItemDescriptions_Request.Builder> {
  private CWorkshop_PopulateItemDescriptions_Request() { }
  private static readonly CWorkshop_PopulateItemDescriptions_Request defaultInstance = new CWorkshop_PopulateItemDescriptions_Request().MakeReadOnly();
  private static readonly string[] _cWorkshopPopulateItemDescriptionsRequestFieldNames = new string[] { "appid", "languages" };
  private static readonly uint[] _cWorkshopPopulateItemDescriptionsRequestFieldTags = new uint[] { 8, 18 };
  public static CWorkshop_PopulateItemDescriptions_Request DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CWorkshop_PopulateItemDescriptions_Request DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CWorkshop_PopulateItemDescriptions_Request ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CWorkshop_PopulateItemDescriptions_Request__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CWorkshop_PopulateItemDescriptions_Request, CWorkshop_PopulateItemDescriptions_Request.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CWorkshop_PopulateItemDescriptions_Request__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class SingleItemDescription : pb::GeneratedMessage<SingleItemDescription, SingleItemDescription.Builder> {
      private SingleItemDescription() { }
      private static readonly SingleItemDescription defaultInstance = new SingleItemDescription().MakeReadOnly();
      private static readonly string[] _singleItemDescriptionFieldNames = new string[] { "gameitemid", "item_description" };
      private static readonly uint[] _singleItemDescriptionFieldTags = new uint[] { 8, 18 };
      public static SingleItemDescription DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override SingleItemDescription DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override SingleItemDescription ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::GcsdkGcmessages.internal__static_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<SingleItemDescription, SingleItemDescription.Builder> InternalFieldAccessors {
        get { return global::GcsdkGcmessages.internal__static_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription__FieldAccessorTable; }
      }
      
      public const int GameitemidFieldNumber = 1;
      private bool hasGameitemid;
      private uint gameitemid_;
      public bool HasGameitemid {
        get { return hasGameitemid; }
      }
      [global::System.CLSCompliant(false)]
      public uint Gameitemid {
        get { return gameitemid_; }
      }
      
      public const int ItemDescriptionFieldNumber = 2;
      private bool hasItemDescription;
      private string itemDescription_ = "";
      public bool HasItemDescription {
        get { return hasItemDescription; }
      }
      public string ItemDescription {
        get { return itemDescription_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _singleItemDescriptionFieldNames;
        if (hasGameitemid) {
          output.WriteUInt32(1, field_names[0], Gameitemid);
        }
        if (hasItemDescription) {
          output.WriteString(2, field_names[1], ItemDescription);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasGameitemid) {
            size += pb::CodedOutputStream.ComputeUInt32Size(1, Gameitemid);
          }
          if (hasItemDescription) {
            size += pb::CodedOutputStream.ComputeStringSize(2, ItemDescription);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static SingleItemDescription ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SingleItemDescription ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SingleItemDescription ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static SingleItemDescription ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static SingleItemDescription ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SingleItemDescription ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static SingleItemDescription ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static SingleItemDescription ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static SingleItemDescription ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static SingleItemDescription ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private SingleItemDescription MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(SingleItemDescription prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<SingleItemDescription, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(SingleItemDescription cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private SingleItemDescription result;
        
        private SingleItemDescription PrepareBuilder() {
          if (resultIsReadOnly) {
            SingleItemDescription original = result;
            result = new SingleItemDescription();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override SingleItemDescription MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription.Descriptor; }
        }
        
        public override SingleItemDescription DefaultInstanceForType {
          get { return global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription.DefaultInstance; }
        }
        
        public override SingleItemDescription BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is SingleItemDescription) {
            return MergeFrom((SingleItemDescription) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(SingleItemDescription other) {
          if (other == global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasGameitemid) {
            Gameitemid = other.Gameitemid;
          }
          if (other.HasItemDescription) {
            ItemDescription = other.ItemDescription;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_singleItemDescriptionFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _singleItemDescriptionFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasGameitemid = input.ReadUInt32(ref result.gameitemid_);
                break;
              }
              case 18: {
                result.hasItemDescription = input.ReadString(ref result.itemDescription_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasGameitemid {
          get { return result.hasGameitemid; }
        }
        [global::System.CLSCompliant(false)]
        public uint Gameitemid {
          get { return result.Gameitemid; }
          set { SetGameitemid(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetGameitemid(uint value) {
          PrepareBuilder();
          result.hasGameitemid = true;
          result.gameitemid_ = value;
          return this;
        }
        public Builder ClearGameitemid() {
          PrepareBuilder();
          result.hasGameitemid = false;
          result.gameitemid_ = 0;
          return this;
        }
        
        public bool HasItemDescription {
          get { return result.hasItemDescription; }
        }
        public string ItemDescription {
          get { return result.ItemDescription; }
          set { SetItemDescription(value); }
        }
        public Builder SetItemDescription(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasItemDescription = true;
          result.itemDescription_ = value;
          return this;
        }
        public Builder ClearItemDescription() {
          PrepareBuilder();
          result.hasItemDescription = false;
          result.itemDescription_ = "";
          return this;
        }
      }
      static SingleItemDescription() {
        object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
      }
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ItemDescriptionsLanguageBlock : pb::GeneratedMessage<ItemDescriptionsLanguageBlock, ItemDescriptionsLanguageBlock.Builder> {
      private ItemDescriptionsLanguageBlock() { }
      private static readonly ItemDescriptionsLanguageBlock defaultInstance = new ItemDescriptionsLanguageBlock().MakeReadOnly();
      private static readonly string[] _itemDescriptionsLanguageBlockFieldNames = new string[] { "descriptions", "language" };
      private static readonly uint[] _itemDescriptionsLanguageBlockFieldTags = new uint[] { 18, 10 };
      public static ItemDescriptionsLanguageBlock DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override ItemDescriptionsLanguageBlock DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override ItemDescriptionsLanguageBlock ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::GcsdkGcmessages.internal__static_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<ItemDescriptionsLanguageBlock, ItemDescriptionsLanguageBlock.Builder> InternalFieldAccessors {
        get { return global::GcsdkGcmessages.internal__static_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock__FieldAccessorTable; }
      }
      
      public const int LanguageFieldNumber = 1;
      private bool hasLanguage;
      private string language_ = "";
      public bool HasLanguage {
        get { return hasLanguage; }
      }
      public string Language {
        get { return language_; }
      }
      
      public const int DescriptionsFieldNumber = 2;
      private pbc::PopsicleList<global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription> descriptions_ = new pbc::PopsicleList<global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription>();
      public scg::IList<global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription> DescriptionsList {
        get { return descriptions_; }
      }
      public int DescriptionsCount {
        get { return descriptions_.Count; }
      }
      public global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription GetDescriptions(int index) {
        return descriptions_[index];
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _itemDescriptionsLanguageBlockFieldNames;
        if (hasLanguage) {
          output.WriteString(1, field_names[1], Language);
        }
        if (descriptions_.Count > 0) {
          output.WriteMessageArray(2, field_names[0], descriptions_);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasLanguage) {
            size += pb::CodedOutputStream.ComputeStringSize(1, Language);
          }
          foreach (global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription element in DescriptionsList) {
            size += pb::CodedOutputStream.ComputeMessageSize(2, element);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static ItemDescriptionsLanguageBlock ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ItemDescriptionsLanguageBlock ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ItemDescriptionsLanguageBlock ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ItemDescriptionsLanguageBlock ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ItemDescriptionsLanguageBlock ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ItemDescriptionsLanguageBlock ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static ItemDescriptionsLanguageBlock ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static ItemDescriptionsLanguageBlock ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static ItemDescriptionsLanguageBlock ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ItemDescriptionsLanguageBlock ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private ItemDescriptionsLanguageBlock MakeReadOnly() {
        descriptions_.MakeReadOnly();
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(ItemDescriptionsLanguageBlock prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<ItemDescriptionsLanguageBlock, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(ItemDescriptionsLanguageBlock cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private ItemDescriptionsLanguageBlock result;
        
        private ItemDescriptionsLanguageBlock PrepareBuilder() {
          if (resultIsReadOnly) {
            ItemDescriptionsLanguageBlock original = result;
            result = new ItemDescriptionsLanguageBlock();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override ItemDescriptionsLanguageBlock MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock.Descriptor; }
        }
        
        public override ItemDescriptionsLanguageBlock DefaultInstanceForType {
          get { return global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock.DefaultInstance; }
        }
        
        public override ItemDescriptionsLanguageBlock BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is ItemDescriptionsLanguageBlock) {
            return MergeFrom((ItemDescriptionsLanguageBlock) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(ItemDescriptionsLanguageBlock other) {
          if (other == global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasLanguage) {
            Language = other.Language;
          }
          if (other.descriptions_.Count != 0) {
            result.descriptions_.Add(other.descriptions_);
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_itemDescriptionsLanguageBlockFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _itemDescriptionsLanguageBlockFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 10: {
                result.hasLanguage = input.ReadString(ref result.language_);
                break;
              }
              case 18: {
                input.ReadMessageArray(tag, field_name, result.descriptions_, global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription.DefaultInstance, extensionRegistry);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasLanguage {
          get { return result.hasLanguage; }
        }
        public string Language {
          get { return result.Language; }
          set { SetLanguage(value); }
        }
        public Builder SetLanguage(string value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.hasLanguage = true;
          result.language_ = value;
          return this;
        }
        public Builder ClearLanguage() {
          PrepareBuilder();
          result.hasLanguage = false;
          result.language_ = "";
          return this;
        }
        
        public pbc::IPopsicleList<global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription> DescriptionsList {
          get { return PrepareBuilder().descriptions_; }
        }
        public int DescriptionsCount {
          get { return result.DescriptionsCount; }
        }
        public global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription GetDescriptions(int index) {
          return result.GetDescriptions(index);
        }
        public Builder SetDescriptions(int index, global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.descriptions_[index] = value;
          return this;
        }
        public Builder SetDescriptions(int index, global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.descriptions_[index] = builderForValue.Build();
          return this;
        }
        public Builder AddDescriptions(global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription value) {
          pb::ThrowHelper.ThrowIfNull(value, "value");
          PrepareBuilder();
          result.descriptions_.Add(value);
          return this;
        }
        public Builder AddDescriptions(global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription.Builder builderForValue) {
          pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
          PrepareBuilder();
          result.descriptions_.Add(builderForValue.Build());
          return this;
        }
        public Builder AddRangeDescriptions(scg::IEnumerable<global::CWorkshop_PopulateItemDescriptions_Request.Types.SingleItemDescription> values) {
          PrepareBuilder();
          result.descriptions_.Add(values);
          return this;
        }
        public Builder ClearDescriptions() {
          PrepareBuilder();
          result.descriptions_.Clear();
          return this;
        }
      }
      static ItemDescriptionsLanguageBlock() {
        object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int AppidFieldNumber = 1;
  private bool hasAppid;
  private uint appid_;
  public bool HasAppid {
    get { return hasAppid; }
  }
  [global::System.CLSCompliant(false)]
  public uint Appid {
    get { return appid_; }
  }
  
  public const int LanguagesFieldNumber = 2;
  private pbc::PopsicleList<global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock> languages_ = new pbc::PopsicleList<global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock>();
  public scg::IList<global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock> LanguagesList {
    get { return languages_; }
  }
  public int LanguagesCount {
    get { return languages_.Count; }
  }
  public global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock GetLanguages(int index) {
    return languages_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cWorkshopPopulateItemDescriptionsRequestFieldNames;
    if (hasAppid) {
      output.WriteUInt32(1, field_names[0], Appid);
    }
    if (languages_.Count > 0) {
      output.WriteMessageArray(2, field_names[1], languages_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAppid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Appid);
      }
      foreach (global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock element in LanguagesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CWorkshop_PopulateItemDescriptions_Request ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CWorkshop_PopulateItemDescriptions_Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CWorkshop_PopulateItemDescriptions_Request ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CWorkshop_PopulateItemDescriptions_Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CWorkshop_PopulateItemDescriptions_Request ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CWorkshop_PopulateItemDescriptions_Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CWorkshop_PopulateItemDescriptions_Request ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CWorkshop_PopulateItemDescriptions_Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CWorkshop_PopulateItemDescriptions_Request ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CWorkshop_PopulateItemDescriptions_Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CWorkshop_PopulateItemDescriptions_Request MakeReadOnly() {
    languages_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CWorkshop_PopulateItemDescriptions_Request prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CWorkshop_PopulateItemDescriptions_Request, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CWorkshop_PopulateItemDescriptions_Request cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CWorkshop_PopulateItemDescriptions_Request result;
    
    private CWorkshop_PopulateItemDescriptions_Request PrepareBuilder() {
      if (resultIsReadOnly) {
        CWorkshop_PopulateItemDescriptions_Request original = result;
        result = new CWorkshop_PopulateItemDescriptions_Request();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CWorkshop_PopulateItemDescriptions_Request MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CWorkshop_PopulateItemDescriptions_Request.Descriptor; }
    }
    
    public override CWorkshop_PopulateItemDescriptions_Request DefaultInstanceForType {
      get { return global::CWorkshop_PopulateItemDescriptions_Request.DefaultInstance; }
    }
    
    public override CWorkshop_PopulateItemDescriptions_Request BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CWorkshop_PopulateItemDescriptions_Request) {
        return MergeFrom((CWorkshop_PopulateItemDescriptions_Request) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CWorkshop_PopulateItemDescriptions_Request other) {
      if (other == global::CWorkshop_PopulateItemDescriptions_Request.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.languages_.Count != 0) {
        result.languages_.Add(other.languages_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cWorkshopPopulateItemDescriptionsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cWorkshopPopulateItemDescriptionsRequestFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAppid = input.ReadUInt32(ref result.appid_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.languages_, global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAppid {
      get { return result.hasAppid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Appid {
      get { return result.Appid; }
      set { SetAppid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAppid(uint value) {
      PrepareBuilder();
      result.hasAppid = true;
      result.appid_ = value;
      return this;
    }
    public Builder ClearAppid() {
      PrepareBuilder();
      result.hasAppid = false;
      result.appid_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock> LanguagesList {
      get { return PrepareBuilder().languages_; }
    }
    public int LanguagesCount {
      get { return result.LanguagesCount; }
    }
    public global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock GetLanguages(int index) {
      return result.GetLanguages(index);
    }
    public Builder SetLanguages(int index, global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.languages_[index] = value;
      return this;
    }
    public Builder SetLanguages(int index, global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.languages_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddLanguages(global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.languages_.Add(value);
      return this;
    }
    public Builder AddLanguages(global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.languages_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeLanguages(scg::IEnumerable<global::CWorkshop_PopulateItemDescriptions_Request.Types.ItemDescriptionsLanguageBlock> values) {
      PrepareBuilder();
      result.languages_.Add(values);
      return this;
    }
    public Builder ClearLanguages() {
      PrepareBuilder();
      result.languages_.Clear();
      return this;
    }
  }
  static CWorkshop_PopulateItemDescriptions_Request() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CWorkshop_GetContributors_Request : pb::GeneratedMessage<CWorkshop_GetContributors_Request, CWorkshop_GetContributors_Request.Builder> {
  private CWorkshop_GetContributors_Request() { }
  private static readonly CWorkshop_GetContributors_Request defaultInstance = new CWorkshop_GetContributors_Request().MakeReadOnly();
  private static readonly string[] _cWorkshopGetContributorsRequestFieldNames = new string[] { "appid", "gameitemid" };
  private static readonly uint[] _cWorkshopGetContributorsRequestFieldTags = new uint[] { 8, 16 };
  public static CWorkshop_GetContributors_Request DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CWorkshop_GetContributors_Request DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CWorkshop_GetContributors_Request ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CWorkshop_GetContributors_Request__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CWorkshop_GetContributors_Request, CWorkshop_GetContributors_Request.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CWorkshop_GetContributors_Request__FieldAccessorTable; }
  }
  
  public const int AppidFieldNumber = 1;
  private bool hasAppid;
  private uint appid_;
  public bool HasAppid {
    get { return hasAppid; }
  }
  [global::System.CLSCompliant(false)]
  public uint Appid {
    get { return appid_; }
  }
  
  public const int GameitemidFieldNumber = 2;
  private bool hasGameitemid;
  private uint gameitemid_;
  public bool HasGameitemid {
    get { return hasGameitemid; }
  }
  [global::System.CLSCompliant(false)]
  public uint Gameitemid {
    get { return gameitemid_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cWorkshopGetContributorsRequestFieldNames;
    if (hasAppid) {
      output.WriteUInt32(1, field_names[0], Appid);
    }
    if (hasGameitemid) {
      output.WriteUInt32(2, field_names[1], Gameitemid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAppid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Appid);
      }
      if (hasGameitemid) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Gameitemid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CWorkshop_GetContributors_Request ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Request ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Request ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Request ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Request ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Request ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Request ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CWorkshop_GetContributors_Request ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CWorkshop_GetContributors_Request ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Request ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CWorkshop_GetContributors_Request MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CWorkshop_GetContributors_Request prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CWorkshop_GetContributors_Request, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CWorkshop_GetContributors_Request cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CWorkshop_GetContributors_Request result;
    
    private CWorkshop_GetContributors_Request PrepareBuilder() {
      if (resultIsReadOnly) {
        CWorkshop_GetContributors_Request original = result;
        result = new CWorkshop_GetContributors_Request();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CWorkshop_GetContributors_Request MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CWorkshop_GetContributors_Request.Descriptor; }
    }
    
    public override CWorkshop_GetContributors_Request DefaultInstanceForType {
      get { return global::CWorkshop_GetContributors_Request.DefaultInstance; }
    }
    
    public override CWorkshop_GetContributors_Request BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CWorkshop_GetContributors_Request) {
        return MergeFrom((CWorkshop_GetContributors_Request) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CWorkshop_GetContributors_Request other) {
      if (other == global::CWorkshop_GetContributors_Request.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasGameitemid) {
        Gameitemid = other.Gameitemid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cWorkshopGetContributorsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cWorkshopGetContributorsRequestFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAppid = input.ReadUInt32(ref result.appid_);
            break;
          }
          case 16: {
            result.hasGameitemid = input.ReadUInt32(ref result.gameitemid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAppid {
      get { return result.hasAppid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Appid {
      get { return result.Appid; }
      set { SetAppid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAppid(uint value) {
      PrepareBuilder();
      result.hasAppid = true;
      result.appid_ = value;
      return this;
    }
    public Builder ClearAppid() {
      PrepareBuilder();
      result.hasAppid = false;
      result.appid_ = 0;
      return this;
    }
    
    public bool HasGameitemid {
      get { return result.hasGameitemid; }
    }
    [global::System.CLSCompliant(false)]
    public uint Gameitemid {
      get { return result.Gameitemid; }
      set { SetGameitemid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGameitemid(uint value) {
      PrepareBuilder();
      result.hasGameitemid = true;
      result.gameitemid_ = value;
      return this;
    }
    public Builder ClearGameitemid() {
      PrepareBuilder();
      result.hasGameitemid = false;
      result.gameitemid_ = 0;
      return this;
    }
  }
  static CWorkshop_GetContributors_Request() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CWorkshop_GetContributors_Response : pb::GeneratedMessage<CWorkshop_GetContributors_Response, CWorkshop_GetContributors_Response.Builder> {
  private CWorkshop_GetContributors_Response() { }
  private static readonly CWorkshop_GetContributors_Response defaultInstance = new CWorkshop_GetContributors_Response().MakeReadOnly();
  private static readonly string[] _cWorkshopGetContributorsResponseFieldNames = new string[] { "contributors" };
  private static readonly uint[] _cWorkshopGetContributorsResponseFieldTags = new uint[] { 9 };
  public static CWorkshop_GetContributors_Response DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CWorkshop_GetContributors_Response DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CWorkshop_GetContributors_Response ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::GcsdkGcmessages.internal__static_CWorkshop_GetContributors_Response__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CWorkshop_GetContributors_Response, CWorkshop_GetContributors_Response.Builder> InternalFieldAccessors {
    get { return global::GcsdkGcmessages.internal__static_CWorkshop_GetContributors_Response__FieldAccessorTable; }
  }
  
  public const int ContributorsFieldNumber = 1;
  private pbc::PopsicleList<ulong> contributors_ = new pbc::PopsicleList<ulong>();
  [global::System.CLSCompliant(false)]
  public scg::IList<ulong> ContributorsList {
    get { return pbc::Lists.AsReadOnly(contributors_); }
  }
  public int ContributorsCount {
    get { return contributors_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GetContributors(int index) {
    return contributors_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cWorkshopGetContributorsResponseFieldNames;
    if (contributors_.Count > 0) {
      output.WriteFixed64Array(1, field_names[0], contributors_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * contributors_.Count;
        size += dataSize;
        size += 1 * contributors_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CWorkshop_GetContributors_Response ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Response ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Response ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Response ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Response ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Response ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Response ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CWorkshop_GetContributors_Response ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CWorkshop_GetContributors_Response ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CWorkshop_GetContributors_Response ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CWorkshop_GetContributors_Response MakeReadOnly() {
    contributors_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CWorkshop_GetContributors_Response prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CWorkshop_GetContributors_Response, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CWorkshop_GetContributors_Response cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CWorkshop_GetContributors_Response result;
    
    private CWorkshop_GetContributors_Response PrepareBuilder() {
      if (resultIsReadOnly) {
        CWorkshop_GetContributors_Response original = result;
        result = new CWorkshop_GetContributors_Response();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CWorkshop_GetContributors_Response MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CWorkshop_GetContributors_Response.Descriptor; }
    }
    
    public override CWorkshop_GetContributors_Response DefaultInstanceForType {
      get { return global::CWorkshop_GetContributors_Response.DefaultInstance; }
    }
    
    public override CWorkshop_GetContributors_Response BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CWorkshop_GetContributors_Response) {
        return MergeFrom((CWorkshop_GetContributors_Response) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CWorkshop_GetContributors_Response other) {
      if (other == global::CWorkshop_GetContributors_Response.DefaultInstance) return this;
      PrepareBuilder();
      if (other.contributors_.Count != 0) {
        result.contributors_.Add(other.contributors_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cWorkshopGetContributorsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cWorkshopGetContributorsResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10:
          case 9: {
            input.ReadFixed64Array(tag, field_name, result.contributors_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<ulong> ContributorsList {
      get { return PrepareBuilder().contributors_; }
    }
    public int ContributorsCount {
      get { return result.ContributorsCount; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetContributors(int index) {
      return result.GetContributors(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetContributors(int index, ulong value) {
      PrepareBuilder();
      result.contributors_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddContributors(ulong value) {
      PrepareBuilder();
      result.contributors_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeContributors(scg::IEnumerable<ulong> values) {
      PrepareBuilder();
      result.contributors_.Add(values);
      return this;
    }
    public Builder ClearContributors() {
      PrepareBuilder();
      result.contributors_.Clear();
      return this;
    }
  }
  static CWorkshop_GetContributors_Response() {
    object.ReferenceEquals(global::GcsdkGcmessages.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
