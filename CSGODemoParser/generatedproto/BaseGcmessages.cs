// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class BaseGcmessages {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_CGCStorePurchaseInit_LineItem__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CGCStorePurchaseInit_LineItem, global::CGCStorePurchaseInit_LineItem.Builder> internal__static_CGCStorePurchaseInit_LineItem__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCStorePurchaseInit__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseInit, global::CMsgGCStorePurchaseInit.Builder> internal__static_CMsgGCStorePurchaseInit__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCStorePurchaseInitResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseInitResponse, global::CMsgGCStorePurchaseInitResponse.Builder> internal__static_CMsgGCStorePurchaseInitResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOPartyInvite__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOPartyInvite, global::CSOPartyInvite.Builder> internal__static_CSOPartyInvite__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOLobbyInvite__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOLobbyInvite, global::CSOLobbyInvite.Builder> internal__static_CSOLobbyInvite__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSystemBroadcast__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSystemBroadcast, global::CMsgSystemBroadcast.Builder> internal__static_CMsgSystemBroadcast__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgInviteToParty__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgInviteToParty, global::CMsgInviteToParty.Builder> internal__static_CMsgInviteToParty__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgInvitationCreated__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgInvitationCreated, global::CMsgInvitationCreated.Builder> internal__static_CMsgInvitationCreated__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgPartyInviteResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgPartyInviteResponse, global::CMsgPartyInviteResponse.Builder> internal__static_CMsgPartyInviteResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgKickFromParty__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgKickFromParty, global::CMsgKickFromParty.Builder> internal__static_CMsgKickFromParty__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgLeaveParty__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgLeaveParty, global::CMsgLeaveParty.Builder> internal__static_CMsgLeaveParty__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgServerAvailable__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgServerAvailable, global::CMsgServerAvailable.Builder> internal__static_CMsgServerAvailable__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgLANServerAvailable__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgLANServerAvailable, global::CMsgLANServerAvailable.Builder> internal__static_CMsgLANServerAvailable__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOEconGameAccountClient__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOEconGameAccountClient, global::CSOEconGameAccountClient.Builder> internal__static_CSOEconGameAccountClient__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOItemCriteriaCondition__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOItemCriteriaCondition, global::CSOItemCriteriaCondition.Builder> internal__static_CSOItemCriteriaCondition__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOItemCriteria__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOItemCriteria, global::CSOItemCriteria.Builder> internal__static_CSOItemCriteria__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOItemRecipe__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOItemRecipe, global::CSOItemRecipe.Builder> internal__static_CSOItemRecipe__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgDevNewItemRequest__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgDevNewItemRequest, global::CMsgDevNewItemRequest.Builder> internal__static_CMsgDevNewItemRequest__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgIncrementKillCountAttribute__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgIncrementKillCountAttribute, global::CMsgIncrementKillCountAttribute.Builder> internal__static_CMsgIncrementKillCountAttribute__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgApplySticker__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgApplySticker, global::CMsgApplySticker.Builder> internal__static_CMsgApplySticker__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgApplyStrangePart__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgApplyStrangePart, global::CMsgApplyStrangePart.Builder> internal__static_CMsgApplyStrangePart__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgApplyPennantUpgrade__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgApplyPennantUpgrade, global::CMsgApplyPennantUpgrade.Builder> internal__static_CMsgApplyPennantUpgrade__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgApplyEggEssence__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgApplyEggEssence, global::CMsgApplyEggEssence.Builder> internal__static_CMsgApplyEggEssence__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOEconItemAttribute__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOEconItemAttribute, global::CSOEconItemAttribute.Builder> internal__static_CSOEconItemAttribute__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOEconItemEquipped__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOEconItemEquipped, global::CSOEconItemEquipped.Builder> internal__static_CSOEconItemEquipped__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOEconItem__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOEconItem, global::CSOEconItem.Builder> internal__static_CSOEconItem__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgAdjustItemEquippedState__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgAdjustItemEquippedState, global::CMsgAdjustItemEquippedState.Builder> internal__static_CMsgAdjustItemEquippedState__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSortItems__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSortItems, global::CMsgSortItems.Builder> internal__static_CMsgSortItems__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOEconClaimCode__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOEconClaimCode, global::CSOEconClaimCode.Builder> internal__static_CSOEconClaimCode__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgStoreGetUserData__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgStoreGetUserData, global::CMsgStoreGetUserData.Builder> internal__static_CMsgStoreGetUserData__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgStoreGetUserDataResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgStoreGetUserDataResponse, global::CMsgStoreGetUserDataResponse.Builder> internal__static_CMsgStoreGetUserDataResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgUpdateItemSchema__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgUpdateItemSchema, global::CMsgUpdateItemSchema.Builder> internal__static_CMsgUpdateItemSchema__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCError__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCError, global::CMsgGCError.Builder> internal__static_CMsgGCError__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgRequestInventoryRefresh__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgRequestInventoryRefresh, global::CMsgRequestInventoryRefresh.Builder> internal__static_CMsgRequestInventoryRefresh__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgConVarValue__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgConVarValue, global::CMsgConVarValue.Builder> internal__static_CMsgConVarValue__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgReplicateConVars__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgReplicateConVars, global::CMsgReplicateConVars.Builder> internal__static_CMsgReplicateConVars__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgUseItem__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgUseItem, global::CMsgUseItem.Builder> internal__static_CMsgUseItem__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgReplayUploadedToYouTube__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgReplayUploadedToYouTube, global::CMsgReplayUploadedToYouTube.Builder> internal__static_CMsgReplayUploadedToYouTube__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgConsumableExhausted__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgConsumableExhausted, global::CMsgConsumableExhausted.Builder> internal__static_CMsgConsumableExhausted__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgItemAcknowledged__DEPRECATED__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgItemAcknowledged__DEPRECATED, global::CMsgItemAcknowledged__DEPRECATED.Builder> internal__static_CMsgItemAcknowledged__DEPRECATED__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSetPresetItemPosition__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSetPresetItemPosition, global::CMsgSetPresetItemPosition.Builder> internal__static_CMsgSetPresetItemPosition__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSetItemPositions__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSetItemPositions, global::CMsgSetItemPositions.Builder> internal__static_CMsgSetItemPositions__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSetItemPositions_ItemPosition__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSetItemPositions.Types.ItemPosition, global::CMsgSetItemPositions.Types.ItemPosition.Builder> internal__static_CMsgSetItemPositions_ItemPosition__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOEconItemPresetInstance__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOEconItemPresetInstance, global::CSOEconItemPresetInstance.Builder> internal__static_CSOEconItemPresetInstance__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSelectItemPresetForClass__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSelectItemPresetForClass, global::CMsgSelectItemPresetForClass.Builder> internal__static_CMsgSelectItemPresetForClass__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSelectItemPresetForClassReply__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSelectItemPresetForClassReply, global::CMsgSelectItemPresetForClassReply.Builder> internal__static_CMsgSelectItemPresetForClassReply__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOSelectedItemPreset__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOSelectedItemPreset, global::CSOSelectedItemPreset.Builder> internal__static_CSOSelectedItemPreset__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCReportAbuse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCReportAbuse, global::CMsgGCReportAbuse.Builder> internal__static_CMsgGCReportAbuse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCReportAbuseResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCReportAbuseResponse, global::CMsgGCReportAbuseResponse.Builder> internal__static_CMsgGCReportAbuseResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCNameItemNotification__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCNameItemNotification, global::CMsgGCNameItemNotification.Builder> internal__static_CMsgGCNameItemNotification__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCClientDisplayNotification__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCClientDisplayNotification, global::CMsgGCClientDisplayNotification.Builder> internal__static_CMsgGCClientDisplayNotification__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCShowItemsPickedUp__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCShowItemsPickedUp, global::CMsgGCShowItemsPickedUp.Builder> internal__static_CMsgGCShowItemsPickedUp__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCIncrementKillCountResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCIncrementKillCountResponse, global::CMsgGCIncrementKillCountResponse.Builder> internal__static_CMsgGCIncrementKillCountResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOEconItemDropRateBonus__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOEconItemDropRateBonus, global::CSOEconItemDropRateBonus.Builder> internal__static_CSOEconItemDropRateBonus__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOEconItemLeagueViewPass__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOEconItemLeagueViewPass, global::CSOEconItemLeagueViewPass.Builder> internal__static_CSOEconItemLeagueViewPass__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOEconItemEventTicket__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOEconItemEventTicket, global::CSOEconItemEventTicket.Builder> internal__static_CSOEconItemEventTicket__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCItemPreviewItemBoughtNotification__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCItemPreviewItemBoughtNotification, global::CMsgGCItemPreviewItemBoughtNotification.Builder> internal__static_CMsgGCItemPreviewItemBoughtNotification__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCStorePurchaseCancel__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseCancel, global::CMsgGCStorePurchaseCancel.Builder> internal__static_CMsgGCStorePurchaseCancel__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCStorePurchaseCancelResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseCancelResponse, global::CMsgGCStorePurchaseCancelResponse.Builder> internal__static_CMsgGCStorePurchaseCancelResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCStorePurchaseFinalize__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseFinalize, global::CMsgGCStorePurchaseFinalize.Builder> internal__static_CMsgGCStorePurchaseFinalize__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCStorePurchaseFinalizeResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseFinalizeResponse, global::CMsgGCStorePurchaseFinalizeResponse.Builder> internal__static_CMsgGCStorePurchaseFinalizeResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCBannedWordListRequest__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCBannedWordListRequest, global::CMsgGCBannedWordListRequest.Builder> internal__static_CMsgGCBannedWordListRequest__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCRequestAnnouncements__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCRequestAnnouncements, global::CMsgGCRequestAnnouncements.Builder> internal__static_CMsgGCRequestAnnouncements__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCRequestAnnouncementsResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCRequestAnnouncementsResponse, global::CMsgGCRequestAnnouncementsResponse.Builder> internal__static_CMsgGCRequestAnnouncementsResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCBannedWord__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCBannedWord, global::CMsgGCBannedWord.Builder> internal__static_CMsgGCBannedWord__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCBannedWordListResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCBannedWordListResponse, global::CMsgGCBannedWordListResponse.Builder> internal__static_CMsgGCBannedWordListResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCToGCBannedWordListBroadcast__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCBannedWordListBroadcast, global::CMsgGCToGCBannedWordListBroadcast.Builder> internal__static_CMsgGCToGCBannedWordListBroadcast__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCToGCBannedWordListUpdated__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCBannedWordListUpdated, global::CMsgGCToGCBannedWordListUpdated.Builder> internal__static_CMsgGCToGCBannedWordListUpdated__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CSOEconDefaultEquippedDefinitionInstanceClient__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CSOEconDefaultEquippedDefinitionInstanceClient, global::CSOEconDefaultEquippedDefinitionInstanceClient.Builder> internal__static_CSOEconDefaultEquippedDefinitionInstanceClient__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCToGCDirtySDOCache__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCDirtySDOCache, global::CMsgGCToGCDirtySDOCache.Builder> internal__static_CMsgGCToGCDirtySDOCache__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCToGCDirtyMultipleSDOCache__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCDirtyMultipleSDOCache, global::CMsgGCToGCDirtyMultipleSDOCache.Builder> internal__static_CMsgGCToGCDirtyMultipleSDOCache__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCCollectItem__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCCollectItem, global::CMsgGCCollectItem.Builder> internal__static_CMsgGCCollectItem__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgSDONoMemcached__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgSDONoMemcached, global::CMsgSDONoMemcached.Builder> internal__static_CMsgSDONoMemcached__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCToGCUpdateSQLKeyValue__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCUpdateSQLKeyValue, global::CMsgGCToGCUpdateSQLKeyValue.Builder> internal__static_CMsgGCToGCUpdateSQLKeyValue__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCToGCIsTrustedServer__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCIsTrustedServer, global::CMsgGCToGCIsTrustedServer.Builder> internal__static_CMsgGCToGCIsTrustedServer__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCToGCIsTrustedServerResponse__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCIsTrustedServerResponse, global::CMsgGCToGCIsTrustedServerResponse.Builder> internal__static_CMsgGCToGCIsTrustedServerResponse__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCToGCBroadcastConsoleCommand__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCBroadcastConsoleCommand, global::CMsgGCToGCBroadcastConsoleCommand.Builder> internal__static_CMsgGCToGCBroadcastConsoleCommand__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCServerVersionUpdated__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCServerVersionUpdated, global::CMsgGCServerVersionUpdated.Builder> internal__static_CMsgGCServerVersionUpdated__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCClientVersionUpdated__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCClientVersionUpdated, global::CMsgGCClientVersionUpdated.Builder> internal__static_CMsgGCClientVersionUpdated__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCToGCWebAPIAccountChanged__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCWebAPIAccountChanged, global::CMsgGCToGCWebAPIAccountChanged.Builder> internal__static_CMsgGCToGCWebAPIAccountChanged__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGCToGCRequestPassportItemGrant__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCRequestPassportItemGrant, global::CMsgGCToGCRequestPassportItemGrant.Builder> internal__static_CMsgGCToGCRequestPassportItemGrant__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_CMsgGameServerInfo__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::CMsgGameServerInfo, global::CMsgGameServerInfo.Builder> internal__static_CMsgGameServerInfo__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static BaseGcmessages() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        "ChViYXNlX2djbWVzc2FnZXMucHJvdG8aE3N0ZWFtbWVzc2FnZXMucHJvdG8i" + 
        "fQodQ0dDU3RvcmVQdXJjaGFzZUluaXRfTGluZUl0ZW0SEwoLaXRlbV9kZWZf" + 
        "aWQYASABKA0SEAoIcXVhbnRpdHkYAiABKA0SHgoWY29zdF9pbl9sb2NhbF9j" + 
        "dXJyZW5jeRgDIAEoDRIVCg1wdXJjaGFzZV90eXBlGAQgASgNIoIBChdDTXNn" + 
        "R0NTdG9yZVB1cmNoYXNlSW5pdBIPCgdjb3VudHJ5GAEgASgJEhAKCGxhbmd1" + 
        "YWdlGAIgASgFEhAKCGN1cnJlbmN5GAMgASgFEjIKCmxpbmVfaXRlbXMYBCAD" + 
        "KAsyHi5DR0NTdG9yZVB1cmNoYXNlSW5pdF9MaW5lSXRlbSJBCh9DTXNnR0NT" + 
        "dG9yZVB1cmNoYXNlSW5pdFJlc3BvbnNlEg4KBnJlc3VsdBgBIAEoBRIOCgZ0" + 
        "eG5faWQYAiABKAQiUAoOQ1NPUGFydHlJbnZpdGUSFgoIZ3JvdXBfaWQYASAB" + 
        "KARCBICmHQESEQoJc2VuZGVyX2lkGAIgASgGEhMKC3NlbmRlcl9uYW1lGAMg" + 
        "ASgJIlAKDkNTT0xvYmJ5SW52aXRlEhYKCGdyb3VwX2lkGAEgASgEQgSAph0B" + 
        "EhEKCXNlbmRlcl9pZBgCIAEoBhITCgtzZW5kZXJfbmFtZRgDIAEoCSImChND" + 
        "TXNnU3lzdGVtQnJvYWRjYXN0Eg8KB21lc3NhZ2UYASABKAkiUgoRQ01zZ0lu" + 
        "dml0ZVRvUGFydHkSEAoIc3RlYW1faWQYASABKAYSFgoOY2xpZW50X3ZlcnNp" + 
        "b24YAiABKA0SEwoLdGVhbV9pbnZpdGUYAyABKA0iOwoVQ01zZ0ludml0YXRp" + 
        "b25DcmVhdGVkEhAKCGdyb3VwX2lkGAEgASgEEhAKCHN0ZWFtX2lkGAIgASgG" + 
        "ImgKF0NNc2dQYXJ0eUludml0ZVJlc3BvbnNlEhAKCHBhcnR5X2lkGAEgASgE" + 
        "Eg4KBmFjY2VwdBgCIAEoCBIWCg5jbGllbnRfdmVyc2lvbhgDIAEoDRITCgt0" + 
        "ZWFtX2ludml0ZRgEIAEoDSIlChFDTXNnS2lja0Zyb21QYXJ0eRIQCghzdGVh" + 
        "bV9pZBgBIAEoBiIQCg5DTXNnTGVhdmVQYXJ0eSIVChNDTXNnU2VydmVyQXZh" + 
        "aWxhYmxlIioKFkNNc2dMQU5TZXJ2ZXJBdmFpbGFibGUSEAoIbG9iYnlfaWQY" + 
        "ASABKAYijgMKGENTT0Vjb25HYW1lQWNjb3VudENsaWVudBIkChlhZGRpdGlv" + 
        "bmFsX2JhY2twYWNrX3Nsb3RzGAEgASgNOgEwEhwKDXRyaWFsX2FjY291bnQY" + 
        "AiABKAg6BWZhbHNlEiYKGGVsaWdpYmxlX2Zvcl9vbmxpbmVfcGxheRgDIAEo" + 
        "CDoEdHJ1ZRIqCiJuZWVkX3RvX2Nob29zZV9tb3N0X2hlbHBmdWxfZnJpZW5k" + 
        "GAQgASgIEhcKD2luX2NvYWNoZXNfbGlzdBgFIAEoCBIcChR0cmFkZV9iYW5f" + 
        "ZXhwaXJhdGlvbhgGIAEoBxIbChNkdWVsX2Jhbl9leHBpcmF0aW9uGAcgASgH" + 
        "EhsKEHByZXZpZXdfaXRlbV9kZWYYCCABKA06ATASIgoTbWFkZV9maXJzdF9w" + 
        "dXJjaGFzZRgJIAEoCDoFZmFsc2USJQodZWxpZ2libGVfZm9yX2NvbW11bml0" + 
        "eV9tYXJrZXQYCiABKAgSHgoWbWlzc2lvbl9yZWZ1c2VfYWxsb3dlZBgLIAEo" + 
        "DSJyChhDU09JdGVtQ3JpdGVyaWFDb25kaXRpb24SCgoCb3AYASABKAUSDQoF" + 
        "ZmllbGQYAiABKAkSEAoIcmVxdWlyZWQYAyABKAgSEwoLZmxvYXRfdmFsdWUY" + 
        "BCABKAISFAoMc3RyaW5nX3ZhbHVlGAUgASgJIrECCg9DU09JdGVtQ3JpdGVy" + 
        "aWESEgoKaXRlbV9sZXZlbBgBIAEoDRIUCgxpdGVtX3F1YWxpdHkYAiABKAUS" + 
        "FgoOaXRlbV9sZXZlbF9zZXQYAyABKAgSGAoQaXRlbV9xdWFsaXR5X3NldBgE" + 
        "IAEoCBIZChFpbml0aWFsX2ludmVudG9yeRgFIAEoDRIYChBpbml0aWFsX3F1" + 
        "YW50aXR5GAYgASgNEhsKE2lnbm9yZV9lbmFibGVkX2ZsYWcYCCABKAgSLQoK" + 
        "Y29uZGl0aW9ucxgJIAMoCzIZLkNTT0l0ZW1Dcml0ZXJpYUNvbmRpdGlvbhIT" + 
        "CgtpdGVtX3Jhcml0eRgKIAEoBRIXCg9pdGVtX3Jhcml0eV9zZXQYCyABKAgS" + 
        "EwoLcmVjZW50X29ubHkYDCABKAgi1QMKDUNTT0l0ZW1SZWNpcGUSEQoJZGVm" + 
        "X2luZGV4GAEgASgNEgwKBG5hbWUYAiABKAkSCwoDbl9hGAMgASgJEhMKC2Rl" + 
        "c2NfaW5wdXRzGAQgASgJEhQKDGRlc2Nfb3V0cHV0cxgFIAEoCRIMCgRkaV9h" + 
        "GAYgASgJEgwKBGRpX2IYByABKAkSDAoEZGlfYxgIIAEoCRIMCgRkb19hGAkg" + 
        "ASgJEgwKBGRvX2IYCiABKAkSDAoEZG9fYxgLIAEoCRIfChdyZXF1aXJlc19h" + 
        "bGxfc2FtZV9jbGFzcxgMIAEoCBIeChZyZXF1aXJlc19hbGxfc2FtZV9zbG90" + 
        "GA0gASgIEh4KFmNsYXNzX3VzYWdlX2Zvcl9vdXRwdXQYDiABKAUSHQoVc2xv" + 
        "dF91c2FnZV9mb3Jfb3V0cHV0GA8gASgFEhYKDnNldF9mb3Jfb3V0cHV0GBAg" + 
        "ASgFEi4KFGlucHV0X2l0ZW1zX2NyaXRlcmlhGBQgAygLMhAuQ1NPSXRlbUNy" + 
        "aXRlcmlhEi8KFW91dHB1dF9pdGVtc19jcml0ZXJpYRgVIAMoCzIQLkNTT0l0" + 
        "ZW1Dcml0ZXJpYRIeChZpbnB1dF9pdGVtX2R1cGVfY291bnRzGBYgAygNIk0K" + 
        "FUNNc2dEZXZOZXdJdGVtUmVxdWVzdBIQCghyZWNlaXZlchgBIAEoBhIiCghj" + 
        "cml0ZXJpYRgCIAEoCzIQLkNTT0l0ZW1Dcml0ZXJpYSKMAQofQ01zZ0luY3Jl" + 
        "bWVudEtpbGxDb3VudEF0dHJpYnV0ZRIZChFraWxsZXJfYWNjb3VudF9pZBgB" + 
        "IAEoBxIZChF2aWN0aW1fYWNjb3VudF9pZBgCIAEoBxIPCgdpdGVtX2lkGAMg" + 
        "ASgEEhIKCmV2ZW50X3R5cGUYBCABKA0SDgoGYW1vdW50GAUgASgNInAKEENN" + 
        "c2dBcHBseVN0aWNrZXISFwoPc3RpY2tlcl9pdGVtX2lkGAEgASgEEhQKDGl0" + 
        "ZW1faXRlbV9pZBgCIAEoBBIUCgxzdGlja2VyX3Nsb3QYAyABKA0SFwoPYmFz" + 
        "ZWl0ZW1fZGVmaWR4GAQgASgNIkoKFENNc2dBcHBseVN0cmFuZ2VQYXJ0EhwK" + 
        "FHN0cmFuZ2VfcGFydF9pdGVtX2lkGAEgASgEEhQKDGl0ZW1faXRlbV9pZBgC" + 
        "IAEoBCJLChdDTXNnQXBwbHlQZW5uYW50VXBncmFkZRIXCg91cGdyYWRlX2l0" + 
        "ZW1faWQYASABKAQSFwoPcGVubmFudF9pdGVtX2lkGAIgASgEIkMKE0NNc2dB" + 
        "cHBseUVnZ0Vzc2VuY2USFwoPZXNzZW5jZV9pdGVtX2lkGAEgASgEEhMKC2Vn" + 
        "Z19pdGVtX2lkGAIgASgEIk0KFENTT0Vjb25JdGVtQXR0cmlidXRlEhEKCWRl" + 
        "Zl9pbmRleBgBIAEoDRINCgV2YWx1ZRgCIAEoDRITCgt2YWx1ZV9ieXRlcxgD" + 
        "IAEoDCI6ChNDU09FY29uSXRlbUVxdWlwcGVkEhEKCW5ld19jbGFzcxgBIAEo" + 
        "DRIQCghuZXdfc2xvdBgCIAEoDSKfAwoLQ1NPRWNvbkl0ZW0SCgoCaWQYASAB" + 
        "KAQSEgoKYWNjb3VudF9pZBgCIAEoDRIRCglpbnZlbnRvcnkYAyABKA0SEQoJ" + 
        "ZGVmX2luZGV4GAQgASgNEhAKCHF1YW50aXR5GAUgASgNEg0KBWxldmVsGAYg" + 
        "ASgNEg8KB3F1YWxpdHkYByABKA0SEAoFZmxhZ3MYCCABKA06ATASDgoGb3Jp" + 
        "Z2luGAkgASgNEhMKC2N1c3RvbV9uYW1lGAogASgJEhMKC2N1c3RvbV9kZXNj" + 
        "GAsgASgJEigKCWF0dHJpYnV0ZRgMIAMoCzIVLkNTT0Vjb25JdGVtQXR0cmli" + 
        "dXRlEiMKDWludGVyaW9yX2l0ZW0YDSABKAsyDC5DU09FY29uSXRlbRIVCgZp" + 
        "bl91c2UYDiABKAg6BWZhbHNlEhAKBXN0eWxlGA8gASgNOgEwEhYKC29yaWdp" + 
        "bmFsX2lkGBAgASgEOgEwEiwKDmVxdWlwcGVkX3N0YXRlGBIgAygLMhQuQ1NP" + 
        "RWNvbkl0ZW1FcXVpcHBlZBIOCgZyYXJpdHkYEyABKA0iYQobQ01zZ0FkanVz" + 
        "dEl0ZW1FcXVpcHBlZFN0YXRlEg8KB2l0ZW1faWQYASABKAQSEQoJbmV3X2Ns" + 
        "YXNzGAIgASgNEhAKCG5ld19zbG90GAMgASgNEgwKBHN3YXAYBCABKAgiIgoN" + 
        "Q01zZ1NvcnRJdGVtcxIRCglzb3J0X3R5cGUYASABKA0iXgoQQ1NPRWNvbkNs" + 
        "YWltQ29kZRISCgphY2NvdW50X2lkGAEgASgNEhEKCWNvZGVfdHlwZRgCIAEo" + 
        "DRIVCg10aW1lX2FjcXVpcmVkGAMgASgNEgwKBGNvZGUYBCABKAkiMwoUQ01z" + 
        "Z1N0b3JlR2V0VXNlckRhdGESGwoTcHJpY2Vfc2hlZXRfdmVyc2lvbhgBIAEo" + 
        "ByKUAgocQ01zZ1N0b3JlR2V0VXNlckRhdGFSZXNwb25zZRIOCgZyZXN1bHQY" + 
        "ASABKAUSEAoIY3VycmVuY3kYAiABKAUSDwoHY291bnRyeRgDIAEoCRIbChNw" + 
        "cmljZV9zaGVldF92ZXJzaW9uGAQgASgHEhoKD2V4cGVyaW1lbnRfZGF0YRgF" + 
        "IAEoBDoBMBIZChFmZWF0dXJlZF9pdGVtX2lkeBgGIAEoBRIjChVzaG93X2hh" + 
        "dF9kZXNjcmlwdGlvbnMYByABKAg6BHRydWUSEwoLcHJpY2Vfc2hlZXQYCCAB" + 
        "KAwSHAoRZGVmYXVsdF9pdGVtX3NvcnQYCSABKAU6ATASFQoNcG9wdWxhcl9p" + 
        "dGVtcxgKIAMoDSKGAQoUQ01zZ1VwZGF0ZUl0ZW1TY2hlbWESEgoKaXRlbXNf" + 
        "Z2FtZRgBIAEoDBIbChNpdGVtX3NjaGVtYV92ZXJzaW9uGAIgASgHEiUKHWl0" + 
        "ZW1zX2dhbWVfdXJsX0RFUFJFQ0FURUQyMDEzGAMgASgJEhYKDml0ZW1zX2dh" + 
        "bWVfdXJsGAQgASgJIiEKC0NNc2dHQ0Vycm9yEhIKCmVycm9yX3RleHQYASAB" + 
        "KAkiHQobQ01zZ1JlcXVlc3RJbnZlbnRvcnlSZWZyZXNoIi4KD0NNc2dDb25W" + 
        "YXJWYWx1ZRIMCgRuYW1lGAEgASgJEg0KBXZhbHVlGAIgASgJIjkKFENNc2dS" + 
        "ZXBsaWNhdGVDb25WYXJzEiEKB2NvbnZhcnMYASADKAsyEC5DTXNnQ29uVmFy" + 
        "VmFsdWUijgEKC0NNc2dVc2VJdGVtEg8KB2l0ZW1faWQYASABKAQSFwoPdGFy" + 
        "Z2V0X3N0ZWFtX2lkGAIgASgGEh8KF2dpZnRfX3BvdGVudGlhbF90YXJnZXRz" + 
        "GAMgAygNEhgKEGR1ZWxfX2NsYXNzX2xvY2sYBCABKA0SGgoSaW5pdGlhdG9y" + 
        "X3N0ZWFtX2lkGAUgASgGImQKG0NNc2dSZXBsYXlVcGxvYWRlZFRvWW91VHVi" + 
        "ZRITCgt5b3V0dWJlX3VybBgBIAEoCRIcChR5b3V0dWJlX2FjY291bnRfbmFt" + 
        "ZRgCIAEoCRISCgpzZXNzaW9uX2lkGAMgASgEIi4KF0NNc2dDb25zdW1hYmxl" + 
        "RXhoYXVzdGVkEhMKC2l0ZW1fZGVmX2lkGAEgASgFIp4BCiBDTXNnSXRlbUFj" + 
        "a25vd2xlZGdlZF9fREVQUkVDQVRFRBISCgphY2NvdW50X2lkGAEgASgNEhEK" + 
        "CWludmVudG9yeRgCIAEoDRIRCglkZWZfaW5kZXgYAyABKA0SDwoHcXVhbGl0" + 
        "eRgEIAEoDRIOCgZyYXJpdHkYBSABKA0SDgoGb3JpZ2luGAYgASgNEg8KB2l0" + 
        "ZW1faWQYByABKAQiYgoZQ01zZ1NldFByZXNldEl0ZW1Qb3NpdGlvbhIQCghj" + 
        "bGFzc19pZBgBIAEoDRIRCglwcmVzZXRfaWQYAiABKA0SDwoHc2xvdF9pZBgD" + 
        "IAEoDRIPCgdpdGVtX2lkGAQgASgEIoUBChRDTXNnU2V0SXRlbVBvc2l0aW9u" + 
        "cxI6Cg5pdGVtX3Bvc2l0aW9ucxgBIAMoCzIiLkNNc2dTZXRJdGVtUG9zaXRp" + 
        "b25zLkl0ZW1Qb3NpdGlvbhoxCgxJdGVtUG9zaXRpb24SDwoHaXRlbV9pZBgB" + 
        "IAEoDRIQCghwb3NpdGlvbhgCIAEoDSJ0ChlDU09FY29uSXRlbVByZXNldElu" + 
        "c3RhbmNlEhYKCGNsYXNzX2lkGAIgASgNQgSAph0BEhcKCXByZXNldF9pZBgD" + 
        "IAEoDUIEgKYdARIVCgdzbG90X2lkGAQgASgNQgSAph0BEg8KB2l0ZW1faWQY" + 
        "BSABKAQiQwocQ01zZ1NlbGVjdEl0ZW1QcmVzZXRGb3JDbGFzcxIQCghjbGFz" + 
        "c19pZBgBIAEoDRIRCglwcmVzZXRfaWQYAiABKA0iNAohQ01zZ1NlbGVjdEl0" + 
        "ZW1QcmVzZXRGb3JDbGFzc1JlcGx5Eg8KB3N1Y2Nlc3MYASABKAgiXAoVQ1NP" + 
        "U2VsZWN0ZWRJdGVtUHJlc2V0EhgKCmFjY291bnRfaWQYASABKA1CBICmHQES" + 
        "FgoIY2xhc3NfaWQYAiABKA1CBICmHQESEQoJcHJlc2V0X2lkGAMgASgNIrgB" + 
        "ChFDTXNnR0NSZXBvcnRBYnVzZRIXCg90YXJnZXRfc3RlYW1faWQYASABKAYS" + 
        "EwoLZGVzY3JpcHRpb24YBCABKAkSCwoDZ2lkGAUgASgEEhIKCmFidXNlX3R5" + 
        "cGUYAiABKA0SFAoMY29udGVudF90eXBlGAMgASgNEh0KFXRhcmdldF9nYW1l" + 
        "X3NlcnZlcl9pcBgGIAEoBxIfChd0YXJnZXRfZ2FtZV9zZXJ2ZXJfcG9ydBgH" + 
        "IAEoDSJbChlDTXNnR0NSZXBvcnRBYnVzZVJlc3BvbnNlEhcKD3RhcmdldF9z" + 
        "dGVhbV9pZBgBIAEoBhIOCgZyZXN1bHQYAiABKA0SFQoNZXJyb3JfbWVzc2Fn" + 
        "ZRgDIAEoCSJmChpDTXNnR0NOYW1lSXRlbU5vdGlmaWNhdGlvbhIWCg5wbGF5" + 
        "ZXJfc3RlYW1pZBgBIAEoBhIWCg5pdGVtX2RlZl9pbmRleBgCIAEoDRIYChBp" + 
        "dGVtX25hbWVfY3VzdG9tGAMgASgJIrYBCh9DTXNnR0NDbGllbnREaXNwbGF5" + 
        "Tm90aWZpY2F0aW9uEisKI25vdGlmaWNhdGlvbl90aXRsZV9sb2NhbGl6YXRp" + 
        "b25fa2V5GAEgASgJEioKIm5vdGlmaWNhdGlvbl9ib2R5X2xvY2FsaXphdGlv" + 
        "bl9rZXkYAiABKAkSGwoTYm9keV9zdWJzdHJpbmdfa2V5cxgDIAMoCRIdChVi" + 
        "b2R5X3N1YnN0cmluZ192YWx1ZXMYBCADKAkiMQoXQ01zZ0dDU2hvd0l0ZW1z" + 
        "UGlja2VkVXASFgoOcGxheWVyX3N0ZWFtaWQYASABKAYifAogQ01zZ0dDSW5j" + 
        "cmVtZW50S2lsbENvdW50UmVzcG9uc2USHwoRa2lsbGVyX2FjY291bnRfaWQY" + 
        "ASABKA1CBICmHQESEQoJbnVtX2tpbGxzGAIgASgNEhAKCGl0ZW1fZGVmGAMg" + 
        "ASgNEhIKCmxldmVsX3R5cGUYBCABKA0ijwEKGENTT0Vjb25JdGVtRHJvcFJh" + 
        "dGVCb251cxISCgphY2NvdW50X2lkGAEgASgNEhcKD2V4cGlyYXRpb25fZGF0" + 
        "ZRgCIAEoBxINCgVib251cxgDIAEoAhITCgtib251c19jb3VudBgEIAEoDRIP" + 
        "CgdpdGVtX2lkGAUgASgEEhEKCWRlZl9pbmRleBgGIAEoDSJwChlDU09FY29u" + 
        "SXRlbUxlYWd1ZVZpZXdQYXNzEhgKCmFjY291bnRfaWQYASABKA1CBICmHQES" + 
        "FwoJbGVhZ3VlX2lkGAIgASgNQgSAph0BEg0KBWFkbWluGAMgASgNEhEKCWl0" + 
        "ZW1pbmRleBgEIAEoDSJPChZDU09FY29uSXRlbUV2ZW50VGlja2V0EhIKCmFj" + 
        "Y291bnRfaWQYASABKA0SEAoIZXZlbnRfaWQYAiABKA0SDwoHaXRlbV9pZBgD" + 
        "IAEoBCJBCidDTXNnR0NJdGVtUHJldmlld0l0ZW1Cb3VnaHROb3RpZmljYXRp" + 
        "b24SFgoOaXRlbV9kZWZfaW5kZXgYASABKA0iKwoZQ01zZ0dDU3RvcmVQdXJj" + 
        "aGFzZUNhbmNlbBIOCgZ0eG5faWQYASABKAQiMwohQ01zZ0dDU3RvcmVQdXJj" + 
        "aGFzZUNhbmNlbFJlc3BvbnNlEg4KBnJlc3VsdBgBIAEoDSItChtDTXNnR0NT" + 
        "dG9yZVB1cmNoYXNlRmluYWxpemUSDgoGdHhuX2lkGAEgASgEIkcKI0NNc2dH" + 
        "Q1N0b3JlUHVyY2hhc2VGaW5hbGl6ZVJlc3BvbnNlEg4KBnJlc3VsdBgBIAEo" + 
        "DRIQCghpdGVtX2lkcxgCIAMoBCJJChtDTXNnR0NCYW5uZWRXb3JkTGlzdFJl" + 
        "cXVlc3QSGQoRYmFuX2xpc3RfZ3JvdXBfaWQYASABKA0SDwoHd29yZF9pZBgC" + 
        "IAEoDSIcChpDTXNnR0NSZXF1ZXN0QW5ub3VuY2VtZW50cyKCAQoiQ01zZ0dD" + 
        "UmVxdWVzdEFubm91bmNlbWVudHNSZXNwb25zZRIaChJhbm5vdW5jZW1lbnRf" + 
        "dGl0bGUYASABKAkSFAoMYW5ub3VuY2VtZW50GAIgASgJEhcKD25leHRtYXRj" + 
        "aF90aXRsZRgDIAEoCRIRCgluZXh0bWF0Y2gYBCABKAkidQoQQ01zZ0dDQmFu" + 
        "bmVkV29yZBIPCgd3b3JkX2lkGAEgASgNEkIKCXdvcmRfdHlwZRgCIAEoDjIS" + 
        "LkdDX0Jhbm5lZFdvcmRUeXBlOhtHQ19CQU5ORURfV09SRF9ESVNBQkxFX1dP" + 
        "UkQSDAoEd29yZBgDIAEoCSJfChxDTXNnR0NCYW5uZWRXb3JkTGlzdFJlc3Bv" + 
        "bnNlEhkKEWJhbl9saXN0X2dyb3VwX2lkGAEgASgNEiQKCXdvcmRfbGlzdBgC" + 
        "IAMoCzIRLkNNc2dHQ0Jhbm5lZFdvcmQiVQohQ01zZ0dDVG9HQ0Jhbm5lZFdv" + 
        "cmRMaXN0QnJvYWRjYXN0EjAKCWJyb2FkY2FzdBgBIAEoCzIdLkNNc2dHQ0Jh" + 
        "bm5lZFdvcmRMaXN0UmVzcG9uc2UiMwofQ01zZ0dDVG9HQ0Jhbm5lZFdvcmRM" + 
        "aXN0VXBkYXRlZBIQCghncm91cF9pZBgBIAEoDSKSAQouQ1NPRWNvbkRlZmF1" + 
        "bHRFcXVpcHBlZERlZmluaXRpb25JbnN0YW5jZUNsaWVudBIYCgphY2NvdW50" + 
        "X2lkGAEgASgNQgSAph0BEhcKD2l0ZW1fZGVmaW5pdGlvbhgCIAEoDRIWCghj" + 
        "bGFzc19pZBgDIAEoDUIEgKYdARIVCgdzbG90X2lkGAQgASgNQgSAph0BIj8K" + 
        "F0NNc2dHQ1RvR0NEaXJ0eVNET0NhY2hlEhAKCHNkb190eXBlGAEgASgNEhIK" + 
        "CmtleV91aW50NjQYAiABKAQiRwofQ01zZ0dDVG9HQ0RpcnR5TXVsdGlwbGVT" + 
        "RE9DYWNoZRIQCghzZG9fdHlwZRgBIAEoDRISCgprZXlfdWludDY0GAIgAygE" + 
        "IkgKEUNNc2dHQ0NvbGxlY3RJdGVtEhoKEmNvbGxlY3Rpb25faXRlbV9pZBgB" + 
        "IAEoBBIXCg9zdWJqZWN0X2l0ZW1faWQYAiABKAQiFAoSQ01zZ1NET05vTWVt" + 
        "Y2FjaGVkIi8KG0NNc2dHQ1RvR0NVcGRhdGVTUUxLZXlWYWx1ZRIQCghrZXlf" + 
        "bmFtZRgBIAEoCSItChlDTXNnR0NUb0dDSXNUcnVzdGVkU2VydmVyEhAKCHN0" + 
        "ZWFtX2lkGAEgASgGIjcKIUNNc2dHQ1RvR0NJc1RydXN0ZWRTZXJ2ZXJSZXNw" + 
        "b25zZRISCgppc190cnVzdGVkGAEgASgIIjgKIUNNc2dHQ1RvR0NCcm9hZGNh" + 
        "c3RDb25zb2xlQ29tbWFuZBITCgtjb25fY29tbWFuZBgBIAEoCSI0ChpDTXNn" + 
        "R0NTZXJ2ZXJWZXJzaW9uVXBkYXRlZBIWCg5zZXJ2ZXJfdmVyc2lvbhgBIAEo" + 
        "DSI0ChpDTXNnR0NDbGllbnRWZXJzaW9uVXBkYXRlZBIWCg5jbGllbnRfdmVy" + 
        "c2lvbhgBIAEoDSIgCh5DTXNnR0NUb0dDV2ViQVBJQWNjb3VudENoYW5nZWQi" + 
        "XgoiQ01zZ0dDVG9HQ1JlcXVlc3RQYXNzcG9ydEl0ZW1HcmFudBIQCghzdGVh" + 
        "bV9pZBgBIAEoBhIRCglsZWFndWVfaWQYAiABKA0SEwoLcmV3YXJkX2ZsYWcY" + 
        "AyABKAUi6AQKEkNNc2dHYW1lU2VydmVySW5mbxIdChVzZXJ2ZXJfcHVibGlj" + 
        "X2lwX2FkZHIYASABKAcSHgoWc2VydmVyX3ByaXZhdGVfaXBfYWRkchgCIAEo" + 
        "BxITCgtzZXJ2ZXJfcG9ydBgDIAEoDRIWCg5zZXJ2ZXJfdHZfcG9ydBgEIAEo" + 
        "DRISCgpzZXJ2ZXJfa2V5GAUgASgJEhoKEnNlcnZlcl9oaWJlcm5hdGlvbhgG" + 
        "IAEoCBJACgtzZXJ2ZXJfdHlwZRgHIAEoDjIeLkNNc2dHYW1lU2VydmVySW5m" + 
        "by5TZXJ2ZXJUeXBlOgtVTlNQRUNJRklFRBIVCg1zZXJ2ZXJfcmVnaW9uGAgg" + 
        "ASgNEhYKDnNlcnZlcl9sb2FkYXZnGAkgASgCEiAKGHNlcnZlcl90dl9icm9h" + 
        "ZGNhc3RfdGltZRgKIAEoAhIYChBzZXJ2ZXJfZ2FtZV90aW1lGAsgASgCEicK" + 
        "H3NlcnZlcl9yZWxheV9jb25uZWN0ZWRfc3RlYW1faWQYDCABKAYSFwoPcmVs" + 
        "YXlfc2xvdHNfbWF4GA0gASgNEhgKEHJlbGF5c19jb25uZWN0ZWQYDiABKAUS" + 
        "HwoXcmVsYXlfY2xpZW50c19jb25uZWN0ZWQYDyABKAUSJAoccmVsYXllZF9n" + 
        "YW1lX3NlcnZlcl9zdGVhbV9pZBgQIAEoBhIaChJwYXJlbnRfcmVsYXlfY291" + 
        "bnQYESABKA0SFgoOdHZfc2VjcmV0X2NvZGUYEiABKAYiMgoKU2VydmVyVHlw" + 
        "ZRIPCgtVTlNQRUNJRklFRBAAEggKBEdBTUUQARIJCgVQUk9YWRACKscDCgpF" + 
        "R0NCYXNlTXNnEhoKFWtfRU1zZ0dDU3lzdGVtTWVzc2FnZRChHxIdChhrX0VN" + 
        "c2dHQ1JlcGxpY2F0ZUNvblZhcnMQoh8SGgoVa19FTXNnR0NDb25WYXJVcGRh" + 
        "dGVkEKMfEhQKD2tfRU1zZ0dDSW5RdWV1ZRCoHxIaChVrX0VNc2dHQ0ludml0" + 
        "ZVRvUGFydHkQlSMSHgoZa19FTXNnR0NJbnZpdGF0aW9uQ3JlYXRlZBCWIxIg" + 
        "ChtrX0VNc2dHQ1BhcnR5SW52aXRlUmVzcG9uc2UQlyMSGgoVa19FTXNnR0NL" + 
        "aWNrRnJvbVBhcnR5EJgjEhcKEmtfRU1zZ0dDTGVhdmVQYXJ0eRCZIxIcChdr" + 
        "X0VNc2dHQ1NlcnZlckF2YWlsYWJsZRCaIxIiCh1rX0VNc2dHQ0NsaWVudENv" + 
        "bm5lY3RUb1NlcnZlchCbIxIbChZrX0VNc2dHQ0dhbWVTZXJ2ZXJJbmZvEJwj" + 
        "EhIKDWtfRU1zZ0dDRXJyb3IQnSMSJQoga19FTXNnR0NSZXBsYXlfVXBsb2Fk" + 
        "ZWRUb1lvdVR1YmUQniMSHwoaa19FTXNnR0NMQU5TZXJ2ZXJBdmFpbGFibGUQ" + 
        "nyMqWQoXRUdDQmFzZVByb3RvT2JqZWN0VHlwZXMSHgoZa19FUHJvdG9PYmpl" + 
        "Y3RQYXJ0eUludml0ZRDpBxIeChlrX0VQcm90b09iamVjdExvYmJ5SW52aXRl" + 
        "EOoHKlQKEUdDX0Jhbm5lZFdvcmRUeXBlEh8KG0dDX0JBTk5FRF9XT1JEX0RJ" + 
        "U0FCTEVfV09SRBAAEh4KGkdDX0JBTk5FRF9XT1JEX0VOQUJMRV9XT1JEEAE=");
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_CGCStorePurchaseInit_LineItem__Descriptor = Descriptor.MessageTypes[0];
      internal__static_CGCStorePurchaseInit_LineItem__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CGCStorePurchaseInit_LineItem, global::CGCStorePurchaseInit_LineItem.Builder>(internal__static_CGCStorePurchaseInit_LineItem__Descriptor,
              new string[] { "ItemDefId", "Quantity", "CostInLocalCurrency", "PurchaseType", });
      internal__static_CMsgGCStorePurchaseInit__Descriptor = Descriptor.MessageTypes[1];
      internal__static_CMsgGCStorePurchaseInit__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseInit, global::CMsgGCStorePurchaseInit.Builder>(internal__static_CMsgGCStorePurchaseInit__Descriptor,
              new string[] { "Country", "Language", "Currency", "LineItems", });
      internal__static_CMsgGCStorePurchaseInitResponse__Descriptor = Descriptor.MessageTypes[2];
      internal__static_CMsgGCStorePurchaseInitResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseInitResponse, global::CMsgGCStorePurchaseInitResponse.Builder>(internal__static_CMsgGCStorePurchaseInitResponse__Descriptor,
              new string[] { "Result", "TxnId", });
      internal__static_CSOPartyInvite__Descriptor = Descriptor.MessageTypes[3];
      internal__static_CSOPartyInvite__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOPartyInvite, global::CSOPartyInvite.Builder>(internal__static_CSOPartyInvite__Descriptor,
              new string[] { "GroupId", "SenderId", "SenderName", });
      internal__static_CSOLobbyInvite__Descriptor = Descriptor.MessageTypes[4];
      internal__static_CSOLobbyInvite__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOLobbyInvite, global::CSOLobbyInvite.Builder>(internal__static_CSOLobbyInvite__Descriptor,
              new string[] { "GroupId", "SenderId", "SenderName", });
      internal__static_CMsgSystemBroadcast__Descriptor = Descriptor.MessageTypes[5];
      internal__static_CMsgSystemBroadcast__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSystemBroadcast, global::CMsgSystemBroadcast.Builder>(internal__static_CMsgSystemBroadcast__Descriptor,
              new string[] { "Message", });
      internal__static_CMsgInviteToParty__Descriptor = Descriptor.MessageTypes[6];
      internal__static_CMsgInviteToParty__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgInviteToParty, global::CMsgInviteToParty.Builder>(internal__static_CMsgInviteToParty__Descriptor,
              new string[] { "SteamId", "ClientVersion", "TeamInvite", });
      internal__static_CMsgInvitationCreated__Descriptor = Descriptor.MessageTypes[7];
      internal__static_CMsgInvitationCreated__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgInvitationCreated, global::CMsgInvitationCreated.Builder>(internal__static_CMsgInvitationCreated__Descriptor,
              new string[] { "GroupId", "SteamId", });
      internal__static_CMsgPartyInviteResponse__Descriptor = Descriptor.MessageTypes[8];
      internal__static_CMsgPartyInviteResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgPartyInviteResponse, global::CMsgPartyInviteResponse.Builder>(internal__static_CMsgPartyInviteResponse__Descriptor,
              new string[] { "PartyId", "Accept", "ClientVersion", "TeamInvite", });
      internal__static_CMsgKickFromParty__Descriptor = Descriptor.MessageTypes[9];
      internal__static_CMsgKickFromParty__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgKickFromParty, global::CMsgKickFromParty.Builder>(internal__static_CMsgKickFromParty__Descriptor,
              new string[] { "SteamId", });
      internal__static_CMsgLeaveParty__Descriptor = Descriptor.MessageTypes[10];
      internal__static_CMsgLeaveParty__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgLeaveParty, global::CMsgLeaveParty.Builder>(internal__static_CMsgLeaveParty__Descriptor,
              new string[] { });
      internal__static_CMsgServerAvailable__Descriptor = Descriptor.MessageTypes[11];
      internal__static_CMsgServerAvailable__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgServerAvailable, global::CMsgServerAvailable.Builder>(internal__static_CMsgServerAvailable__Descriptor,
              new string[] { });
      internal__static_CMsgLANServerAvailable__Descriptor = Descriptor.MessageTypes[12];
      internal__static_CMsgLANServerAvailable__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgLANServerAvailable, global::CMsgLANServerAvailable.Builder>(internal__static_CMsgLANServerAvailable__Descriptor,
              new string[] { "LobbyId", });
      internal__static_CSOEconGameAccountClient__Descriptor = Descriptor.MessageTypes[13];
      internal__static_CSOEconGameAccountClient__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOEconGameAccountClient, global::CSOEconGameAccountClient.Builder>(internal__static_CSOEconGameAccountClient__Descriptor,
              new string[] { "AdditionalBackpackSlots", "TrialAccount", "EligibleForOnlinePlay", "NeedToChooseMostHelpfulFriend", "InCoachesList", "TradeBanExpiration", "DuelBanExpiration", "PreviewItemDef", "MadeFirstPurchase", "EligibleForCommunityMarket", "MissionRefuseAllowed", });
      internal__static_CSOItemCriteriaCondition__Descriptor = Descriptor.MessageTypes[14];
      internal__static_CSOItemCriteriaCondition__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOItemCriteriaCondition, global::CSOItemCriteriaCondition.Builder>(internal__static_CSOItemCriteriaCondition__Descriptor,
              new string[] { "Op", "Field", "Required", "FloatValue", "StringValue", });
      internal__static_CSOItemCriteria__Descriptor = Descriptor.MessageTypes[15];
      internal__static_CSOItemCriteria__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOItemCriteria, global::CSOItemCriteria.Builder>(internal__static_CSOItemCriteria__Descriptor,
              new string[] { "ItemLevel", "ItemQuality", "ItemLevelSet", "ItemQualitySet", "InitialInventory", "InitialQuantity", "IgnoreEnabledFlag", "Conditions", "ItemRarity", "ItemRaritySet", "RecentOnly", });
      internal__static_CSOItemRecipe__Descriptor = Descriptor.MessageTypes[16];
      internal__static_CSOItemRecipe__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOItemRecipe, global::CSOItemRecipe.Builder>(internal__static_CSOItemRecipe__Descriptor,
              new string[] { "DefIndex", "Name", "NA", "DescInputs", "DescOutputs", "DiA", "DiB", "DiC", "DoA", "DoB", "DoC", "RequiresAllSameClass", "RequiresAllSameSlot", "ClassUsageForOutput", "SlotUsageForOutput", "SetForOutput", "InputItemsCriteria", "OutputItemsCriteria", "InputItemDupeCounts", });
      internal__static_CMsgDevNewItemRequest__Descriptor = Descriptor.MessageTypes[17];
      internal__static_CMsgDevNewItemRequest__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgDevNewItemRequest, global::CMsgDevNewItemRequest.Builder>(internal__static_CMsgDevNewItemRequest__Descriptor,
              new string[] { "Receiver", "Criteria", });
      internal__static_CMsgIncrementKillCountAttribute__Descriptor = Descriptor.MessageTypes[18];
      internal__static_CMsgIncrementKillCountAttribute__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgIncrementKillCountAttribute, global::CMsgIncrementKillCountAttribute.Builder>(internal__static_CMsgIncrementKillCountAttribute__Descriptor,
              new string[] { "KillerAccountId", "VictimAccountId", "ItemId", "EventType", "Amount", });
      internal__static_CMsgApplySticker__Descriptor = Descriptor.MessageTypes[19];
      internal__static_CMsgApplySticker__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgApplySticker, global::CMsgApplySticker.Builder>(internal__static_CMsgApplySticker__Descriptor,
              new string[] { "StickerItemId", "ItemItemId", "StickerSlot", "BaseitemDefidx", });
      internal__static_CMsgApplyStrangePart__Descriptor = Descriptor.MessageTypes[20];
      internal__static_CMsgApplyStrangePart__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgApplyStrangePart, global::CMsgApplyStrangePart.Builder>(internal__static_CMsgApplyStrangePart__Descriptor,
              new string[] { "StrangePartItemId", "ItemItemId", });
      internal__static_CMsgApplyPennantUpgrade__Descriptor = Descriptor.MessageTypes[21];
      internal__static_CMsgApplyPennantUpgrade__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgApplyPennantUpgrade, global::CMsgApplyPennantUpgrade.Builder>(internal__static_CMsgApplyPennantUpgrade__Descriptor,
              new string[] { "UpgradeItemId", "PennantItemId", });
      internal__static_CMsgApplyEggEssence__Descriptor = Descriptor.MessageTypes[22];
      internal__static_CMsgApplyEggEssence__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgApplyEggEssence, global::CMsgApplyEggEssence.Builder>(internal__static_CMsgApplyEggEssence__Descriptor,
              new string[] { "EssenceItemId", "EggItemId", });
      internal__static_CSOEconItemAttribute__Descriptor = Descriptor.MessageTypes[23];
      internal__static_CSOEconItemAttribute__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOEconItemAttribute, global::CSOEconItemAttribute.Builder>(internal__static_CSOEconItemAttribute__Descriptor,
              new string[] { "DefIndex", "Value", "ValueBytes", });
      internal__static_CSOEconItemEquipped__Descriptor = Descriptor.MessageTypes[24];
      internal__static_CSOEconItemEquipped__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOEconItemEquipped, global::CSOEconItemEquipped.Builder>(internal__static_CSOEconItemEquipped__Descriptor,
              new string[] { "NewClass", "NewSlot", });
      internal__static_CSOEconItem__Descriptor = Descriptor.MessageTypes[25];
      internal__static_CSOEconItem__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOEconItem, global::CSOEconItem.Builder>(internal__static_CSOEconItem__Descriptor,
              new string[] { "Id", "AccountId", "Inventory", "DefIndex", "Quantity", "Level", "Quality", "Flags", "Origin", "CustomName", "CustomDesc", "Attribute", "InteriorItem", "InUse", "Style", "OriginalId", "EquippedState", "Rarity", });
      internal__static_CMsgAdjustItemEquippedState__Descriptor = Descriptor.MessageTypes[26];
      internal__static_CMsgAdjustItemEquippedState__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgAdjustItemEquippedState, global::CMsgAdjustItemEquippedState.Builder>(internal__static_CMsgAdjustItemEquippedState__Descriptor,
              new string[] { "ItemId", "NewClass", "NewSlot", "Swap", });
      internal__static_CMsgSortItems__Descriptor = Descriptor.MessageTypes[27];
      internal__static_CMsgSortItems__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSortItems, global::CMsgSortItems.Builder>(internal__static_CMsgSortItems__Descriptor,
              new string[] { "SortType", });
      internal__static_CSOEconClaimCode__Descriptor = Descriptor.MessageTypes[28];
      internal__static_CSOEconClaimCode__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOEconClaimCode, global::CSOEconClaimCode.Builder>(internal__static_CSOEconClaimCode__Descriptor,
              new string[] { "AccountId", "CodeType", "TimeAcquired", "Code", });
      internal__static_CMsgStoreGetUserData__Descriptor = Descriptor.MessageTypes[29];
      internal__static_CMsgStoreGetUserData__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgStoreGetUserData, global::CMsgStoreGetUserData.Builder>(internal__static_CMsgStoreGetUserData__Descriptor,
              new string[] { "PriceSheetVersion", });
      internal__static_CMsgStoreGetUserDataResponse__Descriptor = Descriptor.MessageTypes[30];
      internal__static_CMsgStoreGetUserDataResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgStoreGetUserDataResponse, global::CMsgStoreGetUserDataResponse.Builder>(internal__static_CMsgStoreGetUserDataResponse__Descriptor,
              new string[] { "Result", "Currency", "Country", "PriceSheetVersion", "ExperimentData", "FeaturedItemIdx", "ShowHatDescriptions", "PriceSheet", "DefaultItemSort", "PopularItems", });
      internal__static_CMsgUpdateItemSchema__Descriptor = Descriptor.MessageTypes[31];
      internal__static_CMsgUpdateItemSchema__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgUpdateItemSchema, global::CMsgUpdateItemSchema.Builder>(internal__static_CMsgUpdateItemSchema__Descriptor,
              new string[] { "ItemsGame", "ItemSchemaVersion", "ItemsGameUrlDEPRECATED2013", "ItemsGameUrl", });
      internal__static_CMsgGCError__Descriptor = Descriptor.MessageTypes[32];
      internal__static_CMsgGCError__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCError, global::CMsgGCError.Builder>(internal__static_CMsgGCError__Descriptor,
              new string[] { "ErrorText", });
      internal__static_CMsgRequestInventoryRefresh__Descriptor = Descriptor.MessageTypes[33];
      internal__static_CMsgRequestInventoryRefresh__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgRequestInventoryRefresh, global::CMsgRequestInventoryRefresh.Builder>(internal__static_CMsgRequestInventoryRefresh__Descriptor,
              new string[] { });
      internal__static_CMsgConVarValue__Descriptor = Descriptor.MessageTypes[34];
      internal__static_CMsgConVarValue__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgConVarValue, global::CMsgConVarValue.Builder>(internal__static_CMsgConVarValue__Descriptor,
              new string[] { "Name", "Value", });
      internal__static_CMsgReplicateConVars__Descriptor = Descriptor.MessageTypes[35];
      internal__static_CMsgReplicateConVars__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgReplicateConVars, global::CMsgReplicateConVars.Builder>(internal__static_CMsgReplicateConVars__Descriptor,
              new string[] { "Convars", });
      internal__static_CMsgUseItem__Descriptor = Descriptor.MessageTypes[36];
      internal__static_CMsgUseItem__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgUseItem, global::CMsgUseItem.Builder>(internal__static_CMsgUseItem__Descriptor,
              new string[] { "ItemId", "TargetSteamId", "GiftPotentialTargets", "DuelClassLock", "InitiatorSteamId", });
      internal__static_CMsgReplayUploadedToYouTube__Descriptor = Descriptor.MessageTypes[37];
      internal__static_CMsgReplayUploadedToYouTube__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgReplayUploadedToYouTube, global::CMsgReplayUploadedToYouTube.Builder>(internal__static_CMsgReplayUploadedToYouTube__Descriptor,
              new string[] { "YoutubeUrl", "YoutubeAccountName", "SessionId", });
      internal__static_CMsgConsumableExhausted__Descriptor = Descriptor.MessageTypes[38];
      internal__static_CMsgConsumableExhausted__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgConsumableExhausted, global::CMsgConsumableExhausted.Builder>(internal__static_CMsgConsumableExhausted__Descriptor,
              new string[] { "ItemDefId", });
      internal__static_CMsgItemAcknowledged__DEPRECATED__Descriptor = Descriptor.MessageTypes[39];
      internal__static_CMsgItemAcknowledged__DEPRECATED__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgItemAcknowledged__DEPRECATED, global::CMsgItemAcknowledged__DEPRECATED.Builder>(internal__static_CMsgItemAcknowledged__DEPRECATED__Descriptor,
              new string[] { "AccountId", "Inventory", "DefIndex", "Quality", "Rarity", "Origin", "ItemId", });
      internal__static_CMsgSetPresetItemPosition__Descriptor = Descriptor.MessageTypes[40];
      internal__static_CMsgSetPresetItemPosition__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSetPresetItemPosition, global::CMsgSetPresetItemPosition.Builder>(internal__static_CMsgSetPresetItemPosition__Descriptor,
              new string[] { "ClassId", "PresetId", "SlotId", "ItemId", });
      internal__static_CMsgSetItemPositions__Descriptor = Descriptor.MessageTypes[41];
      internal__static_CMsgSetItemPositions__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSetItemPositions, global::CMsgSetItemPositions.Builder>(internal__static_CMsgSetItemPositions__Descriptor,
              new string[] { "ItemPositions", });
      internal__static_CMsgSetItemPositions_ItemPosition__Descriptor = internal__static_CMsgSetItemPositions__Descriptor.NestedTypes[0];
      internal__static_CMsgSetItemPositions_ItemPosition__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSetItemPositions.Types.ItemPosition, global::CMsgSetItemPositions.Types.ItemPosition.Builder>(internal__static_CMsgSetItemPositions_ItemPosition__Descriptor,
              new string[] { "ItemId", "Position", });
      internal__static_CSOEconItemPresetInstance__Descriptor = Descriptor.MessageTypes[42];
      internal__static_CSOEconItemPresetInstance__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOEconItemPresetInstance, global::CSOEconItemPresetInstance.Builder>(internal__static_CSOEconItemPresetInstance__Descriptor,
              new string[] { "ClassId", "PresetId", "SlotId", "ItemId", });
      internal__static_CMsgSelectItemPresetForClass__Descriptor = Descriptor.MessageTypes[43];
      internal__static_CMsgSelectItemPresetForClass__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSelectItemPresetForClass, global::CMsgSelectItemPresetForClass.Builder>(internal__static_CMsgSelectItemPresetForClass__Descriptor,
              new string[] { "ClassId", "PresetId", });
      internal__static_CMsgSelectItemPresetForClassReply__Descriptor = Descriptor.MessageTypes[44];
      internal__static_CMsgSelectItemPresetForClassReply__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSelectItemPresetForClassReply, global::CMsgSelectItemPresetForClassReply.Builder>(internal__static_CMsgSelectItemPresetForClassReply__Descriptor,
              new string[] { "Success", });
      internal__static_CSOSelectedItemPreset__Descriptor = Descriptor.MessageTypes[45];
      internal__static_CSOSelectedItemPreset__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOSelectedItemPreset, global::CSOSelectedItemPreset.Builder>(internal__static_CSOSelectedItemPreset__Descriptor,
              new string[] { "AccountId", "ClassId", "PresetId", });
      internal__static_CMsgGCReportAbuse__Descriptor = Descriptor.MessageTypes[46];
      internal__static_CMsgGCReportAbuse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCReportAbuse, global::CMsgGCReportAbuse.Builder>(internal__static_CMsgGCReportAbuse__Descriptor,
              new string[] { "TargetSteamId", "Description", "Gid", "AbuseType", "ContentType", "TargetGameServerIp", "TargetGameServerPort", });
      internal__static_CMsgGCReportAbuseResponse__Descriptor = Descriptor.MessageTypes[47];
      internal__static_CMsgGCReportAbuseResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCReportAbuseResponse, global::CMsgGCReportAbuseResponse.Builder>(internal__static_CMsgGCReportAbuseResponse__Descriptor,
              new string[] { "TargetSteamId", "Result", "ErrorMessage", });
      internal__static_CMsgGCNameItemNotification__Descriptor = Descriptor.MessageTypes[48];
      internal__static_CMsgGCNameItemNotification__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCNameItemNotification, global::CMsgGCNameItemNotification.Builder>(internal__static_CMsgGCNameItemNotification__Descriptor,
              new string[] { "PlayerSteamid", "ItemDefIndex", "ItemNameCustom", });
      internal__static_CMsgGCClientDisplayNotification__Descriptor = Descriptor.MessageTypes[49];
      internal__static_CMsgGCClientDisplayNotification__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCClientDisplayNotification, global::CMsgGCClientDisplayNotification.Builder>(internal__static_CMsgGCClientDisplayNotification__Descriptor,
              new string[] { "NotificationTitleLocalizationKey", "NotificationBodyLocalizationKey", "BodySubstringKeys", "BodySubstringValues", });
      internal__static_CMsgGCShowItemsPickedUp__Descriptor = Descriptor.MessageTypes[50];
      internal__static_CMsgGCShowItemsPickedUp__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCShowItemsPickedUp, global::CMsgGCShowItemsPickedUp.Builder>(internal__static_CMsgGCShowItemsPickedUp__Descriptor,
              new string[] { "PlayerSteamid", });
      internal__static_CMsgGCIncrementKillCountResponse__Descriptor = Descriptor.MessageTypes[51];
      internal__static_CMsgGCIncrementKillCountResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCIncrementKillCountResponse, global::CMsgGCIncrementKillCountResponse.Builder>(internal__static_CMsgGCIncrementKillCountResponse__Descriptor,
              new string[] { "KillerAccountId", "NumKills", "ItemDef", "LevelType", });
      internal__static_CSOEconItemDropRateBonus__Descriptor = Descriptor.MessageTypes[52];
      internal__static_CSOEconItemDropRateBonus__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOEconItemDropRateBonus, global::CSOEconItemDropRateBonus.Builder>(internal__static_CSOEconItemDropRateBonus__Descriptor,
              new string[] { "AccountId", "ExpirationDate", "Bonus", "BonusCount", "ItemId", "DefIndex", });
      internal__static_CSOEconItemLeagueViewPass__Descriptor = Descriptor.MessageTypes[53];
      internal__static_CSOEconItemLeagueViewPass__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOEconItemLeagueViewPass, global::CSOEconItemLeagueViewPass.Builder>(internal__static_CSOEconItemLeagueViewPass__Descriptor,
              new string[] { "AccountId", "LeagueId", "Admin", "Itemindex", });
      internal__static_CSOEconItemEventTicket__Descriptor = Descriptor.MessageTypes[54];
      internal__static_CSOEconItemEventTicket__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOEconItemEventTicket, global::CSOEconItemEventTicket.Builder>(internal__static_CSOEconItemEventTicket__Descriptor,
              new string[] { "AccountId", "EventId", "ItemId", });
      internal__static_CMsgGCItemPreviewItemBoughtNotification__Descriptor = Descriptor.MessageTypes[55];
      internal__static_CMsgGCItemPreviewItemBoughtNotification__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCItemPreviewItemBoughtNotification, global::CMsgGCItemPreviewItemBoughtNotification.Builder>(internal__static_CMsgGCItemPreviewItemBoughtNotification__Descriptor,
              new string[] { "ItemDefIndex", });
      internal__static_CMsgGCStorePurchaseCancel__Descriptor = Descriptor.MessageTypes[56];
      internal__static_CMsgGCStorePurchaseCancel__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseCancel, global::CMsgGCStorePurchaseCancel.Builder>(internal__static_CMsgGCStorePurchaseCancel__Descriptor,
              new string[] { "TxnId", });
      internal__static_CMsgGCStorePurchaseCancelResponse__Descriptor = Descriptor.MessageTypes[57];
      internal__static_CMsgGCStorePurchaseCancelResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseCancelResponse, global::CMsgGCStorePurchaseCancelResponse.Builder>(internal__static_CMsgGCStorePurchaseCancelResponse__Descriptor,
              new string[] { "Result", });
      internal__static_CMsgGCStorePurchaseFinalize__Descriptor = Descriptor.MessageTypes[58];
      internal__static_CMsgGCStorePurchaseFinalize__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseFinalize, global::CMsgGCStorePurchaseFinalize.Builder>(internal__static_CMsgGCStorePurchaseFinalize__Descriptor,
              new string[] { "TxnId", });
      internal__static_CMsgGCStorePurchaseFinalizeResponse__Descriptor = Descriptor.MessageTypes[59];
      internal__static_CMsgGCStorePurchaseFinalizeResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCStorePurchaseFinalizeResponse, global::CMsgGCStorePurchaseFinalizeResponse.Builder>(internal__static_CMsgGCStorePurchaseFinalizeResponse__Descriptor,
              new string[] { "Result", "ItemIds", });
      internal__static_CMsgGCBannedWordListRequest__Descriptor = Descriptor.MessageTypes[60];
      internal__static_CMsgGCBannedWordListRequest__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCBannedWordListRequest, global::CMsgGCBannedWordListRequest.Builder>(internal__static_CMsgGCBannedWordListRequest__Descriptor,
              new string[] { "BanListGroupId", "WordId", });
      internal__static_CMsgGCRequestAnnouncements__Descriptor = Descriptor.MessageTypes[61];
      internal__static_CMsgGCRequestAnnouncements__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCRequestAnnouncements, global::CMsgGCRequestAnnouncements.Builder>(internal__static_CMsgGCRequestAnnouncements__Descriptor,
              new string[] { });
      internal__static_CMsgGCRequestAnnouncementsResponse__Descriptor = Descriptor.MessageTypes[62];
      internal__static_CMsgGCRequestAnnouncementsResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCRequestAnnouncementsResponse, global::CMsgGCRequestAnnouncementsResponse.Builder>(internal__static_CMsgGCRequestAnnouncementsResponse__Descriptor,
              new string[] { "AnnouncementTitle", "Announcement", "NextmatchTitle", "Nextmatch", });
      internal__static_CMsgGCBannedWord__Descriptor = Descriptor.MessageTypes[63];
      internal__static_CMsgGCBannedWord__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCBannedWord, global::CMsgGCBannedWord.Builder>(internal__static_CMsgGCBannedWord__Descriptor,
              new string[] { "WordId", "WordType", "Word", });
      internal__static_CMsgGCBannedWordListResponse__Descriptor = Descriptor.MessageTypes[64];
      internal__static_CMsgGCBannedWordListResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCBannedWordListResponse, global::CMsgGCBannedWordListResponse.Builder>(internal__static_CMsgGCBannedWordListResponse__Descriptor,
              new string[] { "BanListGroupId", "WordList", });
      internal__static_CMsgGCToGCBannedWordListBroadcast__Descriptor = Descriptor.MessageTypes[65];
      internal__static_CMsgGCToGCBannedWordListBroadcast__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCBannedWordListBroadcast, global::CMsgGCToGCBannedWordListBroadcast.Builder>(internal__static_CMsgGCToGCBannedWordListBroadcast__Descriptor,
              new string[] { "Broadcast", });
      internal__static_CMsgGCToGCBannedWordListUpdated__Descriptor = Descriptor.MessageTypes[66];
      internal__static_CMsgGCToGCBannedWordListUpdated__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCBannedWordListUpdated, global::CMsgGCToGCBannedWordListUpdated.Builder>(internal__static_CMsgGCToGCBannedWordListUpdated__Descriptor,
              new string[] { "GroupId", });
      internal__static_CSOEconDefaultEquippedDefinitionInstanceClient__Descriptor = Descriptor.MessageTypes[67];
      internal__static_CSOEconDefaultEquippedDefinitionInstanceClient__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CSOEconDefaultEquippedDefinitionInstanceClient, global::CSOEconDefaultEquippedDefinitionInstanceClient.Builder>(internal__static_CSOEconDefaultEquippedDefinitionInstanceClient__Descriptor,
              new string[] { "AccountId", "ItemDefinition", "ClassId", "SlotId", });
      internal__static_CMsgGCToGCDirtySDOCache__Descriptor = Descriptor.MessageTypes[68];
      internal__static_CMsgGCToGCDirtySDOCache__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCDirtySDOCache, global::CMsgGCToGCDirtySDOCache.Builder>(internal__static_CMsgGCToGCDirtySDOCache__Descriptor,
              new string[] { "SdoType", "KeyUint64", });
      internal__static_CMsgGCToGCDirtyMultipleSDOCache__Descriptor = Descriptor.MessageTypes[69];
      internal__static_CMsgGCToGCDirtyMultipleSDOCache__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCDirtyMultipleSDOCache, global::CMsgGCToGCDirtyMultipleSDOCache.Builder>(internal__static_CMsgGCToGCDirtyMultipleSDOCache__Descriptor,
              new string[] { "SdoType", "KeyUint64", });
      internal__static_CMsgGCCollectItem__Descriptor = Descriptor.MessageTypes[70];
      internal__static_CMsgGCCollectItem__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCCollectItem, global::CMsgGCCollectItem.Builder>(internal__static_CMsgGCCollectItem__Descriptor,
              new string[] { "CollectionItemId", "SubjectItemId", });
      internal__static_CMsgSDONoMemcached__Descriptor = Descriptor.MessageTypes[71];
      internal__static_CMsgSDONoMemcached__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgSDONoMemcached, global::CMsgSDONoMemcached.Builder>(internal__static_CMsgSDONoMemcached__Descriptor,
              new string[] { });
      internal__static_CMsgGCToGCUpdateSQLKeyValue__Descriptor = Descriptor.MessageTypes[72];
      internal__static_CMsgGCToGCUpdateSQLKeyValue__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCUpdateSQLKeyValue, global::CMsgGCToGCUpdateSQLKeyValue.Builder>(internal__static_CMsgGCToGCUpdateSQLKeyValue__Descriptor,
              new string[] { "KeyName", });
      internal__static_CMsgGCToGCIsTrustedServer__Descriptor = Descriptor.MessageTypes[73];
      internal__static_CMsgGCToGCIsTrustedServer__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCIsTrustedServer, global::CMsgGCToGCIsTrustedServer.Builder>(internal__static_CMsgGCToGCIsTrustedServer__Descriptor,
              new string[] { "SteamId", });
      internal__static_CMsgGCToGCIsTrustedServerResponse__Descriptor = Descriptor.MessageTypes[74];
      internal__static_CMsgGCToGCIsTrustedServerResponse__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCIsTrustedServerResponse, global::CMsgGCToGCIsTrustedServerResponse.Builder>(internal__static_CMsgGCToGCIsTrustedServerResponse__Descriptor,
              new string[] { "IsTrusted", });
      internal__static_CMsgGCToGCBroadcastConsoleCommand__Descriptor = Descriptor.MessageTypes[75];
      internal__static_CMsgGCToGCBroadcastConsoleCommand__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCBroadcastConsoleCommand, global::CMsgGCToGCBroadcastConsoleCommand.Builder>(internal__static_CMsgGCToGCBroadcastConsoleCommand__Descriptor,
              new string[] { "ConCommand", });
      internal__static_CMsgGCServerVersionUpdated__Descriptor = Descriptor.MessageTypes[76];
      internal__static_CMsgGCServerVersionUpdated__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCServerVersionUpdated, global::CMsgGCServerVersionUpdated.Builder>(internal__static_CMsgGCServerVersionUpdated__Descriptor,
              new string[] { "ServerVersion", });
      internal__static_CMsgGCClientVersionUpdated__Descriptor = Descriptor.MessageTypes[77];
      internal__static_CMsgGCClientVersionUpdated__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCClientVersionUpdated, global::CMsgGCClientVersionUpdated.Builder>(internal__static_CMsgGCClientVersionUpdated__Descriptor,
              new string[] { "ClientVersion", });
      internal__static_CMsgGCToGCWebAPIAccountChanged__Descriptor = Descriptor.MessageTypes[78];
      internal__static_CMsgGCToGCWebAPIAccountChanged__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCWebAPIAccountChanged, global::CMsgGCToGCWebAPIAccountChanged.Builder>(internal__static_CMsgGCToGCWebAPIAccountChanged__Descriptor,
              new string[] { });
      internal__static_CMsgGCToGCRequestPassportItemGrant__Descriptor = Descriptor.MessageTypes[79];
      internal__static_CMsgGCToGCRequestPassportItemGrant__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGCToGCRequestPassportItemGrant, global::CMsgGCToGCRequestPassportItemGrant.Builder>(internal__static_CMsgGCToGCRequestPassportItemGrant__Descriptor,
              new string[] { "SteamId", "LeagueId", "RewardFlag", });
      internal__static_CMsgGameServerInfo__Descriptor = Descriptor.MessageTypes[80];
      internal__static_CMsgGameServerInfo__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::CMsgGameServerInfo, global::CMsgGameServerInfo.Builder>(internal__static_CMsgGameServerInfo__Descriptor,
              new string[] { "ServerPublicIpAddr", "ServerPrivateIpAddr", "ServerPort", "ServerTvPort", "ServerKey", "ServerHibernation", "ServerType", "ServerRegion", "ServerLoadavg", "ServerTvBroadcastTime", "ServerGameTime", "ServerRelayConnectedSteamId", "RelaySlotsMax", "RelaysConnected", "RelayClientsConnected", "RelayedGameServerSteamId", "ParentRelayCount", "TvSecretCode", });
      pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
      RegisterAllExtensions(registry);
      global::Steammessages.RegisterAllExtensions(registry);
      return registry;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        global::Steammessages.Descriptor, 
        }, assigner);
  }
  #endregion
  
}
#region Enums
public enum EGCBaseMsg {
  k_EMsgGCSystemMessage = 4001,
  k_EMsgGCReplicateConVars = 4002,
  k_EMsgGCConVarUpdated = 4003,
  k_EMsgGCInQueue = 4008,
  k_EMsgGCInviteToParty = 4501,
  k_EMsgGCInvitationCreated = 4502,
  k_EMsgGCPartyInviteResponse = 4503,
  k_EMsgGCKickFromParty = 4504,
  k_EMsgGCLeaveParty = 4505,
  k_EMsgGCServerAvailable = 4506,
  k_EMsgGCClientConnectToServer = 4507,
  k_EMsgGCGameServerInfo = 4508,
  k_EMsgGCError = 4509,
  k_EMsgGCReplay_UploadedToYouTube = 4510,
  k_EMsgGCLANServerAvailable = 4511,
}

public enum EGCBaseProtoObjectTypes {
  k_EProtoObjectPartyInvite = 1001,
  k_EProtoObjectLobbyInvite = 1002,
}

public enum GC_BannedWordType {
  GC_BANNED_WORD_DISABLE_WORD = 0,
  GC_BANNED_WORD_ENABLE_WORD = 1,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CGCStorePurchaseInit_LineItem : pb::GeneratedMessage<CGCStorePurchaseInit_LineItem, CGCStorePurchaseInit_LineItem.Builder> {
  private CGCStorePurchaseInit_LineItem() { }
  private static readonly CGCStorePurchaseInit_LineItem defaultInstance = new CGCStorePurchaseInit_LineItem().MakeReadOnly();
  private static readonly string[] _cGCStorePurchaseInitLineItemFieldNames = new string[] { "cost_in_local_currency", "item_def_id", "purchase_type", "quantity" };
  private static readonly uint[] _cGCStorePurchaseInitLineItemFieldTags = new uint[] { 24, 8, 32, 16 };
  public static CGCStorePurchaseInit_LineItem DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CGCStorePurchaseInit_LineItem DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CGCStorePurchaseInit_LineItem ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CGCStorePurchaseInit_LineItem__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CGCStorePurchaseInit_LineItem, CGCStorePurchaseInit_LineItem.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CGCStorePurchaseInit_LineItem__FieldAccessorTable; }
  }
  
  public const int ItemDefIdFieldNumber = 1;
  private bool hasItemDefId;
  private uint itemDefId_;
  public bool HasItemDefId {
    get { return hasItemDefId; }
  }
  [global::System.CLSCompliant(false)]
  public uint ItemDefId {
    get { return itemDefId_; }
  }
  
  public const int QuantityFieldNumber = 2;
  private bool hasQuantity;
  private uint quantity_;
  public bool HasQuantity {
    get { return hasQuantity; }
  }
  [global::System.CLSCompliant(false)]
  public uint Quantity {
    get { return quantity_; }
  }
  
  public const int CostInLocalCurrencyFieldNumber = 3;
  private bool hasCostInLocalCurrency;
  private uint costInLocalCurrency_;
  public bool HasCostInLocalCurrency {
    get { return hasCostInLocalCurrency; }
  }
  [global::System.CLSCompliant(false)]
  public uint CostInLocalCurrency {
    get { return costInLocalCurrency_; }
  }
  
  public const int PurchaseTypeFieldNumber = 4;
  private bool hasPurchaseType;
  private uint purchaseType_;
  public bool HasPurchaseType {
    get { return hasPurchaseType; }
  }
  [global::System.CLSCompliant(false)]
  public uint PurchaseType {
    get { return purchaseType_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cGCStorePurchaseInitLineItemFieldNames;
    if (hasItemDefId) {
      output.WriteUInt32(1, field_names[1], ItemDefId);
    }
    if (hasQuantity) {
      output.WriteUInt32(2, field_names[3], Quantity);
    }
    if (hasCostInLocalCurrency) {
      output.WriteUInt32(3, field_names[0], CostInLocalCurrency);
    }
    if (hasPurchaseType) {
      output.WriteUInt32(4, field_names[2], PurchaseType);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasItemDefId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, ItemDefId);
      }
      if (hasQuantity) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Quantity);
      }
      if (hasCostInLocalCurrency) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, CostInLocalCurrency);
      }
      if (hasPurchaseType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, PurchaseType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CGCStorePurchaseInit_LineItem ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCStorePurchaseInit_LineItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCStorePurchaseInit_LineItem ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CGCStorePurchaseInit_LineItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CGCStorePurchaseInit_LineItem ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCStorePurchaseInit_LineItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CGCStorePurchaseInit_LineItem ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CGCStorePurchaseInit_LineItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CGCStorePurchaseInit_LineItem ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CGCStorePurchaseInit_LineItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CGCStorePurchaseInit_LineItem MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CGCStorePurchaseInit_LineItem prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CGCStorePurchaseInit_LineItem, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CGCStorePurchaseInit_LineItem cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CGCStorePurchaseInit_LineItem result;
    
    private CGCStorePurchaseInit_LineItem PrepareBuilder() {
      if (resultIsReadOnly) {
        CGCStorePurchaseInit_LineItem original = result;
        result = new CGCStorePurchaseInit_LineItem();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CGCStorePurchaseInit_LineItem MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CGCStorePurchaseInit_LineItem.Descriptor; }
    }
    
    public override CGCStorePurchaseInit_LineItem DefaultInstanceForType {
      get { return global::CGCStorePurchaseInit_LineItem.DefaultInstance; }
    }
    
    public override CGCStorePurchaseInit_LineItem BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CGCStorePurchaseInit_LineItem) {
        return MergeFrom((CGCStorePurchaseInit_LineItem) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CGCStorePurchaseInit_LineItem other) {
      if (other == global::CGCStorePurchaseInit_LineItem.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemDefId) {
        ItemDefId = other.ItemDefId;
      }
      if (other.HasQuantity) {
        Quantity = other.Quantity;
      }
      if (other.HasCostInLocalCurrency) {
        CostInLocalCurrency = other.CostInLocalCurrency;
      }
      if (other.HasPurchaseType) {
        PurchaseType = other.PurchaseType;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cGCStorePurchaseInitLineItemFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cGCStorePurchaseInitLineItemFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasItemDefId = input.ReadUInt32(ref result.itemDefId_);
            break;
          }
          case 16: {
            result.hasQuantity = input.ReadUInt32(ref result.quantity_);
            break;
          }
          case 24: {
            result.hasCostInLocalCurrency = input.ReadUInt32(ref result.costInLocalCurrency_);
            break;
          }
          case 32: {
            result.hasPurchaseType = input.ReadUInt32(ref result.purchaseType_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemDefId {
      get { return result.hasItemDefId; }
    }
    [global::System.CLSCompliant(false)]
    public uint ItemDefId {
      get { return result.ItemDefId; }
      set { SetItemDefId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemDefId(uint value) {
      PrepareBuilder();
      result.hasItemDefId = true;
      result.itemDefId_ = value;
      return this;
    }
    public Builder ClearItemDefId() {
      PrepareBuilder();
      result.hasItemDefId = false;
      result.itemDefId_ = 0;
      return this;
    }
    
    public bool HasQuantity {
      get { return result.hasQuantity; }
    }
    [global::System.CLSCompliant(false)]
    public uint Quantity {
      get { return result.Quantity; }
      set { SetQuantity(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetQuantity(uint value) {
      PrepareBuilder();
      result.hasQuantity = true;
      result.quantity_ = value;
      return this;
    }
    public Builder ClearQuantity() {
      PrepareBuilder();
      result.hasQuantity = false;
      result.quantity_ = 0;
      return this;
    }
    
    public bool HasCostInLocalCurrency {
      get { return result.hasCostInLocalCurrency; }
    }
    [global::System.CLSCompliant(false)]
    public uint CostInLocalCurrency {
      get { return result.CostInLocalCurrency; }
      set { SetCostInLocalCurrency(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetCostInLocalCurrency(uint value) {
      PrepareBuilder();
      result.hasCostInLocalCurrency = true;
      result.costInLocalCurrency_ = value;
      return this;
    }
    public Builder ClearCostInLocalCurrency() {
      PrepareBuilder();
      result.hasCostInLocalCurrency = false;
      result.costInLocalCurrency_ = 0;
      return this;
    }
    
    public bool HasPurchaseType {
      get { return result.hasPurchaseType; }
    }
    [global::System.CLSCompliant(false)]
    public uint PurchaseType {
      get { return result.PurchaseType; }
      set { SetPurchaseType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPurchaseType(uint value) {
      PrepareBuilder();
      result.hasPurchaseType = true;
      result.purchaseType_ = value;
      return this;
    }
    public Builder ClearPurchaseType() {
      PrepareBuilder();
      result.hasPurchaseType = false;
      result.purchaseType_ = 0;
      return this;
    }
  }
  static CGCStorePurchaseInit_LineItem() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCStorePurchaseInit : pb::GeneratedMessage<CMsgGCStorePurchaseInit, CMsgGCStorePurchaseInit.Builder> {
  private CMsgGCStorePurchaseInit() { }
  private static readonly CMsgGCStorePurchaseInit defaultInstance = new CMsgGCStorePurchaseInit().MakeReadOnly();
  private static readonly string[] _cMsgGCStorePurchaseInitFieldNames = new string[] { "country", "currency", "language", "line_items" };
  private static readonly uint[] _cMsgGCStorePurchaseInitFieldTags = new uint[] { 10, 24, 16, 34 };
  public static CMsgGCStorePurchaseInit DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCStorePurchaseInit DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCStorePurchaseInit ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseInit__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCStorePurchaseInit, CMsgGCStorePurchaseInit.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseInit__FieldAccessorTable; }
  }
  
  public const int CountryFieldNumber = 1;
  private bool hasCountry;
  private string country_ = "";
  public bool HasCountry {
    get { return hasCountry; }
  }
  public string Country {
    get { return country_; }
  }
  
  public const int LanguageFieldNumber = 2;
  private bool hasLanguage;
  private int language_;
  public bool HasLanguage {
    get { return hasLanguage; }
  }
  public int Language {
    get { return language_; }
  }
  
  public const int CurrencyFieldNumber = 3;
  private bool hasCurrency;
  private int currency_;
  public bool HasCurrency {
    get { return hasCurrency; }
  }
  public int Currency {
    get { return currency_; }
  }
  
  public const int LineItemsFieldNumber = 4;
  private pbc::PopsicleList<global::CGCStorePurchaseInit_LineItem> lineItems_ = new pbc::PopsicleList<global::CGCStorePurchaseInit_LineItem>();
  public scg::IList<global::CGCStorePurchaseInit_LineItem> LineItemsList {
    get { return lineItems_; }
  }
  public int LineItemsCount {
    get { return lineItems_.Count; }
  }
  public global::CGCStorePurchaseInit_LineItem GetLineItems(int index) {
    return lineItems_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCStorePurchaseInitFieldNames;
    if (hasCountry) {
      output.WriteString(1, field_names[0], Country);
    }
    if (hasLanguage) {
      output.WriteInt32(2, field_names[2], Language);
    }
    if (hasCurrency) {
      output.WriteInt32(3, field_names[1], Currency);
    }
    if (lineItems_.Count > 0) {
      output.WriteMessageArray(4, field_names[3], lineItems_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCountry) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Country);
      }
      if (hasLanguage) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Language);
      }
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Currency);
      }
      foreach (global::CGCStorePurchaseInit_LineItem element in LineItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCStorePurchaseInit ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInit ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInit ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInit ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCStorePurchaseInit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCStorePurchaseInit ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCStorePurchaseInit MakeReadOnly() {
    lineItems_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCStorePurchaseInit prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCStorePurchaseInit, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCStorePurchaseInit cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCStorePurchaseInit result;
    
    private CMsgGCStorePurchaseInit PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCStorePurchaseInit original = result;
        result = new CMsgGCStorePurchaseInit();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCStorePurchaseInit MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCStorePurchaseInit.Descriptor; }
    }
    
    public override CMsgGCStorePurchaseInit DefaultInstanceForType {
      get { return global::CMsgGCStorePurchaseInit.DefaultInstance; }
    }
    
    public override CMsgGCStorePurchaseInit BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCStorePurchaseInit) {
        return MergeFrom((CMsgGCStorePurchaseInit) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCStorePurchaseInit other) {
      if (other == global::CMsgGCStorePurchaseInit.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCountry) {
        Country = other.Country;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      if (other.HasCurrency) {
        Currency = other.Currency;
      }
      if (other.lineItems_.Count != 0) {
        result.lineItems_.Add(other.lineItems_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCStorePurchaseInitFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCStorePurchaseInitFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasCountry = input.ReadString(ref result.country_);
            break;
          }
          case 16: {
            result.hasLanguage = input.ReadInt32(ref result.language_);
            break;
          }
          case 24: {
            result.hasCurrency = input.ReadInt32(ref result.currency_);
            break;
          }
          case 34: {
            input.ReadMessageArray(tag, field_name, result.lineItems_, global::CGCStorePurchaseInit_LineItem.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCountry {
      get { return result.hasCountry; }
    }
    public string Country {
      get { return result.Country; }
      set { SetCountry(value); }
    }
    public Builder SetCountry(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCountry = true;
      result.country_ = value;
      return this;
    }
    public Builder ClearCountry() {
      PrepareBuilder();
      result.hasCountry = false;
      result.country_ = "";
      return this;
    }
    
    public bool HasLanguage {
      get { return result.hasLanguage; }
    }
    public int Language {
      get { return result.Language; }
      set { SetLanguage(value); }
    }
    public Builder SetLanguage(int value) {
      PrepareBuilder();
      result.hasLanguage = true;
      result.language_ = value;
      return this;
    }
    public Builder ClearLanguage() {
      PrepareBuilder();
      result.hasLanguage = false;
      result.language_ = 0;
      return this;
    }
    
    public bool HasCurrency {
      get { return result.hasCurrency; }
    }
    public int Currency {
      get { return result.Currency; }
      set { SetCurrency(value); }
    }
    public Builder SetCurrency(int value) {
      PrepareBuilder();
      result.hasCurrency = true;
      result.currency_ = value;
      return this;
    }
    public Builder ClearCurrency() {
      PrepareBuilder();
      result.hasCurrency = false;
      result.currency_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CGCStorePurchaseInit_LineItem> LineItemsList {
      get { return PrepareBuilder().lineItems_; }
    }
    public int LineItemsCount {
      get { return result.LineItemsCount; }
    }
    public global::CGCStorePurchaseInit_LineItem GetLineItems(int index) {
      return result.GetLineItems(index);
    }
    public Builder SetLineItems(int index, global::CGCStorePurchaseInit_LineItem value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.lineItems_[index] = value;
      return this;
    }
    public Builder SetLineItems(int index, global::CGCStorePurchaseInit_LineItem.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.lineItems_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddLineItems(global::CGCStorePurchaseInit_LineItem value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.lineItems_.Add(value);
      return this;
    }
    public Builder AddLineItems(global::CGCStorePurchaseInit_LineItem.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.lineItems_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeLineItems(scg::IEnumerable<global::CGCStorePurchaseInit_LineItem> values) {
      PrepareBuilder();
      result.lineItems_.Add(values);
      return this;
    }
    public Builder ClearLineItems() {
      PrepareBuilder();
      result.lineItems_.Clear();
      return this;
    }
  }
  static CMsgGCStorePurchaseInit() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCStorePurchaseInitResponse : pb::GeneratedMessage<CMsgGCStorePurchaseInitResponse, CMsgGCStorePurchaseInitResponse.Builder> {
  private CMsgGCStorePurchaseInitResponse() { }
  private static readonly CMsgGCStorePurchaseInitResponse defaultInstance = new CMsgGCStorePurchaseInitResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCStorePurchaseInitResponseFieldNames = new string[] { "result", "txn_id" };
  private static readonly uint[] _cMsgGCStorePurchaseInitResponseFieldTags = new uint[] { 8, 16 };
  public static CMsgGCStorePurchaseInitResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCStorePurchaseInitResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCStorePurchaseInitResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseInitResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCStorePurchaseInitResponse, CMsgGCStorePurchaseInitResponse.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseInitResponse__FieldAccessorTable; }
  }
  
  public const int ResultFieldNumber = 1;
  private bool hasResult;
  private int result_;
  public bool HasResult {
    get { return hasResult; }
  }
  public int Result {
    get { return result_; }
  }
  
  public const int TxnIdFieldNumber = 2;
  private bool hasTxnId;
  private ulong txnId_;
  public bool HasTxnId {
    get { return hasTxnId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong TxnId {
    get { return txnId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCStorePurchaseInitResponseFieldNames;
    if (hasResult) {
      output.WriteInt32(1, field_names[0], Result);
    }
    if (hasTxnId) {
      output.WriteUInt64(2, field_names[1], TxnId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Result);
      }
      if (hasTxnId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, TxnId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCStorePurchaseInitResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInitResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInitResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInitResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInitResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInitResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInitResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCStorePurchaseInitResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCStorePurchaseInitResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseInitResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCStorePurchaseInitResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCStorePurchaseInitResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCStorePurchaseInitResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCStorePurchaseInitResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCStorePurchaseInitResponse result;
    
    private CMsgGCStorePurchaseInitResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCStorePurchaseInitResponse original = result;
        result = new CMsgGCStorePurchaseInitResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCStorePurchaseInitResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCStorePurchaseInitResponse.Descriptor; }
    }
    
    public override CMsgGCStorePurchaseInitResponse DefaultInstanceForType {
      get { return global::CMsgGCStorePurchaseInitResponse.DefaultInstance; }
    }
    
    public override CMsgGCStorePurchaseInitResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCStorePurchaseInitResponse) {
        return MergeFrom((CMsgGCStorePurchaseInitResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCStorePurchaseInitResponse other) {
      if (other == global::CMsgGCStorePurchaseInitResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasTxnId) {
        TxnId = other.TxnId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCStorePurchaseInitResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCStorePurchaseInitResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasResult = input.ReadInt32(ref result.result_);
            break;
          }
          case 16: {
            result.hasTxnId = input.ReadUInt64(ref result.txnId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    public int Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    public Builder SetResult(int value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
    
    public bool HasTxnId {
      get { return result.hasTxnId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TxnId {
      get { return result.TxnId; }
      set { SetTxnId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTxnId(ulong value) {
      PrepareBuilder();
      result.hasTxnId = true;
      result.txnId_ = value;
      return this;
    }
    public Builder ClearTxnId() {
      PrepareBuilder();
      result.hasTxnId = false;
      result.txnId_ = 0UL;
      return this;
    }
  }
  static CMsgGCStorePurchaseInitResponse() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOPartyInvite : pb::GeneratedMessage<CSOPartyInvite, CSOPartyInvite.Builder> {
  private CSOPartyInvite() { }
  private static readonly CSOPartyInvite defaultInstance = new CSOPartyInvite().MakeReadOnly();
  private static readonly string[] _cSOPartyInviteFieldNames = new string[] { "group_id", "sender_id", "sender_name" };
  private static readonly uint[] _cSOPartyInviteFieldTags = new uint[] { 8, 17, 26 };
  public static CSOPartyInvite DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOPartyInvite DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOPartyInvite ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOPartyInvite__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOPartyInvite, CSOPartyInvite.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOPartyInvite__FieldAccessorTable; }
  }
  
  public const int GroupIdFieldNumber = 1;
  private bool hasGroupId;
  private ulong groupId_;
  public bool HasGroupId {
    get { return hasGroupId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GroupId {
    get { return groupId_; }
  }
  
  public const int SenderIdFieldNumber = 2;
  private bool hasSenderId;
  private ulong senderId_;
  public bool HasSenderId {
    get { return hasSenderId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SenderId {
    get { return senderId_; }
  }
  
  public const int SenderNameFieldNumber = 3;
  private bool hasSenderName;
  private string senderName_ = "";
  public bool HasSenderName {
    get { return hasSenderName; }
  }
  public string SenderName {
    get { return senderName_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOPartyInviteFieldNames;
    if (hasGroupId) {
      output.WriteUInt64(1, field_names[0], GroupId);
    }
    if (hasSenderId) {
      output.WriteFixed64(2, field_names[1], SenderId);
    }
    if (hasSenderName) {
      output.WriteString(3, field_names[2], SenderName);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGroupId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, GroupId);
      }
      if (hasSenderId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(2, SenderId);
      }
      if (hasSenderName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, SenderName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOPartyInvite ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOPartyInvite ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOPartyInvite ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOPartyInvite ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOPartyInvite ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOPartyInvite ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOPartyInvite ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOPartyInvite ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOPartyInvite ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOPartyInvite ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOPartyInvite MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOPartyInvite prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOPartyInvite, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOPartyInvite cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOPartyInvite result;
    
    private CSOPartyInvite PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOPartyInvite original = result;
        result = new CSOPartyInvite();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOPartyInvite MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOPartyInvite.Descriptor; }
    }
    
    public override CSOPartyInvite DefaultInstanceForType {
      get { return global::CSOPartyInvite.DefaultInstance; }
    }
    
    public override CSOPartyInvite BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOPartyInvite) {
        return MergeFrom((CSOPartyInvite) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOPartyInvite other) {
      if (other == global::CSOPartyInvite.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasGroupId) {
        GroupId = other.GroupId;
      }
      if (other.HasSenderId) {
        SenderId = other.SenderId;
      }
      if (other.HasSenderName) {
        SenderName = other.SenderName;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOPartyInviteFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOPartyInviteFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasGroupId = input.ReadUInt64(ref result.groupId_);
            break;
          }
          case 17: {
            result.hasSenderId = input.ReadFixed64(ref result.senderId_);
            break;
          }
          case 26: {
            result.hasSenderName = input.ReadString(ref result.senderName_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasGroupId {
      get { return result.hasGroupId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GroupId {
      get { return result.GroupId; }
      set { SetGroupId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGroupId(ulong value) {
      PrepareBuilder();
      result.hasGroupId = true;
      result.groupId_ = value;
      return this;
    }
    public Builder ClearGroupId() {
      PrepareBuilder();
      result.hasGroupId = false;
      result.groupId_ = 0UL;
      return this;
    }
    
    public bool HasSenderId {
      get { return result.hasSenderId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SenderId {
      get { return result.SenderId; }
      set { SetSenderId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSenderId(ulong value) {
      PrepareBuilder();
      result.hasSenderId = true;
      result.senderId_ = value;
      return this;
    }
    public Builder ClearSenderId() {
      PrepareBuilder();
      result.hasSenderId = false;
      result.senderId_ = 0;
      return this;
    }
    
    public bool HasSenderName {
      get { return result.hasSenderName; }
    }
    public string SenderName {
      get { return result.SenderName; }
      set { SetSenderName(value); }
    }
    public Builder SetSenderName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSenderName = true;
      result.senderName_ = value;
      return this;
    }
    public Builder ClearSenderName() {
      PrepareBuilder();
      result.hasSenderName = false;
      result.senderName_ = "";
      return this;
    }
  }
  static CSOPartyInvite() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOLobbyInvite : pb::GeneratedMessage<CSOLobbyInvite, CSOLobbyInvite.Builder> {
  private CSOLobbyInvite() { }
  private static readonly CSOLobbyInvite defaultInstance = new CSOLobbyInvite().MakeReadOnly();
  private static readonly string[] _cSOLobbyInviteFieldNames = new string[] { "group_id", "sender_id", "sender_name" };
  private static readonly uint[] _cSOLobbyInviteFieldTags = new uint[] { 8, 17, 26 };
  public static CSOLobbyInvite DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOLobbyInvite DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOLobbyInvite ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOLobbyInvite__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOLobbyInvite, CSOLobbyInvite.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOLobbyInvite__FieldAccessorTable; }
  }
  
  public const int GroupIdFieldNumber = 1;
  private bool hasGroupId;
  private ulong groupId_;
  public bool HasGroupId {
    get { return hasGroupId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GroupId {
    get { return groupId_; }
  }
  
  public const int SenderIdFieldNumber = 2;
  private bool hasSenderId;
  private ulong senderId_;
  public bool HasSenderId {
    get { return hasSenderId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SenderId {
    get { return senderId_; }
  }
  
  public const int SenderNameFieldNumber = 3;
  private bool hasSenderName;
  private string senderName_ = "";
  public bool HasSenderName {
    get { return hasSenderName; }
  }
  public string SenderName {
    get { return senderName_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOLobbyInviteFieldNames;
    if (hasGroupId) {
      output.WriteUInt64(1, field_names[0], GroupId);
    }
    if (hasSenderId) {
      output.WriteFixed64(2, field_names[1], SenderId);
    }
    if (hasSenderName) {
      output.WriteString(3, field_names[2], SenderName);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGroupId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, GroupId);
      }
      if (hasSenderId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(2, SenderId);
      }
      if (hasSenderName) {
        size += pb::CodedOutputStream.ComputeStringSize(3, SenderName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOLobbyInvite ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOLobbyInvite ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOLobbyInvite ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOLobbyInvite ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOLobbyInvite ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOLobbyInvite ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOLobbyInvite ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOLobbyInvite ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOLobbyInvite ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOLobbyInvite ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOLobbyInvite MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOLobbyInvite prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOLobbyInvite, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOLobbyInvite cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOLobbyInvite result;
    
    private CSOLobbyInvite PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOLobbyInvite original = result;
        result = new CSOLobbyInvite();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOLobbyInvite MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOLobbyInvite.Descriptor; }
    }
    
    public override CSOLobbyInvite DefaultInstanceForType {
      get { return global::CSOLobbyInvite.DefaultInstance; }
    }
    
    public override CSOLobbyInvite BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOLobbyInvite) {
        return MergeFrom((CSOLobbyInvite) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOLobbyInvite other) {
      if (other == global::CSOLobbyInvite.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasGroupId) {
        GroupId = other.GroupId;
      }
      if (other.HasSenderId) {
        SenderId = other.SenderId;
      }
      if (other.HasSenderName) {
        SenderName = other.SenderName;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOLobbyInviteFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOLobbyInviteFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasGroupId = input.ReadUInt64(ref result.groupId_);
            break;
          }
          case 17: {
            result.hasSenderId = input.ReadFixed64(ref result.senderId_);
            break;
          }
          case 26: {
            result.hasSenderName = input.ReadString(ref result.senderName_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasGroupId {
      get { return result.hasGroupId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GroupId {
      get { return result.GroupId; }
      set { SetGroupId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGroupId(ulong value) {
      PrepareBuilder();
      result.hasGroupId = true;
      result.groupId_ = value;
      return this;
    }
    public Builder ClearGroupId() {
      PrepareBuilder();
      result.hasGroupId = false;
      result.groupId_ = 0UL;
      return this;
    }
    
    public bool HasSenderId {
      get { return result.hasSenderId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SenderId {
      get { return result.SenderId; }
      set { SetSenderId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSenderId(ulong value) {
      PrepareBuilder();
      result.hasSenderId = true;
      result.senderId_ = value;
      return this;
    }
    public Builder ClearSenderId() {
      PrepareBuilder();
      result.hasSenderId = false;
      result.senderId_ = 0;
      return this;
    }
    
    public bool HasSenderName {
      get { return result.hasSenderName; }
    }
    public string SenderName {
      get { return result.SenderName; }
      set { SetSenderName(value); }
    }
    public Builder SetSenderName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSenderName = true;
      result.senderName_ = value;
      return this;
    }
    public Builder ClearSenderName() {
      PrepareBuilder();
      result.hasSenderName = false;
      result.senderName_ = "";
      return this;
    }
  }
  static CSOLobbyInvite() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSystemBroadcast : pb::GeneratedMessage<CMsgSystemBroadcast, CMsgSystemBroadcast.Builder> {
  private CMsgSystemBroadcast() { }
  private static readonly CMsgSystemBroadcast defaultInstance = new CMsgSystemBroadcast().MakeReadOnly();
  private static readonly string[] _cMsgSystemBroadcastFieldNames = new string[] { "message" };
  private static readonly uint[] _cMsgSystemBroadcastFieldTags = new uint[] { 10 };
  public static CMsgSystemBroadcast DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSystemBroadcast DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSystemBroadcast ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgSystemBroadcast__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSystemBroadcast, CMsgSystemBroadcast.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgSystemBroadcast__FieldAccessorTable; }
  }
  
  public const int MessageFieldNumber = 1;
  private bool hasMessage;
  private string message_ = "";
  public bool HasMessage {
    get { return hasMessage; }
  }
  public string Message {
    get { return message_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSystemBroadcastFieldNames;
    if (hasMessage) {
      output.WriteString(1, field_names[0], Message);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMessage) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Message);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSystemBroadcast ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSystemBroadcast ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSystemBroadcast ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSystemBroadcast ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSystemBroadcast ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSystemBroadcast ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSystemBroadcast ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSystemBroadcast ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSystemBroadcast ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSystemBroadcast ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSystemBroadcast MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSystemBroadcast prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSystemBroadcast, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSystemBroadcast cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSystemBroadcast result;
    
    private CMsgSystemBroadcast PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSystemBroadcast original = result;
        result = new CMsgSystemBroadcast();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSystemBroadcast MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSystemBroadcast.Descriptor; }
    }
    
    public override CMsgSystemBroadcast DefaultInstanceForType {
      get { return global::CMsgSystemBroadcast.DefaultInstance; }
    }
    
    public override CMsgSystemBroadcast BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSystemBroadcast) {
        return MergeFrom((CMsgSystemBroadcast) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSystemBroadcast other) {
      if (other == global::CMsgSystemBroadcast.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasMessage) {
        Message = other.Message;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSystemBroadcastFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSystemBroadcastFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasMessage = input.ReadString(ref result.message_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasMessage {
      get { return result.hasMessage; }
    }
    public string Message {
      get { return result.Message; }
      set { SetMessage(value); }
    }
    public Builder SetMessage(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasMessage = true;
      result.message_ = value;
      return this;
    }
    public Builder ClearMessage() {
      PrepareBuilder();
      result.hasMessage = false;
      result.message_ = "";
      return this;
    }
  }
  static CMsgSystemBroadcast() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgInviteToParty : pb::GeneratedMessage<CMsgInviteToParty, CMsgInviteToParty.Builder> {
  private CMsgInviteToParty() { }
  private static readonly CMsgInviteToParty defaultInstance = new CMsgInviteToParty().MakeReadOnly();
  private static readonly string[] _cMsgInviteToPartyFieldNames = new string[] { "client_version", "steam_id", "team_invite" };
  private static readonly uint[] _cMsgInviteToPartyFieldTags = new uint[] { 16, 9, 24 };
  public static CMsgInviteToParty DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgInviteToParty DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgInviteToParty ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgInviteToParty__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgInviteToParty, CMsgInviteToParty.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgInviteToParty__FieldAccessorTable; }
  }
  
  public const int SteamIdFieldNumber = 1;
  private bool hasSteamId;
  private ulong steamId_;
  public bool HasSteamId {
    get { return hasSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamId {
    get { return steamId_; }
  }
  
  public const int ClientVersionFieldNumber = 2;
  private bool hasClientVersion;
  private uint clientVersion_;
  public bool HasClientVersion {
    get { return hasClientVersion; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClientVersion {
    get { return clientVersion_; }
  }
  
  public const int TeamInviteFieldNumber = 3;
  private bool hasTeamInvite;
  private uint teamInvite_;
  public bool HasTeamInvite {
    get { return hasTeamInvite; }
  }
  [global::System.CLSCompliant(false)]
  public uint TeamInvite {
    get { return teamInvite_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgInviteToPartyFieldNames;
    if (hasSteamId) {
      output.WriteFixed64(1, field_names[1], SteamId);
    }
    if (hasClientVersion) {
      output.WriteUInt32(2, field_names[0], ClientVersion);
    }
    if (hasTeamInvite) {
      output.WriteUInt32(3, field_names[2], TeamInvite);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, SteamId);
      }
      if (hasClientVersion) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, ClientVersion);
      }
      if (hasTeamInvite) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, TeamInvite);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgInviteToParty ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgInviteToParty ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgInviteToParty ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgInviteToParty ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgInviteToParty ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgInviteToParty ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgInviteToParty ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgInviteToParty ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgInviteToParty ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgInviteToParty ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgInviteToParty MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgInviteToParty prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgInviteToParty, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgInviteToParty cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgInviteToParty result;
    
    private CMsgInviteToParty PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgInviteToParty original = result;
        result = new CMsgInviteToParty();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgInviteToParty MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgInviteToParty.Descriptor; }
    }
    
    public override CMsgInviteToParty DefaultInstanceForType {
      get { return global::CMsgInviteToParty.DefaultInstance; }
    }
    
    public override CMsgInviteToParty BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgInviteToParty) {
        return MergeFrom((CMsgInviteToParty) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgInviteToParty other) {
      if (other == global::CMsgInviteToParty.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      if (other.HasClientVersion) {
        ClientVersion = other.ClientVersion;
      }
      if (other.HasTeamInvite) {
        TeamInvite = other.TeamInvite;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgInviteToPartyFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgInviteToPartyFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamId = input.ReadFixed64(ref result.steamId_);
            break;
          }
          case 16: {
            result.hasClientVersion = input.ReadUInt32(ref result.clientVersion_);
            break;
          }
          case 24: {
            result.hasTeamInvite = input.ReadUInt32(ref result.teamInvite_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamId {
      get { return result.hasSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamId {
      get { return result.SteamId; }
      set { SetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamId(ulong value) {
      PrepareBuilder();
      result.hasSteamId = true;
      result.steamId_ = value;
      return this;
    }
    public Builder ClearSteamId() {
      PrepareBuilder();
      result.hasSteamId = false;
      result.steamId_ = 0;
      return this;
    }
    
    public bool HasClientVersion {
      get { return result.hasClientVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClientVersion {
      get { return result.ClientVersion; }
      set { SetClientVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClientVersion(uint value) {
      PrepareBuilder();
      result.hasClientVersion = true;
      result.clientVersion_ = value;
      return this;
    }
    public Builder ClearClientVersion() {
      PrepareBuilder();
      result.hasClientVersion = false;
      result.clientVersion_ = 0;
      return this;
    }
    
    public bool HasTeamInvite {
      get { return result.hasTeamInvite; }
    }
    [global::System.CLSCompliant(false)]
    public uint TeamInvite {
      get { return result.TeamInvite; }
      set { SetTeamInvite(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTeamInvite(uint value) {
      PrepareBuilder();
      result.hasTeamInvite = true;
      result.teamInvite_ = value;
      return this;
    }
    public Builder ClearTeamInvite() {
      PrepareBuilder();
      result.hasTeamInvite = false;
      result.teamInvite_ = 0;
      return this;
    }
  }
  static CMsgInviteToParty() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgInvitationCreated : pb::GeneratedMessage<CMsgInvitationCreated, CMsgInvitationCreated.Builder> {
  private CMsgInvitationCreated() { }
  private static readonly CMsgInvitationCreated defaultInstance = new CMsgInvitationCreated().MakeReadOnly();
  private static readonly string[] _cMsgInvitationCreatedFieldNames = new string[] { "group_id", "steam_id" };
  private static readonly uint[] _cMsgInvitationCreatedFieldTags = new uint[] { 8, 17 };
  public static CMsgInvitationCreated DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgInvitationCreated DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgInvitationCreated ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgInvitationCreated__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgInvitationCreated, CMsgInvitationCreated.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgInvitationCreated__FieldAccessorTable; }
  }
  
  public const int GroupIdFieldNumber = 1;
  private bool hasGroupId;
  private ulong groupId_;
  public bool HasGroupId {
    get { return hasGroupId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GroupId {
    get { return groupId_; }
  }
  
  public const int SteamIdFieldNumber = 2;
  private bool hasSteamId;
  private ulong steamId_;
  public bool HasSteamId {
    get { return hasSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamId {
    get { return steamId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgInvitationCreatedFieldNames;
    if (hasGroupId) {
      output.WriteUInt64(1, field_names[0], GroupId);
    }
    if (hasSteamId) {
      output.WriteFixed64(2, field_names[1], SteamId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGroupId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, GroupId);
      }
      if (hasSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(2, SteamId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgInvitationCreated ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgInvitationCreated ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgInvitationCreated ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgInvitationCreated ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgInvitationCreated ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgInvitationCreated ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgInvitationCreated ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgInvitationCreated ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgInvitationCreated ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgInvitationCreated ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgInvitationCreated MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgInvitationCreated prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgInvitationCreated, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgInvitationCreated cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgInvitationCreated result;
    
    private CMsgInvitationCreated PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgInvitationCreated original = result;
        result = new CMsgInvitationCreated();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgInvitationCreated MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgInvitationCreated.Descriptor; }
    }
    
    public override CMsgInvitationCreated DefaultInstanceForType {
      get { return global::CMsgInvitationCreated.DefaultInstance; }
    }
    
    public override CMsgInvitationCreated BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgInvitationCreated) {
        return MergeFrom((CMsgInvitationCreated) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgInvitationCreated other) {
      if (other == global::CMsgInvitationCreated.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasGroupId) {
        GroupId = other.GroupId;
      }
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgInvitationCreatedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgInvitationCreatedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasGroupId = input.ReadUInt64(ref result.groupId_);
            break;
          }
          case 17: {
            result.hasSteamId = input.ReadFixed64(ref result.steamId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasGroupId {
      get { return result.hasGroupId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GroupId {
      get { return result.GroupId; }
      set { SetGroupId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGroupId(ulong value) {
      PrepareBuilder();
      result.hasGroupId = true;
      result.groupId_ = value;
      return this;
    }
    public Builder ClearGroupId() {
      PrepareBuilder();
      result.hasGroupId = false;
      result.groupId_ = 0UL;
      return this;
    }
    
    public bool HasSteamId {
      get { return result.hasSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamId {
      get { return result.SteamId; }
      set { SetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamId(ulong value) {
      PrepareBuilder();
      result.hasSteamId = true;
      result.steamId_ = value;
      return this;
    }
    public Builder ClearSteamId() {
      PrepareBuilder();
      result.hasSteamId = false;
      result.steamId_ = 0;
      return this;
    }
  }
  static CMsgInvitationCreated() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgPartyInviteResponse : pb::GeneratedMessage<CMsgPartyInviteResponse, CMsgPartyInviteResponse.Builder> {
  private CMsgPartyInviteResponse() { }
  private static readonly CMsgPartyInviteResponse defaultInstance = new CMsgPartyInviteResponse().MakeReadOnly();
  private static readonly string[] _cMsgPartyInviteResponseFieldNames = new string[] { "accept", "client_version", "party_id", "team_invite" };
  private static readonly uint[] _cMsgPartyInviteResponseFieldTags = new uint[] { 16, 24, 8, 32 };
  public static CMsgPartyInviteResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgPartyInviteResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgPartyInviteResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgPartyInviteResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgPartyInviteResponse, CMsgPartyInviteResponse.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgPartyInviteResponse__FieldAccessorTable; }
  }
  
  public const int PartyIdFieldNumber = 1;
  private bool hasPartyId;
  private ulong partyId_;
  public bool HasPartyId {
    get { return hasPartyId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong PartyId {
    get { return partyId_; }
  }
  
  public const int AcceptFieldNumber = 2;
  private bool hasAccept;
  private bool accept_;
  public bool HasAccept {
    get { return hasAccept; }
  }
  public bool Accept {
    get { return accept_; }
  }
  
  public const int ClientVersionFieldNumber = 3;
  private bool hasClientVersion;
  private uint clientVersion_;
  public bool HasClientVersion {
    get { return hasClientVersion; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClientVersion {
    get { return clientVersion_; }
  }
  
  public const int TeamInviteFieldNumber = 4;
  private bool hasTeamInvite;
  private uint teamInvite_;
  public bool HasTeamInvite {
    get { return hasTeamInvite; }
  }
  [global::System.CLSCompliant(false)]
  public uint TeamInvite {
    get { return teamInvite_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgPartyInviteResponseFieldNames;
    if (hasPartyId) {
      output.WriteUInt64(1, field_names[2], PartyId);
    }
    if (hasAccept) {
      output.WriteBool(2, field_names[0], Accept);
    }
    if (hasClientVersion) {
      output.WriteUInt32(3, field_names[1], ClientVersion);
    }
    if (hasTeamInvite) {
      output.WriteUInt32(4, field_names[3], TeamInvite);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPartyId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, PartyId);
      }
      if (hasAccept) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, Accept);
      }
      if (hasClientVersion) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, ClientVersion);
      }
      if (hasTeamInvite) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, TeamInvite);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgPartyInviteResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgPartyInviteResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgPartyInviteResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgPartyInviteResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgPartyInviteResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgPartyInviteResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgPartyInviteResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgPartyInviteResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgPartyInviteResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgPartyInviteResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgPartyInviteResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgPartyInviteResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgPartyInviteResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgPartyInviteResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgPartyInviteResponse result;
    
    private CMsgPartyInviteResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgPartyInviteResponse original = result;
        result = new CMsgPartyInviteResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgPartyInviteResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgPartyInviteResponse.Descriptor; }
    }
    
    public override CMsgPartyInviteResponse DefaultInstanceForType {
      get { return global::CMsgPartyInviteResponse.DefaultInstance; }
    }
    
    public override CMsgPartyInviteResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgPartyInviteResponse) {
        return MergeFrom((CMsgPartyInviteResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgPartyInviteResponse other) {
      if (other == global::CMsgPartyInviteResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPartyId) {
        PartyId = other.PartyId;
      }
      if (other.HasAccept) {
        Accept = other.Accept;
      }
      if (other.HasClientVersion) {
        ClientVersion = other.ClientVersion;
      }
      if (other.HasTeamInvite) {
        TeamInvite = other.TeamInvite;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgPartyInviteResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgPartyInviteResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasPartyId = input.ReadUInt64(ref result.partyId_);
            break;
          }
          case 16: {
            result.hasAccept = input.ReadBool(ref result.accept_);
            break;
          }
          case 24: {
            result.hasClientVersion = input.ReadUInt32(ref result.clientVersion_);
            break;
          }
          case 32: {
            result.hasTeamInvite = input.ReadUInt32(ref result.teamInvite_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPartyId {
      get { return result.hasPartyId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong PartyId {
      get { return result.PartyId; }
      set { SetPartyId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPartyId(ulong value) {
      PrepareBuilder();
      result.hasPartyId = true;
      result.partyId_ = value;
      return this;
    }
    public Builder ClearPartyId() {
      PrepareBuilder();
      result.hasPartyId = false;
      result.partyId_ = 0UL;
      return this;
    }
    
    public bool HasAccept {
      get { return result.hasAccept; }
    }
    public bool Accept {
      get { return result.Accept; }
      set { SetAccept(value); }
    }
    public Builder SetAccept(bool value) {
      PrepareBuilder();
      result.hasAccept = true;
      result.accept_ = value;
      return this;
    }
    public Builder ClearAccept() {
      PrepareBuilder();
      result.hasAccept = false;
      result.accept_ = false;
      return this;
    }
    
    public bool HasClientVersion {
      get { return result.hasClientVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClientVersion {
      get { return result.ClientVersion; }
      set { SetClientVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClientVersion(uint value) {
      PrepareBuilder();
      result.hasClientVersion = true;
      result.clientVersion_ = value;
      return this;
    }
    public Builder ClearClientVersion() {
      PrepareBuilder();
      result.hasClientVersion = false;
      result.clientVersion_ = 0;
      return this;
    }
    
    public bool HasTeamInvite {
      get { return result.hasTeamInvite; }
    }
    [global::System.CLSCompliant(false)]
    public uint TeamInvite {
      get { return result.TeamInvite; }
      set { SetTeamInvite(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTeamInvite(uint value) {
      PrepareBuilder();
      result.hasTeamInvite = true;
      result.teamInvite_ = value;
      return this;
    }
    public Builder ClearTeamInvite() {
      PrepareBuilder();
      result.hasTeamInvite = false;
      result.teamInvite_ = 0;
      return this;
    }
  }
  static CMsgPartyInviteResponse() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgKickFromParty : pb::GeneratedMessage<CMsgKickFromParty, CMsgKickFromParty.Builder> {
  private CMsgKickFromParty() { }
  private static readonly CMsgKickFromParty defaultInstance = new CMsgKickFromParty().MakeReadOnly();
  private static readonly string[] _cMsgKickFromPartyFieldNames = new string[] { "steam_id" };
  private static readonly uint[] _cMsgKickFromPartyFieldTags = new uint[] { 9 };
  public static CMsgKickFromParty DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgKickFromParty DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgKickFromParty ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgKickFromParty__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgKickFromParty, CMsgKickFromParty.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgKickFromParty__FieldAccessorTable; }
  }
  
  public const int SteamIdFieldNumber = 1;
  private bool hasSteamId;
  private ulong steamId_;
  public bool HasSteamId {
    get { return hasSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamId {
    get { return steamId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgKickFromPartyFieldNames;
    if (hasSteamId) {
      output.WriteFixed64(1, field_names[0], SteamId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, SteamId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgKickFromParty ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgKickFromParty ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgKickFromParty ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgKickFromParty ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgKickFromParty ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgKickFromParty ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgKickFromParty ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgKickFromParty ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgKickFromParty ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgKickFromParty ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgKickFromParty MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgKickFromParty prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgKickFromParty, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgKickFromParty cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgKickFromParty result;
    
    private CMsgKickFromParty PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgKickFromParty original = result;
        result = new CMsgKickFromParty();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgKickFromParty MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgKickFromParty.Descriptor; }
    }
    
    public override CMsgKickFromParty DefaultInstanceForType {
      get { return global::CMsgKickFromParty.DefaultInstance; }
    }
    
    public override CMsgKickFromParty BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgKickFromParty) {
        return MergeFrom((CMsgKickFromParty) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgKickFromParty other) {
      if (other == global::CMsgKickFromParty.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgKickFromPartyFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgKickFromPartyFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamId = input.ReadFixed64(ref result.steamId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamId {
      get { return result.hasSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamId {
      get { return result.SteamId; }
      set { SetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamId(ulong value) {
      PrepareBuilder();
      result.hasSteamId = true;
      result.steamId_ = value;
      return this;
    }
    public Builder ClearSteamId() {
      PrepareBuilder();
      result.hasSteamId = false;
      result.steamId_ = 0;
      return this;
    }
  }
  static CMsgKickFromParty() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgLeaveParty : pb::GeneratedMessage<CMsgLeaveParty, CMsgLeaveParty.Builder> {
  private CMsgLeaveParty() { }
  private static readonly CMsgLeaveParty defaultInstance = new CMsgLeaveParty().MakeReadOnly();
  private static readonly string[] _cMsgLeavePartyFieldNames = new string[] {  };
  private static readonly uint[] _cMsgLeavePartyFieldTags = new uint[] {  };
  public static CMsgLeaveParty DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgLeaveParty DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgLeaveParty ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgLeaveParty__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgLeaveParty, CMsgLeaveParty.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgLeaveParty__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgLeavePartyFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgLeaveParty ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgLeaveParty ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgLeaveParty ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgLeaveParty ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgLeaveParty ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgLeaveParty ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgLeaveParty ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgLeaveParty ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgLeaveParty ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgLeaveParty ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgLeaveParty MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgLeaveParty prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgLeaveParty, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgLeaveParty cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgLeaveParty result;
    
    private CMsgLeaveParty PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgLeaveParty original = result;
        result = new CMsgLeaveParty();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgLeaveParty MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgLeaveParty.Descriptor; }
    }
    
    public override CMsgLeaveParty DefaultInstanceForType {
      get { return global::CMsgLeaveParty.DefaultInstance; }
    }
    
    public override CMsgLeaveParty BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgLeaveParty) {
        return MergeFrom((CMsgLeaveParty) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgLeaveParty other) {
      if (other == global::CMsgLeaveParty.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgLeavePartyFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgLeavePartyFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static CMsgLeaveParty() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgServerAvailable : pb::GeneratedMessage<CMsgServerAvailable, CMsgServerAvailable.Builder> {
  private CMsgServerAvailable() { }
  private static readonly CMsgServerAvailable defaultInstance = new CMsgServerAvailable().MakeReadOnly();
  private static readonly string[] _cMsgServerAvailableFieldNames = new string[] {  };
  private static readonly uint[] _cMsgServerAvailableFieldTags = new uint[] {  };
  public static CMsgServerAvailable DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgServerAvailable DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgServerAvailable ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgServerAvailable__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgServerAvailable, CMsgServerAvailable.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgServerAvailable__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgServerAvailableFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgServerAvailable ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgServerAvailable ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgServerAvailable ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgServerAvailable ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgServerAvailable ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgServerAvailable ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgServerAvailable ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgServerAvailable ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgServerAvailable ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgServerAvailable ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgServerAvailable MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgServerAvailable prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgServerAvailable, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgServerAvailable cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgServerAvailable result;
    
    private CMsgServerAvailable PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgServerAvailable original = result;
        result = new CMsgServerAvailable();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgServerAvailable MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgServerAvailable.Descriptor; }
    }
    
    public override CMsgServerAvailable DefaultInstanceForType {
      get { return global::CMsgServerAvailable.DefaultInstance; }
    }
    
    public override CMsgServerAvailable BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgServerAvailable) {
        return MergeFrom((CMsgServerAvailable) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgServerAvailable other) {
      if (other == global::CMsgServerAvailable.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgServerAvailableFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgServerAvailableFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static CMsgServerAvailable() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgLANServerAvailable : pb::GeneratedMessage<CMsgLANServerAvailable, CMsgLANServerAvailable.Builder> {
  private CMsgLANServerAvailable() { }
  private static readonly CMsgLANServerAvailable defaultInstance = new CMsgLANServerAvailable().MakeReadOnly();
  private static readonly string[] _cMsgLANServerAvailableFieldNames = new string[] { "lobby_id" };
  private static readonly uint[] _cMsgLANServerAvailableFieldTags = new uint[] { 9 };
  public static CMsgLANServerAvailable DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgLANServerAvailable DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgLANServerAvailable ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgLANServerAvailable__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgLANServerAvailable, CMsgLANServerAvailable.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgLANServerAvailable__FieldAccessorTable; }
  }
  
  public const int LobbyIdFieldNumber = 1;
  private bool hasLobbyId;
  private ulong lobbyId_;
  public bool HasLobbyId {
    get { return hasLobbyId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong LobbyId {
    get { return lobbyId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgLANServerAvailableFieldNames;
    if (hasLobbyId) {
      output.WriteFixed64(1, field_names[0], LobbyId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLobbyId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, LobbyId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgLANServerAvailable ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgLANServerAvailable ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgLANServerAvailable ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgLANServerAvailable ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgLANServerAvailable ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgLANServerAvailable ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgLANServerAvailable ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgLANServerAvailable ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgLANServerAvailable ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgLANServerAvailable ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgLANServerAvailable MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgLANServerAvailable prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgLANServerAvailable, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgLANServerAvailable cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgLANServerAvailable result;
    
    private CMsgLANServerAvailable PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgLANServerAvailable original = result;
        result = new CMsgLANServerAvailable();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgLANServerAvailable MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgLANServerAvailable.Descriptor; }
    }
    
    public override CMsgLANServerAvailable DefaultInstanceForType {
      get { return global::CMsgLANServerAvailable.DefaultInstance; }
    }
    
    public override CMsgLANServerAvailable BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgLANServerAvailable) {
        return MergeFrom((CMsgLANServerAvailable) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgLANServerAvailable other) {
      if (other == global::CMsgLANServerAvailable.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasLobbyId) {
        LobbyId = other.LobbyId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgLANServerAvailableFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgLANServerAvailableFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasLobbyId = input.ReadFixed64(ref result.lobbyId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasLobbyId {
      get { return result.hasLobbyId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong LobbyId {
      get { return result.LobbyId; }
      set { SetLobbyId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetLobbyId(ulong value) {
      PrepareBuilder();
      result.hasLobbyId = true;
      result.lobbyId_ = value;
      return this;
    }
    public Builder ClearLobbyId() {
      PrepareBuilder();
      result.hasLobbyId = false;
      result.lobbyId_ = 0;
      return this;
    }
  }
  static CMsgLANServerAvailable() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOEconGameAccountClient : pb::GeneratedMessage<CSOEconGameAccountClient, CSOEconGameAccountClient.Builder> {
  private CSOEconGameAccountClient() { }
  private static readonly CSOEconGameAccountClient defaultInstance = new CSOEconGameAccountClient().MakeReadOnly();
  private static readonly string[] _cSOEconGameAccountClientFieldNames = new string[] { "additional_backpack_slots", "duel_ban_expiration", "eligible_for_community_market", "eligible_for_online_play", "in_coaches_list", "made_first_purchase", "mission_refuse_allowed", "need_to_choose_most_helpful_friend", "preview_item_def", "trade_ban_expiration", "trial_account" };
  private static readonly uint[] _cSOEconGameAccountClientFieldTags = new uint[] { 8, 61, 80, 24, 40, 72, 88, 32, 64, 53, 16 };
  public static CSOEconGameAccountClient DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOEconGameAccountClient DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOEconGameAccountClient ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOEconGameAccountClient__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOEconGameAccountClient, CSOEconGameAccountClient.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOEconGameAccountClient__FieldAccessorTable; }
  }
  
  public const int AdditionalBackpackSlotsFieldNumber = 1;
  private bool hasAdditionalBackpackSlots;
  private uint additionalBackpackSlots_;
  public bool HasAdditionalBackpackSlots {
    get { return hasAdditionalBackpackSlots; }
  }
  [global::System.CLSCompliant(false)]
  public uint AdditionalBackpackSlots {
    get { return additionalBackpackSlots_; }
  }
  
  public const int TrialAccountFieldNumber = 2;
  private bool hasTrialAccount;
  private bool trialAccount_;
  public bool HasTrialAccount {
    get { return hasTrialAccount; }
  }
  public bool TrialAccount {
    get { return trialAccount_; }
  }
  
  public const int EligibleForOnlinePlayFieldNumber = 3;
  private bool hasEligibleForOnlinePlay;
  private bool eligibleForOnlinePlay_ = true;
  public bool HasEligibleForOnlinePlay {
    get { return hasEligibleForOnlinePlay; }
  }
  public bool EligibleForOnlinePlay {
    get { return eligibleForOnlinePlay_; }
  }
  
  public const int NeedToChooseMostHelpfulFriendFieldNumber = 4;
  private bool hasNeedToChooseMostHelpfulFriend;
  private bool needToChooseMostHelpfulFriend_;
  public bool HasNeedToChooseMostHelpfulFriend {
    get { return hasNeedToChooseMostHelpfulFriend; }
  }
  public bool NeedToChooseMostHelpfulFriend {
    get { return needToChooseMostHelpfulFriend_; }
  }
  
  public const int InCoachesListFieldNumber = 5;
  private bool hasInCoachesList;
  private bool inCoachesList_;
  public bool HasInCoachesList {
    get { return hasInCoachesList; }
  }
  public bool InCoachesList {
    get { return inCoachesList_; }
  }
  
  public const int TradeBanExpirationFieldNumber = 6;
  private bool hasTradeBanExpiration;
  private uint tradeBanExpiration_;
  public bool HasTradeBanExpiration {
    get { return hasTradeBanExpiration; }
  }
  [global::System.CLSCompliant(false)]
  public uint TradeBanExpiration {
    get { return tradeBanExpiration_; }
  }
  
  public const int DuelBanExpirationFieldNumber = 7;
  private bool hasDuelBanExpiration;
  private uint duelBanExpiration_;
  public bool HasDuelBanExpiration {
    get { return hasDuelBanExpiration; }
  }
  [global::System.CLSCompliant(false)]
  public uint DuelBanExpiration {
    get { return duelBanExpiration_; }
  }
  
  public const int PreviewItemDefFieldNumber = 8;
  private bool hasPreviewItemDef;
  private uint previewItemDef_;
  public bool HasPreviewItemDef {
    get { return hasPreviewItemDef; }
  }
  [global::System.CLSCompliant(false)]
  public uint PreviewItemDef {
    get { return previewItemDef_; }
  }
  
  public const int MadeFirstPurchaseFieldNumber = 9;
  private bool hasMadeFirstPurchase;
  private bool madeFirstPurchase_;
  public bool HasMadeFirstPurchase {
    get { return hasMadeFirstPurchase; }
  }
  public bool MadeFirstPurchase {
    get { return madeFirstPurchase_; }
  }
  
  public const int EligibleForCommunityMarketFieldNumber = 10;
  private bool hasEligibleForCommunityMarket;
  private bool eligibleForCommunityMarket_;
  public bool HasEligibleForCommunityMarket {
    get { return hasEligibleForCommunityMarket; }
  }
  public bool EligibleForCommunityMarket {
    get { return eligibleForCommunityMarket_; }
  }
  
  public const int MissionRefuseAllowedFieldNumber = 11;
  private bool hasMissionRefuseAllowed;
  private uint missionRefuseAllowed_;
  public bool HasMissionRefuseAllowed {
    get { return hasMissionRefuseAllowed; }
  }
  [global::System.CLSCompliant(false)]
  public uint MissionRefuseAllowed {
    get { return missionRefuseAllowed_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOEconGameAccountClientFieldNames;
    if (hasAdditionalBackpackSlots) {
      output.WriteUInt32(1, field_names[0], AdditionalBackpackSlots);
    }
    if (hasTrialAccount) {
      output.WriteBool(2, field_names[10], TrialAccount);
    }
    if (hasEligibleForOnlinePlay) {
      output.WriteBool(3, field_names[3], EligibleForOnlinePlay);
    }
    if (hasNeedToChooseMostHelpfulFriend) {
      output.WriteBool(4, field_names[7], NeedToChooseMostHelpfulFriend);
    }
    if (hasInCoachesList) {
      output.WriteBool(5, field_names[4], InCoachesList);
    }
    if (hasTradeBanExpiration) {
      output.WriteFixed32(6, field_names[9], TradeBanExpiration);
    }
    if (hasDuelBanExpiration) {
      output.WriteFixed32(7, field_names[1], DuelBanExpiration);
    }
    if (hasPreviewItemDef) {
      output.WriteUInt32(8, field_names[8], PreviewItemDef);
    }
    if (hasMadeFirstPurchase) {
      output.WriteBool(9, field_names[5], MadeFirstPurchase);
    }
    if (hasEligibleForCommunityMarket) {
      output.WriteBool(10, field_names[2], EligibleForCommunityMarket);
    }
    if (hasMissionRefuseAllowed) {
      output.WriteUInt32(11, field_names[6], MissionRefuseAllowed);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAdditionalBackpackSlots) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, AdditionalBackpackSlots);
      }
      if (hasTrialAccount) {
        size += pb::CodedOutputStream.ComputeBoolSize(2, TrialAccount);
      }
      if (hasEligibleForOnlinePlay) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, EligibleForOnlinePlay);
      }
      if (hasNeedToChooseMostHelpfulFriend) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, NeedToChooseMostHelpfulFriend);
      }
      if (hasInCoachesList) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, InCoachesList);
      }
      if (hasTradeBanExpiration) {
        size += pb::CodedOutputStream.ComputeFixed32Size(6, TradeBanExpiration);
      }
      if (hasDuelBanExpiration) {
        size += pb::CodedOutputStream.ComputeFixed32Size(7, DuelBanExpiration);
      }
      if (hasPreviewItemDef) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, PreviewItemDef);
      }
      if (hasMadeFirstPurchase) {
        size += pb::CodedOutputStream.ComputeBoolSize(9, MadeFirstPurchase);
      }
      if (hasEligibleForCommunityMarket) {
        size += pb::CodedOutputStream.ComputeBoolSize(10, EligibleForCommunityMarket);
      }
      if (hasMissionRefuseAllowed) {
        size += pb::CodedOutputStream.ComputeUInt32Size(11, MissionRefuseAllowed);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOEconGameAccountClient ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconGameAccountClient ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconGameAccountClient ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconGameAccountClient ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconGameAccountClient ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconGameAccountClient ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOEconGameAccountClient ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOEconGameAccountClient ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOEconGameAccountClient ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconGameAccountClient ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOEconGameAccountClient MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOEconGameAccountClient prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOEconGameAccountClient, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOEconGameAccountClient cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOEconGameAccountClient result;
    
    private CSOEconGameAccountClient PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOEconGameAccountClient original = result;
        result = new CSOEconGameAccountClient();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOEconGameAccountClient MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOEconGameAccountClient.Descriptor; }
    }
    
    public override CSOEconGameAccountClient DefaultInstanceForType {
      get { return global::CSOEconGameAccountClient.DefaultInstance; }
    }
    
    public override CSOEconGameAccountClient BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOEconGameAccountClient) {
        return MergeFrom((CSOEconGameAccountClient) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOEconGameAccountClient other) {
      if (other == global::CSOEconGameAccountClient.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAdditionalBackpackSlots) {
        AdditionalBackpackSlots = other.AdditionalBackpackSlots;
      }
      if (other.HasTrialAccount) {
        TrialAccount = other.TrialAccount;
      }
      if (other.HasEligibleForOnlinePlay) {
        EligibleForOnlinePlay = other.EligibleForOnlinePlay;
      }
      if (other.HasNeedToChooseMostHelpfulFriend) {
        NeedToChooseMostHelpfulFriend = other.NeedToChooseMostHelpfulFriend;
      }
      if (other.HasInCoachesList) {
        InCoachesList = other.InCoachesList;
      }
      if (other.HasTradeBanExpiration) {
        TradeBanExpiration = other.TradeBanExpiration;
      }
      if (other.HasDuelBanExpiration) {
        DuelBanExpiration = other.DuelBanExpiration;
      }
      if (other.HasPreviewItemDef) {
        PreviewItemDef = other.PreviewItemDef;
      }
      if (other.HasMadeFirstPurchase) {
        MadeFirstPurchase = other.MadeFirstPurchase;
      }
      if (other.HasEligibleForCommunityMarket) {
        EligibleForCommunityMarket = other.EligibleForCommunityMarket;
      }
      if (other.HasMissionRefuseAllowed) {
        MissionRefuseAllowed = other.MissionRefuseAllowed;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOEconGameAccountClientFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOEconGameAccountClientFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAdditionalBackpackSlots = input.ReadUInt32(ref result.additionalBackpackSlots_);
            break;
          }
          case 16: {
            result.hasTrialAccount = input.ReadBool(ref result.trialAccount_);
            break;
          }
          case 24: {
            result.hasEligibleForOnlinePlay = input.ReadBool(ref result.eligibleForOnlinePlay_);
            break;
          }
          case 32: {
            result.hasNeedToChooseMostHelpfulFriend = input.ReadBool(ref result.needToChooseMostHelpfulFriend_);
            break;
          }
          case 40: {
            result.hasInCoachesList = input.ReadBool(ref result.inCoachesList_);
            break;
          }
          case 53: {
            result.hasTradeBanExpiration = input.ReadFixed32(ref result.tradeBanExpiration_);
            break;
          }
          case 61: {
            result.hasDuelBanExpiration = input.ReadFixed32(ref result.duelBanExpiration_);
            break;
          }
          case 64: {
            result.hasPreviewItemDef = input.ReadUInt32(ref result.previewItemDef_);
            break;
          }
          case 72: {
            result.hasMadeFirstPurchase = input.ReadBool(ref result.madeFirstPurchase_);
            break;
          }
          case 80: {
            result.hasEligibleForCommunityMarket = input.ReadBool(ref result.eligibleForCommunityMarket_);
            break;
          }
          case 88: {
            result.hasMissionRefuseAllowed = input.ReadUInt32(ref result.missionRefuseAllowed_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAdditionalBackpackSlots {
      get { return result.hasAdditionalBackpackSlots; }
    }
    [global::System.CLSCompliant(false)]
    public uint AdditionalBackpackSlots {
      get { return result.AdditionalBackpackSlots; }
      set { SetAdditionalBackpackSlots(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAdditionalBackpackSlots(uint value) {
      PrepareBuilder();
      result.hasAdditionalBackpackSlots = true;
      result.additionalBackpackSlots_ = value;
      return this;
    }
    public Builder ClearAdditionalBackpackSlots() {
      PrepareBuilder();
      result.hasAdditionalBackpackSlots = false;
      result.additionalBackpackSlots_ = 0;
      return this;
    }
    
    public bool HasTrialAccount {
      get { return result.hasTrialAccount; }
    }
    public bool TrialAccount {
      get { return result.TrialAccount; }
      set { SetTrialAccount(value); }
    }
    public Builder SetTrialAccount(bool value) {
      PrepareBuilder();
      result.hasTrialAccount = true;
      result.trialAccount_ = value;
      return this;
    }
    public Builder ClearTrialAccount() {
      PrepareBuilder();
      result.hasTrialAccount = false;
      result.trialAccount_ = false;
      return this;
    }
    
    public bool HasEligibleForOnlinePlay {
      get { return result.hasEligibleForOnlinePlay; }
    }
    public bool EligibleForOnlinePlay {
      get { return result.EligibleForOnlinePlay; }
      set { SetEligibleForOnlinePlay(value); }
    }
    public Builder SetEligibleForOnlinePlay(bool value) {
      PrepareBuilder();
      result.hasEligibleForOnlinePlay = true;
      result.eligibleForOnlinePlay_ = value;
      return this;
    }
    public Builder ClearEligibleForOnlinePlay() {
      PrepareBuilder();
      result.hasEligibleForOnlinePlay = false;
      result.eligibleForOnlinePlay_ = true;
      return this;
    }
    
    public bool HasNeedToChooseMostHelpfulFriend {
      get { return result.hasNeedToChooseMostHelpfulFriend; }
    }
    public bool NeedToChooseMostHelpfulFriend {
      get { return result.NeedToChooseMostHelpfulFriend; }
      set { SetNeedToChooseMostHelpfulFriend(value); }
    }
    public Builder SetNeedToChooseMostHelpfulFriend(bool value) {
      PrepareBuilder();
      result.hasNeedToChooseMostHelpfulFriend = true;
      result.needToChooseMostHelpfulFriend_ = value;
      return this;
    }
    public Builder ClearNeedToChooseMostHelpfulFriend() {
      PrepareBuilder();
      result.hasNeedToChooseMostHelpfulFriend = false;
      result.needToChooseMostHelpfulFriend_ = false;
      return this;
    }
    
    public bool HasInCoachesList {
      get { return result.hasInCoachesList; }
    }
    public bool InCoachesList {
      get { return result.InCoachesList; }
      set { SetInCoachesList(value); }
    }
    public Builder SetInCoachesList(bool value) {
      PrepareBuilder();
      result.hasInCoachesList = true;
      result.inCoachesList_ = value;
      return this;
    }
    public Builder ClearInCoachesList() {
      PrepareBuilder();
      result.hasInCoachesList = false;
      result.inCoachesList_ = false;
      return this;
    }
    
    public bool HasTradeBanExpiration {
      get { return result.hasTradeBanExpiration; }
    }
    [global::System.CLSCompliant(false)]
    public uint TradeBanExpiration {
      get { return result.TradeBanExpiration; }
      set { SetTradeBanExpiration(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTradeBanExpiration(uint value) {
      PrepareBuilder();
      result.hasTradeBanExpiration = true;
      result.tradeBanExpiration_ = value;
      return this;
    }
    public Builder ClearTradeBanExpiration() {
      PrepareBuilder();
      result.hasTradeBanExpiration = false;
      result.tradeBanExpiration_ = 0;
      return this;
    }
    
    public bool HasDuelBanExpiration {
      get { return result.hasDuelBanExpiration; }
    }
    [global::System.CLSCompliant(false)]
    public uint DuelBanExpiration {
      get { return result.DuelBanExpiration; }
      set { SetDuelBanExpiration(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDuelBanExpiration(uint value) {
      PrepareBuilder();
      result.hasDuelBanExpiration = true;
      result.duelBanExpiration_ = value;
      return this;
    }
    public Builder ClearDuelBanExpiration() {
      PrepareBuilder();
      result.hasDuelBanExpiration = false;
      result.duelBanExpiration_ = 0;
      return this;
    }
    
    public bool HasPreviewItemDef {
      get { return result.hasPreviewItemDef; }
    }
    [global::System.CLSCompliant(false)]
    public uint PreviewItemDef {
      get { return result.PreviewItemDef; }
      set { SetPreviewItemDef(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPreviewItemDef(uint value) {
      PrepareBuilder();
      result.hasPreviewItemDef = true;
      result.previewItemDef_ = value;
      return this;
    }
    public Builder ClearPreviewItemDef() {
      PrepareBuilder();
      result.hasPreviewItemDef = false;
      result.previewItemDef_ = 0;
      return this;
    }
    
    public bool HasMadeFirstPurchase {
      get { return result.hasMadeFirstPurchase; }
    }
    public bool MadeFirstPurchase {
      get { return result.MadeFirstPurchase; }
      set { SetMadeFirstPurchase(value); }
    }
    public Builder SetMadeFirstPurchase(bool value) {
      PrepareBuilder();
      result.hasMadeFirstPurchase = true;
      result.madeFirstPurchase_ = value;
      return this;
    }
    public Builder ClearMadeFirstPurchase() {
      PrepareBuilder();
      result.hasMadeFirstPurchase = false;
      result.madeFirstPurchase_ = false;
      return this;
    }
    
    public bool HasEligibleForCommunityMarket {
      get { return result.hasEligibleForCommunityMarket; }
    }
    public bool EligibleForCommunityMarket {
      get { return result.EligibleForCommunityMarket; }
      set { SetEligibleForCommunityMarket(value); }
    }
    public Builder SetEligibleForCommunityMarket(bool value) {
      PrepareBuilder();
      result.hasEligibleForCommunityMarket = true;
      result.eligibleForCommunityMarket_ = value;
      return this;
    }
    public Builder ClearEligibleForCommunityMarket() {
      PrepareBuilder();
      result.hasEligibleForCommunityMarket = false;
      result.eligibleForCommunityMarket_ = false;
      return this;
    }
    
    public bool HasMissionRefuseAllowed {
      get { return result.hasMissionRefuseAllowed; }
    }
    [global::System.CLSCompliant(false)]
    public uint MissionRefuseAllowed {
      get { return result.MissionRefuseAllowed; }
      set { SetMissionRefuseAllowed(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetMissionRefuseAllowed(uint value) {
      PrepareBuilder();
      result.hasMissionRefuseAllowed = true;
      result.missionRefuseAllowed_ = value;
      return this;
    }
    public Builder ClearMissionRefuseAllowed() {
      PrepareBuilder();
      result.hasMissionRefuseAllowed = false;
      result.missionRefuseAllowed_ = 0;
      return this;
    }
  }
  static CSOEconGameAccountClient() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOItemCriteriaCondition : pb::GeneratedMessage<CSOItemCriteriaCondition, CSOItemCriteriaCondition.Builder> {
  private CSOItemCriteriaCondition() { }
  private static readonly CSOItemCriteriaCondition defaultInstance = new CSOItemCriteriaCondition().MakeReadOnly();
  private static readonly string[] _cSOItemCriteriaConditionFieldNames = new string[] { "field", "float_value", "op", "required", "string_value" };
  private static readonly uint[] _cSOItemCriteriaConditionFieldTags = new uint[] { 18, 37, 8, 24, 42 };
  public static CSOItemCriteriaCondition DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOItemCriteriaCondition DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOItemCriteriaCondition ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOItemCriteriaCondition__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOItemCriteriaCondition, CSOItemCriteriaCondition.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOItemCriteriaCondition__FieldAccessorTable; }
  }
  
  public const int OpFieldNumber = 1;
  private bool hasOp;
  private int op_;
  public bool HasOp {
    get { return hasOp; }
  }
  public int Op {
    get { return op_; }
  }
  
  public const int FieldFieldNumber = 2;
  private bool hasField;
  private string field_ = "";
  public bool HasField {
    get { return hasField; }
  }
  public string Field {
    get { return field_; }
  }
  
  public const int RequiredFieldNumber = 3;
  private bool hasRequired;
  private bool required_;
  public bool HasRequired {
    get { return hasRequired; }
  }
  public bool Required {
    get { return required_; }
  }
  
  public const int FloatValueFieldNumber = 4;
  private bool hasFloatValue;
  private float floatValue_;
  public bool HasFloatValue {
    get { return hasFloatValue; }
  }
  public float FloatValue {
    get { return floatValue_; }
  }
  
  public const int StringValueFieldNumber = 5;
  private bool hasStringValue;
  private string stringValue_ = "";
  public bool HasStringValue {
    get { return hasStringValue; }
  }
  public string StringValue {
    get { return stringValue_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOItemCriteriaConditionFieldNames;
    if (hasOp) {
      output.WriteInt32(1, field_names[2], Op);
    }
    if (hasField) {
      output.WriteString(2, field_names[0], Field);
    }
    if (hasRequired) {
      output.WriteBool(3, field_names[3], Required);
    }
    if (hasFloatValue) {
      output.WriteFloat(4, field_names[1], FloatValue);
    }
    if (hasStringValue) {
      output.WriteString(5, field_names[4], StringValue);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasOp) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Op);
      }
      if (hasField) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Field);
      }
      if (hasRequired) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, Required);
      }
      if (hasFloatValue) {
        size += pb::CodedOutputStream.ComputeFloatSize(4, FloatValue);
      }
      if (hasStringValue) {
        size += pb::CodedOutputStream.ComputeStringSize(5, StringValue);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOItemCriteriaCondition ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOItemCriteriaCondition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOItemCriteriaCondition ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOItemCriteriaCondition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOItemCriteriaCondition ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOItemCriteriaCondition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOItemCriteriaCondition ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOItemCriteriaCondition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOItemCriteriaCondition ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOItemCriteriaCondition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOItemCriteriaCondition MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOItemCriteriaCondition prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOItemCriteriaCondition, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOItemCriteriaCondition cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOItemCriteriaCondition result;
    
    private CSOItemCriteriaCondition PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOItemCriteriaCondition original = result;
        result = new CSOItemCriteriaCondition();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOItemCriteriaCondition MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOItemCriteriaCondition.Descriptor; }
    }
    
    public override CSOItemCriteriaCondition DefaultInstanceForType {
      get { return global::CSOItemCriteriaCondition.DefaultInstance; }
    }
    
    public override CSOItemCriteriaCondition BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOItemCriteriaCondition) {
        return MergeFrom((CSOItemCriteriaCondition) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOItemCriteriaCondition other) {
      if (other == global::CSOItemCriteriaCondition.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasOp) {
        Op = other.Op;
      }
      if (other.HasField) {
        Field = other.Field;
      }
      if (other.HasRequired) {
        Required = other.Required;
      }
      if (other.HasFloatValue) {
        FloatValue = other.FloatValue;
      }
      if (other.HasStringValue) {
        StringValue = other.StringValue;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOItemCriteriaConditionFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOItemCriteriaConditionFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasOp = input.ReadInt32(ref result.op_);
            break;
          }
          case 18: {
            result.hasField = input.ReadString(ref result.field_);
            break;
          }
          case 24: {
            result.hasRequired = input.ReadBool(ref result.required_);
            break;
          }
          case 37: {
            result.hasFloatValue = input.ReadFloat(ref result.floatValue_);
            break;
          }
          case 42: {
            result.hasStringValue = input.ReadString(ref result.stringValue_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasOp {
      get { return result.hasOp; }
    }
    public int Op {
      get { return result.Op; }
      set { SetOp(value); }
    }
    public Builder SetOp(int value) {
      PrepareBuilder();
      result.hasOp = true;
      result.op_ = value;
      return this;
    }
    public Builder ClearOp() {
      PrepareBuilder();
      result.hasOp = false;
      result.op_ = 0;
      return this;
    }
    
    public bool HasField {
      get { return result.hasField; }
    }
    public string Field {
      get { return result.Field; }
      set { SetField(value); }
    }
    public Builder SetField(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasField = true;
      result.field_ = value;
      return this;
    }
    public Builder ClearField() {
      PrepareBuilder();
      result.hasField = false;
      result.field_ = "";
      return this;
    }
    
    public bool HasRequired {
      get { return result.hasRequired; }
    }
    public bool Required {
      get { return result.Required; }
      set { SetRequired(value); }
    }
    public Builder SetRequired(bool value) {
      PrepareBuilder();
      result.hasRequired = true;
      result.required_ = value;
      return this;
    }
    public Builder ClearRequired() {
      PrepareBuilder();
      result.hasRequired = false;
      result.required_ = false;
      return this;
    }
    
    public bool HasFloatValue {
      get { return result.hasFloatValue; }
    }
    public float FloatValue {
      get { return result.FloatValue; }
      set { SetFloatValue(value); }
    }
    public Builder SetFloatValue(float value) {
      PrepareBuilder();
      result.hasFloatValue = true;
      result.floatValue_ = value;
      return this;
    }
    public Builder ClearFloatValue() {
      PrepareBuilder();
      result.hasFloatValue = false;
      result.floatValue_ = 0F;
      return this;
    }
    
    public bool HasStringValue {
      get { return result.hasStringValue; }
    }
    public string StringValue {
      get { return result.StringValue; }
      set { SetStringValue(value); }
    }
    public Builder SetStringValue(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasStringValue = true;
      result.stringValue_ = value;
      return this;
    }
    public Builder ClearStringValue() {
      PrepareBuilder();
      result.hasStringValue = false;
      result.stringValue_ = "";
      return this;
    }
  }
  static CSOItemCriteriaCondition() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOItemCriteria : pb::GeneratedMessage<CSOItemCriteria, CSOItemCriteria.Builder> {
  private CSOItemCriteria() { }
  private static readonly CSOItemCriteria defaultInstance = new CSOItemCriteria().MakeReadOnly();
  private static readonly string[] _cSOItemCriteriaFieldNames = new string[] { "conditions", "ignore_enabled_flag", "initial_inventory", "initial_quantity", "item_level", "item_level_set", "item_quality", "item_quality_set", "item_rarity", "item_rarity_set", "recent_only" };
  private static readonly uint[] _cSOItemCriteriaFieldTags = new uint[] { 74, 64, 40, 48, 8, 24, 16, 32, 80, 88, 96 };
  public static CSOItemCriteria DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOItemCriteria DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOItemCriteria ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOItemCriteria__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOItemCriteria, CSOItemCriteria.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOItemCriteria__FieldAccessorTable; }
  }
  
  public const int ItemLevelFieldNumber = 1;
  private bool hasItemLevel;
  private uint itemLevel_;
  public bool HasItemLevel {
    get { return hasItemLevel; }
  }
  [global::System.CLSCompliant(false)]
  public uint ItemLevel {
    get { return itemLevel_; }
  }
  
  public const int ItemQualityFieldNumber = 2;
  private bool hasItemQuality;
  private int itemQuality_;
  public bool HasItemQuality {
    get { return hasItemQuality; }
  }
  public int ItemQuality {
    get { return itemQuality_; }
  }
  
  public const int ItemLevelSetFieldNumber = 3;
  private bool hasItemLevelSet;
  private bool itemLevelSet_;
  public bool HasItemLevelSet {
    get { return hasItemLevelSet; }
  }
  public bool ItemLevelSet {
    get { return itemLevelSet_; }
  }
  
  public const int ItemQualitySetFieldNumber = 4;
  private bool hasItemQualitySet;
  private bool itemQualitySet_;
  public bool HasItemQualitySet {
    get { return hasItemQualitySet; }
  }
  public bool ItemQualitySet {
    get { return itemQualitySet_; }
  }
  
  public const int InitialInventoryFieldNumber = 5;
  private bool hasInitialInventory;
  private uint initialInventory_;
  public bool HasInitialInventory {
    get { return hasInitialInventory; }
  }
  [global::System.CLSCompliant(false)]
  public uint InitialInventory {
    get { return initialInventory_; }
  }
  
  public const int InitialQuantityFieldNumber = 6;
  private bool hasInitialQuantity;
  private uint initialQuantity_;
  public bool HasInitialQuantity {
    get { return hasInitialQuantity; }
  }
  [global::System.CLSCompliant(false)]
  public uint InitialQuantity {
    get { return initialQuantity_; }
  }
  
  public const int IgnoreEnabledFlagFieldNumber = 8;
  private bool hasIgnoreEnabledFlag;
  private bool ignoreEnabledFlag_;
  public bool HasIgnoreEnabledFlag {
    get { return hasIgnoreEnabledFlag; }
  }
  public bool IgnoreEnabledFlag {
    get { return ignoreEnabledFlag_; }
  }
  
  public const int ConditionsFieldNumber = 9;
  private pbc::PopsicleList<global::CSOItemCriteriaCondition> conditions_ = new pbc::PopsicleList<global::CSOItemCriteriaCondition>();
  public scg::IList<global::CSOItemCriteriaCondition> ConditionsList {
    get { return conditions_; }
  }
  public int ConditionsCount {
    get { return conditions_.Count; }
  }
  public global::CSOItemCriteriaCondition GetConditions(int index) {
    return conditions_[index];
  }
  
  public const int ItemRarityFieldNumber = 10;
  private bool hasItemRarity;
  private int itemRarity_;
  public bool HasItemRarity {
    get { return hasItemRarity; }
  }
  public int ItemRarity {
    get { return itemRarity_; }
  }
  
  public const int ItemRaritySetFieldNumber = 11;
  private bool hasItemRaritySet;
  private bool itemRaritySet_;
  public bool HasItemRaritySet {
    get { return hasItemRaritySet; }
  }
  public bool ItemRaritySet {
    get { return itemRaritySet_; }
  }
  
  public const int RecentOnlyFieldNumber = 12;
  private bool hasRecentOnly;
  private bool recentOnly_;
  public bool HasRecentOnly {
    get { return hasRecentOnly; }
  }
  public bool RecentOnly {
    get { return recentOnly_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOItemCriteriaFieldNames;
    if (hasItemLevel) {
      output.WriteUInt32(1, field_names[4], ItemLevel);
    }
    if (hasItemQuality) {
      output.WriteInt32(2, field_names[6], ItemQuality);
    }
    if (hasItemLevelSet) {
      output.WriteBool(3, field_names[5], ItemLevelSet);
    }
    if (hasItemQualitySet) {
      output.WriteBool(4, field_names[7], ItemQualitySet);
    }
    if (hasInitialInventory) {
      output.WriteUInt32(5, field_names[2], InitialInventory);
    }
    if (hasInitialQuantity) {
      output.WriteUInt32(6, field_names[3], InitialQuantity);
    }
    if (hasIgnoreEnabledFlag) {
      output.WriteBool(8, field_names[1], IgnoreEnabledFlag);
    }
    if (conditions_.Count > 0) {
      output.WriteMessageArray(9, field_names[0], conditions_);
    }
    if (hasItemRarity) {
      output.WriteInt32(10, field_names[8], ItemRarity);
    }
    if (hasItemRaritySet) {
      output.WriteBool(11, field_names[9], ItemRaritySet);
    }
    if (hasRecentOnly) {
      output.WriteBool(12, field_names[10], RecentOnly);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasItemLevel) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, ItemLevel);
      }
      if (hasItemQuality) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, ItemQuality);
      }
      if (hasItemLevelSet) {
        size += pb::CodedOutputStream.ComputeBoolSize(3, ItemLevelSet);
      }
      if (hasItemQualitySet) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, ItemQualitySet);
      }
      if (hasInitialInventory) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, InitialInventory);
      }
      if (hasInitialQuantity) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, InitialQuantity);
      }
      if (hasIgnoreEnabledFlag) {
        size += pb::CodedOutputStream.ComputeBoolSize(8, IgnoreEnabledFlag);
      }
      foreach (global::CSOItemCriteriaCondition element in ConditionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, element);
      }
      if (hasItemRarity) {
        size += pb::CodedOutputStream.ComputeInt32Size(10, ItemRarity);
      }
      if (hasItemRaritySet) {
        size += pb::CodedOutputStream.ComputeBoolSize(11, ItemRaritySet);
      }
      if (hasRecentOnly) {
        size += pb::CodedOutputStream.ComputeBoolSize(12, RecentOnly);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOItemCriteria ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOItemCriteria ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOItemCriteria ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOItemCriteria ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOItemCriteria ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOItemCriteria ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOItemCriteria ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOItemCriteria ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOItemCriteria ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOItemCriteria ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOItemCriteria MakeReadOnly() {
    conditions_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOItemCriteria prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOItemCriteria, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOItemCriteria cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOItemCriteria result;
    
    private CSOItemCriteria PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOItemCriteria original = result;
        result = new CSOItemCriteria();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOItemCriteria MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOItemCriteria.Descriptor; }
    }
    
    public override CSOItemCriteria DefaultInstanceForType {
      get { return global::CSOItemCriteria.DefaultInstance; }
    }
    
    public override CSOItemCriteria BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOItemCriteria) {
        return MergeFrom((CSOItemCriteria) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOItemCriteria other) {
      if (other == global::CSOItemCriteria.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemLevel) {
        ItemLevel = other.ItemLevel;
      }
      if (other.HasItemQuality) {
        ItemQuality = other.ItemQuality;
      }
      if (other.HasItemLevelSet) {
        ItemLevelSet = other.ItemLevelSet;
      }
      if (other.HasItemQualitySet) {
        ItemQualitySet = other.ItemQualitySet;
      }
      if (other.HasInitialInventory) {
        InitialInventory = other.InitialInventory;
      }
      if (other.HasInitialQuantity) {
        InitialQuantity = other.InitialQuantity;
      }
      if (other.HasIgnoreEnabledFlag) {
        IgnoreEnabledFlag = other.IgnoreEnabledFlag;
      }
      if (other.conditions_.Count != 0) {
        result.conditions_.Add(other.conditions_);
      }
      if (other.HasItemRarity) {
        ItemRarity = other.ItemRarity;
      }
      if (other.HasItemRaritySet) {
        ItemRaritySet = other.ItemRaritySet;
      }
      if (other.HasRecentOnly) {
        RecentOnly = other.RecentOnly;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOItemCriteriaFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOItemCriteriaFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasItemLevel = input.ReadUInt32(ref result.itemLevel_);
            break;
          }
          case 16: {
            result.hasItemQuality = input.ReadInt32(ref result.itemQuality_);
            break;
          }
          case 24: {
            result.hasItemLevelSet = input.ReadBool(ref result.itemLevelSet_);
            break;
          }
          case 32: {
            result.hasItemQualitySet = input.ReadBool(ref result.itemQualitySet_);
            break;
          }
          case 40: {
            result.hasInitialInventory = input.ReadUInt32(ref result.initialInventory_);
            break;
          }
          case 48: {
            result.hasInitialQuantity = input.ReadUInt32(ref result.initialQuantity_);
            break;
          }
          case 64: {
            result.hasIgnoreEnabledFlag = input.ReadBool(ref result.ignoreEnabledFlag_);
            break;
          }
          case 74: {
            input.ReadMessageArray(tag, field_name, result.conditions_, global::CSOItemCriteriaCondition.DefaultInstance, extensionRegistry);
            break;
          }
          case 80: {
            result.hasItemRarity = input.ReadInt32(ref result.itemRarity_);
            break;
          }
          case 88: {
            result.hasItemRaritySet = input.ReadBool(ref result.itemRaritySet_);
            break;
          }
          case 96: {
            result.hasRecentOnly = input.ReadBool(ref result.recentOnly_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemLevel {
      get { return result.hasItemLevel; }
    }
    [global::System.CLSCompliant(false)]
    public uint ItemLevel {
      get { return result.ItemLevel; }
      set { SetItemLevel(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemLevel(uint value) {
      PrepareBuilder();
      result.hasItemLevel = true;
      result.itemLevel_ = value;
      return this;
    }
    public Builder ClearItemLevel() {
      PrepareBuilder();
      result.hasItemLevel = false;
      result.itemLevel_ = 0;
      return this;
    }
    
    public bool HasItemQuality {
      get { return result.hasItemQuality; }
    }
    public int ItemQuality {
      get { return result.ItemQuality; }
      set { SetItemQuality(value); }
    }
    public Builder SetItemQuality(int value) {
      PrepareBuilder();
      result.hasItemQuality = true;
      result.itemQuality_ = value;
      return this;
    }
    public Builder ClearItemQuality() {
      PrepareBuilder();
      result.hasItemQuality = false;
      result.itemQuality_ = 0;
      return this;
    }
    
    public bool HasItemLevelSet {
      get { return result.hasItemLevelSet; }
    }
    public bool ItemLevelSet {
      get { return result.ItemLevelSet; }
      set { SetItemLevelSet(value); }
    }
    public Builder SetItemLevelSet(bool value) {
      PrepareBuilder();
      result.hasItemLevelSet = true;
      result.itemLevelSet_ = value;
      return this;
    }
    public Builder ClearItemLevelSet() {
      PrepareBuilder();
      result.hasItemLevelSet = false;
      result.itemLevelSet_ = false;
      return this;
    }
    
    public bool HasItemQualitySet {
      get { return result.hasItemQualitySet; }
    }
    public bool ItemQualitySet {
      get { return result.ItemQualitySet; }
      set { SetItemQualitySet(value); }
    }
    public Builder SetItemQualitySet(bool value) {
      PrepareBuilder();
      result.hasItemQualitySet = true;
      result.itemQualitySet_ = value;
      return this;
    }
    public Builder ClearItemQualitySet() {
      PrepareBuilder();
      result.hasItemQualitySet = false;
      result.itemQualitySet_ = false;
      return this;
    }
    
    public bool HasInitialInventory {
      get { return result.hasInitialInventory; }
    }
    [global::System.CLSCompliant(false)]
    public uint InitialInventory {
      get { return result.InitialInventory; }
      set { SetInitialInventory(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetInitialInventory(uint value) {
      PrepareBuilder();
      result.hasInitialInventory = true;
      result.initialInventory_ = value;
      return this;
    }
    public Builder ClearInitialInventory() {
      PrepareBuilder();
      result.hasInitialInventory = false;
      result.initialInventory_ = 0;
      return this;
    }
    
    public bool HasInitialQuantity {
      get { return result.hasInitialQuantity; }
    }
    [global::System.CLSCompliant(false)]
    public uint InitialQuantity {
      get { return result.InitialQuantity; }
      set { SetInitialQuantity(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetInitialQuantity(uint value) {
      PrepareBuilder();
      result.hasInitialQuantity = true;
      result.initialQuantity_ = value;
      return this;
    }
    public Builder ClearInitialQuantity() {
      PrepareBuilder();
      result.hasInitialQuantity = false;
      result.initialQuantity_ = 0;
      return this;
    }
    
    public bool HasIgnoreEnabledFlag {
      get { return result.hasIgnoreEnabledFlag; }
    }
    public bool IgnoreEnabledFlag {
      get { return result.IgnoreEnabledFlag; }
      set { SetIgnoreEnabledFlag(value); }
    }
    public Builder SetIgnoreEnabledFlag(bool value) {
      PrepareBuilder();
      result.hasIgnoreEnabledFlag = true;
      result.ignoreEnabledFlag_ = value;
      return this;
    }
    public Builder ClearIgnoreEnabledFlag() {
      PrepareBuilder();
      result.hasIgnoreEnabledFlag = false;
      result.ignoreEnabledFlag_ = false;
      return this;
    }
    
    public pbc::IPopsicleList<global::CSOItemCriteriaCondition> ConditionsList {
      get { return PrepareBuilder().conditions_; }
    }
    public int ConditionsCount {
      get { return result.ConditionsCount; }
    }
    public global::CSOItemCriteriaCondition GetConditions(int index) {
      return result.GetConditions(index);
    }
    public Builder SetConditions(int index, global::CSOItemCriteriaCondition value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.conditions_[index] = value;
      return this;
    }
    public Builder SetConditions(int index, global::CSOItemCriteriaCondition.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.conditions_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddConditions(global::CSOItemCriteriaCondition value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.conditions_.Add(value);
      return this;
    }
    public Builder AddConditions(global::CSOItemCriteriaCondition.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.conditions_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeConditions(scg::IEnumerable<global::CSOItemCriteriaCondition> values) {
      PrepareBuilder();
      result.conditions_.Add(values);
      return this;
    }
    public Builder ClearConditions() {
      PrepareBuilder();
      result.conditions_.Clear();
      return this;
    }
    
    public bool HasItemRarity {
      get { return result.hasItemRarity; }
    }
    public int ItemRarity {
      get { return result.ItemRarity; }
      set { SetItemRarity(value); }
    }
    public Builder SetItemRarity(int value) {
      PrepareBuilder();
      result.hasItemRarity = true;
      result.itemRarity_ = value;
      return this;
    }
    public Builder ClearItemRarity() {
      PrepareBuilder();
      result.hasItemRarity = false;
      result.itemRarity_ = 0;
      return this;
    }
    
    public bool HasItemRaritySet {
      get { return result.hasItemRaritySet; }
    }
    public bool ItemRaritySet {
      get { return result.ItemRaritySet; }
      set { SetItemRaritySet(value); }
    }
    public Builder SetItemRaritySet(bool value) {
      PrepareBuilder();
      result.hasItemRaritySet = true;
      result.itemRaritySet_ = value;
      return this;
    }
    public Builder ClearItemRaritySet() {
      PrepareBuilder();
      result.hasItemRaritySet = false;
      result.itemRaritySet_ = false;
      return this;
    }
    
    public bool HasRecentOnly {
      get { return result.hasRecentOnly; }
    }
    public bool RecentOnly {
      get { return result.RecentOnly; }
      set { SetRecentOnly(value); }
    }
    public Builder SetRecentOnly(bool value) {
      PrepareBuilder();
      result.hasRecentOnly = true;
      result.recentOnly_ = value;
      return this;
    }
    public Builder ClearRecentOnly() {
      PrepareBuilder();
      result.hasRecentOnly = false;
      result.recentOnly_ = false;
      return this;
    }
  }
  static CSOItemCriteria() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOItemRecipe : pb::GeneratedMessage<CSOItemRecipe, CSOItemRecipe.Builder> {
  private CSOItemRecipe() { }
  private static readonly CSOItemRecipe defaultInstance = new CSOItemRecipe().MakeReadOnly();
  private static readonly string[] _cSOItemRecipeFieldNames = new string[] { "class_usage_for_output", "def_index", "desc_inputs", "desc_outputs", "di_a", "di_b", "di_c", "do_a", "do_b", "do_c", "input_item_dupe_counts", "input_items_criteria", "n_a", "name", "output_items_criteria", "requires_all_same_class", "requires_all_same_slot", "set_for_output", "slot_usage_for_output" };
  private static readonly uint[] _cSOItemRecipeFieldTags = new uint[] { 112, 8, 34, 42, 50, 58, 66, 74, 82, 90, 176, 162, 26, 18, 170, 96, 104, 128, 120 };
  public static CSOItemRecipe DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOItemRecipe DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOItemRecipe ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOItemRecipe__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOItemRecipe, CSOItemRecipe.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOItemRecipe__FieldAccessorTable; }
  }
  
  public const int DefIndexFieldNumber = 1;
  private bool hasDefIndex;
  private uint defIndex_;
  public bool HasDefIndex {
    get { return hasDefIndex; }
  }
  [global::System.CLSCompliant(false)]
  public uint DefIndex {
    get { return defIndex_; }
  }
  
  public const int NameFieldNumber = 2;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int NAFieldNumber = 3;
  private bool hasNA;
  private string nA_ = "";
  public bool HasNA {
    get { return hasNA; }
  }
  public string NA {
    get { return nA_; }
  }
  
  public const int DescInputsFieldNumber = 4;
  private bool hasDescInputs;
  private string descInputs_ = "";
  public bool HasDescInputs {
    get { return hasDescInputs; }
  }
  public string DescInputs {
    get { return descInputs_; }
  }
  
  public const int DescOutputsFieldNumber = 5;
  private bool hasDescOutputs;
  private string descOutputs_ = "";
  public bool HasDescOutputs {
    get { return hasDescOutputs; }
  }
  public string DescOutputs {
    get { return descOutputs_; }
  }
  
  public const int DiAFieldNumber = 6;
  private bool hasDiA;
  private string diA_ = "";
  public bool HasDiA {
    get { return hasDiA; }
  }
  public string DiA {
    get { return diA_; }
  }
  
  public const int DiBFieldNumber = 7;
  private bool hasDiB;
  private string diB_ = "";
  public bool HasDiB {
    get { return hasDiB; }
  }
  public string DiB {
    get { return diB_; }
  }
  
  public const int DiCFieldNumber = 8;
  private bool hasDiC;
  private string diC_ = "";
  public bool HasDiC {
    get { return hasDiC; }
  }
  public string DiC {
    get { return diC_; }
  }
  
  public const int DoAFieldNumber = 9;
  private bool hasDoA;
  private string doA_ = "";
  public bool HasDoA {
    get { return hasDoA; }
  }
  public string DoA {
    get { return doA_; }
  }
  
  public const int DoBFieldNumber = 10;
  private bool hasDoB;
  private string doB_ = "";
  public bool HasDoB {
    get { return hasDoB; }
  }
  public string DoB {
    get { return doB_; }
  }
  
  public const int DoCFieldNumber = 11;
  private bool hasDoC;
  private string doC_ = "";
  public bool HasDoC {
    get { return hasDoC; }
  }
  public string DoC {
    get { return doC_; }
  }
  
  public const int RequiresAllSameClassFieldNumber = 12;
  private bool hasRequiresAllSameClass;
  private bool requiresAllSameClass_;
  public bool HasRequiresAllSameClass {
    get { return hasRequiresAllSameClass; }
  }
  public bool RequiresAllSameClass {
    get { return requiresAllSameClass_; }
  }
  
  public const int RequiresAllSameSlotFieldNumber = 13;
  private bool hasRequiresAllSameSlot;
  private bool requiresAllSameSlot_;
  public bool HasRequiresAllSameSlot {
    get { return hasRequiresAllSameSlot; }
  }
  public bool RequiresAllSameSlot {
    get { return requiresAllSameSlot_; }
  }
  
  public const int ClassUsageForOutputFieldNumber = 14;
  private bool hasClassUsageForOutput;
  private int classUsageForOutput_;
  public bool HasClassUsageForOutput {
    get { return hasClassUsageForOutput; }
  }
  public int ClassUsageForOutput {
    get { return classUsageForOutput_; }
  }
  
  public const int SlotUsageForOutputFieldNumber = 15;
  private bool hasSlotUsageForOutput;
  private int slotUsageForOutput_;
  public bool HasSlotUsageForOutput {
    get { return hasSlotUsageForOutput; }
  }
  public int SlotUsageForOutput {
    get { return slotUsageForOutput_; }
  }
  
  public const int SetForOutputFieldNumber = 16;
  private bool hasSetForOutput;
  private int setForOutput_;
  public bool HasSetForOutput {
    get { return hasSetForOutput; }
  }
  public int SetForOutput {
    get { return setForOutput_; }
  }
  
  public const int InputItemsCriteriaFieldNumber = 20;
  private pbc::PopsicleList<global::CSOItemCriteria> inputItemsCriteria_ = new pbc::PopsicleList<global::CSOItemCriteria>();
  public scg::IList<global::CSOItemCriteria> InputItemsCriteriaList {
    get { return inputItemsCriteria_; }
  }
  public int InputItemsCriteriaCount {
    get { return inputItemsCriteria_.Count; }
  }
  public global::CSOItemCriteria GetInputItemsCriteria(int index) {
    return inputItemsCriteria_[index];
  }
  
  public const int OutputItemsCriteriaFieldNumber = 21;
  private pbc::PopsicleList<global::CSOItemCriteria> outputItemsCriteria_ = new pbc::PopsicleList<global::CSOItemCriteria>();
  public scg::IList<global::CSOItemCriteria> OutputItemsCriteriaList {
    get { return outputItemsCriteria_; }
  }
  public int OutputItemsCriteriaCount {
    get { return outputItemsCriteria_.Count; }
  }
  public global::CSOItemCriteria GetOutputItemsCriteria(int index) {
    return outputItemsCriteria_[index];
  }
  
  public const int InputItemDupeCountsFieldNumber = 22;
  private pbc::PopsicleList<uint> inputItemDupeCounts_ = new pbc::PopsicleList<uint>();
  [global::System.CLSCompliant(false)]
  public scg::IList<uint> InputItemDupeCountsList {
    get { return pbc::Lists.AsReadOnly(inputItemDupeCounts_); }
  }
  public int InputItemDupeCountsCount {
    get { return inputItemDupeCounts_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public uint GetInputItemDupeCounts(int index) {
    return inputItemDupeCounts_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOItemRecipeFieldNames;
    if (hasDefIndex) {
      output.WriteUInt32(1, field_names[1], DefIndex);
    }
    if (hasName) {
      output.WriteString(2, field_names[13], Name);
    }
    if (hasNA) {
      output.WriteString(3, field_names[12], NA);
    }
    if (hasDescInputs) {
      output.WriteString(4, field_names[2], DescInputs);
    }
    if (hasDescOutputs) {
      output.WriteString(5, field_names[3], DescOutputs);
    }
    if (hasDiA) {
      output.WriteString(6, field_names[4], DiA);
    }
    if (hasDiB) {
      output.WriteString(7, field_names[5], DiB);
    }
    if (hasDiC) {
      output.WriteString(8, field_names[6], DiC);
    }
    if (hasDoA) {
      output.WriteString(9, field_names[7], DoA);
    }
    if (hasDoB) {
      output.WriteString(10, field_names[8], DoB);
    }
    if (hasDoC) {
      output.WriteString(11, field_names[9], DoC);
    }
    if (hasRequiresAllSameClass) {
      output.WriteBool(12, field_names[15], RequiresAllSameClass);
    }
    if (hasRequiresAllSameSlot) {
      output.WriteBool(13, field_names[16], RequiresAllSameSlot);
    }
    if (hasClassUsageForOutput) {
      output.WriteInt32(14, field_names[0], ClassUsageForOutput);
    }
    if (hasSlotUsageForOutput) {
      output.WriteInt32(15, field_names[18], SlotUsageForOutput);
    }
    if (hasSetForOutput) {
      output.WriteInt32(16, field_names[17], SetForOutput);
    }
    if (inputItemsCriteria_.Count > 0) {
      output.WriteMessageArray(20, field_names[11], inputItemsCriteria_);
    }
    if (outputItemsCriteria_.Count > 0) {
      output.WriteMessageArray(21, field_names[14], outputItemsCriteria_);
    }
    if (inputItemDupeCounts_.Count > 0) {
      output.WriteUInt32Array(22, field_names[10], inputItemDupeCounts_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDefIndex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, DefIndex);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Name);
      }
      if (hasNA) {
        size += pb::CodedOutputStream.ComputeStringSize(3, NA);
      }
      if (hasDescInputs) {
        size += pb::CodedOutputStream.ComputeStringSize(4, DescInputs);
      }
      if (hasDescOutputs) {
        size += pb::CodedOutputStream.ComputeStringSize(5, DescOutputs);
      }
      if (hasDiA) {
        size += pb::CodedOutputStream.ComputeStringSize(6, DiA);
      }
      if (hasDiB) {
        size += pb::CodedOutputStream.ComputeStringSize(7, DiB);
      }
      if (hasDiC) {
        size += pb::CodedOutputStream.ComputeStringSize(8, DiC);
      }
      if (hasDoA) {
        size += pb::CodedOutputStream.ComputeStringSize(9, DoA);
      }
      if (hasDoB) {
        size += pb::CodedOutputStream.ComputeStringSize(10, DoB);
      }
      if (hasDoC) {
        size += pb::CodedOutputStream.ComputeStringSize(11, DoC);
      }
      if (hasRequiresAllSameClass) {
        size += pb::CodedOutputStream.ComputeBoolSize(12, RequiresAllSameClass);
      }
      if (hasRequiresAllSameSlot) {
        size += pb::CodedOutputStream.ComputeBoolSize(13, RequiresAllSameSlot);
      }
      if (hasClassUsageForOutput) {
        size += pb::CodedOutputStream.ComputeInt32Size(14, ClassUsageForOutput);
      }
      if (hasSlotUsageForOutput) {
        size += pb::CodedOutputStream.ComputeInt32Size(15, SlotUsageForOutput);
      }
      if (hasSetForOutput) {
        size += pb::CodedOutputStream.ComputeInt32Size(16, SetForOutput);
      }
      foreach (global::CSOItemCriteria element in InputItemsCriteriaList) {
        size += pb::CodedOutputStream.ComputeMessageSize(20, element);
      }
      foreach (global::CSOItemCriteria element in OutputItemsCriteriaList) {
        size += pb::CodedOutputStream.ComputeMessageSize(21, element);
      }
      {
        int dataSize = 0;
        foreach (uint element in InputItemDupeCountsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 2 * inputItemDupeCounts_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOItemRecipe ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOItemRecipe ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOItemRecipe ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOItemRecipe ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOItemRecipe ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOItemRecipe ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOItemRecipe ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOItemRecipe ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOItemRecipe ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOItemRecipe ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOItemRecipe MakeReadOnly() {
    inputItemsCriteria_.MakeReadOnly();
    outputItemsCriteria_.MakeReadOnly();
    inputItemDupeCounts_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOItemRecipe prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOItemRecipe, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOItemRecipe cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOItemRecipe result;
    
    private CSOItemRecipe PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOItemRecipe original = result;
        result = new CSOItemRecipe();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOItemRecipe MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOItemRecipe.Descriptor; }
    }
    
    public override CSOItemRecipe DefaultInstanceForType {
      get { return global::CSOItemRecipe.DefaultInstance; }
    }
    
    public override CSOItemRecipe BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOItemRecipe) {
        return MergeFrom((CSOItemRecipe) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOItemRecipe other) {
      if (other == global::CSOItemRecipe.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDefIndex) {
        DefIndex = other.DefIndex;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasNA) {
        NA = other.NA;
      }
      if (other.HasDescInputs) {
        DescInputs = other.DescInputs;
      }
      if (other.HasDescOutputs) {
        DescOutputs = other.DescOutputs;
      }
      if (other.HasDiA) {
        DiA = other.DiA;
      }
      if (other.HasDiB) {
        DiB = other.DiB;
      }
      if (other.HasDiC) {
        DiC = other.DiC;
      }
      if (other.HasDoA) {
        DoA = other.DoA;
      }
      if (other.HasDoB) {
        DoB = other.DoB;
      }
      if (other.HasDoC) {
        DoC = other.DoC;
      }
      if (other.HasRequiresAllSameClass) {
        RequiresAllSameClass = other.RequiresAllSameClass;
      }
      if (other.HasRequiresAllSameSlot) {
        RequiresAllSameSlot = other.RequiresAllSameSlot;
      }
      if (other.HasClassUsageForOutput) {
        ClassUsageForOutput = other.ClassUsageForOutput;
      }
      if (other.HasSlotUsageForOutput) {
        SlotUsageForOutput = other.SlotUsageForOutput;
      }
      if (other.HasSetForOutput) {
        SetForOutput = other.SetForOutput;
      }
      if (other.inputItemsCriteria_.Count != 0) {
        result.inputItemsCriteria_.Add(other.inputItemsCriteria_);
      }
      if (other.outputItemsCriteria_.Count != 0) {
        result.outputItemsCriteria_.Add(other.outputItemsCriteria_);
      }
      if (other.inputItemDupeCounts_.Count != 0) {
        result.inputItemDupeCounts_.Add(other.inputItemDupeCounts_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOItemRecipeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOItemRecipeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDefIndex = input.ReadUInt32(ref result.defIndex_);
            break;
          }
          case 18: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 26: {
            result.hasNA = input.ReadString(ref result.nA_);
            break;
          }
          case 34: {
            result.hasDescInputs = input.ReadString(ref result.descInputs_);
            break;
          }
          case 42: {
            result.hasDescOutputs = input.ReadString(ref result.descOutputs_);
            break;
          }
          case 50: {
            result.hasDiA = input.ReadString(ref result.diA_);
            break;
          }
          case 58: {
            result.hasDiB = input.ReadString(ref result.diB_);
            break;
          }
          case 66: {
            result.hasDiC = input.ReadString(ref result.diC_);
            break;
          }
          case 74: {
            result.hasDoA = input.ReadString(ref result.doA_);
            break;
          }
          case 82: {
            result.hasDoB = input.ReadString(ref result.doB_);
            break;
          }
          case 90: {
            result.hasDoC = input.ReadString(ref result.doC_);
            break;
          }
          case 96: {
            result.hasRequiresAllSameClass = input.ReadBool(ref result.requiresAllSameClass_);
            break;
          }
          case 104: {
            result.hasRequiresAllSameSlot = input.ReadBool(ref result.requiresAllSameSlot_);
            break;
          }
          case 112: {
            result.hasClassUsageForOutput = input.ReadInt32(ref result.classUsageForOutput_);
            break;
          }
          case 120: {
            result.hasSlotUsageForOutput = input.ReadInt32(ref result.slotUsageForOutput_);
            break;
          }
          case 128: {
            result.hasSetForOutput = input.ReadInt32(ref result.setForOutput_);
            break;
          }
          case 162: {
            input.ReadMessageArray(tag, field_name, result.inputItemsCriteria_, global::CSOItemCriteria.DefaultInstance, extensionRegistry);
            break;
          }
          case 170: {
            input.ReadMessageArray(tag, field_name, result.outputItemsCriteria_, global::CSOItemCriteria.DefaultInstance, extensionRegistry);
            break;
          }
          case 178:
          case 176: {
            input.ReadUInt32Array(tag, field_name, result.inputItemDupeCounts_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDefIndex {
      get { return result.hasDefIndex; }
    }
    [global::System.CLSCompliant(false)]
    public uint DefIndex {
      get { return result.DefIndex; }
      set { SetDefIndex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDefIndex(uint value) {
      PrepareBuilder();
      result.hasDefIndex = true;
      result.defIndex_ = value;
      return this;
    }
    public Builder ClearDefIndex() {
      PrepareBuilder();
      result.hasDefIndex = false;
      result.defIndex_ = 0;
      return this;
    }
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasNA {
      get { return result.hasNA; }
    }
    public string NA {
      get { return result.NA; }
      set { SetNA(value); }
    }
    public Builder SetNA(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasNA = true;
      result.nA_ = value;
      return this;
    }
    public Builder ClearNA() {
      PrepareBuilder();
      result.hasNA = false;
      result.nA_ = "";
      return this;
    }
    
    public bool HasDescInputs {
      get { return result.hasDescInputs; }
    }
    public string DescInputs {
      get { return result.DescInputs; }
      set { SetDescInputs(value); }
    }
    public Builder SetDescInputs(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDescInputs = true;
      result.descInputs_ = value;
      return this;
    }
    public Builder ClearDescInputs() {
      PrepareBuilder();
      result.hasDescInputs = false;
      result.descInputs_ = "";
      return this;
    }
    
    public bool HasDescOutputs {
      get { return result.hasDescOutputs; }
    }
    public string DescOutputs {
      get { return result.DescOutputs; }
      set { SetDescOutputs(value); }
    }
    public Builder SetDescOutputs(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDescOutputs = true;
      result.descOutputs_ = value;
      return this;
    }
    public Builder ClearDescOutputs() {
      PrepareBuilder();
      result.hasDescOutputs = false;
      result.descOutputs_ = "";
      return this;
    }
    
    public bool HasDiA {
      get { return result.hasDiA; }
    }
    public string DiA {
      get { return result.DiA; }
      set { SetDiA(value); }
    }
    public Builder SetDiA(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDiA = true;
      result.diA_ = value;
      return this;
    }
    public Builder ClearDiA() {
      PrepareBuilder();
      result.hasDiA = false;
      result.diA_ = "";
      return this;
    }
    
    public bool HasDiB {
      get { return result.hasDiB; }
    }
    public string DiB {
      get { return result.DiB; }
      set { SetDiB(value); }
    }
    public Builder SetDiB(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDiB = true;
      result.diB_ = value;
      return this;
    }
    public Builder ClearDiB() {
      PrepareBuilder();
      result.hasDiB = false;
      result.diB_ = "";
      return this;
    }
    
    public bool HasDiC {
      get { return result.hasDiC; }
    }
    public string DiC {
      get { return result.DiC; }
      set { SetDiC(value); }
    }
    public Builder SetDiC(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDiC = true;
      result.diC_ = value;
      return this;
    }
    public Builder ClearDiC() {
      PrepareBuilder();
      result.hasDiC = false;
      result.diC_ = "";
      return this;
    }
    
    public bool HasDoA {
      get { return result.hasDoA; }
    }
    public string DoA {
      get { return result.DoA; }
      set { SetDoA(value); }
    }
    public Builder SetDoA(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDoA = true;
      result.doA_ = value;
      return this;
    }
    public Builder ClearDoA() {
      PrepareBuilder();
      result.hasDoA = false;
      result.doA_ = "";
      return this;
    }
    
    public bool HasDoB {
      get { return result.hasDoB; }
    }
    public string DoB {
      get { return result.DoB; }
      set { SetDoB(value); }
    }
    public Builder SetDoB(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDoB = true;
      result.doB_ = value;
      return this;
    }
    public Builder ClearDoB() {
      PrepareBuilder();
      result.hasDoB = false;
      result.doB_ = "";
      return this;
    }
    
    public bool HasDoC {
      get { return result.hasDoC; }
    }
    public string DoC {
      get { return result.DoC; }
      set { SetDoC(value); }
    }
    public Builder SetDoC(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDoC = true;
      result.doC_ = value;
      return this;
    }
    public Builder ClearDoC() {
      PrepareBuilder();
      result.hasDoC = false;
      result.doC_ = "";
      return this;
    }
    
    public bool HasRequiresAllSameClass {
      get { return result.hasRequiresAllSameClass; }
    }
    public bool RequiresAllSameClass {
      get { return result.RequiresAllSameClass; }
      set { SetRequiresAllSameClass(value); }
    }
    public Builder SetRequiresAllSameClass(bool value) {
      PrepareBuilder();
      result.hasRequiresAllSameClass = true;
      result.requiresAllSameClass_ = value;
      return this;
    }
    public Builder ClearRequiresAllSameClass() {
      PrepareBuilder();
      result.hasRequiresAllSameClass = false;
      result.requiresAllSameClass_ = false;
      return this;
    }
    
    public bool HasRequiresAllSameSlot {
      get { return result.hasRequiresAllSameSlot; }
    }
    public bool RequiresAllSameSlot {
      get { return result.RequiresAllSameSlot; }
      set { SetRequiresAllSameSlot(value); }
    }
    public Builder SetRequiresAllSameSlot(bool value) {
      PrepareBuilder();
      result.hasRequiresAllSameSlot = true;
      result.requiresAllSameSlot_ = value;
      return this;
    }
    public Builder ClearRequiresAllSameSlot() {
      PrepareBuilder();
      result.hasRequiresAllSameSlot = false;
      result.requiresAllSameSlot_ = false;
      return this;
    }
    
    public bool HasClassUsageForOutput {
      get { return result.hasClassUsageForOutput; }
    }
    public int ClassUsageForOutput {
      get { return result.ClassUsageForOutput; }
      set { SetClassUsageForOutput(value); }
    }
    public Builder SetClassUsageForOutput(int value) {
      PrepareBuilder();
      result.hasClassUsageForOutput = true;
      result.classUsageForOutput_ = value;
      return this;
    }
    public Builder ClearClassUsageForOutput() {
      PrepareBuilder();
      result.hasClassUsageForOutput = false;
      result.classUsageForOutput_ = 0;
      return this;
    }
    
    public bool HasSlotUsageForOutput {
      get { return result.hasSlotUsageForOutput; }
    }
    public int SlotUsageForOutput {
      get { return result.SlotUsageForOutput; }
      set { SetSlotUsageForOutput(value); }
    }
    public Builder SetSlotUsageForOutput(int value) {
      PrepareBuilder();
      result.hasSlotUsageForOutput = true;
      result.slotUsageForOutput_ = value;
      return this;
    }
    public Builder ClearSlotUsageForOutput() {
      PrepareBuilder();
      result.hasSlotUsageForOutput = false;
      result.slotUsageForOutput_ = 0;
      return this;
    }
    
    public bool HasSetForOutput {
      get { return result.hasSetForOutput; }
    }
    public int SetForOutput {
      get { return result.SetForOutput; }
      set { SetSetForOutput(value); }
    }
    public Builder SetSetForOutput(int value) {
      PrepareBuilder();
      result.hasSetForOutput = true;
      result.setForOutput_ = value;
      return this;
    }
    public Builder ClearSetForOutput() {
      PrepareBuilder();
      result.hasSetForOutput = false;
      result.setForOutput_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CSOItemCriteria> InputItemsCriteriaList {
      get { return PrepareBuilder().inputItemsCriteria_; }
    }
    public int InputItemsCriteriaCount {
      get { return result.InputItemsCriteriaCount; }
    }
    public global::CSOItemCriteria GetInputItemsCriteria(int index) {
      return result.GetInputItemsCriteria(index);
    }
    public Builder SetInputItemsCriteria(int index, global::CSOItemCriteria value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.inputItemsCriteria_[index] = value;
      return this;
    }
    public Builder SetInputItemsCriteria(int index, global::CSOItemCriteria.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.inputItemsCriteria_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddInputItemsCriteria(global::CSOItemCriteria value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.inputItemsCriteria_.Add(value);
      return this;
    }
    public Builder AddInputItemsCriteria(global::CSOItemCriteria.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.inputItemsCriteria_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeInputItemsCriteria(scg::IEnumerable<global::CSOItemCriteria> values) {
      PrepareBuilder();
      result.inputItemsCriteria_.Add(values);
      return this;
    }
    public Builder ClearInputItemsCriteria() {
      PrepareBuilder();
      result.inputItemsCriteria_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::CSOItemCriteria> OutputItemsCriteriaList {
      get { return PrepareBuilder().outputItemsCriteria_; }
    }
    public int OutputItemsCriteriaCount {
      get { return result.OutputItemsCriteriaCount; }
    }
    public global::CSOItemCriteria GetOutputItemsCriteria(int index) {
      return result.GetOutputItemsCriteria(index);
    }
    public Builder SetOutputItemsCriteria(int index, global::CSOItemCriteria value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.outputItemsCriteria_[index] = value;
      return this;
    }
    public Builder SetOutputItemsCriteria(int index, global::CSOItemCriteria.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.outputItemsCriteria_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddOutputItemsCriteria(global::CSOItemCriteria value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.outputItemsCriteria_.Add(value);
      return this;
    }
    public Builder AddOutputItemsCriteria(global::CSOItemCriteria.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.outputItemsCriteria_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeOutputItemsCriteria(scg::IEnumerable<global::CSOItemCriteria> values) {
      PrepareBuilder();
      result.outputItemsCriteria_.Add(values);
      return this;
    }
    public Builder ClearOutputItemsCriteria() {
      PrepareBuilder();
      result.outputItemsCriteria_.Clear();
      return this;
    }
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<uint> InputItemDupeCountsList {
      get { return PrepareBuilder().inputItemDupeCounts_; }
    }
    public int InputItemDupeCountsCount {
      get { return result.InputItemDupeCountsCount; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetInputItemDupeCounts(int index) {
      return result.GetInputItemDupeCounts(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetInputItemDupeCounts(int index, uint value) {
      PrepareBuilder();
      result.inputItemDupeCounts_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddInputItemDupeCounts(uint value) {
      PrepareBuilder();
      result.inputItemDupeCounts_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeInputItemDupeCounts(scg::IEnumerable<uint> values) {
      PrepareBuilder();
      result.inputItemDupeCounts_.Add(values);
      return this;
    }
    public Builder ClearInputItemDupeCounts() {
      PrepareBuilder();
      result.inputItemDupeCounts_.Clear();
      return this;
    }
  }
  static CSOItemRecipe() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgDevNewItemRequest : pb::GeneratedMessage<CMsgDevNewItemRequest, CMsgDevNewItemRequest.Builder> {
  private CMsgDevNewItemRequest() { }
  private static readonly CMsgDevNewItemRequest defaultInstance = new CMsgDevNewItemRequest().MakeReadOnly();
  private static readonly string[] _cMsgDevNewItemRequestFieldNames = new string[] { "criteria", "receiver" };
  private static readonly uint[] _cMsgDevNewItemRequestFieldTags = new uint[] { 18, 9 };
  public static CMsgDevNewItemRequest DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgDevNewItemRequest DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgDevNewItemRequest ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgDevNewItemRequest__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgDevNewItemRequest, CMsgDevNewItemRequest.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgDevNewItemRequest__FieldAccessorTable; }
  }
  
  public const int ReceiverFieldNumber = 1;
  private bool hasReceiver;
  private ulong receiver_;
  public bool HasReceiver {
    get { return hasReceiver; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Receiver {
    get { return receiver_; }
  }
  
  public const int CriteriaFieldNumber = 2;
  private bool hasCriteria;
  private global::CSOItemCriteria criteria_;
  public bool HasCriteria {
    get { return hasCriteria; }
  }
  public global::CSOItemCriteria Criteria {
    get { return criteria_ ?? global::CSOItemCriteria.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgDevNewItemRequestFieldNames;
    if (hasReceiver) {
      output.WriteFixed64(1, field_names[1], Receiver);
    }
    if (hasCriteria) {
      output.WriteMessage(2, field_names[0], Criteria);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasReceiver) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, Receiver);
      }
      if (hasCriteria) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Criteria);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgDevNewItemRequest ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgDevNewItemRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgDevNewItemRequest ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgDevNewItemRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgDevNewItemRequest ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgDevNewItemRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgDevNewItemRequest ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgDevNewItemRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgDevNewItemRequest ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgDevNewItemRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgDevNewItemRequest MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgDevNewItemRequest prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgDevNewItemRequest, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgDevNewItemRequest cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgDevNewItemRequest result;
    
    private CMsgDevNewItemRequest PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgDevNewItemRequest original = result;
        result = new CMsgDevNewItemRequest();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgDevNewItemRequest MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgDevNewItemRequest.Descriptor; }
    }
    
    public override CMsgDevNewItemRequest DefaultInstanceForType {
      get { return global::CMsgDevNewItemRequest.DefaultInstance; }
    }
    
    public override CMsgDevNewItemRequest BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgDevNewItemRequest) {
        return MergeFrom((CMsgDevNewItemRequest) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgDevNewItemRequest other) {
      if (other == global::CMsgDevNewItemRequest.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasReceiver) {
        Receiver = other.Receiver;
      }
      if (other.HasCriteria) {
        MergeCriteria(other.Criteria);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgDevNewItemRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgDevNewItemRequestFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasReceiver = input.ReadFixed64(ref result.receiver_);
            break;
          }
          case 18: {
            global::CSOItemCriteria.Builder subBuilder = global::CSOItemCriteria.CreateBuilder();
            if (result.hasCriteria) {
              subBuilder.MergeFrom(Criteria);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Criteria = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasReceiver {
      get { return result.hasReceiver; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Receiver {
      get { return result.Receiver; }
      set { SetReceiver(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetReceiver(ulong value) {
      PrepareBuilder();
      result.hasReceiver = true;
      result.receiver_ = value;
      return this;
    }
    public Builder ClearReceiver() {
      PrepareBuilder();
      result.hasReceiver = false;
      result.receiver_ = 0;
      return this;
    }
    
    public bool HasCriteria {
     get { return result.hasCriteria; }
    }
    public global::CSOItemCriteria Criteria {
      get { return result.Criteria; }
      set { SetCriteria(value); }
    }
    public Builder SetCriteria(global::CSOItemCriteria value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCriteria = true;
      result.criteria_ = value;
      return this;
    }
    public Builder SetCriteria(global::CSOItemCriteria.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasCriteria = true;
      result.criteria_ = builderForValue.Build();
      return this;
    }
    public Builder MergeCriteria(global::CSOItemCriteria value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasCriteria &&
          result.criteria_ != global::CSOItemCriteria.DefaultInstance) {
          result.criteria_ = global::CSOItemCriteria.CreateBuilder(result.criteria_).MergeFrom(value).BuildPartial();
      } else {
        result.criteria_ = value;
      }
      result.hasCriteria = true;
      return this;
    }
    public Builder ClearCriteria() {
      PrepareBuilder();
      result.hasCriteria = false;
      result.criteria_ = null;
      return this;
    }
  }
  static CMsgDevNewItemRequest() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgIncrementKillCountAttribute : pb::GeneratedMessage<CMsgIncrementKillCountAttribute, CMsgIncrementKillCountAttribute.Builder> {
  private CMsgIncrementKillCountAttribute() { }
  private static readonly CMsgIncrementKillCountAttribute defaultInstance = new CMsgIncrementKillCountAttribute().MakeReadOnly();
  private static readonly string[] _cMsgIncrementKillCountAttributeFieldNames = new string[] { "amount", "event_type", "item_id", "killer_account_id", "victim_account_id" };
  private static readonly uint[] _cMsgIncrementKillCountAttributeFieldTags = new uint[] { 40, 32, 24, 13, 21 };
  public static CMsgIncrementKillCountAttribute DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgIncrementKillCountAttribute DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgIncrementKillCountAttribute ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgIncrementKillCountAttribute__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgIncrementKillCountAttribute, CMsgIncrementKillCountAttribute.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgIncrementKillCountAttribute__FieldAccessorTable; }
  }
  
  public const int KillerAccountIdFieldNumber = 1;
  private bool hasKillerAccountId;
  private uint killerAccountId_;
  public bool HasKillerAccountId {
    get { return hasKillerAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint KillerAccountId {
    get { return killerAccountId_; }
  }
  
  public const int VictimAccountIdFieldNumber = 2;
  private bool hasVictimAccountId;
  private uint victimAccountId_;
  public bool HasVictimAccountId {
    get { return hasVictimAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint VictimAccountId {
    get { return victimAccountId_; }
  }
  
  public const int ItemIdFieldNumber = 3;
  private bool hasItemId;
  private ulong itemId_;
  public bool HasItemId {
    get { return hasItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ItemId {
    get { return itemId_; }
  }
  
  public const int EventTypeFieldNumber = 4;
  private bool hasEventType;
  private uint eventType_;
  public bool HasEventType {
    get { return hasEventType; }
  }
  [global::System.CLSCompliant(false)]
  public uint EventType {
    get { return eventType_; }
  }
  
  public const int AmountFieldNumber = 5;
  private bool hasAmount;
  private uint amount_;
  public bool HasAmount {
    get { return hasAmount; }
  }
  [global::System.CLSCompliant(false)]
  public uint Amount {
    get { return amount_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgIncrementKillCountAttributeFieldNames;
    if (hasKillerAccountId) {
      output.WriteFixed32(1, field_names[3], KillerAccountId);
    }
    if (hasVictimAccountId) {
      output.WriteFixed32(2, field_names[4], VictimAccountId);
    }
    if (hasItemId) {
      output.WriteUInt64(3, field_names[2], ItemId);
    }
    if (hasEventType) {
      output.WriteUInt32(4, field_names[1], EventType);
    }
    if (hasAmount) {
      output.WriteUInt32(5, field_names[0], Amount);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasKillerAccountId) {
        size += pb::CodedOutputStream.ComputeFixed32Size(1, KillerAccountId);
      }
      if (hasVictimAccountId) {
        size += pb::CodedOutputStream.ComputeFixed32Size(2, VictimAccountId);
      }
      if (hasItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, ItemId);
      }
      if (hasEventType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, EventType);
      }
      if (hasAmount) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, Amount);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgIncrementKillCountAttribute ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgIncrementKillCountAttribute ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgIncrementKillCountAttribute ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgIncrementKillCountAttribute ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgIncrementKillCountAttribute ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgIncrementKillCountAttribute ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgIncrementKillCountAttribute ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgIncrementKillCountAttribute ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgIncrementKillCountAttribute ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgIncrementKillCountAttribute ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgIncrementKillCountAttribute MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgIncrementKillCountAttribute prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgIncrementKillCountAttribute, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgIncrementKillCountAttribute cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgIncrementKillCountAttribute result;
    
    private CMsgIncrementKillCountAttribute PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgIncrementKillCountAttribute original = result;
        result = new CMsgIncrementKillCountAttribute();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgIncrementKillCountAttribute MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgIncrementKillCountAttribute.Descriptor; }
    }
    
    public override CMsgIncrementKillCountAttribute DefaultInstanceForType {
      get { return global::CMsgIncrementKillCountAttribute.DefaultInstance; }
    }
    
    public override CMsgIncrementKillCountAttribute BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgIncrementKillCountAttribute) {
        return MergeFrom((CMsgIncrementKillCountAttribute) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgIncrementKillCountAttribute other) {
      if (other == global::CMsgIncrementKillCountAttribute.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasKillerAccountId) {
        KillerAccountId = other.KillerAccountId;
      }
      if (other.HasVictimAccountId) {
        VictimAccountId = other.VictimAccountId;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasEventType) {
        EventType = other.EventType;
      }
      if (other.HasAmount) {
        Amount = other.Amount;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgIncrementKillCountAttributeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgIncrementKillCountAttributeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 13: {
            result.hasKillerAccountId = input.ReadFixed32(ref result.killerAccountId_);
            break;
          }
          case 21: {
            result.hasVictimAccountId = input.ReadFixed32(ref result.victimAccountId_);
            break;
          }
          case 24: {
            result.hasItemId = input.ReadUInt64(ref result.itemId_);
            break;
          }
          case 32: {
            result.hasEventType = input.ReadUInt32(ref result.eventType_);
            break;
          }
          case 40: {
            result.hasAmount = input.ReadUInt32(ref result.amount_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasKillerAccountId {
      get { return result.hasKillerAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint KillerAccountId {
      get { return result.KillerAccountId; }
      set { SetKillerAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetKillerAccountId(uint value) {
      PrepareBuilder();
      result.hasKillerAccountId = true;
      result.killerAccountId_ = value;
      return this;
    }
    public Builder ClearKillerAccountId() {
      PrepareBuilder();
      result.hasKillerAccountId = false;
      result.killerAccountId_ = 0;
      return this;
    }
    
    public bool HasVictimAccountId {
      get { return result.hasVictimAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint VictimAccountId {
      get { return result.VictimAccountId; }
      set { SetVictimAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetVictimAccountId(uint value) {
      PrepareBuilder();
      result.hasVictimAccountId = true;
      result.victimAccountId_ = value;
      return this;
    }
    public Builder ClearVictimAccountId() {
      PrepareBuilder();
      result.hasVictimAccountId = false;
      result.victimAccountId_ = 0;
      return this;
    }
    
    public bool HasItemId {
      get { return result.hasItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ItemId {
      get { return result.ItemId; }
      set { SetItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemId(ulong value) {
      PrepareBuilder();
      result.hasItemId = true;
      result.itemId_ = value;
      return this;
    }
    public Builder ClearItemId() {
      PrepareBuilder();
      result.hasItemId = false;
      result.itemId_ = 0UL;
      return this;
    }
    
    public bool HasEventType {
      get { return result.hasEventType; }
    }
    [global::System.CLSCompliant(false)]
    public uint EventType {
      get { return result.EventType; }
      set { SetEventType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEventType(uint value) {
      PrepareBuilder();
      result.hasEventType = true;
      result.eventType_ = value;
      return this;
    }
    public Builder ClearEventType() {
      PrepareBuilder();
      result.hasEventType = false;
      result.eventType_ = 0;
      return this;
    }
    
    public bool HasAmount {
      get { return result.hasAmount; }
    }
    [global::System.CLSCompliant(false)]
    public uint Amount {
      get { return result.Amount; }
      set { SetAmount(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAmount(uint value) {
      PrepareBuilder();
      result.hasAmount = true;
      result.amount_ = value;
      return this;
    }
    public Builder ClearAmount() {
      PrepareBuilder();
      result.hasAmount = false;
      result.amount_ = 0;
      return this;
    }
  }
  static CMsgIncrementKillCountAttribute() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgApplySticker : pb::GeneratedMessage<CMsgApplySticker, CMsgApplySticker.Builder> {
  private CMsgApplySticker() { }
  private static readonly CMsgApplySticker defaultInstance = new CMsgApplySticker().MakeReadOnly();
  private static readonly string[] _cMsgApplyStickerFieldNames = new string[] { "baseitem_defidx", "item_item_id", "sticker_item_id", "sticker_slot" };
  private static readonly uint[] _cMsgApplyStickerFieldTags = new uint[] { 32, 16, 8, 24 };
  public static CMsgApplySticker DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgApplySticker DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgApplySticker ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgApplySticker__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgApplySticker, CMsgApplySticker.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgApplySticker__FieldAccessorTable; }
  }
  
  public const int StickerItemIdFieldNumber = 1;
  private bool hasStickerItemId;
  private ulong stickerItemId_;
  public bool HasStickerItemId {
    get { return hasStickerItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong StickerItemId {
    get { return stickerItemId_; }
  }
  
  public const int ItemItemIdFieldNumber = 2;
  private bool hasItemItemId;
  private ulong itemItemId_;
  public bool HasItemItemId {
    get { return hasItemItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ItemItemId {
    get { return itemItemId_; }
  }
  
  public const int StickerSlotFieldNumber = 3;
  private bool hasStickerSlot;
  private uint stickerSlot_;
  public bool HasStickerSlot {
    get { return hasStickerSlot; }
  }
  [global::System.CLSCompliant(false)]
  public uint StickerSlot {
    get { return stickerSlot_; }
  }
  
  public const int BaseitemDefidxFieldNumber = 4;
  private bool hasBaseitemDefidx;
  private uint baseitemDefidx_;
  public bool HasBaseitemDefidx {
    get { return hasBaseitemDefidx; }
  }
  [global::System.CLSCompliant(false)]
  public uint BaseitemDefidx {
    get { return baseitemDefidx_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgApplyStickerFieldNames;
    if (hasStickerItemId) {
      output.WriteUInt64(1, field_names[2], StickerItemId);
    }
    if (hasItemItemId) {
      output.WriteUInt64(2, field_names[1], ItemItemId);
    }
    if (hasStickerSlot) {
      output.WriteUInt32(3, field_names[3], StickerSlot);
    }
    if (hasBaseitemDefidx) {
      output.WriteUInt32(4, field_names[0], BaseitemDefidx);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStickerItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, StickerItemId);
      }
      if (hasItemItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, ItemItemId);
      }
      if (hasStickerSlot) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, StickerSlot);
      }
      if (hasBaseitemDefidx) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, BaseitemDefidx);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgApplySticker ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgApplySticker ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplySticker ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgApplySticker ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplySticker ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgApplySticker ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplySticker ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgApplySticker ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgApplySticker ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgApplySticker ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgApplySticker MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgApplySticker prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgApplySticker, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgApplySticker cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgApplySticker result;
    
    private CMsgApplySticker PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgApplySticker original = result;
        result = new CMsgApplySticker();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgApplySticker MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgApplySticker.Descriptor; }
    }
    
    public override CMsgApplySticker DefaultInstanceForType {
      get { return global::CMsgApplySticker.DefaultInstance; }
    }
    
    public override CMsgApplySticker BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgApplySticker) {
        return MergeFrom((CMsgApplySticker) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgApplySticker other) {
      if (other == global::CMsgApplySticker.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasStickerItemId) {
        StickerItemId = other.StickerItemId;
      }
      if (other.HasItemItemId) {
        ItemItemId = other.ItemItemId;
      }
      if (other.HasStickerSlot) {
        StickerSlot = other.StickerSlot;
      }
      if (other.HasBaseitemDefidx) {
        BaseitemDefidx = other.BaseitemDefidx;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgApplyStickerFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgApplyStickerFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasStickerItemId = input.ReadUInt64(ref result.stickerItemId_);
            break;
          }
          case 16: {
            result.hasItemItemId = input.ReadUInt64(ref result.itemItemId_);
            break;
          }
          case 24: {
            result.hasStickerSlot = input.ReadUInt32(ref result.stickerSlot_);
            break;
          }
          case 32: {
            result.hasBaseitemDefidx = input.ReadUInt32(ref result.baseitemDefidx_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasStickerItemId {
      get { return result.hasStickerItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong StickerItemId {
      get { return result.StickerItemId; }
      set { SetStickerItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetStickerItemId(ulong value) {
      PrepareBuilder();
      result.hasStickerItemId = true;
      result.stickerItemId_ = value;
      return this;
    }
    public Builder ClearStickerItemId() {
      PrepareBuilder();
      result.hasStickerItemId = false;
      result.stickerItemId_ = 0UL;
      return this;
    }
    
    public bool HasItemItemId {
      get { return result.hasItemItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ItemItemId {
      get { return result.ItemItemId; }
      set { SetItemItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemItemId(ulong value) {
      PrepareBuilder();
      result.hasItemItemId = true;
      result.itemItemId_ = value;
      return this;
    }
    public Builder ClearItemItemId() {
      PrepareBuilder();
      result.hasItemItemId = false;
      result.itemItemId_ = 0UL;
      return this;
    }
    
    public bool HasStickerSlot {
      get { return result.hasStickerSlot; }
    }
    [global::System.CLSCompliant(false)]
    public uint StickerSlot {
      get { return result.StickerSlot; }
      set { SetStickerSlot(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetStickerSlot(uint value) {
      PrepareBuilder();
      result.hasStickerSlot = true;
      result.stickerSlot_ = value;
      return this;
    }
    public Builder ClearStickerSlot() {
      PrepareBuilder();
      result.hasStickerSlot = false;
      result.stickerSlot_ = 0;
      return this;
    }
    
    public bool HasBaseitemDefidx {
      get { return result.hasBaseitemDefidx; }
    }
    [global::System.CLSCompliant(false)]
    public uint BaseitemDefidx {
      get { return result.BaseitemDefidx; }
      set { SetBaseitemDefidx(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetBaseitemDefidx(uint value) {
      PrepareBuilder();
      result.hasBaseitemDefidx = true;
      result.baseitemDefidx_ = value;
      return this;
    }
    public Builder ClearBaseitemDefidx() {
      PrepareBuilder();
      result.hasBaseitemDefidx = false;
      result.baseitemDefidx_ = 0;
      return this;
    }
  }
  static CMsgApplySticker() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgApplyStrangePart : pb::GeneratedMessage<CMsgApplyStrangePart, CMsgApplyStrangePart.Builder> {
  private CMsgApplyStrangePart() { }
  private static readonly CMsgApplyStrangePart defaultInstance = new CMsgApplyStrangePart().MakeReadOnly();
  private static readonly string[] _cMsgApplyStrangePartFieldNames = new string[] { "item_item_id", "strange_part_item_id" };
  private static readonly uint[] _cMsgApplyStrangePartFieldTags = new uint[] { 16, 8 };
  public static CMsgApplyStrangePart DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgApplyStrangePart DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgApplyStrangePart ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgApplyStrangePart__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgApplyStrangePart, CMsgApplyStrangePart.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgApplyStrangePart__FieldAccessorTable; }
  }
  
  public const int StrangePartItemIdFieldNumber = 1;
  private bool hasStrangePartItemId;
  private ulong strangePartItemId_;
  public bool HasStrangePartItemId {
    get { return hasStrangePartItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong StrangePartItemId {
    get { return strangePartItemId_; }
  }
  
  public const int ItemItemIdFieldNumber = 2;
  private bool hasItemItemId;
  private ulong itemItemId_;
  public bool HasItemItemId {
    get { return hasItemItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ItemItemId {
    get { return itemItemId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgApplyStrangePartFieldNames;
    if (hasStrangePartItemId) {
      output.WriteUInt64(1, field_names[1], StrangePartItemId);
    }
    if (hasItemItemId) {
      output.WriteUInt64(2, field_names[0], ItemItemId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasStrangePartItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, StrangePartItemId);
      }
      if (hasItemItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, ItemItemId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgApplyStrangePart ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgApplyStrangePart ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyStrangePart ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgApplyStrangePart ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyStrangePart ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgApplyStrangePart ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyStrangePart ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgApplyStrangePart ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgApplyStrangePart ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgApplyStrangePart ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgApplyStrangePart MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgApplyStrangePart prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgApplyStrangePart, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgApplyStrangePart cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgApplyStrangePart result;
    
    private CMsgApplyStrangePart PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgApplyStrangePart original = result;
        result = new CMsgApplyStrangePart();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgApplyStrangePart MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgApplyStrangePart.Descriptor; }
    }
    
    public override CMsgApplyStrangePart DefaultInstanceForType {
      get { return global::CMsgApplyStrangePart.DefaultInstance; }
    }
    
    public override CMsgApplyStrangePart BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgApplyStrangePart) {
        return MergeFrom((CMsgApplyStrangePart) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgApplyStrangePart other) {
      if (other == global::CMsgApplyStrangePart.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasStrangePartItemId) {
        StrangePartItemId = other.StrangePartItemId;
      }
      if (other.HasItemItemId) {
        ItemItemId = other.ItemItemId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgApplyStrangePartFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgApplyStrangePartFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasStrangePartItemId = input.ReadUInt64(ref result.strangePartItemId_);
            break;
          }
          case 16: {
            result.hasItemItemId = input.ReadUInt64(ref result.itemItemId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasStrangePartItemId {
      get { return result.hasStrangePartItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong StrangePartItemId {
      get { return result.StrangePartItemId; }
      set { SetStrangePartItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetStrangePartItemId(ulong value) {
      PrepareBuilder();
      result.hasStrangePartItemId = true;
      result.strangePartItemId_ = value;
      return this;
    }
    public Builder ClearStrangePartItemId() {
      PrepareBuilder();
      result.hasStrangePartItemId = false;
      result.strangePartItemId_ = 0UL;
      return this;
    }
    
    public bool HasItemItemId {
      get { return result.hasItemItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ItemItemId {
      get { return result.ItemItemId; }
      set { SetItemItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemItemId(ulong value) {
      PrepareBuilder();
      result.hasItemItemId = true;
      result.itemItemId_ = value;
      return this;
    }
    public Builder ClearItemItemId() {
      PrepareBuilder();
      result.hasItemItemId = false;
      result.itemItemId_ = 0UL;
      return this;
    }
  }
  static CMsgApplyStrangePart() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgApplyPennantUpgrade : pb::GeneratedMessage<CMsgApplyPennantUpgrade, CMsgApplyPennantUpgrade.Builder> {
  private CMsgApplyPennantUpgrade() { }
  private static readonly CMsgApplyPennantUpgrade defaultInstance = new CMsgApplyPennantUpgrade().MakeReadOnly();
  private static readonly string[] _cMsgApplyPennantUpgradeFieldNames = new string[] { "pennant_item_id", "upgrade_item_id" };
  private static readonly uint[] _cMsgApplyPennantUpgradeFieldTags = new uint[] { 16, 8 };
  public static CMsgApplyPennantUpgrade DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgApplyPennantUpgrade DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgApplyPennantUpgrade ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgApplyPennantUpgrade__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgApplyPennantUpgrade, CMsgApplyPennantUpgrade.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgApplyPennantUpgrade__FieldAccessorTable; }
  }
  
  public const int UpgradeItemIdFieldNumber = 1;
  private bool hasUpgradeItemId;
  private ulong upgradeItemId_;
  public bool HasUpgradeItemId {
    get { return hasUpgradeItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong UpgradeItemId {
    get { return upgradeItemId_; }
  }
  
  public const int PennantItemIdFieldNumber = 2;
  private bool hasPennantItemId;
  private ulong pennantItemId_;
  public bool HasPennantItemId {
    get { return hasPennantItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong PennantItemId {
    get { return pennantItemId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgApplyPennantUpgradeFieldNames;
    if (hasUpgradeItemId) {
      output.WriteUInt64(1, field_names[1], UpgradeItemId);
    }
    if (hasPennantItemId) {
      output.WriteUInt64(2, field_names[0], PennantItemId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasUpgradeItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, UpgradeItemId);
      }
      if (hasPennantItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, PennantItemId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgApplyPennantUpgrade ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgApplyPennantUpgrade ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyPennantUpgrade ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgApplyPennantUpgrade ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyPennantUpgrade ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgApplyPennantUpgrade ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyPennantUpgrade ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgApplyPennantUpgrade ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgApplyPennantUpgrade ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgApplyPennantUpgrade ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgApplyPennantUpgrade MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgApplyPennantUpgrade prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgApplyPennantUpgrade, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgApplyPennantUpgrade cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgApplyPennantUpgrade result;
    
    private CMsgApplyPennantUpgrade PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgApplyPennantUpgrade original = result;
        result = new CMsgApplyPennantUpgrade();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgApplyPennantUpgrade MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgApplyPennantUpgrade.Descriptor; }
    }
    
    public override CMsgApplyPennantUpgrade DefaultInstanceForType {
      get { return global::CMsgApplyPennantUpgrade.DefaultInstance; }
    }
    
    public override CMsgApplyPennantUpgrade BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgApplyPennantUpgrade) {
        return MergeFrom((CMsgApplyPennantUpgrade) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgApplyPennantUpgrade other) {
      if (other == global::CMsgApplyPennantUpgrade.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUpgradeItemId) {
        UpgradeItemId = other.UpgradeItemId;
      }
      if (other.HasPennantItemId) {
        PennantItemId = other.PennantItemId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgApplyPennantUpgradeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgApplyPennantUpgradeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUpgradeItemId = input.ReadUInt64(ref result.upgradeItemId_);
            break;
          }
          case 16: {
            result.hasPennantItemId = input.ReadUInt64(ref result.pennantItemId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUpgradeItemId {
      get { return result.hasUpgradeItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong UpgradeItemId {
      get { return result.UpgradeItemId; }
      set { SetUpgradeItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetUpgradeItemId(ulong value) {
      PrepareBuilder();
      result.hasUpgradeItemId = true;
      result.upgradeItemId_ = value;
      return this;
    }
    public Builder ClearUpgradeItemId() {
      PrepareBuilder();
      result.hasUpgradeItemId = false;
      result.upgradeItemId_ = 0UL;
      return this;
    }
    
    public bool HasPennantItemId {
      get { return result.hasPennantItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong PennantItemId {
      get { return result.PennantItemId; }
      set { SetPennantItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPennantItemId(ulong value) {
      PrepareBuilder();
      result.hasPennantItemId = true;
      result.pennantItemId_ = value;
      return this;
    }
    public Builder ClearPennantItemId() {
      PrepareBuilder();
      result.hasPennantItemId = false;
      result.pennantItemId_ = 0UL;
      return this;
    }
  }
  static CMsgApplyPennantUpgrade() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgApplyEggEssence : pb::GeneratedMessage<CMsgApplyEggEssence, CMsgApplyEggEssence.Builder> {
  private CMsgApplyEggEssence() { }
  private static readonly CMsgApplyEggEssence defaultInstance = new CMsgApplyEggEssence().MakeReadOnly();
  private static readonly string[] _cMsgApplyEggEssenceFieldNames = new string[] { "egg_item_id", "essence_item_id" };
  private static readonly uint[] _cMsgApplyEggEssenceFieldTags = new uint[] { 16, 8 };
  public static CMsgApplyEggEssence DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgApplyEggEssence DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgApplyEggEssence ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgApplyEggEssence__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgApplyEggEssence, CMsgApplyEggEssence.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgApplyEggEssence__FieldAccessorTable; }
  }
  
  public const int EssenceItemIdFieldNumber = 1;
  private bool hasEssenceItemId;
  private ulong essenceItemId_;
  public bool HasEssenceItemId {
    get { return hasEssenceItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong EssenceItemId {
    get { return essenceItemId_; }
  }
  
  public const int EggItemIdFieldNumber = 2;
  private bool hasEggItemId;
  private ulong eggItemId_;
  public bool HasEggItemId {
    get { return hasEggItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong EggItemId {
    get { return eggItemId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgApplyEggEssenceFieldNames;
    if (hasEssenceItemId) {
      output.WriteUInt64(1, field_names[1], EssenceItemId);
    }
    if (hasEggItemId) {
      output.WriteUInt64(2, field_names[0], EggItemId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEssenceItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, EssenceItemId);
      }
      if (hasEggItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, EggItemId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgApplyEggEssence ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgApplyEggEssence ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyEggEssence ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgApplyEggEssence ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyEggEssence ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgApplyEggEssence ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgApplyEggEssence ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgApplyEggEssence ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgApplyEggEssence ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgApplyEggEssence ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgApplyEggEssence MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgApplyEggEssence prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgApplyEggEssence, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgApplyEggEssence cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgApplyEggEssence result;
    
    private CMsgApplyEggEssence PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgApplyEggEssence original = result;
        result = new CMsgApplyEggEssence();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgApplyEggEssence MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgApplyEggEssence.Descriptor; }
    }
    
    public override CMsgApplyEggEssence DefaultInstanceForType {
      get { return global::CMsgApplyEggEssence.DefaultInstance; }
    }
    
    public override CMsgApplyEggEssence BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgApplyEggEssence) {
        return MergeFrom((CMsgApplyEggEssence) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgApplyEggEssence other) {
      if (other == global::CMsgApplyEggEssence.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEssenceItemId) {
        EssenceItemId = other.EssenceItemId;
      }
      if (other.HasEggItemId) {
        EggItemId = other.EggItemId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgApplyEggEssenceFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgApplyEggEssenceFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasEssenceItemId = input.ReadUInt64(ref result.essenceItemId_);
            break;
          }
          case 16: {
            result.hasEggItemId = input.ReadUInt64(ref result.eggItemId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEssenceItemId {
      get { return result.hasEssenceItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong EssenceItemId {
      get { return result.EssenceItemId; }
      set { SetEssenceItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEssenceItemId(ulong value) {
      PrepareBuilder();
      result.hasEssenceItemId = true;
      result.essenceItemId_ = value;
      return this;
    }
    public Builder ClearEssenceItemId() {
      PrepareBuilder();
      result.hasEssenceItemId = false;
      result.essenceItemId_ = 0UL;
      return this;
    }
    
    public bool HasEggItemId {
      get { return result.hasEggItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong EggItemId {
      get { return result.EggItemId; }
      set { SetEggItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEggItemId(ulong value) {
      PrepareBuilder();
      result.hasEggItemId = true;
      result.eggItemId_ = value;
      return this;
    }
    public Builder ClearEggItemId() {
      PrepareBuilder();
      result.hasEggItemId = false;
      result.eggItemId_ = 0UL;
      return this;
    }
  }
  static CMsgApplyEggEssence() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOEconItemAttribute : pb::GeneratedMessage<CSOEconItemAttribute, CSOEconItemAttribute.Builder> {
  private CSOEconItemAttribute() { }
  private static readonly CSOEconItemAttribute defaultInstance = new CSOEconItemAttribute().MakeReadOnly();
  private static readonly string[] _cSOEconItemAttributeFieldNames = new string[] { "def_index", "value", "value_bytes" };
  private static readonly uint[] _cSOEconItemAttributeFieldTags = new uint[] { 8, 16, 26 };
  public static CSOEconItemAttribute DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOEconItemAttribute DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOEconItemAttribute ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOEconItemAttribute__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOEconItemAttribute, CSOEconItemAttribute.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOEconItemAttribute__FieldAccessorTable; }
  }
  
  public const int DefIndexFieldNumber = 1;
  private bool hasDefIndex;
  private uint defIndex_;
  public bool HasDefIndex {
    get { return hasDefIndex; }
  }
  [global::System.CLSCompliant(false)]
  public uint DefIndex {
    get { return defIndex_; }
  }
  
  public const int ValueFieldNumber = 2;
  private bool hasValue;
  private uint value_;
  public bool HasValue {
    get { return hasValue; }
  }
  [global::System.CLSCompliant(false)]
  public uint Value {
    get { return value_; }
  }
  
  public const int ValueBytesFieldNumber = 3;
  private bool hasValueBytes;
  private pb::ByteString valueBytes_ = pb::ByteString.Empty;
  public bool HasValueBytes {
    get { return hasValueBytes; }
  }
  public pb::ByteString ValueBytes {
    get { return valueBytes_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOEconItemAttributeFieldNames;
    if (hasDefIndex) {
      output.WriteUInt32(1, field_names[0], DefIndex);
    }
    if (hasValue) {
      output.WriteUInt32(2, field_names[1], Value);
    }
    if (hasValueBytes) {
      output.WriteBytes(3, field_names[2], ValueBytes);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasDefIndex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, DefIndex);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Value);
      }
      if (hasValueBytes) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, ValueBytes);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOEconItemAttribute ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemAttribute ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemAttribute ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemAttribute ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemAttribute ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemAttribute ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemAttribute ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOEconItemAttribute ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOEconItemAttribute ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemAttribute ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOEconItemAttribute MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOEconItemAttribute prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOEconItemAttribute, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOEconItemAttribute cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOEconItemAttribute result;
    
    private CSOEconItemAttribute PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOEconItemAttribute original = result;
        result = new CSOEconItemAttribute();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOEconItemAttribute MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOEconItemAttribute.Descriptor; }
    }
    
    public override CSOEconItemAttribute DefaultInstanceForType {
      get { return global::CSOEconItemAttribute.DefaultInstance; }
    }
    
    public override CSOEconItemAttribute BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOEconItemAttribute) {
        return MergeFrom((CSOEconItemAttribute) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOEconItemAttribute other) {
      if (other == global::CSOEconItemAttribute.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDefIndex) {
        DefIndex = other.DefIndex;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      if (other.HasValueBytes) {
        ValueBytes = other.ValueBytes;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOEconItemAttributeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOEconItemAttributeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDefIndex = input.ReadUInt32(ref result.defIndex_);
            break;
          }
          case 16: {
            result.hasValue = input.ReadUInt32(ref result.value_);
            break;
          }
          case 26: {
            result.hasValueBytes = input.ReadBytes(ref result.valueBytes_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDefIndex {
      get { return result.hasDefIndex; }
    }
    [global::System.CLSCompliant(false)]
    public uint DefIndex {
      get { return result.DefIndex; }
      set { SetDefIndex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDefIndex(uint value) {
      PrepareBuilder();
      result.hasDefIndex = true;
      result.defIndex_ = value;
      return this;
    }
    public Builder ClearDefIndex() {
      PrepareBuilder();
      result.hasDefIndex = false;
      result.defIndex_ = 0;
      return this;
    }
    
    public bool HasValue {
      get { return result.hasValue; }
    }
    [global::System.CLSCompliant(false)]
    public uint Value {
      get { return result.Value; }
      set { SetValue(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetValue(uint value) {
      PrepareBuilder();
      result.hasValue = true;
      result.value_ = value;
      return this;
    }
    public Builder ClearValue() {
      PrepareBuilder();
      result.hasValue = false;
      result.value_ = 0;
      return this;
    }
    
    public bool HasValueBytes {
      get { return result.hasValueBytes; }
    }
    public pb::ByteString ValueBytes {
      get { return result.ValueBytes; }
      set { SetValueBytes(value); }
    }
    public Builder SetValueBytes(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasValueBytes = true;
      result.valueBytes_ = value;
      return this;
    }
    public Builder ClearValueBytes() {
      PrepareBuilder();
      result.hasValueBytes = false;
      result.valueBytes_ = pb::ByteString.Empty;
      return this;
    }
  }
  static CSOEconItemAttribute() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOEconItemEquipped : pb::GeneratedMessage<CSOEconItemEquipped, CSOEconItemEquipped.Builder> {
  private CSOEconItemEquipped() { }
  private static readonly CSOEconItemEquipped defaultInstance = new CSOEconItemEquipped().MakeReadOnly();
  private static readonly string[] _cSOEconItemEquippedFieldNames = new string[] { "new_class", "new_slot" };
  private static readonly uint[] _cSOEconItemEquippedFieldTags = new uint[] { 8, 16 };
  public static CSOEconItemEquipped DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOEconItemEquipped DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOEconItemEquipped ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOEconItemEquipped__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOEconItemEquipped, CSOEconItemEquipped.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOEconItemEquipped__FieldAccessorTable; }
  }
  
  public const int NewClassFieldNumber = 1;
  private bool hasNewClass;
  private uint newClass_;
  public bool HasNewClass {
    get { return hasNewClass; }
  }
  [global::System.CLSCompliant(false)]
  public uint NewClass {
    get { return newClass_; }
  }
  
  public const int NewSlotFieldNumber = 2;
  private bool hasNewSlot;
  private uint newSlot_;
  public bool HasNewSlot {
    get { return hasNewSlot; }
  }
  [global::System.CLSCompliant(false)]
  public uint NewSlot {
    get { return newSlot_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOEconItemEquippedFieldNames;
    if (hasNewClass) {
      output.WriteUInt32(1, field_names[0], NewClass);
    }
    if (hasNewSlot) {
      output.WriteUInt32(2, field_names[1], NewSlot);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNewClass) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, NewClass);
      }
      if (hasNewSlot) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, NewSlot);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOEconItemEquipped ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemEquipped ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemEquipped ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemEquipped ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemEquipped ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemEquipped ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemEquipped ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOEconItemEquipped ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOEconItemEquipped ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemEquipped ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOEconItemEquipped MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOEconItemEquipped prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOEconItemEquipped, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOEconItemEquipped cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOEconItemEquipped result;
    
    private CSOEconItemEquipped PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOEconItemEquipped original = result;
        result = new CSOEconItemEquipped();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOEconItemEquipped MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOEconItemEquipped.Descriptor; }
    }
    
    public override CSOEconItemEquipped DefaultInstanceForType {
      get { return global::CSOEconItemEquipped.DefaultInstance; }
    }
    
    public override CSOEconItemEquipped BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOEconItemEquipped) {
        return MergeFrom((CSOEconItemEquipped) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOEconItemEquipped other) {
      if (other == global::CSOEconItemEquipped.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasNewClass) {
        NewClass = other.NewClass;
      }
      if (other.HasNewSlot) {
        NewSlot = other.NewSlot;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOEconItemEquippedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOEconItemEquippedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasNewClass = input.ReadUInt32(ref result.newClass_);
            break;
          }
          case 16: {
            result.hasNewSlot = input.ReadUInt32(ref result.newSlot_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasNewClass {
      get { return result.hasNewClass; }
    }
    [global::System.CLSCompliant(false)]
    public uint NewClass {
      get { return result.NewClass; }
      set { SetNewClass(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetNewClass(uint value) {
      PrepareBuilder();
      result.hasNewClass = true;
      result.newClass_ = value;
      return this;
    }
    public Builder ClearNewClass() {
      PrepareBuilder();
      result.hasNewClass = false;
      result.newClass_ = 0;
      return this;
    }
    
    public bool HasNewSlot {
      get { return result.hasNewSlot; }
    }
    [global::System.CLSCompliant(false)]
    public uint NewSlot {
      get { return result.NewSlot; }
      set { SetNewSlot(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetNewSlot(uint value) {
      PrepareBuilder();
      result.hasNewSlot = true;
      result.newSlot_ = value;
      return this;
    }
    public Builder ClearNewSlot() {
      PrepareBuilder();
      result.hasNewSlot = false;
      result.newSlot_ = 0;
      return this;
    }
  }
  static CSOEconItemEquipped() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOEconItem : pb::GeneratedMessage<CSOEconItem, CSOEconItem.Builder> {
  private CSOEconItem() { }
  private static readonly CSOEconItem defaultInstance = new CSOEconItem().MakeReadOnly();
  private static readonly string[] _cSOEconItemFieldNames = new string[] { "account_id", "attribute", "custom_desc", "custom_name", "def_index", "equipped_state", "flags", "id", "in_use", "interior_item", "inventory", "level", "origin", "original_id", "quality", "quantity", "rarity", "style" };
  private static readonly uint[] _cSOEconItemFieldTags = new uint[] { 16, 98, 90, 82, 32, 146, 64, 8, 112, 106, 24, 48, 72, 128, 56, 40, 152, 120 };
  public static CSOEconItem DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOEconItem DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOEconItem ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOEconItem__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOEconItem, CSOEconItem.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOEconItem__FieldAccessorTable; }
  }
  
  public const int IdFieldNumber = 1;
  private bool hasId;
  private ulong id_;
  public bool HasId {
    get { return hasId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Id {
    get { return id_; }
  }
  
  public const int AccountIdFieldNumber = 2;
  private bool hasAccountId;
  private uint accountId_;
  public bool HasAccountId {
    get { return hasAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AccountId {
    get { return accountId_; }
  }
  
  public const int InventoryFieldNumber = 3;
  private bool hasInventory;
  private uint inventory_;
  public bool HasInventory {
    get { return hasInventory; }
  }
  [global::System.CLSCompliant(false)]
  public uint Inventory {
    get { return inventory_; }
  }
  
  public const int DefIndexFieldNumber = 4;
  private bool hasDefIndex;
  private uint defIndex_;
  public bool HasDefIndex {
    get { return hasDefIndex; }
  }
  [global::System.CLSCompliant(false)]
  public uint DefIndex {
    get { return defIndex_; }
  }
  
  public const int QuantityFieldNumber = 5;
  private bool hasQuantity;
  private uint quantity_;
  public bool HasQuantity {
    get { return hasQuantity; }
  }
  [global::System.CLSCompliant(false)]
  public uint Quantity {
    get { return quantity_; }
  }
  
  public const int LevelFieldNumber = 6;
  private bool hasLevel;
  private uint level_;
  public bool HasLevel {
    get { return hasLevel; }
  }
  [global::System.CLSCompliant(false)]
  public uint Level {
    get { return level_; }
  }
  
  public const int QualityFieldNumber = 7;
  private bool hasQuality;
  private uint quality_;
  public bool HasQuality {
    get { return hasQuality; }
  }
  [global::System.CLSCompliant(false)]
  public uint Quality {
    get { return quality_; }
  }
  
  public const int FlagsFieldNumber = 8;
  private bool hasFlags;
  private uint flags_;
  public bool HasFlags {
    get { return hasFlags; }
  }
  [global::System.CLSCompliant(false)]
  public uint Flags {
    get { return flags_; }
  }
  
  public const int OriginFieldNumber = 9;
  private bool hasOrigin;
  private uint origin_;
  public bool HasOrigin {
    get { return hasOrigin; }
  }
  [global::System.CLSCompliant(false)]
  public uint Origin {
    get { return origin_; }
  }
  
  public const int CustomNameFieldNumber = 10;
  private bool hasCustomName;
  private string customName_ = "";
  public bool HasCustomName {
    get { return hasCustomName; }
  }
  public string CustomName {
    get { return customName_; }
  }
  
  public const int CustomDescFieldNumber = 11;
  private bool hasCustomDesc;
  private string customDesc_ = "";
  public bool HasCustomDesc {
    get { return hasCustomDesc; }
  }
  public string CustomDesc {
    get { return customDesc_; }
  }
  
  public const int AttributeFieldNumber = 12;
  private pbc::PopsicleList<global::CSOEconItemAttribute> attribute_ = new pbc::PopsicleList<global::CSOEconItemAttribute>();
  public scg::IList<global::CSOEconItemAttribute> AttributeList {
    get { return attribute_; }
  }
  public int AttributeCount {
    get { return attribute_.Count; }
  }
  public global::CSOEconItemAttribute GetAttribute(int index) {
    return attribute_[index];
  }
  
  public const int InteriorItemFieldNumber = 13;
  private bool hasInteriorItem;
  private global::CSOEconItem interiorItem_;
  public bool HasInteriorItem {
    get { return hasInteriorItem; }
  }
  public global::CSOEconItem InteriorItem {
    get { return interiorItem_ ?? global::CSOEconItem.DefaultInstance; }
  }
  
  public const int InUseFieldNumber = 14;
  private bool hasInUse;
  private bool inUse_;
  public bool HasInUse {
    get { return hasInUse; }
  }
  public bool InUse {
    get { return inUse_; }
  }
  
  public const int StyleFieldNumber = 15;
  private bool hasStyle;
  private uint style_;
  public bool HasStyle {
    get { return hasStyle; }
  }
  [global::System.CLSCompliant(false)]
  public uint Style {
    get { return style_; }
  }
  
  public const int OriginalIdFieldNumber = 16;
  private bool hasOriginalId;
  private ulong originalId_;
  public bool HasOriginalId {
    get { return hasOriginalId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong OriginalId {
    get { return originalId_; }
  }
  
  public const int EquippedStateFieldNumber = 18;
  private pbc::PopsicleList<global::CSOEconItemEquipped> equippedState_ = new pbc::PopsicleList<global::CSOEconItemEquipped>();
  public scg::IList<global::CSOEconItemEquipped> EquippedStateList {
    get { return equippedState_; }
  }
  public int EquippedStateCount {
    get { return equippedState_.Count; }
  }
  public global::CSOEconItemEquipped GetEquippedState(int index) {
    return equippedState_[index];
  }
  
  public const int RarityFieldNumber = 19;
  private bool hasRarity;
  private uint rarity_;
  public bool HasRarity {
    get { return hasRarity; }
  }
  [global::System.CLSCompliant(false)]
  public uint Rarity {
    get { return rarity_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOEconItemFieldNames;
    if (hasId) {
      output.WriteUInt64(1, field_names[7], Id);
    }
    if (hasAccountId) {
      output.WriteUInt32(2, field_names[0], AccountId);
    }
    if (hasInventory) {
      output.WriteUInt32(3, field_names[10], Inventory);
    }
    if (hasDefIndex) {
      output.WriteUInt32(4, field_names[4], DefIndex);
    }
    if (hasQuantity) {
      output.WriteUInt32(5, field_names[15], Quantity);
    }
    if (hasLevel) {
      output.WriteUInt32(6, field_names[11], Level);
    }
    if (hasQuality) {
      output.WriteUInt32(7, field_names[14], Quality);
    }
    if (hasFlags) {
      output.WriteUInt32(8, field_names[6], Flags);
    }
    if (hasOrigin) {
      output.WriteUInt32(9, field_names[12], Origin);
    }
    if (hasCustomName) {
      output.WriteString(10, field_names[3], CustomName);
    }
    if (hasCustomDesc) {
      output.WriteString(11, field_names[2], CustomDesc);
    }
    if (attribute_.Count > 0) {
      output.WriteMessageArray(12, field_names[1], attribute_);
    }
    if (hasInteriorItem) {
      output.WriteMessage(13, field_names[9], InteriorItem);
    }
    if (hasInUse) {
      output.WriteBool(14, field_names[8], InUse);
    }
    if (hasStyle) {
      output.WriteUInt32(15, field_names[17], Style);
    }
    if (hasOriginalId) {
      output.WriteUInt64(16, field_names[13], OriginalId);
    }
    if (equippedState_.Count > 0) {
      output.WriteMessageArray(18, field_names[5], equippedState_);
    }
    if (hasRarity) {
      output.WriteUInt32(19, field_names[16], Rarity);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
      }
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, AccountId);
      }
      if (hasInventory) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Inventory);
      }
      if (hasDefIndex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, DefIndex);
      }
      if (hasQuantity) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, Quantity);
      }
      if (hasLevel) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, Level);
      }
      if (hasQuality) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, Quality);
      }
      if (hasFlags) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, Flags);
      }
      if (hasOrigin) {
        size += pb::CodedOutputStream.ComputeUInt32Size(9, Origin);
      }
      if (hasCustomName) {
        size += pb::CodedOutputStream.ComputeStringSize(10, CustomName);
      }
      if (hasCustomDesc) {
        size += pb::CodedOutputStream.ComputeStringSize(11, CustomDesc);
      }
      foreach (global::CSOEconItemAttribute element in AttributeList) {
        size += pb::CodedOutputStream.ComputeMessageSize(12, element);
      }
      if (hasInteriorItem) {
        size += pb::CodedOutputStream.ComputeMessageSize(13, InteriorItem);
      }
      if (hasInUse) {
        size += pb::CodedOutputStream.ComputeBoolSize(14, InUse);
      }
      if (hasStyle) {
        size += pb::CodedOutputStream.ComputeUInt32Size(15, Style);
      }
      if (hasOriginalId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(16, OriginalId);
      }
      foreach (global::CSOEconItemEquipped element in EquippedStateList) {
        size += pb::CodedOutputStream.ComputeMessageSize(18, element);
      }
      if (hasRarity) {
        size += pb::CodedOutputStream.ComputeUInt32Size(19, Rarity);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOEconItem ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItem ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItem ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItem ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOEconItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOEconItem ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOEconItem MakeReadOnly() {
    attribute_.MakeReadOnly();
    equippedState_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOEconItem prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOEconItem, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOEconItem cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOEconItem result;
    
    private CSOEconItem PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOEconItem original = result;
        result = new CSOEconItem();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOEconItem MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOEconItem.Descriptor; }
    }
    
    public override CSOEconItem DefaultInstanceForType {
      get { return global::CSOEconItem.DefaultInstance; }
    }
    
    public override CSOEconItem BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOEconItem) {
        return MergeFrom((CSOEconItem) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOEconItem other) {
      if (other == global::CSOEconItem.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasInventory) {
        Inventory = other.Inventory;
      }
      if (other.HasDefIndex) {
        DefIndex = other.DefIndex;
      }
      if (other.HasQuantity) {
        Quantity = other.Quantity;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      if (other.HasQuality) {
        Quality = other.Quality;
      }
      if (other.HasFlags) {
        Flags = other.Flags;
      }
      if (other.HasOrigin) {
        Origin = other.Origin;
      }
      if (other.HasCustomName) {
        CustomName = other.CustomName;
      }
      if (other.HasCustomDesc) {
        CustomDesc = other.CustomDesc;
      }
      if (other.attribute_.Count != 0) {
        result.attribute_.Add(other.attribute_);
      }
      if (other.HasInteriorItem) {
        MergeInteriorItem(other.InteriorItem);
      }
      if (other.HasInUse) {
        InUse = other.InUse;
      }
      if (other.HasStyle) {
        Style = other.Style;
      }
      if (other.HasOriginalId) {
        OriginalId = other.OriginalId;
      }
      if (other.equippedState_.Count != 0) {
        result.equippedState_.Add(other.equippedState_);
      }
      if (other.HasRarity) {
        Rarity = other.Rarity;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOEconItemFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOEconItemFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasId = input.ReadUInt64(ref result.id_);
            break;
          }
          case 16: {
            result.hasAccountId = input.ReadUInt32(ref result.accountId_);
            break;
          }
          case 24: {
            result.hasInventory = input.ReadUInt32(ref result.inventory_);
            break;
          }
          case 32: {
            result.hasDefIndex = input.ReadUInt32(ref result.defIndex_);
            break;
          }
          case 40: {
            result.hasQuantity = input.ReadUInt32(ref result.quantity_);
            break;
          }
          case 48: {
            result.hasLevel = input.ReadUInt32(ref result.level_);
            break;
          }
          case 56: {
            result.hasQuality = input.ReadUInt32(ref result.quality_);
            break;
          }
          case 64: {
            result.hasFlags = input.ReadUInt32(ref result.flags_);
            break;
          }
          case 72: {
            result.hasOrigin = input.ReadUInt32(ref result.origin_);
            break;
          }
          case 82: {
            result.hasCustomName = input.ReadString(ref result.customName_);
            break;
          }
          case 90: {
            result.hasCustomDesc = input.ReadString(ref result.customDesc_);
            break;
          }
          case 98: {
            input.ReadMessageArray(tag, field_name, result.attribute_, global::CSOEconItemAttribute.DefaultInstance, extensionRegistry);
            break;
          }
          case 106: {
            global::CSOEconItem.Builder subBuilder = global::CSOEconItem.CreateBuilder();
            if (result.hasInteriorItem) {
              subBuilder.MergeFrom(InteriorItem);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            InteriorItem = subBuilder.BuildPartial();
            break;
          }
          case 112: {
            result.hasInUse = input.ReadBool(ref result.inUse_);
            break;
          }
          case 120: {
            result.hasStyle = input.ReadUInt32(ref result.style_);
            break;
          }
          case 128: {
            result.hasOriginalId = input.ReadUInt64(ref result.originalId_);
            break;
          }
          case 146: {
            input.ReadMessageArray(tag, field_name, result.equippedState_, global::CSOEconItemEquipped.DefaultInstance, extensionRegistry);
            break;
          }
          case 152: {
            result.hasRarity = input.ReadUInt32(ref result.rarity_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasId {
      get { return result.hasId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetId(ulong value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0UL;
      return this;
    }
    
    public bool HasAccountId {
      get { return result.hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return result.AccountId; }
      set { SetAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAccountId(uint value) {
      PrepareBuilder();
      result.hasAccountId = true;
      result.accountId_ = value;
      return this;
    }
    public Builder ClearAccountId() {
      PrepareBuilder();
      result.hasAccountId = false;
      result.accountId_ = 0;
      return this;
    }
    
    public bool HasInventory {
      get { return result.hasInventory; }
    }
    [global::System.CLSCompliant(false)]
    public uint Inventory {
      get { return result.Inventory; }
      set { SetInventory(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetInventory(uint value) {
      PrepareBuilder();
      result.hasInventory = true;
      result.inventory_ = value;
      return this;
    }
    public Builder ClearInventory() {
      PrepareBuilder();
      result.hasInventory = false;
      result.inventory_ = 0;
      return this;
    }
    
    public bool HasDefIndex {
      get { return result.hasDefIndex; }
    }
    [global::System.CLSCompliant(false)]
    public uint DefIndex {
      get { return result.DefIndex; }
      set { SetDefIndex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDefIndex(uint value) {
      PrepareBuilder();
      result.hasDefIndex = true;
      result.defIndex_ = value;
      return this;
    }
    public Builder ClearDefIndex() {
      PrepareBuilder();
      result.hasDefIndex = false;
      result.defIndex_ = 0;
      return this;
    }
    
    public bool HasQuantity {
      get { return result.hasQuantity; }
    }
    [global::System.CLSCompliant(false)]
    public uint Quantity {
      get { return result.Quantity; }
      set { SetQuantity(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetQuantity(uint value) {
      PrepareBuilder();
      result.hasQuantity = true;
      result.quantity_ = value;
      return this;
    }
    public Builder ClearQuantity() {
      PrepareBuilder();
      result.hasQuantity = false;
      result.quantity_ = 0;
      return this;
    }
    
    public bool HasLevel {
      get { return result.hasLevel; }
    }
    [global::System.CLSCompliant(false)]
    public uint Level {
      get { return result.Level; }
      set { SetLevel(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetLevel(uint value) {
      PrepareBuilder();
      result.hasLevel = true;
      result.level_ = value;
      return this;
    }
    public Builder ClearLevel() {
      PrepareBuilder();
      result.hasLevel = false;
      result.level_ = 0;
      return this;
    }
    
    public bool HasQuality {
      get { return result.hasQuality; }
    }
    [global::System.CLSCompliant(false)]
    public uint Quality {
      get { return result.Quality; }
      set { SetQuality(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetQuality(uint value) {
      PrepareBuilder();
      result.hasQuality = true;
      result.quality_ = value;
      return this;
    }
    public Builder ClearQuality() {
      PrepareBuilder();
      result.hasQuality = false;
      result.quality_ = 0;
      return this;
    }
    
    public bool HasFlags {
      get { return result.hasFlags; }
    }
    [global::System.CLSCompliant(false)]
    public uint Flags {
      get { return result.Flags; }
      set { SetFlags(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetFlags(uint value) {
      PrepareBuilder();
      result.hasFlags = true;
      result.flags_ = value;
      return this;
    }
    public Builder ClearFlags() {
      PrepareBuilder();
      result.hasFlags = false;
      result.flags_ = 0;
      return this;
    }
    
    public bool HasOrigin {
      get { return result.hasOrigin; }
    }
    [global::System.CLSCompliant(false)]
    public uint Origin {
      get { return result.Origin; }
      set { SetOrigin(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetOrigin(uint value) {
      PrepareBuilder();
      result.hasOrigin = true;
      result.origin_ = value;
      return this;
    }
    public Builder ClearOrigin() {
      PrepareBuilder();
      result.hasOrigin = false;
      result.origin_ = 0;
      return this;
    }
    
    public bool HasCustomName {
      get { return result.hasCustomName; }
    }
    public string CustomName {
      get { return result.CustomName; }
      set { SetCustomName(value); }
    }
    public Builder SetCustomName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCustomName = true;
      result.customName_ = value;
      return this;
    }
    public Builder ClearCustomName() {
      PrepareBuilder();
      result.hasCustomName = false;
      result.customName_ = "";
      return this;
    }
    
    public bool HasCustomDesc {
      get { return result.hasCustomDesc; }
    }
    public string CustomDesc {
      get { return result.CustomDesc; }
      set { SetCustomDesc(value); }
    }
    public Builder SetCustomDesc(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCustomDesc = true;
      result.customDesc_ = value;
      return this;
    }
    public Builder ClearCustomDesc() {
      PrepareBuilder();
      result.hasCustomDesc = false;
      result.customDesc_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::CSOEconItemAttribute> AttributeList {
      get { return PrepareBuilder().attribute_; }
    }
    public int AttributeCount {
      get { return result.AttributeCount; }
    }
    public global::CSOEconItemAttribute GetAttribute(int index) {
      return result.GetAttribute(index);
    }
    public Builder SetAttribute(int index, global::CSOEconItemAttribute value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.attribute_[index] = value;
      return this;
    }
    public Builder SetAttribute(int index, global::CSOEconItemAttribute.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.attribute_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddAttribute(global::CSOEconItemAttribute value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.attribute_.Add(value);
      return this;
    }
    public Builder AddAttribute(global::CSOEconItemAttribute.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.attribute_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeAttribute(scg::IEnumerable<global::CSOEconItemAttribute> values) {
      PrepareBuilder();
      result.attribute_.Add(values);
      return this;
    }
    public Builder ClearAttribute() {
      PrepareBuilder();
      result.attribute_.Clear();
      return this;
    }
    
    public bool HasInteriorItem {
     get { return result.hasInteriorItem; }
    }
    public global::CSOEconItem InteriorItem {
      get { return result.InteriorItem; }
      set { SetInteriorItem(value); }
    }
    public Builder SetInteriorItem(global::CSOEconItem value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasInteriorItem = true;
      result.interiorItem_ = value;
      return this;
    }
    public Builder SetInteriorItem(global::CSOEconItem.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasInteriorItem = true;
      result.interiorItem_ = builderForValue.Build();
      return this;
    }
    public Builder MergeInteriorItem(global::CSOEconItem value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasInteriorItem &&
          result.interiorItem_ != global::CSOEconItem.DefaultInstance) {
          result.interiorItem_ = global::CSOEconItem.CreateBuilder(result.interiorItem_).MergeFrom(value).BuildPartial();
      } else {
        result.interiorItem_ = value;
      }
      result.hasInteriorItem = true;
      return this;
    }
    public Builder ClearInteriorItem() {
      PrepareBuilder();
      result.hasInteriorItem = false;
      result.interiorItem_ = null;
      return this;
    }
    
    public bool HasInUse {
      get { return result.hasInUse; }
    }
    public bool InUse {
      get { return result.InUse; }
      set { SetInUse(value); }
    }
    public Builder SetInUse(bool value) {
      PrepareBuilder();
      result.hasInUse = true;
      result.inUse_ = value;
      return this;
    }
    public Builder ClearInUse() {
      PrepareBuilder();
      result.hasInUse = false;
      result.inUse_ = false;
      return this;
    }
    
    public bool HasStyle {
      get { return result.hasStyle; }
    }
    [global::System.CLSCompliant(false)]
    public uint Style {
      get { return result.Style; }
      set { SetStyle(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetStyle(uint value) {
      PrepareBuilder();
      result.hasStyle = true;
      result.style_ = value;
      return this;
    }
    public Builder ClearStyle() {
      PrepareBuilder();
      result.hasStyle = false;
      result.style_ = 0;
      return this;
    }
    
    public bool HasOriginalId {
      get { return result.hasOriginalId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong OriginalId {
      get { return result.OriginalId; }
      set { SetOriginalId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetOriginalId(ulong value) {
      PrepareBuilder();
      result.hasOriginalId = true;
      result.originalId_ = value;
      return this;
    }
    public Builder ClearOriginalId() {
      PrepareBuilder();
      result.hasOriginalId = false;
      result.originalId_ = 0UL;
      return this;
    }
    
    public pbc::IPopsicleList<global::CSOEconItemEquipped> EquippedStateList {
      get { return PrepareBuilder().equippedState_; }
    }
    public int EquippedStateCount {
      get { return result.EquippedStateCount; }
    }
    public global::CSOEconItemEquipped GetEquippedState(int index) {
      return result.GetEquippedState(index);
    }
    public Builder SetEquippedState(int index, global::CSOEconItemEquipped value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.equippedState_[index] = value;
      return this;
    }
    public Builder SetEquippedState(int index, global::CSOEconItemEquipped.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.equippedState_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddEquippedState(global::CSOEconItemEquipped value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.equippedState_.Add(value);
      return this;
    }
    public Builder AddEquippedState(global::CSOEconItemEquipped.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.equippedState_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeEquippedState(scg::IEnumerable<global::CSOEconItemEquipped> values) {
      PrepareBuilder();
      result.equippedState_.Add(values);
      return this;
    }
    public Builder ClearEquippedState() {
      PrepareBuilder();
      result.equippedState_.Clear();
      return this;
    }
    
    public bool HasRarity {
      get { return result.hasRarity; }
    }
    [global::System.CLSCompliant(false)]
    public uint Rarity {
      get { return result.Rarity; }
      set { SetRarity(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetRarity(uint value) {
      PrepareBuilder();
      result.hasRarity = true;
      result.rarity_ = value;
      return this;
    }
    public Builder ClearRarity() {
      PrepareBuilder();
      result.hasRarity = false;
      result.rarity_ = 0;
      return this;
    }
  }
  static CSOEconItem() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgAdjustItemEquippedState : pb::GeneratedMessage<CMsgAdjustItemEquippedState, CMsgAdjustItemEquippedState.Builder> {
  private CMsgAdjustItemEquippedState() { }
  private static readonly CMsgAdjustItemEquippedState defaultInstance = new CMsgAdjustItemEquippedState().MakeReadOnly();
  private static readonly string[] _cMsgAdjustItemEquippedStateFieldNames = new string[] { "item_id", "new_class", "new_slot", "swap" };
  private static readonly uint[] _cMsgAdjustItemEquippedStateFieldTags = new uint[] { 8, 16, 24, 32 };
  public static CMsgAdjustItemEquippedState DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgAdjustItemEquippedState DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgAdjustItemEquippedState ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgAdjustItemEquippedState__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgAdjustItemEquippedState, CMsgAdjustItemEquippedState.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgAdjustItemEquippedState__FieldAccessorTable; }
  }
  
  public const int ItemIdFieldNumber = 1;
  private bool hasItemId;
  private ulong itemId_;
  public bool HasItemId {
    get { return hasItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ItemId {
    get { return itemId_; }
  }
  
  public const int NewClassFieldNumber = 2;
  private bool hasNewClass;
  private uint newClass_;
  public bool HasNewClass {
    get { return hasNewClass; }
  }
  [global::System.CLSCompliant(false)]
  public uint NewClass {
    get { return newClass_; }
  }
  
  public const int NewSlotFieldNumber = 3;
  private bool hasNewSlot;
  private uint newSlot_;
  public bool HasNewSlot {
    get { return hasNewSlot; }
  }
  [global::System.CLSCompliant(false)]
  public uint NewSlot {
    get { return newSlot_; }
  }
  
  public const int SwapFieldNumber = 4;
  private bool hasSwap;
  private bool swap_;
  public bool HasSwap {
    get { return hasSwap; }
  }
  public bool Swap {
    get { return swap_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgAdjustItemEquippedStateFieldNames;
    if (hasItemId) {
      output.WriteUInt64(1, field_names[0], ItemId);
    }
    if (hasNewClass) {
      output.WriteUInt32(2, field_names[1], NewClass);
    }
    if (hasNewSlot) {
      output.WriteUInt32(3, field_names[2], NewSlot);
    }
    if (hasSwap) {
      output.WriteBool(4, field_names[3], Swap);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, ItemId);
      }
      if (hasNewClass) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, NewClass);
      }
      if (hasNewSlot) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, NewSlot);
      }
      if (hasSwap) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, Swap);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgAdjustItemEquippedState ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAdjustItemEquippedState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAdjustItemEquippedState ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgAdjustItemEquippedState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgAdjustItemEquippedState ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAdjustItemEquippedState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgAdjustItemEquippedState ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgAdjustItemEquippedState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgAdjustItemEquippedState ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgAdjustItemEquippedState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgAdjustItemEquippedState MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgAdjustItemEquippedState prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgAdjustItemEquippedState, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgAdjustItemEquippedState cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgAdjustItemEquippedState result;
    
    private CMsgAdjustItemEquippedState PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgAdjustItemEquippedState original = result;
        result = new CMsgAdjustItemEquippedState();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgAdjustItemEquippedState MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgAdjustItemEquippedState.Descriptor; }
    }
    
    public override CMsgAdjustItemEquippedState DefaultInstanceForType {
      get { return global::CMsgAdjustItemEquippedState.DefaultInstance; }
    }
    
    public override CMsgAdjustItemEquippedState BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgAdjustItemEquippedState) {
        return MergeFrom((CMsgAdjustItemEquippedState) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgAdjustItemEquippedState other) {
      if (other == global::CMsgAdjustItemEquippedState.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasNewClass) {
        NewClass = other.NewClass;
      }
      if (other.HasNewSlot) {
        NewSlot = other.NewSlot;
      }
      if (other.HasSwap) {
        Swap = other.Swap;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgAdjustItemEquippedStateFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgAdjustItemEquippedStateFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasItemId = input.ReadUInt64(ref result.itemId_);
            break;
          }
          case 16: {
            result.hasNewClass = input.ReadUInt32(ref result.newClass_);
            break;
          }
          case 24: {
            result.hasNewSlot = input.ReadUInt32(ref result.newSlot_);
            break;
          }
          case 32: {
            result.hasSwap = input.ReadBool(ref result.swap_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemId {
      get { return result.hasItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ItemId {
      get { return result.ItemId; }
      set { SetItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemId(ulong value) {
      PrepareBuilder();
      result.hasItemId = true;
      result.itemId_ = value;
      return this;
    }
    public Builder ClearItemId() {
      PrepareBuilder();
      result.hasItemId = false;
      result.itemId_ = 0UL;
      return this;
    }
    
    public bool HasNewClass {
      get { return result.hasNewClass; }
    }
    [global::System.CLSCompliant(false)]
    public uint NewClass {
      get { return result.NewClass; }
      set { SetNewClass(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetNewClass(uint value) {
      PrepareBuilder();
      result.hasNewClass = true;
      result.newClass_ = value;
      return this;
    }
    public Builder ClearNewClass() {
      PrepareBuilder();
      result.hasNewClass = false;
      result.newClass_ = 0;
      return this;
    }
    
    public bool HasNewSlot {
      get { return result.hasNewSlot; }
    }
    [global::System.CLSCompliant(false)]
    public uint NewSlot {
      get { return result.NewSlot; }
      set { SetNewSlot(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetNewSlot(uint value) {
      PrepareBuilder();
      result.hasNewSlot = true;
      result.newSlot_ = value;
      return this;
    }
    public Builder ClearNewSlot() {
      PrepareBuilder();
      result.hasNewSlot = false;
      result.newSlot_ = 0;
      return this;
    }
    
    public bool HasSwap {
      get { return result.hasSwap; }
    }
    public bool Swap {
      get { return result.Swap; }
      set { SetSwap(value); }
    }
    public Builder SetSwap(bool value) {
      PrepareBuilder();
      result.hasSwap = true;
      result.swap_ = value;
      return this;
    }
    public Builder ClearSwap() {
      PrepareBuilder();
      result.hasSwap = false;
      result.swap_ = false;
      return this;
    }
  }
  static CMsgAdjustItemEquippedState() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSortItems : pb::GeneratedMessage<CMsgSortItems, CMsgSortItems.Builder> {
  private CMsgSortItems() { }
  private static readonly CMsgSortItems defaultInstance = new CMsgSortItems().MakeReadOnly();
  private static readonly string[] _cMsgSortItemsFieldNames = new string[] { "sort_type" };
  private static readonly uint[] _cMsgSortItemsFieldTags = new uint[] { 8 };
  public static CMsgSortItems DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSortItems DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSortItems ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgSortItems__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSortItems, CMsgSortItems.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgSortItems__FieldAccessorTable; }
  }
  
  public const int SortTypeFieldNumber = 1;
  private bool hasSortType;
  private uint sortType_;
  public bool HasSortType {
    get { return hasSortType; }
  }
  [global::System.CLSCompliant(false)]
  public uint SortType {
    get { return sortType_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSortItemsFieldNames;
    if (hasSortType) {
      output.WriteUInt32(1, field_names[0], SortType);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSortType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, SortType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSortItems ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSortItems ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSortItems ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSortItems ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSortItems ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSortItems ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSortItems ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSortItems ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSortItems ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSortItems ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSortItems MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSortItems prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSortItems, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSortItems cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSortItems result;
    
    private CMsgSortItems PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSortItems original = result;
        result = new CMsgSortItems();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSortItems MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSortItems.Descriptor; }
    }
    
    public override CMsgSortItems DefaultInstanceForType {
      get { return global::CMsgSortItems.DefaultInstance; }
    }
    
    public override CMsgSortItems BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSortItems) {
        return MergeFrom((CMsgSortItems) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSortItems other) {
      if (other == global::CMsgSortItems.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSortType) {
        SortType = other.SortType;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSortItemsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSortItemsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSortType = input.ReadUInt32(ref result.sortType_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSortType {
      get { return result.hasSortType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SortType {
      get { return result.SortType; }
      set { SetSortType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSortType(uint value) {
      PrepareBuilder();
      result.hasSortType = true;
      result.sortType_ = value;
      return this;
    }
    public Builder ClearSortType() {
      PrepareBuilder();
      result.hasSortType = false;
      result.sortType_ = 0;
      return this;
    }
  }
  static CMsgSortItems() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOEconClaimCode : pb::GeneratedMessage<CSOEconClaimCode, CSOEconClaimCode.Builder> {
  private CSOEconClaimCode() { }
  private static readonly CSOEconClaimCode defaultInstance = new CSOEconClaimCode().MakeReadOnly();
  private static readonly string[] _cSOEconClaimCodeFieldNames = new string[] { "account_id", "code", "code_type", "time_acquired" };
  private static readonly uint[] _cSOEconClaimCodeFieldTags = new uint[] { 8, 34, 16, 24 };
  public static CSOEconClaimCode DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOEconClaimCode DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOEconClaimCode ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOEconClaimCode__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOEconClaimCode, CSOEconClaimCode.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOEconClaimCode__FieldAccessorTable; }
  }
  
  public const int AccountIdFieldNumber = 1;
  private bool hasAccountId;
  private uint accountId_;
  public bool HasAccountId {
    get { return hasAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AccountId {
    get { return accountId_; }
  }
  
  public const int CodeTypeFieldNumber = 2;
  private bool hasCodeType;
  private uint codeType_;
  public bool HasCodeType {
    get { return hasCodeType; }
  }
  [global::System.CLSCompliant(false)]
  public uint CodeType {
    get { return codeType_; }
  }
  
  public const int TimeAcquiredFieldNumber = 3;
  private bool hasTimeAcquired;
  private uint timeAcquired_;
  public bool HasTimeAcquired {
    get { return hasTimeAcquired; }
  }
  [global::System.CLSCompliant(false)]
  public uint TimeAcquired {
    get { return timeAcquired_; }
  }
  
  public const int CodeFieldNumber = 4;
  private bool hasCode;
  private string code_ = "";
  public bool HasCode {
    get { return hasCode; }
  }
  public string Code {
    get { return code_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOEconClaimCodeFieldNames;
    if (hasAccountId) {
      output.WriteUInt32(1, field_names[0], AccountId);
    }
    if (hasCodeType) {
      output.WriteUInt32(2, field_names[2], CodeType);
    }
    if (hasTimeAcquired) {
      output.WriteUInt32(3, field_names[3], TimeAcquired);
    }
    if (hasCode) {
      output.WriteString(4, field_names[1], Code);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, AccountId);
      }
      if (hasCodeType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, CodeType);
      }
      if (hasTimeAcquired) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, TimeAcquired);
      }
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOEconClaimCode ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconClaimCode ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconClaimCode ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconClaimCode ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconClaimCode ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconClaimCode ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOEconClaimCode ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOEconClaimCode ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOEconClaimCode ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconClaimCode ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOEconClaimCode MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOEconClaimCode prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOEconClaimCode, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOEconClaimCode cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOEconClaimCode result;
    
    private CSOEconClaimCode PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOEconClaimCode original = result;
        result = new CSOEconClaimCode();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOEconClaimCode MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOEconClaimCode.Descriptor; }
    }
    
    public override CSOEconClaimCode DefaultInstanceForType {
      get { return global::CSOEconClaimCode.DefaultInstance; }
    }
    
    public override CSOEconClaimCode BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOEconClaimCode) {
        return MergeFrom((CSOEconClaimCode) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOEconClaimCode other) {
      if (other == global::CSOEconClaimCode.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasCodeType) {
        CodeType = other.CodeType;
      }
      if (other.HasTimeAcquired) {
        TimeAcquired = other.TimeAcquired;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOEconClaimCodeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOEconClaimCodeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAccountId = input.ReadUInt32(ref result.accountId_);
            break;
          }
          case 16: {
            result.hasCodeType = input.ReadUInt32(ref result.codeType_);
            break;
          }
          case 24: {
            result.hasTimeAcquired = input.ReadUInt32(ref result.timeAcquired_);
            break;
          }
          case 34: {
            result.hasCode = input.ReadString(ref result.code_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAccountId {
      get { return result.hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return result.AccountId; }
      set { SetAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAccountId(uint value) {
      PrepareBuilder();
      result.hasAccountId = true;
      result.accountId_ = value;
      return this;
    }
    public Builder ClearAccountId() {
      PrepareBuilder();
      result.hasAccountId = false;
      result.accountId_ = 0;
      return this;
    }
    
    public bool HasCodeType {
      get { return result.hasCodeType; }
    }
    [global::System.CLSCompliant(false)]
    public uint CodeType {
      get { return result.CodeType; }
      set { SetCodeType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetCodeType(uint value) {
      PrepareBuilder();
      result.hasCodeType = true;
      result.codeType_ = value;
      return this;
    }
    public Builder ClearCodeType() {
      PrepareBuilder();
      result.hasCodeType = false;
      result.codeType_ = 0;
      return this;
    }
    
    public bool HasTimeAcquired {
      get { return result.hasTimeAcquired; }
    }
    [global::System.CLSCompliant(false)]
    public uint TimeAcquired {
      get { return result.TimeAcquired; }
      set { SetTimeAcquired(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTimeAcquired(uint value) {
      PrepareBuilder();
      result.hasTimeAcquired = true;
      result.timeAcquired_ = value;
      return this;
    }
    public Builder ClearTimeAcquired() {
      PrepareBuilder();
      result.hasTimeAcquired = false;
      result.timeAcquired_ = 0;
      return this;
    }
    
    public bool HasCode {
      get { return result.hasCode; }
    }
    public string Code {
      get { return result.Code; }
      set { SetCode(value); }
    }
    public Builder SetCode(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCode = true;
      result.code_ = value;
      return this;
    }
    public Builder ClearCode() {
      PrepareBuilder();
      result.hasCode = false;
      result.code_ = "";
      return this;
    }
  }
  static CSOEconClaimCode() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgStoreGetUserData : pb::GeneratedMessage<CMsgStoreGetUserData, CMsgStoreGetUserData.Builder> {
  private CMsgStoreGetUserData() { }
  private static readonly CMsgStoreGetUserData defaultInstance = new CMsgStoreGetUserData().MakeReadOnly();
  private static readonly string[] _cMsgStoreGetUserDataFieldNames = new string[] { "price_sheet_version" };
  private static readonly uint[] _cMsgStoreGetUserDataFieldTags = new uint[] { 13 };
  public static CMsgStoreGetUserData DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgStoreGetUserData DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgStoreGetUserData ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgStoreGetUserData__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgStoreGetUserData, CMsgStoreGetUserData.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgStoreGetUserData__FieldAccessorTable; }
  }
  
  public const int PriceSheetVersionFieldNumber = 1;
  private bool hasPriceSheetVersion;
  private uint priceSheetVersion_;
  public bool HasPriceSheetVersion {
    get { return hasPriceSheetVersion; }
  }
  [global::System.CLSCompliant(false)]
  public uint PriceSheetVersion {
    get { return priceSheetVersion_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgStoreGetUserDataFieldNames;
    if (hasPriceSheetVersion) {
      output.WriteFixed32(1, field_names[0], PriceSheetVersion);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPriceSheetVersion) {
        size += pb::CodedOutputStream.ComputeFixed32Size(1, PriceSheetVersion);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgStoreGetUserData ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgStoreGetUserData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgStoreGetUserData ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgStoreGetUserData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgStoreGetUserData ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgStoreGetUserData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgStoreGetUserData ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgStoreGetUserData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgStoreGetUserData ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgStoreGetUserData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgStoreGetUserData MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgStoreGetUserData prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgStoreGetUserData, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgStoreGetUserData cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgStoreGetUserData result;
    
    private CMsgStoreGetUserData PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgStoreGetUserData original = result;
        result = new CMsgStoreGetUserData();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgStoreGetUserData MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgStoreGetUserData.Descriptor; }
    }
    
    public override CMsgStoreGetUserData DefaultInstanceForType {
      get { return global::CMsgStoreGetUserData.DefaultInstance; }
    }
    
    public override CMsgStoreGetUserData BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgStoreGetUserData) {
        return MergeFrom((CMsgStoreGetUserData) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgStoreGetUserData other) {
      if (other == global::CMsgStoreGetUserData.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPriceSheetVersion) {
        PriceSheetVersion = other.PriceSheetVersion;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgStoreGetUserDataFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgStoreGetUserDataFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 13: {
            result.hasPriceSheetVersion = input.ReadFixed32(ref result.priceSheetVersion_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPriceSheetVersion {
      get { return result.hasPriceSheetVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint PriceSheetVersion {
      get { return result.PriceSheetVersion; }
      set { SetPriceSheetVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPriceSheetVersion(uint value) {
      PrepareBuilder();
      result.hasPriceSheetVersion = true;
      result.priceSheetVersion_ = value;
      return this;
    }
    public Builder ClearPriceSheetVersion() {
      PrepareBuilder();
      result.hasPriceSheetVersion = false;
      result.priceSheetVersion_ = 0;
      return this;
    }
  }
  static CMsgStoreGetUserData() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgStoreGetUserDataResponse : pb::GeneratedMessage<CMsgStoreGetUserDataResponse, CMsgStoreGetUserDataResponse.Builder> {
  private CMsgStoreGetUserDataResponse() { }
  private static readonly CMsgStoreGetUserDataResponse defaultInstance = new CMsgStoreGetUserDataResponse().MakeReadOnly();
  private static readonly string[] _cMsgStoreGetUserDataResponseFieldNames = new string[] { "country", "currency", "default_item_sort", "experiment_data", "featured_item_idx", "popular_items", "price_sheet", "price_sheet_version", "result", "show_hat_descriptions" };
  private static readonly uint[] _cMsgStoreGetUserDataResponseFieldTags = new uint[] { 26, 16, 72, 40, 48, 80, 66, 37, 8, 56 };
  public static CMsgStoreGetUserDataResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgStoreGetUserDataResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgStoreGetUserDataResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgStoreGetUserDataResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgStoreGetUserDataResponse, CMsgStoreGetUserDataResponse.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgStoreGetUserDataResponse__FieldAccessorTable; }
  }
  
  public const int ResultFieldNumber = 1;
  private bool hasResult;
  private int result_;
  public bool HasResult {
    get { return hasResult; }
  }
  public int Result {
    get { return result_; }
  }
  
  public const int CurrencyFieldNumber = 2;
  private bool hasCurrency;
  private int currency_;
  public bool HasCurrency {
    get { return hasCurrency; }
  }
  public int Currency {
    get { return currency_; }
  }
  
  public const int CountryFieldNumber = 3;
  private bool hasCountry;
  private string country_ = "";
  public bool HasCountry {
    get { return hasCountry; }
  }
  public string Country {
    get { return country_; }
  }
  
  public const int PriceSheetVersionFieldNumber = 4;
  private bool hasPriceSheetVersion;
  private uint priceSheetVersion_;
  public bool HasPriceSheetVersion {
    get { return hasPriceSheetVersion; }
  }
  [global::System.CLSCompliant(false)]
  public uint PriceSheetVersion {
    get { return priceSheetVersion_; }
  }
  
  public const int ExperimentDataFieldNumber = 5;
  private bool hasExperimentData;
  private ulong experimentData_;
  public bool HasExperimentData {
    get { return hasExperimentData; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ExperimentData {
    get { return experimentData_; }
  }
  
  public const int FeaturedItemIdxFieldNumber = 6;
  private bool hasFeaturedItemIdx;
  private int featuredItemIdx_;
  public bool HasFeaturedItemIdx {
    get { return hasFeaturedItemIdx; }
  }
  public int FeaturedItemIdx {
    get { return featuredItemIdx_; }
  }
  
  public const int ShowHatDescriptionsFieldNumber = 7;
  private bool hasShowHatDescriptions;
  private bool showHatDescriptions_ = true;
  public bool HasShowHatDescriptions {
    get { return hasShowHatDescriptions; }
  }
  public bool ShowHatDescriptions {
    get { return showHatDescriptions_; }
  }
  
  public const int PriceSheetFieldNumber = 8;
  private bool hasPriceSheet;
  private pb::ByteString priceSheet_ = pb::ByteString.Empty;
  public bool HasPriceSheet {
    get { return hasPriceSheet; }
  }
  public pb::ByteString PriceSheet {
    get { return priceSheet_; }
  }
  
  public const int DefaultItemSortFieldNumber = 9;
  private bool hasDefaultItemSort;
  private int defaultItemSort_;
  public bool HasDefaultItemSort {
    get { return hasDefaultItemSort; }
  }
  public int DefaultItemSort {
    get { return defaultItemSort_; }
  }
  
  public const int PopularItemsFieldNumber = 10;
  private pbc::PopsicleList<uint> popularItems_ = new pbc::PopsicleList<uint>();
  [global::System.CLSCompliant(false)]
  public scg::IList<uint> PopularItemsList {
    get { return pbc::Lists.AsReadOnly(popularItems_); }
  }
  public int PopularItemsCount {
    get { return popularItems_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public uint GetPopularItems(int index) {
    return popularItems_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgStoreGetUserDataResponseFieldNames;
    if (hasResult) {
      output.WriteInt32(1, field_names[8], Result);
    }
    if (hasCurrency) {
      output.WriteInt32(2, field_names[1], Currency);
    }
    if (hasCountry) {
      output.WriteString(3, field_names[0], Country);
    }
    if (hasPriceSheetVersion) {
      output.WriteFixed32(4, field_names[7], PriceSheetVersion);
    }
    if (hasExperimentData) {
      output.WriteUInt64(5, field_names[3], ExperimentData);
    }
    if (hasFeaturedItemIdx) {
      output.WriteInt32(6, field_names[4], FeaturedItemIdx);
    }
    if (hasShowHatDescriptions) {
      output.WriteBool(7, field_names[9], ShowHatDescriptions);
    }
    if (hasPriceSheet) {
      output.WriteBytes(8, field_names[6], PriceSheet);
    }
    if (hasDefaultItemSort) {
      output.WriteInt32(9, field_names[2], DefaultItemSort);
    }
    if (popularItems_.Count > 0) {
      output.WriteUInt32Array(10, field_names[5], popularItems_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, Result);
      }
      if (hasCurrency) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Currency);
      }
      if (hasCountry) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Country);
      }
      if (hasPriceSheetVersion) {
        size += pb::CodedOutputStream.ComputeFixed32Size(4, PriceSheetVersion);
      }
      if (hasExperimentData) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, ExperimentData);
      }
      if (hasFeaturedItemIdx) {
        size += pb::CodedOutputStream.ComputeInt32Size(6, FeaturedItemIdx);
      }
      if (hasShowHatDescriptions) {
        size += pb::CodedOutputStream.ComputeBoolSize(7, ShowHatDescriptions);
      }
      if (hasPriceSheet) {
        size += pb::CodedOutputStream.ComputeBytesSize(8, PriceSheet);
      }
      if (hasDefaultItemSort) {
        size += pb::CodedOutputStream.ComputeInt32Size(9, DefaultItemSort);
      }
      {
        int dataSize = 0;
        foreach (uint element in PopularItemsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * popularItems_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgStoreGetUserDataResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgStoreGetUserDataResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgStoreGetUserDataResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgStoreGetUserDataResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgStoreGetUserDataResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgStoreGetUserDataResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgStoreGetUserDataResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgStoreGetUserDataResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgStoreGetUserDataResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgStoreGetUserDataResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgStoreGetUserDataResponse MakeReadOnly() {
    popularItems_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgStoreGetUserDataResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgStoreGetUserDataResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgStoreGetUserDataResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgStoreGetUserDataResponse result;
    
    private CMsgStoreGetUserDataResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgStoreGetUserDataResponse original = result;
        result = new CMsgStoreGetUserDataResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgStoreGetUserDataResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgStoreGetUserDataResponse.Descriptor; }
    }
    
    public override CMsgStoreGetUserDataResponse DefaultInstanceForType {
      get { return global::CMsgStoreGetUserDataResponse.DefaultInstance; }
    }
    
    public override CMsgStoreGetUserDataResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgStoreGetUserDataResponse) {
        return MergeFrom((CMsgStoreGetUserDataResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgStoreGetUserDataResponse other) {
      if (other == global::CMsgStoreGetUserDataResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasCurrency) {
        Currency = other.Currency;
      }
      if (other.HasCountry) {
        Country = other.Country;
      }
      if (other.HasPriceSheetVersion) {
        PriceSheetVersion = other.PriceSheetVersion;
      }
      if (other.HasExperimentData) {
        ExperimentData = other.ExperimentData;
      }
      if (other.HasFeaturedItemIdx) {
        FeaturedItemIdx = other.FeaturedItemIdx;
      }
      if (other.HasShowHatDescriptions) {
        ShowHatDescriptions = other.ShowHatDescriptions;
      }
      if (other.HasPriceSheet) {
        PriceSheet = other.PriceSheet;
      }
      if (other.HasDefaultItemSort) {
        DefaultItemSort = other.DefaultItemSort;
      }
      if (other.popularItems_.Count != 0) {
        result.popularItems_.Add(other.popularItems_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgStoreGetUserDataResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgStoreGetUserDataResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasResult = input.ReadInt32(ref result.result_);
            break;
          }
          case 16: {
            result.hasCurrency = input.ReadInt32(ref result.currency_);
            break;
          }
          case 26: {
            result.hasCountry = input.ReadString(ref result.country_);
            break;
          }
          case 37: {
            result.hasPriceSheetVersion = input.ReadFixed32(ref result.priceSheetVersion_);
            break;
          }
          case 40: {
            result.hasExperimentData = input.ReadUInt64(ref result.experimentData_);
            break;
          }
          case 48: {
            result.hasFeaturedItemIdx = input.ReadInt32(ref result.featuredItemIdx_);
            break;
          }
          case 56: {
            result.hasShowHatDescriptions = input.ReadBool(ref result.showHatDescriptions_);
            break;
          }
          case 66: {
            result.hasPriceSheet = input.ReadBytes(ref result.priceSheet_);
            break;
          }
          case 72: {
            result.hasDefaultItemSort = input.ReadInt32(ref result.defaultItemSort_);
            break;
          }
          case 82:
          case 80: {
            input.ReadUInt32Array(tag, field_name, result.popularItems_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    public int Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    public Builder SetResult(int value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
    
    public bool HasCurrency {
      get { return result.hasCurrency; }
    }
    public int Currency {
      get { return result.Currency; }
      set { SetCurrency(value); }
    }
    public Builder SetCurrency(int value) {
      PrepareBuilder();
      result.hasCurrency = true;
      result.currency_ = value;
      return this;
    }
    public Builder ClearCurrency() {
      PrepareBuilder();
      result.hasCurrency = false;
      result.currency_ = 0;
      return this;
    }
    
    public bool HasCountry {
      get { return result.hasCountry; }
    }
    public string Country {
      get { return result.Country; }
      set { SetCountry(value); }
    }
    public Builder SetCountry(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCountry = true;
      result.country_ = value;
      return this;
    }
    public Builder ClearCountry() {
      PrepareBuilder();
      result.hasCountry = false;
      result.country_ = "";
      return this;
    }
    
    public bool HasPriceSheetVersion {
      get { return result.hasPriceSheetVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint PriceSheetVersion {
      get { return result.PriceSheetVersion; }
      set { SetPriceSheetVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPriceSheetVersion(uint value) {
      PrepareBuilder();
      result.hasPriceSheetVersion = true;
      result.priceSheetVersion_ = value;
      return this;
    }
    public Builder ClearPriceSheetVersion() {
      PrepareBuilder();
      result.hasPriceSheetVersion = false;
      result.priceSheetVersion_ = 0;
      return this;
    }
    
    public bool HasExperimentData {
      get { return result.hasExperimentData; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ExperimentData {
      get { return result.ExperimentData; }
      set { SetExperimentData(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetExperimentData(ulong value) {
      PrepareBuilder();
      result.hasExperimentData = true;
      result.experimentData_ = value;
      return this;
    }
    public Builder ClearExperimentData() {
      PrepareBuilder();
      result.hasExperimentData = false;
      result.experimentData_ = 0UL;
      return this;
    }
    
    public bool HasFeaturedItemIdx {
      get { return result.hasFeaturedItemIdx; }
    }
    public int FeaturedItemIdx {
      get { return result.FeaturedItemIdx; }
      set { SetFeaturedItemIdx(value); }
    }
    public Builder SetFeaturedItemIdx(int value) {
      PrepareBuilder();
      result.hasFeaturedItemIdx = true;
      result.featuredItemIdx_ = value;
      return this;
    }
    public Builder ClearFeaturedItemIdx() {
      PrepareBuilder();
      result.hasFeaturedItemIdx = false;
      result.featuredItemIdx_ = 0;
      return this;
    }
    
    public bool HasShowHatDescriptions {
      get { return result.hasShowHatDescriptions; }
    }
    public bool ShowHatDescriptions {
      get { return result.ShowHatDescriptions; }
      set { SetShowHatDescriptions(value); }
    }
    public Builder SetShowHatDescriptions(bool value) {
      PrepareBuilder();
      result.hasShowHatDescriptions = true;
      result.showHatDescriptions_ = value;
      return this;
    }
    public Builder ClearShowHatDescriptions() {
      PrepareBuilder();
      result.hasShowHatDescriptions = false;
      result.showHatDescriptions_ = true;
      return this;
    }
    
    public bool HasPriceSheet {
      get { return result.hasPriceSheet; }
    }
    public pb::ByteString PriceSheet {
      get { return result.PriceSheet; }
      set { SetPriceSheet(value); }
    }
    public Builder SetPriceSheet(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPriceSheet = true;
      result.priceSheet_ = value;
      return this;
    }
    public Builder ClearPriceSheet() {
      PrepareBuilder();
      result.hasPriceSheet = false;
      result.priceSheet_ = pb::ByteString.Empty;
      return this;
    }
    
    public bool HasDefaultItemSort {
      get { return result.hasDefaultItemSort; }
    }
    public int DefaultItemSort {
      get { return result.DefaultItemSort; }
      set { SetDefaultItemSort(value); }
    }
    public Builder SetDefaultItemSort(int value) {
      PrepareBuilder();
      result.hasDefaultItemSort = true;
      result.defaultItemSort_ = value;
      return this;
    }
    public Builder ClearDefaultItemSort() {
      PrepareBuilder();
      result.hasDefaultItemSort = false;
      result.defaultItemSort_ = 0;
      return this;
    }
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<uint> PopularItemsList {
      get { return PrepareBuilder().popularItems_; }
    }
    public int PopularItemsCount {
      get { return result.PopularItemsCount; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetPopularItems(int index) {
      return result.GetPopularItems(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPopularItems(int index, uint value) {
      PrepareBuilder();
      result.popularItems_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddPopularItems(uint value) {
      PrepareBuilder();
      result.popularItems_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangePopularItems(scg::IEnumerable<uint> values) {
      PrepareBuilder();
      result.popularItems_.Add(values);
      return this;
    }
    public Builder ClearPopularItems() {
      PrepareBuilder();
      result.popularItems_.Clear();
      return this;
    }
  }
  static CMsgStoreGetUserDataResponse() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgUpdateItemSchema : pb::GeneratedMessage<CMsgUpdateItemSchema, CMsgUpdateItemSchema.Builder> {
  private CMsgUpdateItemSchema() { }
  private static readonly CMsgUpdateItemSchema defaultInstance = new CMsgUpdateItemSchema().MakeReadOnly();
  private static readonly string[] _cMsgUpdateItemSchemaFieldNames = new string[] { "item_schema_version", "items_game", "items_game_url", "items_game_url_DEPRECATED2013" };
  private static readonly uint[] _cMsgUpdateItemSchemaFieldTags = new uint[] { 21, 10, 34, 26 };
  public static CMsgUpdateItemSchema DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgUpdateItemSchema DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgUpdateItemSchema ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgUpdateItemSchema__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgUpdateItemSchema, CMsgUpdateItemSchema.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgUpdateItemSchema__FieldAccessorTable; }
  }
  
  public const int ItemsGameFieldNumber = 1;
  private bool hasItemsGame;
  private pb::ByteString itemsGame_ = pb::ByteString.Empty;
  public bool HasItemsGame {
    get { return hasItemsGame; }
  }
  public pb::ByteString ItemsGame {
    get { return itemsGame_; }
  }
  
  public const int ItemSchemaVersionFieldNumber = 2;
  private bool hasItemSchemaVersion;
  private uint itemSchemaVersion_;
  public bool HasItemSchemaVersion {
    get { return hasItemSchemaVersion; }
  }
  [global::System.CLSCompliant(false)]
  public uint ItemSchemaVersion {
    get { return itemSchemaVersion_; }
  }
  
  public const int ItemsGameUrlDEPRECATED2013FieldNumber = 3;
  private bool hasItemsGameUrlDEPRECATED2013;
  private string itemsGameUrlDEPRECATED2013_ = "";
  public bool HasItemsGameUrlDEPRECATED2013 {
    get { return hasItemsGameUrlDEPRECATED2013; }
  }
  public string ItemsGameUrlDEPRECATED2013 {
    get { return itemsGameUrlDEPRECATED2013_; }
  }
  
  public const int ItemsGameUrlFieldNumber = 4;
  private bool hasItemsGameUrl;
  private string itemsGameUrl_ = "";
  public bool HasItemsGameUrl {
    get { return hasItemsGameUrl; }
  }
  public string ItemsGameUrl {
    get { return itemsGameUrl_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgUpdateItemSchemaFieldNames;
    if (hasItemsGame) {
      output.WriteBytes(1, field_names[1], ItemsGame);
    }
    if (hasItemSchemaVersion) {
      output.WriteFixed32(2, field_names[0], ItemSchemaVersion);
    }
    if (hasItemsGameUrlDEPRECATED2013) {
      output.WriteString(3, field_names[3], ItemsGameUrlDEPRECATED2013);
    }
    if (hasItemsGameUrl) {
      output.WriteString(4, field_names[2], ItemsGameUrl);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasItemsGame) {
        size += pb::CodedOutputStream.ComputeBytesSize(1, ItemsGame);
      }
      if (hasItemSchemaVersion) {
        size += pb::CodedOutputStream.ComputeFixed32Size(2, ItemSchemaVersion);
      }
      if (hasItemsGameUrlDEPRECATED2013) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ItemsGameUrlDEPRECATED2013);
      }
      if (hasItemsGameUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(4, ItemsGameUrl);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgUpdateItemSchema ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgUpdateItemSchema ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgUpdateItemSchema ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgUpdateItemSchema ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgUpdateItemSchema ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgUpdateItemSchema ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgUpdateItemSchema ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgUpdateItemSchema ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgUpdateItemSchema ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgUpdateItemSchema ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgUpdateItemSchema MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgUpdateItemSchema prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgUpdateItemSchema, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgUpdateItemSchema cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgUpdateItemSchema result;
    
    private CMsgUpdateItemSchema PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgUpdateItemSchema original = result;
        result = new CMsgUpdateItemSchema();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgUpdateItemSchema MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgUpdateItemSchema.Descriptor; }
    }
    
    public override CMsgUpdateItemSchema DefaultInstanceForType {
      get { return global::CMsgUpdateItemSchema.DefaultInstance; }
    }
    
    public override CMsgUpdateItemSchema BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgUpdateItemSchema) {
        return MergeFrom((CMsgUpdateItemSchema) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgUpdateItemSchema other) {
      if (other == global::CMsgUpdateItemSchema.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemsGame) {
        ItemsGame = other.ItemsGame;
      }
      if (other.HasItemSchemaVersion) {
        ItemSchemaVersion = other.ItemSchemaVersion;
      }
      if (other.HasItemsGameUrlDEPRECATED2013) {
        ItemsGameUrlDEPRECATED2013 = other.ItemsGameUrlDEPRECATED2013;
      }
      if (other.HasItemsGameUrl) {
        ItemsGameUrl = other.ItemsGameUrl;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgUpdateItemSchemaFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgUpdateItemSchemaFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasItemsGame = input.ReadBytes(ref result.itemsGame_);
            break;
          }
          case 21: {
            result.hasItemSchemaVersion = input.ReadFixed32(ref result.itemSchemaVersion_);
            break;
          }
          case 26: {
            result.hasItemsGameUrlDEPRECATED2013 = input.ReadString(ref result.itemsGameUrlDEPRECATED2013_);
            break;
          }
          case 34: {
            result.hasItemsGameUrl = input.ReadString(ref result.itemsGameUrl_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemsGame {
      get { return result.hasItemsGame; }
    }
    public pb::ByteString ItemsGame {
      get { return result.ItemsGame; }
      set { SetItemsGame(value); }
    }
    public Builder SetItemsGame(pb::ByteString value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasItemsGame = true;
      result.itemsGame_ = value;
      return this;
    }
    public Builder ClearItemsGame() {
      PrepareBuilder();
      result.hasItemsGame = false;
      result.itemsGame_ = pb::ByteString.Empty;
      return this;
    }
    
    public bool HasItemSchemaVersion {
      get { return result.hasItemSchemaVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint ItemSchemaVersion {
      get { return result.ItemSchemaVersion; }
      set { SetItemSchemaVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemSchemaVersion(uint value) {
      PrepareBuilder();
      result.hasItemSchemaVersion = true;
      result.itemSchemaVersion_ = value;
      return this;
    }
    public Builder ClearItemSchemaVersion() {
      PrepareBuilder();
      result.hasItemSchemaVersion = false;
      result.itemSchemaVersion_ = 0;
      return this;
    }
    
    public bool HasItemsGameUrlDEPRECATED2013 {
      get { return result.hasItemsGameUrlDEPRECATED2013; }
    }
    public string ItemsGameUrlDEPRECATED2013 {
      get { return result.ItemsGameUrlDEPRECATED2013; }
      set { SetItemsGameUrlDEPRECATED2013(value); }
    }
    public Builder SetItemsGameUrlDEPRECATED2013(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasItemsGameUrlDEPRECATED2013 = true;
      result.itemsGameUrlDEPRECATED2013_ = value;
      return this;
    }
    public Builder ClearItemsGameUrlDEPRECATED2013() {
      PrepareBuilder();
      result.hasItemsGameUrlDEPRECATED2013 = false;
      result.itemsGameUrlDEPRECATED2013_ = "";
      return this;
    }
    
    public bool HasItemsGameUrl {
      get { return result.hasItemsGameUrl; }
    }
    public string ItemsGameUrl {
      get { return result.ItemsGameUrl; }
      set { SetItemsGameUrl(value); }
    }
    public Builder SetItemsGameUrl(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasItemsGameUrl = true;
      result.itemsGameUrl_ = value;
      return this;
    }
    public Builder ClearItemsGameUrl() {
      PrepareBuilder();
      result.hasItemsGameUrl = false;
      result.itemsGameUrl_ = "";
      return this;
    }
  }
  static CMsgUpdateItemSchema() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCError : pb::GeneratedMessage<CMsgGCError, CMsgGCError.Builder> {
  private CMsgGCError() { }
  private static readonly CMsgGCError defaultInstance = new CMsgGCError().MakeReadOnly();
  private static readonly string[] _cMsgGCErrorFieldNames = new string[] { "error_text" };
  private static readonly uint[] _cMsgGCErrorFieldTags = new uint[] { 10 };
  public static CMsgGCError DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCError DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCError ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCError__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCError, CMsgGCError.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCError__FieldAccessorTable; }
  }
  
  public const int ErrorTextFieldNumber = 1;
  private bool hasErrorText;
  private string errorText_ = "";
  public bool HasErrorText {
    get { return hasErrorText; }
  }
  public string ErrorText {
    get { return errorText_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCErrorFieldNames;
    if (hasErrorText) {
      output.WriteString(1, field_names[0], ErrorText);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasErrorText) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ErrorText);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCError ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCError ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCError ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCError ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCError ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCError ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCError ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCError ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCError ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCError ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCError MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCError prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCError, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCError cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCError result;
    
    private CMsgGCError PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCError original = result;
        result = new CMsgGCError();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCError MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCError.Descriptor; }
    }
    
    public override CMsgGCError DefaultInstanceForType {
      get { return global::CMsgGCError.DefaultInstance; }
    }
    
    public override CMsgGCError BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCError) {
        return MergeFrom((CMsgGCError) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCError other) {
      if (other == global::CMsgGCError.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasErrorText) {
        ErrorText = other.ErrorText;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCErrorFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCErrorFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasErrorText = input.ReadString(ref result.errorText_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasErrorText {
      get { return result.hasErrorText; }
    }
    public string ErrorText {
      get { return result.ErrorText; }
      set { SetErrorText(value); }
    }
    public Builder SetErrorText(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasErrorText = true;
      result.errorText_ = value;
      return this;
    }
    public Builder ClearErrorText() {
      PrepareBuilder();
      result.hasErrorText = false;
      result.errorText_ = "";
      return this;
    }
  }
  static CMsgGCError() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgRequestInventoryRefresh : pb::GeneratedMessage<CMsgRequestInventoryRefresh, CMsgRequestInventoryRefresh.Builder> {
  private CMsgRequestInventoryRefresh() { }
  private static readonly CMsgRequestInventoryRefresh defaultInstance = new CMsgRequestInventoryRefresh().MakeReadOnly();
  private static readonly string[] _cMsgRequestInventoryRefreshFieldNames = new string[] {  };
  private static readonly uint[] _cMsgRequestInventoryRefreshFieldTags = new uint[] {  };
  public static CMsgRequestInventoryRefresh DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgRequestInventoryRefresh DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgRequestInventoryRefresh ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgRequestInventoryRefresh__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgRequestInventoryRefresh, CMsgRequestInventoryRefresh.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgRequestInventoryRefresh__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgRequestInventoryRefreshFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgRequestInventoryRefresh ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgRequestInventoryRefresh ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgRequestInventoryRefresh ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgRequestInventoryRefresh ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgRequestInventoryRefresh ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgRequestInventoryRefresh ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgRequestInventoryRefresh ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgRequestInventoryRefresh ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgRequestInventoryRefresh ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgRequestInventoryRefresh ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgRequestInventoryRefresh MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgRequestInventoryRefresh prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgRequestInventoryRefresh, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgRequestInventoryRefresh cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgRequestInventoryRefresh result;
    
    private CMsgRequestInventoryRefresh PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgRequestInventoryRefresh original = result;
        result = new CMsgRequestInventoryRefresh();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgRequestInventoryRefresh MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgRequestInventoryRefresh.Descriptor; }
    }
    
    public override CMsgRequestInventoryRefresh DefaultInstanceForType {
      get { return global::CMsgRequestInventoryRefresh.DefaultInstance; }
    }
    
    public override CMsgRequestInventoryRefresh BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgRequestInventoryRefresh) {
        return MergeFrom((CMsgRequestInventoryRefresh) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgRequestInventoryRefresh other) {
      if (other == global::CMsgRequestInventoryRefresh.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgRequestInventoryRefreshFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgRequestInventoryRefreshFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static CMsgRequestInventoryRefresh() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgConVarValue : pb::GeneratedMessage<CMsgConVarValue, CMsgConVarValue.Builder> {
  private CMsgConVarValue() { }
  private static readonly CMsgConVarValue defaultInstance = new CMsgConVarValue().MakeReadOnly();
  private static readonly string[] _cMsgConVarValueFieldNames = new string[] { "name", "value" };
  private static readonly uint[] _cMsgConVarValueFieldTags = new uint[] { 10, 18 };
  public static CMsgConVarValue DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgConVarValue DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgConVarValue ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgConVarValue__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgConVarValue, CMsgConVarValue.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgConVarValue__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int ValueFieldNumber = 2;
  private bool hasValue;
  private string value_ = "";
  public bool HasValue {
    get { return hasValue; }
  }
  public string Value {
    get { return value_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgConVarValueFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[0], Name);
    }
    if (hasValue) {
      output.WriteString(2, field_names[1], Value);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasValue) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Value);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgConVarValue ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgConVarValue ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgConVarValue ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgConVarValue ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgConVarValue ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgConVarValue ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgConVarValue ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgConVarValue ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgConVarValue ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgConVarValue ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgConVarValue MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgConVarValue prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgConVarValue, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgConVarValue cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgConVarValue result;
    
    private CMsgConVarValue PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgConVarValue original = result;
        result = new CMsgConVarValue();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgConVarValue MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgConVarValue.Descriptor; }
    }
    
    public override CMsgConVarValue DefaultInstanceForType {
      get { return global::CMsgConVarValue.DefaultInstance; }
    }
    
    public override CMsgConVarValue BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgConVarValue) {
        return MergeFrom((CMsgConVarValue) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgConVarValue other) {
      if (other == global::CMsgConVarValue.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgConVarValueFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgConVarValueFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 18: {
            result.hasValue = input.ReadString(ref result.value_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasValue {
      get { return result.hasValue; }
    }
    public string Value {
      get { return result.Value; }
      set { SetValue(value); }
    }
    public Builder SetValue(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasValue = true;
      result.value_ = value;
      return this;
    }
    public Builder ClearValue() {
      PrepareBuilder();
      result.hasValue = false;
      result.value_ = "";
      return this;
    }
  }
  static CMsgConVarValue() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgReplicateConVars : pb::GeneratedMessage<CMsgReplicateConVars, CMsgReplicateConVars.Builder> {
  private CMsgReplicateConVars() { }
  private static readonly CMsgReplicateConVars defaultInstance = new CMsgReplicateConVars().MakeReadOnly();
  private static readonly string[] _cMsgReplicateConVarsFieldNames = new string[] { "convars" };
  private static readonly uint[] _cMsgReplicateConVarsFieldTags = new uint[] { 10 };
  public static CMsgReplicateConVars DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgReplicateConVars DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgReplicateConVars ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgReplicateConVars__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgReplicateConVars, CMsgReplicateConVars.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgReplicateConVars__FieldAccessorTable; }
  }
  
  public const int ConvarsFieldNumber = 1;
  private pbc::PopsicleList<global::CMsgConVarValue> convars_ = new pbc::PopsicleList<global::CMsgConVarValue>();
  public scg::IList<global::CMsgConVarValue> ConvarsList {
    get { return convars_; }
  }
  public int ConvarsCount {
    get { return convars_.Count; }
  }
  public global::CMsgConVarValue GetConvars(int index) {
    return convars_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgReplicateConVarsFieldNames;
    if (convars_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], convars_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CMsgConVarValue element in ConvarsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgReplicateConVars ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgReplicateConVars ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgReplicateConVars ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgReplicateConVars ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgReplicateConVars ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgReplicateConVars ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgReplicateConVars ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgReplicateConVars ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgReplicateConVars ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgReplicateConVars ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgReplicateConVars MakeReadOnly() {
    convars_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgReplicateConVars prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgReplicateConVars, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgReplicateConVars cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgReplicateConVars result;
    
    private CMsgReplicateConVars PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgReplicateConVars original = result;
        result = new CMsgReplicateConVars();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgReplicateConVars MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgReplicateConVars.Descriptor; }
    }
    
    public override CMsgReplicateConVars DefaultInstanceForType {
      get { return global::CMsgReplicateConVars.DefaultInstance; }
    }
    
    public override CMsgReplicateConVars BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgReplicateConVars) {
        return MergeFrom((CMsgReplicateConVars) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgReplicateConVars other) {
      if (other == global::CMsgReplicateConVars.DefaultInstance) return this;
      PrepareBuilder();
      if (other.convars_.Count != 0) {
        result.convars_.Add(other.convars_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgReplicateConVarsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgReplicateConVarsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.convars_, global::CMsgConVarValue.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CMsgConVarValue> ConvarsList {
      get { return PrepareBuilder().convars_; }
    }
    public int ConvarsCount {
      get { return result.ConvarsCount; }
    }
    public global::CMsgConVarValue GetConvars(int index) {
      return result.GetConvars(index);
    }
    public Builder SetConvars(int index, global::CMsgConVarValue value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.convars_[index] = value;
      return this;
    }
    public Builder SetConvars(int index, global::CMsgConVarValue.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.convars_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddConvars(global::CMsgConVarValue value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.convars_.Add(value);
      return this;
    }
    public Builder AddConvars(global::CMsgConVarValue.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.convars_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeConvars(scg::IEnumerable<global::CMsgConVarValue> values) {
      PrepareBuilder();
      result.convars_.Add(values);
      return this;
    }
    public Builder ClearConvars() {
      PrepareBuilder();
      result.convars_.Clear();
      return this;
    }
  }
  static CMsgReplicateConVars() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgUseItem : pb::GeneratedMessage<CMsgUseItem, CMsgUseItem.Builder> {
  private CMsgUseItem() { }
  private static readonly CMsgUseItem defaultInstance = new CMsgUseItem().MakeReadOnly();
  private static readonly string[] _cMsgUseItemFieldNames = new string[] { "duel__class_lock", "gift__potential_targets", "initiator_steam_id", "item_id", "target_steam_id" };
  private static readonly uint[] _cMsgUseItemFieldTags = new uint[] { 32, 24, 41, 8, 17 };
  public static CMsgUseItem DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgUseItem DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgUseItem ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgUseItem__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgUseItem, CMsgUseItem.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgUseItem__FieldAccessorTable; }
  }
  
  public const int ItemIdFieldNumber = 1;
  private bool hasItemId;
  private ulong itemId_;
  public bool HasItemId {
    get { return hasItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ItemId {
    get { return itemId_; }
  }
  
  public const int TargetSteamIdFieldNumber = 2;
  private bool hasTargetSteamId;
  private ulong targetSteamId_;
  public bool HasTargetSteamId {
    get { return hasTargetSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong TargetSteamId {
    get { return targetSteamId_; }
  }
  
  public const int GiftPotentialTargetsFieldNumber = 3;
  private pbc::PopsicleList<uint> giftPotentialTargets_ = new pbc::PopsicleList<uint>();
  [global::System.CLSCompliant(false)]
  public scg::IList<uint> GiftPotentialTargetsList {
    get { return pbc::Lists.AsReadOnly(giftPotentialTargets_); }
  }
  public int GiftPotentialTargetsCount {
    get { return giftPotentialTargets_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public uint GetGiftPotentialTargets(int index) {
    return giftPotentialTargets_[index];
  }
  
  public const int DuelClassLockFieldNumber = 4;
  private bool hasDuelClassLock;
  private uint duelClassLock_;
  public bool HasDuelClassLock {
    get { return hasDuelClassLock; }
  }
  [global::System.CLSCompliant(false)]
  public uint DuelClassLock {
    get { return duelClassLock_; }
  }
  
  public const int InitiatorSteamIdFieldNumber = 5;
  private bool hasInitiatorSteamId;
  private ulong initiatorSteamId_;
  public bool HasInitiatorSteamId {
    get { return hasInitiatorSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong InitiatorSteamId {
    get { return initiatorSteamId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgUseItemFieldNames;
    if (hasItemId) {
      output.WriteUInt64(1, field_names[3], ItemId);
    }
    if (hasTargetSteamId) {
      output.WriteFixed64(2, field_names[4], TargetSteamId);
    }
    if (giftPotentialTargets_.Count > 0) {
      output.WriteUInt32Array(3, field_names[1], giftPotentialTargets_);
    }
    if (hasDuelClassLock) {
      output.WriteUInt32(4, field_names[0], DuelClassLock);
    }
    if (hasInitiatorSteamId) {
      output.WriteFixed64(5, field_names[2], InitiatorSteamId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, ItemId);
      }
      if (hasTargetSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(2, TargetSteamId);
      }
      {
        int dataSize = 0;
        foreach (uint element in GiftPotentialTargetsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * giftPotentialTargets_.Count;
      }
      if (hasDuelClassLock) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, DuelClassLock);
      }
      if (hasInitiatorSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(5, InitiatorSteamId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgUseItem ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgUseItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgUseItem ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgUseItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgUseItem ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgUseItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgUseItem ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgUseItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgUseItem ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgUseItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgUseItem MakeReadOnly() {
    giftPotentialTargets_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgUseItem prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgUseItem, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgUseItem cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgUseItem result;
    
    private CMsgUseItem PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgUseItem original = result;
        result = new CMsgUseItem();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgUseItem MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgUseItem.Descriptor; }
    }
    
    public override CMsgUseItem DefaultInstanceForType {
      get { return global::CMsgUseItem.DefaultInstance; }
    }
    
    public override CMsgUseItem BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgUseItem) {
        return MergeFrom((CMsgUseItem) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgUseItem other) {
      if (other == global::CMsgUseItem.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasTargetSteamId) {
        TargetSteamId = other.TargetSteamId;
      }
      if (other.giftPotentialTargets_.Count != 0) {
        result.giftPotentialTargets_.Add(other.giftPotentialTargets_);
      }
      if (other.HasDuelClassLock) {
        DuelClassLock = other.DuelClassLock;
      }
      if (other.HasInitiatorSteamId) {
        InitiatorSteamId = other.InitiatorSteamId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgUseItemFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgUseItemFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasItemId = input.ReadUInt64(ref result.itemId_);
            break;
          }
          case 17: {
            result.hasTargetSteamId = input.ReadFixed64(ref result.targetSteamId_);
            break;
          }
          case 26:
          case 24: {
            input.ReadUInt32Array(tag, field_name, result.giftPotentialTargets_);
            break;
          }
          case 32: {
            result.hasDuelClassLock = input.ReadUInt32(ref result.duelClassLock_);
            break;
          }
          case 41: {
            result.hasInitiatorSteamId = input.ReadFixed64(ref result.initiatorSteamId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemId {
      get { return result.hasItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ItemId {
      get { return result.ItemId; }
      set { SetItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemId(ulong value) {
      PrepareBuilder();
      result.hasItemId = true;
      result.itemId_ = value;
      return this;
    }
    public Builder ClearItemId() {
      PrepareBuilder();
      result.hasItemId = false;
      result.itemId_ = 0UL;
      return this;
    }
    
    public bool HasTargetSteamId {
      get { return result.hasTargetSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TargetSteamId {
      get { return result.TargetSteamId; }
      set { SetTargetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTargetSteamId(ulong value) {
      PrepareBuilder();
      result.hasTargetSteamId = true;
      result.targetSteamId_ = value;
      return this;
    }
    public Builder ClearTargetSteamId() {
      PrepareBuilder();
      result.hasTargetSteamId = false;
      result.targetSteamId_ = 0;
      return this;
    }
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<uint> GiftPotentialTargetsList {
      get { return PrepareBuilder().giftPotentialTargets_; }
    }
    public int GiftPotentialTargetsCount {
      get { return result.GiftPotentialTargetsCount; }
    }
    [global::System.CLSCompliant(false)]
    public uint GetGiftPotentialTargets(int index) {
      return result.GetGiftPotentialTargets(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGiftPotentialTargets(int index, uint value) {
      PrepareBuilder();
      result.giftPotentialTargets_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddGiftPotentialTargets(uint value) {
      PrepareBuilder();
      result.giftPotentialTargets_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeGiftPotentialTargets(scg::IEnumerable<uint> values) {
      PrepareBuilder();
      result.giftPotentialTargets_.Add(values);
      return this;
    }
    public Builder ClearGiftPotentialTargets() {
      PrepareBuilder();
      result.giftPotentialTargets_.Clear();
      return this;
    }
    
    public bool HasDuelClassLock {
      get { return result.hasDuelClassLock; }
    }
    [global::System.CLSCompliant(false)]
    public uint DuelClassLock {
      get { return result.DuelClassLock; }
      set { SetDuelClassLock(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDuelClassLock(uint value) {
      PrepareBuilder();
      result.hasDuelClassLock = true;
      result.duelClassLock_ = value;
      return this;
    }
    public Builder ClearDuelClassLock() {
      PrepareBuilder();
      result.hasDuelClassLock = false;
      result.duelClassLock_ = 0;
      return this;
    }
    
    public bool HasInitiatorSteamId {
      get { return result.hasInitiatorSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong InitiatorSteamId {
      get { return result.InitiatorSteamId; }
      set { SetInitiatorSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetInitiatorSteamId(ulong value) {
      PrepareBuilder();
      result.hasInitiatorSteamId = true;
      result.initiatorSteamId_ = value;
      return this;
    }
    public Builder ClearInitiatorSteamId() {
      PrepareBuilder();
      result.hasInitiatorSteamId = false;
      result.initiatorSteamId_ = 0;
      return this;
    }
  }
  static CMsgUseItem() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgReplayUploadedToYouTube : pb::GeneratedMessage<CMsgReplayUploadedToYouTube, CMsgReplayUploadedToYouTube.Builder> {
  private CMsgReplayUploadedToYouTube() { }
  private static readonly CMsgReplayUploadedToYouTube defaultInstance = new CMsgReplayUploadedToYouTube().MakeReadOnly();
  private static readonly string[] _cMsgReplayUploadedToYouTubeFieldNames = new string[] { "session_id", "youtube_account_name", "youtube_url" };
  private static readonly uint[] _cMsgReplayUploadedToYouTubeFieldTags = new uint[] { 24, 18, 10 };
  public static CMsgReplayUploadedToYouTube DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgReplayUploadedToYouTube DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgReplayUploadedToYouTube ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgReplayUploadedToYouTube__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgReplayUploadedToYouTube, CMsgReplayUploadedToYouTube.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgReplayUploadedToYouTube__FieldAccessorTable; }
  }
  
  public const int YoutubeUrlFieldNumber = 1;
  private bool hasYoutubeUrl;
  private string youtubeUrl_ = "";
  public bool HasYoutubeUrl {
    get { return hasYoutubeUrl; }
  }
  public string YoutubeUrl {
    get { return youtubeUrl_; }
  }
  
  public const int YoutubeAccountNameFieldNumber = 2;
  private bool hasYoutubeAccountName;
  private string youtubeAccountName_ = "";
  public bool HasYoutubeAccountName {
    get { return hasYoutubeAccountName; }
  }
  public string YoutubeAccountName {
    get { return youtubeAccountName_; }
  }
  
  public const int SessionIdFieldNumber = 3;
  private bool hasSessionId;
  private ulong sessionId_;
  public bool HasSessionId {
    get { return hasSessionId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SessionId {
    get { return sessionId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgReplayUploadedToYouTubeFieldNames;
    if (hasYoutubeUrl) {
      output.WriteString(1, field_names[2], YoutubeUrl);
    }
    if (hasYoutubeAccountName) {
      output.WriteString(2, field_names[1], YoutubeAccountName);
    }
    if (hasSessionId) {
      output.WriteUInt64(3, field_names[0], SessionId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasYoutubeUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(1, YoutubeUrl);
      }
      if (hasYoutubeAccountName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, YoutubeAccountName);
      }
      if (hasSessionId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, SessionId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgReplayUploadedToYouTube ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgReplayUploadedToYouTube ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgReplayUploadedToYouTube ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgReplayUploadedToYouTube ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgReplayUploadedToYouTube ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgReplayUploadedToYouTube ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgReplayUploadedToYouTube ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgReplayUploadedToYouTube ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgReplayUploadedToYouTube ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgReplayUploadedToYouTube ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgReplayUploadedToYouTube MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgReplayUploadedToYouTube prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgReplayUploadedToYouTube, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgReplayUploadedToYouTube cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgReplayUploadedToYouTube result;
    
    private CMsgReplayUploadedToYouTube PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgReplayUploadedToYouTube original = result;
        result = new CMsgReplayUploadedToYouTube();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgReplayUploadedToYouTube MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgReplayUploadedToYouTube.Descriptor; }
    }
    
    public override CMsgReplayUploadedToYouTube DefaultInstanceForType {
      get { return global::CMsgReplayUploadedToYouTube.DefaultInstance; }
    }
    
    public override CMsgReplayUploadedToYouTube BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgReplayUploadedToYouTube) {
        return MergeFrom((CMsgReplayUploadedToYouTube) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgReplayUploadedToYouTube other) {
      if (other == global::CMsgReplayUploadedToYouTube.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasYoutubeUrl) {
        YoutubeUrl = other.YoutubeUrl;
      }
      if (other.HasYoutubeAccountName) {
        YoutubeAccountName = other.YoutubeAccountName;
      }
      if (other.HasSessionId) {
        SessionId = other.SessionId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgReplayUploadedToYouTubeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgReplayUploadedToYouTubeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasYoutubeUrl = input.ReadString(ref result.youtubeUrl_);
            break;
          }
          case 18: {
            result.hasYoutubeAccountName = input.ReadString(ref result.youtubeAccountName_);
            break;
          }
          case 24: {
            result.hasSessionId = input.ReadUInt64(ref result.sessionId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasYoutubeUrl {
      get { return result.hasYoutubeUrl; }
    }
    public string YoutubeUrl {
      get { return result.YoutubeUrl; }
      set { SetYoutubeUrl(value); }
    }
    public Builder SetYoutubeUrl(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasYoutubeUrl = true;
      result.youtubeUrl_ = value;
      return this;
    }
    public Builder ClearYoutubeUrl() {
      PrepareBuilder();
      result.hasYoutubeUrl = false;
      result.youtubeUrl_ = "";
      return this;
    }
    
    public bool HasYoutubeAccountName {
      get { return result.hasYoutubeAccountName; }
    }
    public string YoutubeAccountName {
      get { return result.YoutubeAccountName; }
      set { SetYoutubeAccountName(value); }
    }
    public Builder SetYoutubeAccountName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasYoutubeAccountName = true;
      result.youtubeAccountName_ = value;
      return this;
    }
    public Builder ClearYoutubeAccountName() {
      PrepareBuilder();
      result.hasYoutubeAccountName = false;
      result.youtubeAccountName_ = "";
      return this;
    }
    
    public bool HasSessionId {
      get { return result.hasSessionId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SessionId {
      get { return result.SessionId; }
      set { SetSessionId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSessionId(ulong value) {
      PrepareBuilder();
      result.hasSessionId = true;
      result.sessionId_ = value;
      return this;
    }
    public Builder ClearSessionId() {
      PrepareBuilder();
      result.hasSessionId = false;
      result.sessionId_ = 0UL;
      return this;
    }
  }
  static CMsgReplayUploadedToYouTube() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgConsumableExhausted : pb::GeneratedMessage<CMsgConsumableExhausted, CMsgConsumableExhausted.Builder> {
  private CMsgConsumableExhausted() { }
  private static readonly CMsgConsumableExhausted defaultInstance = new CMsgConsumableExhausted().MakeReadOnly();
  private static readonly string[] _cMsgConsumableExhaustedFieldNames = new string[] { "item_def_id" };
  private static readonly uint[] _cMsgConsumableExhaustedFieldTags = new uint[] { 8 };
  public static CMsgConsumableExhausted DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgConsumableExhausted DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgConsumableExhausted ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgConsumableExhausted__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgConsumableExhausted, CMsgConsumableExhausted.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgConsumableExhausted__FieldAccessorTable; }
  }
  
  public const int ItemDefIdFieldNumber = 1;
  private bool hasItemDefId;
  private int itemDefId_;
  public bool HasItemDefId {
    get { return hasItemDefId; }
  }
  public int ItemDefId {
    get { return itemDefId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgConsumableExhaustedFieldNames;
    if (hasItemDefId) {
      output.WriteInt32(1, field_names[0], ItemDefId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasItemDefId) {
        size += pb::CodedOutputStream.ComputeInt32Size(1, ItemDefId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgConsumableExhausted ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgConsumableExhausted ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgConsumableExhausted ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgConsumableExhausted ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgConsumableExhausted ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgConsumableExhausted ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgConsumableExhausted ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgConsumableExhausted ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgConsumableExhausted ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgConsumableExhausted ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgConsumableExhausted MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgConsumableExhausted prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgConsumableExhausted, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgConsumableExhausted cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgConsumableExhausted result;
    
    private CMsgConsumableExhausted PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgConsumableExhausted original = result;
        result = new CMsgConsumableExhausted();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgConsumableExhausted MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgConsumableExhausted.Descriptor; }
    }
    
    public override CMsgConsumableExhausted DefaultInstanceForType {
      get { return global::CMsgConsumableExhausted.DefaultInstance; }
    }
    
    public override CMsgConsumableExhausted BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgConsumableExhausted) {
        return MergeFrom((CMsgConsumableExhausted) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgConsumableExhausted other) {
      if (other == global::CMsgConsumableExhausted.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemDefId) {
        ItemDefId = other.ItemDefId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgConsumableExhaustedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgConsumableExhaustedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasItemDefId = input.ReadInt32(ref result.itemDefId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemDefId {
      get { return result.hasItemDefId; }
    }
    public int ItemDefId {
      get { return result.ItemDefId; }
      set { SetItemDefId(value); }
    }
    public Builder SetItemDefId(int value) {
      PrepareBuilder();
      result.hasItemDefId = true;
      result.itemDefId_ = value;
      return this;
    }
    public Builder ClearItemDefId() {
      PrepareBuilder();
      result.hasItemDefId = false;
      result.itemDefId_ = 0;
      return this;
    }
  }
  static CMsgConsumableExhausted() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgItemAcknowledged__DEPRECATED : pb::GeneratedMessage<CMsgItemAcknowledged__DEPRECATED, CMsgItemAcknowledged__DEPRECATED.Builder> {
  private CMsgItemAcknowledged__DEPRECATED() { }
  private static readonly CMsgItemAcknowledged__DEPRECATED defaultInstance = new CMsgItemAcknowledged__DEPRECATED().MakeReadOnly();
  private static readonly string[] _cMsgItemAcknowledgedDEPRECATEDFieldNames = new string[] { "account_id", "def_index", "inventory", "item_id", "origin", "quality", "rarity" };
  private static readonly uint[] _cMsgItemAcknowledgedDEPRECATEDFieldTags = new uint[] { 8, 24, 16, 56, 48, 32, 40 };
  public static CMsgItemAcknowledged__DEPRECATED DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgItemAcknowledged__DEPRECATED DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgItemAcknowledged__DEPRECATED ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgItemAcknowledged__DEPRECATED__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgItemAcknowledged__DEPRECATED, CMsgItemAcknowledged__DEPRECATED.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgItemAcknowledged__DEPRECATED__FieldAccessorTable; }
  }
  
  public const int AccountIdFieldNumber = 1;
  private bool hasAccountId;
  private uint accountId_;
  public bool HasAccountId {
    get { return hasAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AccountId {
    get { return accountId_; }
  }
  
  public const int InventoryFieldNumber = 2;
  private bool hasInventory;
  private uint inventory_;
  public bool HasInventory {
    get { return hasInventory; }
  }
  [global::System.CLSCompliant(false)]
  public uint Inventory {
    get { return inventory_; }
  }
  
  public const int DefIndexFieldNumber = 3;
  private bool hasDefIndex;
  private uint defIndex_;
  public bool HasDefIndex {
    get { return hasDefIndex; }
  }
  [global::System.CLSCompliant(false)]
  public uint DefIndex {
    get { return defIndex_; }
  }
  
  public const int QualityFieldNumber = 4;
  private bool hasQuality;
  private uint quality_;
  public bool HasQuality {
    get { return hasQuality; }
  }
  [global::System.CLSCompliant(false)]
  public uint Quality {
    get { return quality_; }
  }
  
  public const int RarityFieldNumber = 5;
  private bool hasRarity;
  private uint rarity_;
  public bool HasRarity {
    get { return hasRarity; }
  }
  [global::System.CLSCompliant(false)]
  public uint Rarity {
    get { return rarity_; }
  }
  
  public const int OriginFieldNumber = 6;
  private bool hasOrigin;
  private uint origin_;
  public bool HasOrigin {
    get { return hasOrigin; }
  }
  [global::System.CLSCompliant(false)]
  public uint Origin {
    get { return origin_; }
  }
  
  public const int ItemIdFieldNumber = 7;
  private bool hasItemId;
  private ulong itemId_;
  public bool HasItemId {
    get { return hasItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ItemId {
    get { return itemId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgItemAcknowledgedDEPRECATEDFieldNames;
    if (hasAccountId) {
      output.WriteUInt32(1, field_names[0], AccountId);
    }
    if (hasInventory) {
      output.WriteUInt32(2, field_names[2], Inventory);
    }
    if (hasDefIndex) {
      output.WriteUInt32(3, field_names[1], DefIndex);
    }
    if (hasQuality) {
      output.WriteUInt32(4, field_names[5], Quality);
    }
    if (hasRarity) {
      output.WriteUInt32(5, field_names[6], Rarity);
    }
    if (hasOrigin) {
      output.WriteUInt32(6, field_names[4], Origin);
    }
    if (hasItemId) {
      output.WriteUInt64(7, field_names[3], ItemId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, AccountId);
      }
      if (hasInventory) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Inventory);
      }
      if (hasDefIndex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, DefIndex);
      }
      if (hasQuality) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Quality);
      }
      if (hasRarity) {
        size += pb::CodedOutputStream.ComputeUInt32Size(5, Rarity);
      }
      if (hasOrigin) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, Origin);
      }
      if (hasItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(7, ItemId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgItemAcknowledged__DEPRECATED ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgItemAcknowledged__DEPRECATED ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgItemAcknowledged__DEPRECATED ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgItemAcknowledged__DEPRECATED ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgItemAcknowledged__DEPRECATED ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgItemAcknowledged__DEPRECATED ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgItemAcknowledged__DEPRECATED ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgItemAcknowledged__DEPRECATED ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgItemAcknowledged__DEPRECATED ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgItemAcknowledged__DEPRECATED ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgItemAcknowledged__DEPRECATED MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgItemAcknowledged__DEPRECATED prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgItemAcknowledged__DEPRECATED, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgItemAcknowledged__DEPRECATED cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgItemAcknowledged__DEPRECATED result;
    
    private CMsgItemAcknowledged__DEPRECATED PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgItemAcknowledged__DEPRECATED original = result;
        result = new CMsgItemAcknowledged__DEPRECATED();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgItemAcknowledged__DEPRECATED MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgItemAcknowledged__DEPRECATED.Descriptor; }
    }
    
    public override CMsgItemAcknowledged__DEPRECATED DefaultInstanceForType {
      get { return global::CMsgItemAcknowledged__DEPRECATED.DefaultInstance; }
    }
    
    public override CMsgItemAcknowledged__DEPRECATED BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgItemAcknowledged__DEPRECATED) {
        return MergeFrom((CMsgItemAcknowledged__DEPRECATED) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgItemAcknowledged__DEPRECATED other) {
      if (other == global::CMsgItemAcknowledged__DEPRECATED.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasInventory) {
        Inventory = other.Inventory;
      }
      if (other.HasDefIndex) {
        DefIndex = other.DefIndex;
      }
      if (other.HasQuality) {
        Quality = other.Quality;
      }
      if (other.HasRarity) {
        Rarity = other.Rarity;
      }
      if (other.HasOrigin) {
        Origin = other.Origin;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgItemAcknowledgedDEPRECATEDFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgItemAcknowledgedDEPRECATEDFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAccountId = input.ReadUInt32(ref result.accountId_);
            break;
          }
          case 16: {
            result.hasInventory = input.ReadUInt32(ref result.inventory_);
            break;
          }
          case 24: {
            result.hasDefIndex = input.ReadUInt32(ref result.defIndex_);
            break;
          }
          case 32: {
            result.hasQuality = input.ReadUInt32(ref result.quality_);
            break;
          }
          case 40: {
            result.hasRarity = input.ReadUInt32(ref result.rarity_);
            break;
          }
          case 48: {
            result.hasOrigin = input.ReadUInt32(ref result.origin_);
            break;
          }
          case 56: {
            result.hasItemId = input.ReadUInt64(ref result.itemId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAccountId {
      get { return result.hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return result.AccountId; }
      set { SetAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAccountId(uint value) {
      PrepareBuilder();
      result.hasAccountId = true;
      result.accountId_ = value;
      return this;
    }
    public Builder ClearAccountId() {
      PrepareBuilder();
      result.hasAccountId = false;
      result.accountId_ = 0;
      return this;
    }
    
    public bool HasInventory {
      get { return result.hasInventory; }
    }
    [global::System.CLSCompliant(false)]
    public uint Inventory {
      get { return result.Inventory; }
      set { SetInventory(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetInventory(uint value) {
      PrepareBuilder();
      result.hasInventory = true;
      result.inventory_ = value;
      return this;
    }
    public Builder ClearInventory() {
      PrepareBuilder();
      result.hasInventory = false;
      result.inventory_ = 0;
      return this;
    }
    
    public bool HasDefIndex {
      get { return result.hasDefIndex; }
    }
    [global::System.CLSCompliant(false)]
    public uint DefIndex {
      get { return result.DefIndex; }
      set { SetDefIndex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDefIndex(uint value) {
      PrepareBuilder();
      result.hasDefIndex = true;
      result.defIndex_ = value;
      return this;
    }
    public Builder ClearDefIndex() {
      PrepareBuilder();
      result.hasDefIndex = false;
      result.defIndex_ = 0;
      return this;
    }
    
    public bool HasQuality {
      get { return result.hasQuality; }
    }
    [global::System.CLSCompliant(false)]
    public uint Quality {
      get { return result.Quality; }
      set { SetQuality(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetQuality(uint value) {
      PrepareBuilder();
      result.hasQuality = true;
      result.quality_ = value;
      return this;
    }
    public Builder ClearQuality() {
      PrepareBuilder();
      result.hasQuality = false;
      result.quality_ = 0;
      return this;
    }
    
    public bool HasRarity {
      get { return result.hasRarity; }
    }
    [global::System.CLSCompliant(false)]
    public uint Rarity {
      get { return result.Rarity; }
      set { SetRarity(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetRarity(uint value) {
      PrepareBuilder();
      result.hasRarity = true;
      result.rarity_ = value;
      return this;
    }
    public Builder ClearRarity() {
      PrepareBuilder();
      result.hasRarity = false;
      result.rarity_ = 0;
      return this;
    }
    
    public bool HasOrigin {
      get { return result.hasOrigin; }
    }
    [global::System.CLSCompliant(false)]
    public uint Origin {
      get { return result.Origin; }
      set { SetOrigin(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetOrigin(uint value) {
      PrepareBuilder();
      result.hasOrigin = true;
      result.origin_ = value;
      return this;
    }
    public Builder ClearOrigin() {
      PrepareBuilder();
      result.hasOrigin = false;
      result.origin_ = 0;
      return this;
    }
    
    public bool HasItemId {
      get { return result.hasItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ItemId {
      get { return result.ItemId; }
      set { SetItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemId(ulong value) {
      PrepareBuilder();
      result.hasItemId = true;
      result.itemId_ = value;
      return this;
    }
    public Builder ClearItemId() {
      PrepareBuilder();
      result.hasItemId = false;
      result.itemId_ = 0UL;
      return this;
    }
  }
  static CMsgItemAcknowledged__DEPRECATED() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSetPresetItemPosition : pb::GeneratedMessage<CMsgSetPresetItemPosition, CMsgSetPresetItemPosition.Builder> {
  private CMsgSetPresetItemPosition() { }
  private static readonly CMsgSetPresetItemPosition defaultInstance = new CMsgSetPresetItemPosition().MakeReadOnly();
  private static readonly string[] _cMsgSetPresetItemPositionFieldNames = new string[] { "class_id", "item_id", "preset_id", "slot_id" };
  private static readonly uint[] _cMsgSetPresetItemPositionFieldTags = new uint[] { 8, 32, 16, 24 };
  public static CMsgSetPresetItemPosition DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSetPresetItemPosition DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSetPresetItemPosition ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgSetPresetItemPosition__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSetPresetItemPosition, CMsgSetPresetItemPosition.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgSetPresetItemPosition__FieldAccessorTable; }
  }
  
  public const int ClassIdFieldNumber = 1;
  private bool hasClassId;
  private uint classId_;
  public bool HasClassId {
    get { return hasClassId; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClassId {
    get { return classId_; }
  }
  
  public const int PresetIdFieldNumber = 2;
  private bool hasPresetId;
  private uint presetId_;
  public bool HasPresetId {
    get { return hasPresetId; }
  }
  [global::System.CLSCompliant(false)]
  public uint PresetId {
    get { return presetId_; }
  }
  
  public const int SlotIdFieldNumber = 3;
  private bool hasSlotId;
  private uint slotId_;
  public bool HasSlotId {
    get { return hasSlotId; }
  }
  [global::System.CLSCompliant(false)]
  public uint SlotId {
    get { return slotId_; }
  }
  
  public const int ItemIdFieldNumber = 4;
  private bool hasItemId;
  private ulong itemId_;
  public bool HasItemId {
    get { return hasItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ItemId {
    get { return itemId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSetPresetItemPositionFieldNames;
    if (hasClassId) {
      output.WriteUInt32(1, field_names[0], ClassId);
    }
    if (hasPresetId) {
      output.WriteUInt32(2, field_names[2], PresetId);
    }
    if (hasSlotId) {
      output.WriteUInt32(3, field_names[3], SlotId);
    }
    if (hasItemId) {
      output.WriteUInt64(4, field_names[1], ItemId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasClassId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, ClassId);
      }
      if (hasPresetId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, PresetId);
      }
      if (hasSlotId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, SlotId);
      }
      if (hasItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(4, ItemId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSetPresetItemPosition ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSetPresetItemPosition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSetPresetItemPosition ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSetPresetItemPosition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSetPresetItemPosition ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSetPresetItemPosition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSetPresetItemPosition ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSetPresetItemPosition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSetPresetItemPosition ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSetPresetItemPosition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSetPresetItemPosition MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSetPresetItemPosition prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSetPresetItemPosition, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSetPresetItemPosition cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSetPresetItemPosition result;
    
    private CMsgSetPresetItemPosition PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSetPresetItemPosition original = result;
        result = new CMsgSetPresetItemPosition();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSetPresetItemPosition MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSetPresetItemPosition.Descriptor; }
    }
    
    public override CMsgSetPresetItemPosition DefaultInstanceForType {
      get { return global::CMsgSetPresetItemPosition.DefaultInstance; }
    }
    
    public override CMsgSetPresetItemPosition BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSetPresetItemPosition) {
        return MergeFrom((CMsgSetPresetItemPosition) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSetPresetItemPosition other) {
      if (other == global::CMsgSetPresetItemPosition.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasClassId) {
        ClassId = other.ClassId;
      }
      if (other.HasPresetId) {
        PresetId = other.PresetId;
      }
      if (other.HasSlotId) {
        SlotId = other.SlotId;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSetPresetItemPositionFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSetPresetItemPositionFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasClassId = input.ReadUInt32(ref result.classId_);
            break;
          }
          case 16: {
            result.hasPresetId = input.ReadUInt32(ref result.presetId_);
            break;
          }
          case 24: {
            result.hasSlotId = input.ReadUInt32(ref result.slotId_);
            break;
          }
          case 32: {
            result.hasItemId = input.ReadUInt64(ref result.itemId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasClassId {
      get { return result.hasClassId; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClassId {
      get { return result.ClassId; }
      set { SetClassId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClassId(uint value) {
      PrepareBuilder();
      result.hasClassId = true;
      result.classId_ = value;
      return this;
    }
    public Builder ClearClassId() {
      PrepareBuilder();
      result.hasClassId = false;
      result.classId_ = 0;
      return this;
    }
    
    public bool HasPresetId {
      get { return result.hasPresetId; }
    }
    [global::System.CLSCompliant(false)]
    public uint PresetId {
      get { return result.PresetId; }
      set { SetPresetId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPresetId(uint value) {
      PrepareBuilder();
      result.hasPresetId = true;
      result.presetId_ = value;
      return this;
    }
    public Builder ClearPresetId() {
      PrepareBuilder();
      result.hasPresetId = false;
      result.presetId_ = 0;
      return this;
    }
    
    public bool HasSlotId {
      get { return result.hasSlotId; }
    }
    [global::System.CLSCompliant(false)]
    public uint SlotId {
      get { return result.SlotId; }
      set { SetSlotId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSlotId(uint value) {
      PrepareBuilder();
      result.hasSlotId = true;
      result.slotId_ = value;
      return this;
    }
    public Builder ClearSlotId() {
      PrepareBuilder();
      result.hasSlotId = false;
      result.slotId_ = 0;
      return this;
    }
    
    public bool HasItemId {
      get { return result.hasItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ItemId {
      get { return result.ItemId; }
      set { SetItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemId(ulong value) {
      PrepareBuilder();
      result.hasItemId = true;
      result.itemId_ = value;
      return this;
    }
    public Builder ClearItemId() {
      PrepareBuilder();
      result.hasItemId = false;
      result.itemId_ = 0UL;
      return this;
    }
  }
  static CMsgSetPresetItemPosition() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSetItemPositions : pb::GeneratedMessage<CMsgSetItemPositions, CMsgSetItemPositions.Builder> {
  private CMsgSetItemPositions() { }
  private static readonly CMsgSetItemPositions defaultInstance = new CMsgSetItemPositions().MakeReadOnly();
  private static readonly string[] _cMsgSetItemPositionsFieldNames = new string[] { "item_positions" };
  private static readonly uint[] _cMsgSetItemPositionsFieldTags = new uint[] { 10 };
  public static CMsgSetItemPositions DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSetItemPositions DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSetItemPositions ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgSetItemPositions__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSetItemPositions, CMsgSetItemPositions.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgSetItemPositions__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class ItemPosition : pb::GeneratedMessage<ItemPosition, ItemPosition.Builder> {
      private ItemPosition() { }
      private static readonly ItemPosition defaultInstance = new ItemPosition().MakeReadOnly();
      private static readonly string[] _itemPositionFieldNames = new string[] { "item_id", "position" };
      private static readonly uint[] _itemPositionFieldTags = new uint[] { 8, 16 };
      public static ItemPosition DefaultInstance {
        get { return defaultInstance; }
      }
      
      public override ItemPosition DefaultInstanceForType {
        get { return DefaultInstance; }
      }
      
      protected override ItemPosition ThisMessage {
        get { return this; }
      }
      
      public static pbd::MessageDescriptor Descriptor {
        get { return global::BaseGcmessages.internal__static_CMsgSetItemPositions_ItemPosition__Descriptor; }
      }
      
      protected override pb::FieldAccess.FieldAccessorTable<ItemPosition, ItemPosition.Builder> InternalFieldAccessors {
        get { return global::BaseGcmessages.internal__static_CMsgSetItemPositions_ItemPosition__FieldAccessorTable; }
      }
      
      public const int ItemIdFieldNumber = 1;
      private bool hasItemId;
      private uint itemId_;
      public bool HasItemId {
        get { return hasItemId; }
      }
      [global::System.CLSCompliant(false)]
      public uint ItemId {
        get { return itemId_; }
      }
      
      public const int PositionFieldNumber = 2;
      private bool hasPosition;
      private uint position_;
      public bool HasPosition {
        get { return hasPosition; }
      }
      [global::System.CLSCompliant(false)]
      public uint Position {
        get { return position_; }
      }
      
      public override bool IsInitialized {
        get {
          return true;
        }
      }
      
      public override void WriteTo(pb::ICodedOutputStream output) {
        int size = SerializedSize;
        string[] field_names = _itemPositionFieldNames;
        if (hasItemId) {
          output.WriteUInt32(1, field_names[0], ItemId);
        }
        if (hasPosition) {
          output.WriteUInt32(2, field_names[1], Position);
        }
        UnknownFields.WriteTo(output);
      }
      
      private int memoizedSerializedSize = -1;
      public override int SerializedSize {
        get {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasItemId) {
            size += pb::CodedOutputStream.ComputeUInt32Size(1, ItemId);
          }
          if (hasPosition) {
            size += pb::CodedOutputStream.ComputeUInt32Size(2, Position);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
      }
      
      public static ItemPosition ParseFrom(pb::ByteString data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ItemPosition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ItemPosition ParseFrom(byte[] data) {
        return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
      }
      public static ItemPosition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
      }
      public static ItemPosition ParseFrom(global::System.IO.Stream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ItemPosition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      public static ItemPosition ParseDelimitedFrom(global::System.IO.Stream input) {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
      }
      public static ItemPosition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
      }
      public static ItemPosition ParseFrom(pb::ICodedInputStream input) {
        return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
      }
      public static ItemPosition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
      }
      private ItemPosition MakeReadOnly() {
        return this;
      }
      
      public static Builder CreateBuilder() { return new Builder(); }
      public override Builder ToBuilder() { return CreateBuilder(this); }
      public override Builder CreateBuilderForType() { return new Builder(); }
      public static Builder CreateBuilder(ItemPosition prototype) {
        return new Builder(prototype);
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Builder : pb::GeneratedBuilder<ItemPosition, Builder> {
        protected override Builder ThisBuilder {
          get { return this; }
        }
        public Builder() {
          result = DefaultInstance;
          resultIsReadOnly = true;
        }
        internal Builder(ItemPosition cloneFrom) {
          result = cloneFrom;
          resultIsReadOnly = true;
        }
        
        private bool resultIsReadOnly;
        private ItemPosition result;
        
        private ItemPosition PrepareBuilder() {
          if (resultIsReadOnly) {
            ItemPosition original = result;
            result = new ItemPosition();
            resultIsReadOnly = false;
            MergeFrom(original);
          }
          return result;
        }
        
        public override bool IsInitialized {
          get { return result.IsInitialized; }
        }
        
        protected override ItemPosition MessageBeingBuilt {
          get { return PrepareBuilder(); }
        }
        
        public override Builder Clear() {
          result = DefaultInstance;
          resultIsReadOnly = true;
          return this;
        }
        
        public override Builder Clone() {
          if (resultIsReadOnly) {
            return new Builder(result);
          } else {
            return new Builder().MergeFrom(result);
          }
        }
        
        public override pbd::MessageDescriptor DescriptorForType {
          get { return global::CMsgSetItemPositions.Types.ItemPosition.Descriptor; }
        }
        
        public override ItemPosition DefaultInstanceForType {
          get { return global::CMsgSetItemPositions.Types.ItemPosition.DefaultInstance; }
        }
        
        public override ItemPosition BuildPartial() {
          if (resultIsReadOnly) {
            return result;
          }
          resultIsReadOnly = true;
          return result.MakeReadOnly();
        }
        
        public override Builder MergeFrom(pb::IMessage other) {
          if (other is ItemPosition) {
            return MergeFrom((ItemPosition) other);
          } else {
            base.MergeFrom(other);
            return this;
          }
        }
        
        public override Builder MergeFrom(ItemPosition other) {
          if (other == global::CMsgSetItemPositions.Types.ItemPosition.DefaultInstance) return this;
          PrepareBuilder();
          if (other.HasItemId) {
            ItemId = other.ItemId;
          }
          if (other.HasPosition) {
            Position = other.Position;
          }
          this.MergeUnknownFields(other.UnknownFields);
          return this;
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input) {
          return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }
        
        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          PrepareBuilder();
          pb::UnknownFieldSet.Builder unknownFields = null;
          uint tag;
          string field_name;
          while (input.ReadTag(out tag, out field_name)) {
            if(tag == 0 && field_name != null) {
              int field_ordinal = global::System.Array.BinarySearch(_itemPositionFieldNames, field_name, global::System.StringComparer.Ordinal);
              if(field_ordinal >= 0)
                tag = _itemPositionFieldTags[field_ordinal];
              else {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                continue;
              }
            }
            switch (tag) {
              case 0: {
                throw pb::InvalidProtocolBufferException.InvalidTag();
              }
              default: {
                if (pb::WireFormat.IsEndGroupTag(tag)) {
                  if (unknownFields != null) {
                    this.UnknownFields = unknownFields.Build();
                  }
                  return this;
                }
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                break;
              }
              case 8: {
                result.hasItemId = input.ReadUInt32(ref result.itemId_);
                break;
              }
              case 16: {
                result.hasPosition = input.ReadUInt32(ref result.position_);
                break;
              }
            }
          }
          
          if (unknownFields != null) {
            this.UnknownFields = unknownFields.Build();
          }
          return this;
        }
        
        
        public bool HasItemId {
          get { return result.hasItemId; }
        }
        [global::System.CLSCompliant(false)]
        public uint ItemId {
          get { return result.ItemId; }
          set { SetItemId(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetItemId(uint value) {
          PrepareBuilder();
          result.hasItemId = true;
          result.itemId_ = value;
          return this;
        }
        public Builder ClearItemId() {
          PrepareBuilder();
          result.hasItemId = false;
          result.itemId_ = 0;
          return this;
        }
        
        public bool HasPosition {
          get { return result.hasPosition; }
        }
        [global::System.CLSCompliant(false)]
        public uint Position {
          get { return result.Position; }
          set { SetPosition(value); }
        }
        [global::System.CLSCompliant(false)]
        public Builder SetPosition(uint value) {
          PrepareBuilder();
          result.hasPosition = true;
          result.position_ = value;
          return this;
        }
        public Builder ClearPosition() {
          PrepareBuilder();
          result.hasPosition = false;
          result.position_ = 0;
          return this;
        }
      }
      static ItemPosition() {
        object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
      }
    }
    
  }
  #endregion
  
  public const int ItemPositionsFieldNumber = 1;
  private pbc::PopsicleList<global::CMsgSetItemPositions.Types.ItemPosition> itemPositions_ = new pbc::PopsicleList<global::CMsgSetItemPositions.Types.ItemPosition>();
  public scg::IList<global::CMsgSetItemPositions.Types.ItemPosition> ItemPositionsList {
    get { return itemPositions_; }
  }
  public int ItemPositionsCount {
    get { return itemPositions_.Count; }
  }
  public global::CMsgSetItemPositions.Types.ItemPosition GetItemPositions(int index) {
    return itemPositions_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSetItemPositionsFieldNames;
    if (itemPositions_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], itemPositions_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::CMsgSetItemPositions.Types.ItemPosition element in ItemPositionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSetItemPositions ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSetItemPositions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSetItemPositions ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSetItemPositions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSetItemPositions ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSetItemPositions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSetItemPositions ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSetItemPositions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSetItemPositions ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSetItemPositions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSetItemPositions MakeReadOnly() {
    itemPositions_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSetItemPositions prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSetItemPositions, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSetItemPositions cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSetItemPositions result;
    
    private CMsgSetItemPositions PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSetItemPositions original = result;
        result = new CMsgSetItemPositions();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSetItemPositions MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSetItemPositions.Descriptor; }
    }
    
    public override CMsgSetItemPositions DefaultInstanceForType {
      get { return global::CMsgSetItemPositions.DefaultInstance; }
    }
    
    public override CMsgSetItemPositions BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSetItemPositions) {
        return MergeFrom((CMsgSetItemPositions) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSetItemPositions other) {
      if (other == global::CMsgSetItemPositions.DefaultInstance) return this;
      PrepareBuilder();
      if (other.itemPositions_.Count != 0) {
        result.itemPositions_.Add(other.itemPositions_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSetItemPositionsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSetItemPositionsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.itemPositions_, global::CMsgSetItemPositions.Types.ItemPosition.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::CMsgSetItemPositions.Types.ItemPosition> ItemPositionsList {
      get { return PrepareBuilder().itemPositions_; }
    }
    public int ItemPositionsCount {
      get { return result.ItemPositionsCount; }
    }
    public global::CMsgSetItemPositions.Types.ItemPosition GetItemPositions(int index) {
      return result.GetItemPositions(index);
    }
    public Builder SetItemPositions(int index, global::CMsgSetItemPositions.Types.ItemPosition value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.itemPositions_[index] = value;
      return this;
    }
    public Builder SetItemPositions(int index, global::CMsgSetItemPositions.Types.ItemPosition.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.itemPositions_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddItemPositions(global::CMsgSetItemPositions.Types.ItemPosition value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.itemPositions_.Add(value);
      return this;
    }
    public Builder AddItemPositions(global::CMsgSetItemPositions.Types.ItemPosition.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.itemPositions_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeItemPositions(scg::IEnumerable<global::CMsgSetItemPositions.Types.ItemPosition> values) {
      PrepareBuilder();
      result.itemPositions_.Add(values);
      return this;
    }
    public Builder ClearItemPositions() {
      PrepareBuilder();
      result.itemPositions_.Clear();
      return this;
    }
  }
  static CMsgSetItemPositions() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOEconItemPresetInstance : pb::GeneratedMessage<CSOEconItemPresetInstance, CSOEconItemPresetInstance.Builder> {
  private CSOEconItemPresetInstance() { }
  private static readonly CSOEconItemPresetInstance defaultInstance = new CSOEconItemPresetInstance().MakeReadOnly();
  private static readonly string[] _cSOEconItemPresetInstanceFieldNames = new string[] { "class_id", "item_id", "preset_id", "slot_id" };
  private static readonly uint[] _cSOEconItemPresetInstanceFieldTags = new uint[] { 16, 40, 24, 32 };
  public static CSOEconItemPresetInstance DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOEconItemPresetInstance DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOEconItemPresetInstance ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOEconItemPresetInstance__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOEconItemPresetInstance, CSOEconItemPresetInstance.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOEconItemPresetInstance__FieldAccessorTable; }
  }
  
  public const int ClassIdFieldNumber = 2;
  private bool hasClassId;
  private uint classId_;
  public bool HasClassId {
    get { return hasClassId; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClassId {
    get { return classId_; }
  }
  
  public const int PresetIdFieldNumber = 3;
  private bool hasPresetId;
  private uint presetId_;
  public bool HasPresetId {
    get { return hasPresetId; }
  }
  [global::System.CLSCompliant(false)]
  public uint PresetId {
    get { return presetId_; }
  }
  
  public const int SlotIdFieldNumber = 4;
  private bool hasSlotId;
  private uint slotId_;
  public bool HasSlotId {
    get { return hasSlotId; }
  }
  [global::System.CLSCompliant(false)]
  public uint SlotId {
    get { return slotId_; }
  }
  
  public const int ItemIdFieldNumber = 5;
  private bool hasItemId;
  private ulong itemId_;
  public bool HasItemId {
    get { return hasItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ItemId {
    get { return itemId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOEconItemPresetInstanceFieldNames;
    if (hasClassId) {
      output.WriteUInt32(2, field_names[0], ClassId);
    }
    if (hasPresetId) {
      output.WriteUInt32(3, field_names[2], PresetId);
    }
    if (hasSlotId) {
      output.WriteUInt32(4, field_names[3], SlotId);
    }
    if (hasItemId) {
      output.WriteUInt64(5, field_names[1], ItemId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasClassId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, ClassId);
      }
      if (hasPresetId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, PresetId);
      }
      if (hasSlotId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, SlotId);
      }
      if (hasItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, ItemId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOEconItemPresetInstance ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemPresetInstance ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemPresetInstance ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemPresetInstance ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemPresetInstance ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemPresetInstance ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemPresetInstance ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOEconItemPresetInstance ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOEconItemPresetInstance ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemPresetInstance ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOEconItemPresetInstance MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOEconItemPresetInstance prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOEconItemPresetInstance, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOEconItemPresetInstance cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOEconItemPresetInstance result;
    
    private CSOEconItemPresetInstance PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOEconItemPresetInstance original = result;
        result = new CSOEconItemPresetInstance();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOEconItemPresetInstance MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOEconItemPresetInstance.Descriptor; }
    }
    
    public override CSOEconItemPresetInstance DefaultInstanceForType {
      get { return global::CSOEconItemPresetInstance.DefaultInstance; }
    }
    
    public override CSOEconItemPresetInstance BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOEconItemPresetInstance) {
        return MergeFrom((CSOEconItemPresetInstance) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOEconItemPresetInstance other) {
      if (other == global::CSOEconItemPresetInstance.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasClassId) {
        ClassId = other.ClassId;
      }
      if (other.HasPresetId) {
        PresetId = other.PresetId;
      }
      if (other.HasSlotId) {
        SlotId = other.SlotId;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOEconItemPresetInstanceFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOEconItemPresetInstanceFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 16: {
            result.hasClassId = input.ReadUInt32(ref result.classId_);
            break;
          }
          case 24: {
            result.hasPresetId = input.ReadUInt32(ref result.presetId_);
            break;
          }
          case 32: {
            result.hasSlotId = input.ReadUInt32(ref result.slotId_);
            break;
          }
          case 40: {
            result.hasItemId = input.ReadUInt64(ref result.itemId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasClassId {
      get { return result.hasClassId; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClassId {
      get { return result.ClassId; }
      set { SetClassId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClassId(uint value) {
      PrepareBuilder();
      result.hasClassId = true;
      result.classId_ = value;
      return this;
    }
    public Builder ClearClassId() {
      PrepareBuilder();
      result.hasClassId = false;
      result.classId_ = 0;
      return this;
    }
    
    public bool HasPresetId {
      get { return result.hasPresetId; }
    }
    [global::System.CLSCompliant(false)]
    public uint PresetId {
      get { return result.PresetId; }
      set { SetPresetId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPresetId(uint value) {
      PrepareBuilder();
      result.hasPresetId = true;
      result.presetId_ = value;
      return this;
    }
    public Builder ClearPresetId() {
      PrepareBuilder();
      result.hasPresetId = false;
      result.presetId_ = 0;
      return this;
    }
    
    public bool HasSlotId {
      get { return result.hasSlotId; }
    }
    [global::System.CLSCompliant(false)]
    public uint SlotId {
      get { return result.SlotId; }
      set { SetSlotId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSlotId(uint value) {
      PrepareBuilder();
      result.hasSlotId = true;
      result.slotId_ = value;
      return this;
    }
    public Builder ClearSlotId() {
      PrepareBuilder();
      result.hasSlotId = false;
      result.slotId_ = 0;
      return this;
    }
    
    public bool HasItemId {
      get { return result.hasItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ItemId {
      get { return result.ItemId; }
      set { SetItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemId(ulong value) {
      PrepareBuilder();
      result.hasItemId = true;
      result.itemId_ = value;
      return this;
    }
    public Builder ClearItemId() {
      PrepareBuilder();
      result.hasItemId = false;
      result.itemId_ = 0UL;
      return this;
    }
  }
  static CSOEconItemPresetInstance() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSelectItemPresetForClass : pb::GeneratedMessage<CMsgSelectItemPresetForClass, CMsgSelectItemPresetForClass.Builder> {
  private CMsgSelectItemPresetForClass() { }
  private static readonly CMsgSelectItemPresetForClass defaultInstance = new CMsgSelectItemPresetForClass().MakeReadOnly();
  private static readonly string[] _cMsgSelectItemPresetForClassFieldNames = new string[] { "class_id", "preset_id" };
  private static readonly uint[] _cMsgSelectItemPresetForClassFieldTags = new uint[] { 8, 16 };
  public static CMsgSelectItemPresetForClass DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSelectItemPresetForClass DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSelectItemPresetForClass ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgSelectItemPresetForClass__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSelectItemPresetForClass, CMsgSelectItemPresetForClass.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgSelectItemPresetForClass__FieldAccessorTable; }
  }
  
  public const int ClassIdFieldNumber = 1;
  private bool hasClassId;
  private uint classId_;
  public bool HasClassId {
    get { return hasClassId; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClassId {
    get { return classId_; }
  }
  
  public const int PresetIdFieldNumber = 2;
  private bool hasPresetId;
  private uint presetId_;
  public bool HasPresetId {
    get { return hasPresetId; }
  }
  [global::System.CLSCompliant(false)]
  public uint PresetId {
    get { return presetId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSelectItemPresetForClassFieldNames;
    if (hasClassId) {
      output.WriteUInt32(1, field_names[0], ClassId);
    }
    if (hasPresetId) {
      output.WriteUInt32(2, field_names[1], PresetId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasClassId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, ClassId);
      }
      if (hasPresetId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, PresetId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSelectItemPresetForClass ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClass ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClass ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClass ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClass ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClass ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClass ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSelectItemPresetForClass ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSelectItemPresetForClass ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClass ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSelectItemPresetForClass MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSelectItemPresetForClass prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSelectItemPresetForClass, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSelectItemPresetForClass cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSelectItemPresetForClass result;
    
    private CMsgSelectItemPresetForClass PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSelectItemPresetForClass original = result;
        result = new CMsgSelectItemPresetForClass();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSelectItemPresetForClass MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSelectItemPresetForClass.Descriptor; }
    }
    
    public override CMsgSelectItemPresetForClass DefaultInstanceForType {
      get { return global::CMsgSelectItemPresetForClass.DefaultInstance; }
    }
    
    public override CMsgSelectItemPresetForClass BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSelectItemPresetForClass) {
        return MergeFrom((CMsgSelectItemPresetForClass) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSelectItemPresetForClass other) {
      if (other == global::CMsgSelectItemPresetForClass.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasClassId) {
        ClassId = other.ClassId;
      }
      if (other.HasPresetId) {
        PresetId = other.PresetId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSelectItemPresetForClassFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSelectItemPresetForClassFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasClassId = input.ReadUInt32(ref result.classId_);
            break;
          }
          case 16: {
            result.hasPresetId = input.ReadUInt32(ref result.presetId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasClassId {
      get { return result.hasClassId; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClassId {
      get { return result.ClassId; }
      set { SetClassId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClassId(uint value) {
      PrepareBuilder();
      result.hasClassId = true;
      result.classId_ = value;
      return this;
    }
    public Builder ClearClassId() {
      PrepareBuilder();
      result.hasClassId = false;
      result.classId_ = 0;
      return this;
    }
    
    public bool HasPresetId {
      get { return result.hasPresetId; }
    }
    [global::System.CLSCompliant(false)]
    public uint PresetId {
      get { return result.PresetId; }
      set { SetPresetId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPresetId(uint value) {
      PrepareBuilder();
      result.hasPresetId = true;
      result.presetId_ = value;
      return this;
    }
    public Builder ClearPresetId() {
      PrepareBuilder();
      result.hasPresetId = false;
      result.presetId_ = 0;
      return this;
    }
  }
  static CMsgSelectItemPresetForClass() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSelectItemPresetForClassReply : pb::GeneratedMessage<CMsgSelectItemPresetForClassReply, CMsgSelectItemPresetForClassReply.Builder> {
  private CMsgSelectItemPresetForClassReply() { }
  private static readonly CMsgSelectItemPresetForClassReply defaultInstance = new CMsgSelectItemPresetForClassReply().MakeReadOnly();
  private static readonly string[] _cMsgSelectItemPresetForClassReplyFieldNames = new string[] { "success" };
  private static readonly uint[] _cMsgSelectItemPresetForClassReplyFieldTags = new uint[] { 8 };
  public static CMsgSelectItemPresetForClassReply DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSelectItemPresetForClassReply DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSelectItemPresetForClassReply ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgSelectItemPresetForClassReply__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSelectItemPresetForClassReply, CMsgSelectItemPresetForClassReply.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgSelectItemPresetForClassReply__FieldAccessorTable; }
  }
  
  public const int SuccessFieldNumber = 1;
  private bool hasSuccess;
  private bool success_;
  public bool HasSuccess {
    get { return hasSuccess; }
  }
  public bool Success {
    get { return success_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSelectItemPresetForClassReplyFieldNames;
    if (hasSuccess) {
      output.WriteBool(1, field_names[0], Success);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSuccess) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, Success);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSelectItemPresetForClassReply ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClassReply ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClassReply ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClassReply ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClassReply ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClassReply ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClassReply ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSelectItemPresetForClassReply ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSelectItemPresetForClassReply ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSelectItemPresetForClassReply ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSelectItemPresetForClassReply MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSelectItemPresetForClassReply prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSelectItemPresetForClassReply, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSelectItemPresetForClassReply cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSelectItemPresetForClassReply result;
    
    private CMsgSelectItemPresetForClassReply PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSelectItemPresetForClassReply original = result;
        result = new CMsgSelectItemPresetForClassReply();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSelectItemPresetForClassReply MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSelectItemPresetForClassReply.Descriptor; }
    }
    
    public override CMsgSelectItemPresetForClassReply DefaultInstanceForType {
      get { return global::CMsgSelectItemPresetForClassReply.DefaultInstance; }
    }
    
    public override CMsgSelectItemPresetForClassReply BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSelectItemPresetForClassReply) {
        return MergeFrom((CMsgSelectItemPresetForClassReply) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSelectItemPresetForClassReply other) {
      if (other == global::CMsgSelectItemPresetForClassReply.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSuccess) {
        Success = other.Success;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSelectItemPresetForClassReplyFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSelectItemPresetForClassReplyFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSuccess = input.ReadBool(ref result.success_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSuccess {
      get { return result.hasSuccess; }
    }
    public bool Success {
      get { return result.Success; }
      set { SetSuccess(value); }
    }
    public Builder SetSuccess(bool value) {
      PrepareBuilder();
      result.hasSuccess = true;
      result.success_ = value;
      return this;
    }
    public Builder ClearSuccess() {
      PrepareBuilder();
      result.hasSuccess = false;
      result.success_ = false;
      return this;
    }
  }
  static CMsgSelectItemPresetForClassReply() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOSelectedItemPreset : pb::GeneratedMessage<CSOSelectedItemPreset, CSOSelectedItemPreset.Builder> {
  private CSOSelectedItemPreset() { }
  private static readonly CSOSelectedItemPreset defaultInstance = new CSOSelectedItemPreset().MakeReadOnly();
  private static readonly string[] _cSOSelectedItemPresetFieldNames = new string[] { "account_id", "class_id", "preset_id" };
  private static readonly uint[] _cSOSelectedItemPresetFieldTags = new uint[] { 8, 16, 24 };
  public static CSOSelectedItemPreset DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOSelectedItemPreset DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOSelectedItemPreset ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOSelectedItemPreset__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOSelectedItemPreset, CSOSelectedItemPreset.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOSelectedItemPreset__FieldAccessorTable; }
  }
  
  public const int AccountIdFieldNumber = 1;
  private bool hasAccountId;
  private uint accountId_;
  public bool HasAccountId {
    get { return hasAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AccountId {
    get { return accountId_; }
  }
  
  public const int ClassIdFieldNumber = 2;
  private bool hasClassId;
  private uint classId_;
  public bool HasClassId {
    get { return hasClassId; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClassId {
    get { return classId_; }
  }
  
  public const int PresetIdFieldNumber = 3;
  private bool hasPresetId;
  private uint presetId_;
  public bool HasPresetId {
    get { return hasPresetId; }
  }
  [global::System.CLSCompliant(false)]
  public uint PresetId {
    get { return presetId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOSelectedItemPresetFieldNames;
    if (hasAccountId) {
      output.WriteUInt32(1, field_names[0], AccountId);
    }
    if (hasClassId) {
      output.WriteUInt32(2, field_names[1], ClassId);
    }
    if (hasPresetId) {
      output.WriteUInt32(3, field_names[2], PresetId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, AccountId);
      }
      if (hasClassId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, ClassId);
      }
      if (hasPresetId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, PresetId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOSelectedItemPreset ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOSelectedItemPreset ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOSelectedItemPreset ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOSelectedItemPreset ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOSelectedItemPreset ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOSelectedItemPreset ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOSelectedItemPreset ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOSelectedItemPreset ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOSelectedItemPreset ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOSelectedItemPreset ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOSelectedItemPreset MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOSelectedItemPreset prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOSelectedItemPreset, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOSelectedItemPreset cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOSelectedItemPreset result;
    
    private CSOSelectedItemPreset PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOSelectedItemPreset original = result;
        result = new CSOSelectedItemPreset();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOSelectedItemPreset MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOSelectedItemPreset.Descriptor; }
    }
    
    public override CSOSelectedItemPreset DefaultInstanceForType {
      get { return global::CSOSelectedItemPreset.DefaultInstance; }
    }
    
    public override CSOSelectedItemPreset BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOSelectedItemPreset) {
        return MergeFrom((CSOSelectedItemPreset) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOSelectedItemPreset other) {
      if (other == global::CSOSelectedItemPreset.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasClassId) {
        ClassId = other.ClassId;
      }
      if (other.HasPresetId) {
        PresetId = other.PresetId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOSelectedItemPresetFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOSelectedItemPresetFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAccountId = input.ReadUInt32(ref result.accountId_);
            break;
          }
          case 16: {
            result.hasClassId = input.ReadUInt32(ref result.classId_);
            break;
          }
          case 24: {
            result.hasPresetId = input.ReadUInt32(ref result.presetId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAccountId {
      get { return result.hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return result.AccountId; }
      set { SetAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAccountId(uint value) {
      PrepareBuilder();
      result.hasAccountId = true;
      result.accountId_ = value;
      return this;
    }
    public Builder ClearAccountId() {
      PrepareBuilder();
      result.hasAccountId = false;
      result.accountId_ = 0;
      return this;
    }
    
    public bool HasClassId {
      get { return result.hasClassId; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClassId {
      get { return result.ClassId; }
      set { SetClassId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClassId(uint value) {
      PrepareBuilder();
      result.hasClassId = true;
      result.classId_ = value;
      return this;
    }
    public Builder ClearClassId() {
      PrepareBuilder();
      result.hasClassId = false;
      result.classId_ = 0;
      return this;
    }
    
    public bool HasPresetId {
      get { return result.hasPresetId; }
    }
    [global::System.CLSCompliant(false)]
    public uint PresetId {
      get { return result.PresetId; }
      set { SetPresetId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPresetId(uint value) {
      PrepareBuilder();
      result.hasPresetId = true;
      result.presetId_ = value;
      return this;
    }
    public Builder ClearPresetId() {
      PrepareBuilder();
      result.hasPresetId = false;
      result.presetId_ = 0;
      return this;
    }
  }
  static CSOSelectedItemPreset() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCReportAbuse : pb::GeneratedMessage<CMsgGCReportAbuse, CMsgGCReportAbuse.Builder> {
  private CMsgGCReportAbuse() { }
  private static readonly CMsgGCReportAbuse defaultInstance = new CMsgGCReportAbuse().MakeReadOnly();
  private static readonly string[] _cMsgGCReportAbuseFieldNames = new string[] { "abuse_type", "content_type", "description", "gid", "target_game_server_ip", "target_game_server_port", "target_steam_id" };
  private static readonly uint[] _cMsgGCReportAbuseFieldTags = new uint[] { 16, 24, 34, 40, 53, 56, 9 };
  public static CMsgGCReportAbuse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCReportAbuse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCReportAbuse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCReportAbuse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCReportAbuse, CMsgGCReportAbuse.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCReportAbuse__FieldAccessorTable; }
  }
  
  public const int TargetSteamIdFieldNumber = 1;
  private bool hasTargetSteamId;
  private ulong targetSteamId_;
  public bool HasTargetSteamId {
    get { return hasTargetSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong TargetSteamId {
    get { return targetSteamId_; }
  }
  
  public const int DescriptionFieldNumber = 4;
  private bool hasDescription;
  private string description_ = "";
  public bool HasDescription {
    get { return hasDescription; }
  }
  public string Description {
    get { return description_; }
  }
  
  public const int GidFieldNumber = 5;
  private bool hasGid;
  private ulong gid_;
  public bool HasGid {
    get { return hasGid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Gid {
    get { return gid_; }
  }
  
  public const int AbuseTypeFieldNumber = 2;
  private bool hasAbuseType;
  private uint abuseType_;
  public bool HasAbuseType {
    get { return hasAbuseType; }
  }
  [global::System.CLSCompliant(false)]
  public uint AbuseType {
    get { return abuseType_; }
  }
  
  public const int ContentTypeFieldNumber = 3;
  private bool hasContentType;
  private uint contentType_;
  public bool HasContentType {
    get { return hasContentType; }
  }
  [global::System.CLSCompliant(false)]
  public uint ContentType {
    get { return contentType_; }
  }
  
  public const int TargetGameServerIpFieldNumber = 6;
  private bool hasTargetGameServerIp;
  private uint targetGameServerIp_;
  public bool HasTargetGameServerIp {
    get { return hasTargetGameServerIp; }
  }
  [global::System.CLSCompliant(false)]
  public uint TargetGameServerIp {
    get { return targetGameServerIp_; }
  }
  
  public const int TargetGameServerPortFieldNumber = 7;
  private bool hasTargetGameServerPort;
  private uint targetGameServerPort_;
  public bool HasTargetGameServerPort {
    get { return hasTargetGameServerPort; }
  }
  [global::System.CLSCompliant(false)]
  public uint TargetGameServerPort {
    get { return targetGameServerPort_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCReportAbuseFieldNames;
    if (hasTargetSteamId) {
      output.WriteFixed64(1, field_names[6], TargetSteamId);
    }
    if (hasAbuseType) {
      output.WriteUInt32(2, field_names[0], AbuseType);
    }
    if (hasContentType) {
      output.WriteUInt32(3, field_names[1], ContentType);
    }
    if (hasDescription) {
      output.WriteString(4, field_names[2], Description);
    }
    if (hasGid) {
      output.WriteUInt64(5, field_names[3], Gid);
    }
    if (hasTargetGameServerIp) {
      output.WriteFixed32(6, field_names[4], TargetGameServerIp);
    }
    if (hasTargetGameServerPort) {
      output.WriteUInt32(7, field_names[5], TargetGameServerPort);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTargetSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, TargetSteamId);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Description);
      }
      if (hasGid) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, Gid);
      }
      if (hasAbuseType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, AbuseType);
      }
      if (hasContentType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, ContentType);
      }
      if (hasTargetGameServerIp) {
        size += pb::CodedOutputStream.ComputeFixed32Size(6, TargetGameServerIp);
      }
      if (hasTargetGameServerPort) {
        size += pb::CodedOutputStream.ComputeUInt32Size(7, TargetGameServerPort);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCReportAbuse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCReportAbuse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCReportAbuse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCReportAbuse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCReportAbuse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCReportAbuse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCReportAbuse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCReportAbuse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCReportAbuse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCReportAbuse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCReportAbuse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCReportAbuse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCReportAbuse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCReportAbuse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCReportAbuse result;
    
    private CMsgGCReportAbuse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCReportAbuse original = result;
        result = new CMsgGCReportAbuse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCReportAbuse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCReportAbuse.Descriptor; }
    }
    
    public override CMsgGCReportAbuse DefaultInstanceForType {
      get { return global::CMsgGCReportAbuse.DefaultInstance; }
    }
    
    public override CMsgGCReportAbuse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCReportAbuse) {
        return MergeFrom((CMsgGCReportAbuse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCReportAbuse other) {
      if (other == global::CMsgGCReportAbuse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTargetSteamId) {
        TargetSteamId = other.TargetSteamId;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasGid) {
        Gid = other.Gid;
      }
      if (other.HasAbuseType) {
        AbuseType = other.AbuseType;
      }
      if (other.HasContentType) {
        ContentType = other.ContentType;
      }
      if (other.HasTargetGameServerIp) {
        TargetGameServerIp = other.TargetGameServerIp;
      }
      if (other.HasTargetGameServerPort) {
        TargetGameServerPort = other.TargetGameServerPort;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCReportAbuseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCReportAbuseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasTargetSteamId = input.ReadFixed64(ref result.targetSteamId_);
            break;
          }
          case 16: {
            result.hasAbuseType = input.ReadUInt32(ref result.abuseType_);
            break;
          }
          case 24: {
            result.hasContentType = input.ReadUInt32(ref result.contentType_);
            break;
          }
          case 34: {
            result.hasDescription = input.ReadString(ref result.description_);
            break;
          }
          case 40: {
            result.hasGid = input.ReadUInt64(ref result.gid_);
            break;
          }
          case 53: {
            result.hasTargetGameServerIp = input.ReadFixed32(ref result.targetGameServerIp_);
            break;
          }
          case 56: {
            result.hasTargetGameServerPort = input.ReadUInt32(ref result.targetGameServerPort_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTargetSteamId {
      get { return result.hasTargetSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TargetSteamId {
      get { return result.TargetSteamId; }
      set { SetTargetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTargetSteamId(ulong value) {
      PrepareBuilder();
      result.hasTargetSteamId = true;
      result.targetSteamId_ = value;
      return this;
    }
    public Builder ClearTargetSteamId() {
      PrepareBuilder();
      result.hasTargetSteamId = false;
      result.targetSteamId_ = 0;
      return this;
    }
    
    public bool HasDescription {
      get { return result.hasDescription; }
    }
    public string Description {
      get { return result.Description; }
      set { SetDescription(value); }
    }
    public Builder SetDescription(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDescription = true;
      result.description_ = value;
      return this;
    }
    public Builder ClearDescription() {
      PrepareBuilder();
      result.hasDescription = false;
      result.description_ = "";
      return this;
    }
    
    public bool HasGid {
      get { return result.hasGid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Gid {
      get { return result.Gid; }
      set { SetGid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGid(ulong value) {
      PrepareBuilder();
      result.hasGid = true;
      result.gid_ = value;
      return this;
    }
    public Builder ClearGid() {
      PrepareBuilder();
      result.hasGid = false;
      result.gid_ = 0UL;
      return this;
    }
    
    public bool HasAbuseType {
      get { return result.hasAbuseType; }
    }
    [global::System.CLSCompliant(false)]
    public uint AbuseType {
      get { return result.AbuseType; }
      set { SetAbuseType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAbuseType(uint value) {
      PrepareBuilder();
      result.hasAbuseType = true;
      result.abuseType_ = value;
      return this;
    }
    public Builder ClearAbuseType() {
      PrepareBuilder();
      result.hasAbuseType = false;
      result.abuseType_ = 0;
      return this;
    }
    
    public bool HasContentType {
      get { return result.hasContentType; }
    }
    [global::System.CLSCompliant(false)]
    public uint ContentType {
      get { return result.ContentType; }
      set { SetContentType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetContentType(uint value) {
      PrepareBuilder();
      result.hasContentType = true;
      result.contentType_ = value;
      return this;
    }
    public Builder ClearContentType() {
      PrepareBuilder();
      result.hasContentType = false;
      result.contentType_ = 0;
      return this;
    }
    
    public bool HasTargetGameServerIp {
      get { return result.hasTargetGameServerIp; }
    }
    [global::System.CLSCompliant(false)]
    public uint TargetGameServerIp {
      get { return result.TargetGameServerIp; }
      set { SetTargetGameServerIp(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTargetGameServerIp(uint value) {
      PrepareBuilder();
      result.hasTargetGameServerIp = true;
      result.targetGameServerIp_ = value;
      return this;
    }
    public Builder ClearTargetGameServerIp() {
      PrepareBuilder();
      result.hasTargetGameServerIp = false;
      result.targetGameServerIp_ = 0;
      return this;
    }
    
    public bool HasTargetGameServerPort {
      get { return result.hasTargetGameServerPort; }
    }
    [global::System.CLSCompliant(false)]
    public uint TargetGameServerPort {
      get { return result.TargetGameServerPort; }
      set { SetTargetGameServerPort(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTargetGameServerPort(uint value) {
      PrepareBuilder();
      result.hasTargetGameServerPort = true;
      result.targetGameServerPort_ = value;
      return this;
    }
    public Builder ClearTargetGameServerPort() {
      PrepareBuilder();
      result.hasTargetGameServerPort = false;
      result.targetGameServerPort_ = 0;
      return this;
    }
  }
  static CMsgGCReportAbuse() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCReportAbuseResponse : pb::GeneratedMessage<CMsgGCReportAbuseResponse, CMsgGCReportAbuseResponse.Builder> {
  private CMsgGCReportAbuseResponse() { }
  private static readonly CMsgGCReportAbuseResponse defaultInstance = new CMsgGCReportAbuseResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCReportAbuseResponseFieldNames = new string[] { "error_message", "result", "target_steam_id" };
  private static readonly uint[] _cMsgGCReportAbuseResponseFieldTags = new uint[] { 26, 16, 9 };
  public static CMsgGCReportAbuseResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCReportAbuseResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCReportAbuseResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCReportAbuseResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCReportAbuseResponse, CMsgGCReportAbuseResponse.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCReportAbuseResponse__FieldAccessorTable; }
  }
  
  public const int TargetSteamIdFieldNumber = 1;
  private bool hasTargetSteamId;
  private ulong targetSteamId_;
  public bool HasTargetSteamId {
    get { return hasTargetSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong TargetSteamId {
    get { return targetSteamId_; }
  }
  
  public const int ResultFieldNumber = 2;
  private bool hasResult;
  private uint result_;
  public bool HasResult {
    get { return hasResult; }
  }
  [global::System.CLSCompliant(false)]
  public uint Result {
    get { return result_; }
  }
  
  public const int ErrorMessageFieldNumber = 3;
  private bool hasErrorMessage;
  private string errorMessage_ = "";
  public bool HasErrorMessage {
    get { return hasErrorMessage; }
  }
  public string ErrorMessage {
    get { return errorMessage_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCReportAbuseResponseFieldNames;
    if (hasTargetSteamId) {
      output.WriteFixed64(1, field_names[2], TargetSteamId);
    }
    if (hasResult) {
      output.WriteUInt32(2, field_names[1], Result);
    }
    if (hasErrorMessage) {
      output.WriteString(3, field_names[0], ErrorMessage);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTargetSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, TargetSteamId);
      }
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Result);
      }
      if (hasErrorMessage) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ErrorMessage);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCReportAbuseResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCReportAbuseResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCReportAbuseResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCReportAbuseResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCReportAbuseResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCReportAbuseResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCReportAbuseResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCReportAbuseResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCReportAbuseResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCReportAbuseResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCReportAbuseResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCReportAbuseResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCReportAbuseResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCReportAbuseResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCReportAbuseResponse result;
    
    private CMsgGCReportAbuseResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCReportAbuseResponse original = result;
        result = new CMsgGCReportAbuseResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCReportAbuseResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCReportAbuseResponse.Descriptor; }
    }
    
    public override CMsgGCReportAbuseResponse DefaultInstanceForType {
      get { return global::CMsgGCReportAbuseResponse.DefaultInstance; }
    }
    
    public override CMsgGCReportAbuseResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCReportAbuseResponse) {
        return MergeFrom((CMsgGCReportAbuseResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCReportAbuseResponse other) {
      if (other == global::CMsgGCReportAbuseResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTargetSteamId) {
        TargetSteamId = other.TargetSteamId;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasErrorMessage) {
        ErrorMessage = other.ErrorMessage;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCReportAbuseResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCReportAbuseResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasTargetSteamId = input.ReadFixed64(ref result.targetSteamId_);
            break;
          }
          case 16: {
            result.hasResult = input.ReadUInt32(ref result.result_);
            break;
          }
          case 26: {
            result.hasErrorMessage = input.ReadString(ref result.errorMessage_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTargetSteamId {
      get { return result.hasTargetSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TargetSteamId {
      get { return result.TargetSteamId; }
      set { SetTargetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTargetSteamId(ulong value) {
      PrepareBuilder();
      result.hasTargetSteamId = true;
      result.targetSteamId_ = value;
      return this;
    }
    public Builder ClearTargetSteamId() {
      PrepareBuilder();
      result.hasTargetSteamId = false;
      result.targetSteamId_ = 0;
      return this;
    }
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    [global::System.CLSCompliant(false)]
    public uint Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetResult(uint value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
    
    public bool HasErrorMessage {
      get { return result.hasErrorMessage; }
    }
    public string ErrorMessage {
      get { return result.ErrorMessage; }
      set { SetErrorMessage(value); }
    }
    public Builder SetErrorMessage(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasErrorMessage = true;
      result.errorMessage_ = value;
      return this;
    }
    public Builder ClearErrorMessage() {
      PrepareBuilder();
      result.hasErrorMessage = false;
      result.errorMessage_ = "";
      return this;
    }
  }
  static CMsgGCReportAbuseResponse() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCNameItemNotification : pb::GeneratedMessage<CMsgGCNameItemNotification, CMsgGCNameItemNotification.Builder> {
  private CMsgGCNameItemNotification() { }
  private static readonly CMsgGCNameItemNotification defaultInstance = new CMsgGCNameItemNotification().MakeReadOnly();
  private static readonly string[] _cMsgGCNameItemNotificationFieldNames = new string[] { "item_def_index", "item_name_custom", "player_steamid" };
  private static readonly uint[] _cMsgGCNameItemNotificationFieldTags = new uint[] { 16, 26, 9 };
  public static CMsgGCNameItemNotification DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCNameItemNotification DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCNameItemNotification ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCNameItemNotification__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCNameItemNotification, CMsgGCNameItemNotification.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCNameItemNotification__FieldAccessorTable; }
  }
  
  public const int PlayerSteamidFieldNumber = 1;
  private bool hasPlayerSteamid;
  private ulong playerSteamid_;
  public bool HasPlayerSteamid {
    get { return hasPlayerSteamid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong PlayerSteamid {
    get { return playerSteamid_; }
  }
  
  public const int ItemDefIndexFieldNumber = 2;
  private bool hasItemDefIndex;
  private uint itemDefIndex_;
  public bool HasItemDefIndex {
    get { return hasItemDefIndex; }
  }
  [global::System.CLSCompliant(false)]
  public uint ItemDefIndex {
    get { return itemDefIndex_; }
  }
  
  public const int ItemNameCustomFieldNumber = 3;
  private bool hasItemNameCustom;
  private string itemNameCustom_ = "";
  public bool HasItemNameCustom {
    get { return hasItemNameCustom; }
  }
  public string ItemNameCustom {
    get { return itemNameCustom_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCNameItemNotificationFieldNames;
    if (hasPlayerSteamid) {
      output.WriteFixed64(1, field_names[2], PlayerSteamid);
    }
    if (hasItemDefIndex) {
      output.WriteUInt32(2, field_names[0], ItemDefIndex);
    }
    if (hasItemNameCustom) {
      output.WriteString(3, field_names[1], ItemNameCustom);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPlayerSteamid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, PlayerSteamid);
      }
      if (hasItemDefIndex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, ItemDefIndex);
      }
      if (hasItemNameCustom) {
        size += pb::CodedOutputStream.ComputeStringSize(3, ItemNameCustom);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCNameItemNotification ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCNameItemNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCNameItemNotification ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCNameItemNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCNameItemNotification ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCNameItemNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCNameItemNotification ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCNameItemNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCNameItemNotification ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCNameItemNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCNameItemNotification MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCNameItemNotification prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCNameItemNotification, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCNameItemNotification cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCNameItemNotification result;
    
    private CMsgGCNameItemNotification PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCNameItemNotification original = result;
        result = new CMsgGCNameItemNotification();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCNameItemNotification MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCNameItemNotification.Descriptor; }
    }
    
    public override CMsgGCNameItemNotification DefaultInstanceForType {
      get { return global::CMsgGCNameItemNotification.DefaultInstance; }
    }
    
    public override CMsgGCNameItemNotification BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCNameItemNotification) {
        return MergeFrom((CMsgGCNameItemNotification) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCNameItemNotification other) {
      if (other == global::CMsgGCNameItemNotification.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPlayerSteamid) {
        PlayerSteamid = other.PlayerSteamid;
      }
      if (other.HasItemDefIndex) {
        ItemDefIndex = other.ItemDefIndex;
      }
      if (other.HasItemNameCustom) {
        ItemNameCustom = other.ItemNameCustom;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCNameItemNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCNameItemNotificationFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasPlayerSteamid = input.ReadFixed64(ref result.playerSteamid_);
            break;
          }
          case 16: {
            result.hasItemDefIndex = input.ReadUInt32(ref result.itemDefIndex_);
            break;
          }
          case 26: {
            result.hasItemNameCustom = input.ReadString(ref result.itemNameCustom_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPlayerSteamid {
      get { return result.hasPlayerSteamid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong PlayerSteamid {
      get { return result.PlayerSteamid; }
      set { SetPlayerSteamid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPlayerSteamid(ulong value) {
      PrepareBuilder();
      result.hasPlayerSteamid = true;
      result.playerSteamid_ = value;
      return this;
    }
    public Builder ClearPlayerSteamid() {
      PrepareBuilder();
      result.hasPlayerSteamid = false;
      result.playerSteamid_ = 0;
      return this;
    }
    
    public bool HasItemDefIndex {
      get { return result.hasItemDefIndex; }
    }
    [global::System.CLSCompliant(false)]
    public uint ItemDefIndex {
      get { return result.ItemDefIndex; }
      set { SetItemDefIndex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemDefIndex(uint value) {
      PrepareBuilder();
      result.hasItemDefIndex = true;
      result.itemDefIndex_ = value;
      return this;
    }
    public Builder ClearItemDefIndex() {
      PrepareBuilder();
      result.hasItemDefIndex = false;
      result.itemDefIndex_ = 0;
      return this;
    }
    
    public bool HasItemNameCustom {
      get { return result.hasItemNameCustom; }
    }
    public string ItemNameCustom {
      get { return result.ItemNameCustom; }
      set { SetItemNameCustom(value); }
    }
    public Builder SetItemNameCustom(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasItemNameCustom = true;
      result.itemNameCustom_ = value;
      return this;
    }
    public Builder ClearItemNameCustom() {
      PrepareBuilder();
      result.hasItemNameCustom = false;
      result.itemNameCustom_ = "";
      return this;
    }
  }
  static CMsgGCNameItemNotification() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCClientDisplayNotification : pb::GeneratedMessage<CMsgGCClientDisplayNotification, CMsgGCClientDisplayNotification.Builder> {
  private CMsgGCClientDisplayNotification() { }
  private static readonly CMsgGCClientDisplayNotification defaultInstance = new CMsgGCClientDisplayNotification().MakeReadOnly();
  private static readonly string[] _cMsgGCClientDisplayNotificationFieldNames = new string[] { "body_substring_keys", "body_substring_values", "notification_body_localization_key", "notification_title_localization_key" };
  private static readonly uint[] _cMsgGCClientDisplayNotificationFieldTags = new uint[] { 26, 34, 18, 10 };
  public static CMsgGCClientDisplayNotification DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCClientDisplayNotification DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCClientDisplayNotification ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCClientDisplayNotification__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCClientDisplayNotification, CMsgGCClientDisplayNotification.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCClientDisplayNotification__FieldAccessorTable; }
  }
  
  public const int NotificationTitleLocalizationKeyFieldNumber = 1;
  private bool hasNotificationTitleLocalizationKey;
  private string notificationTitleLocalizationKey_ = "";
  public bool HasNotificationTitleLocalizationKey {
    get { return hasNotificationTitleLocalizationKey; }
  }
  public string NotificationTitleLocalizationKey {
    get { return notificationTitleLocalizationKey_; }
  }
  
  public const int NotificationBodyLocalizationKeyFieldNumber = 2;
  private bool hasNotificationBodyLocalizationKey;
  private string notificationBodyLocalizationKey_ = "";
  public bool HasNotificationBodyLocalizationKey {
    get { return hasNotificationBodyLocalizationKey; }
  }
  public string NotificationBodyLocalizationKey {
    get { return notificationBodyLocalizationKey_; }
  }
  
  public const int BodySubstringKeysFieldNumber = 3;
  private pbc::PopsicleList<string> bodySubstringKeys_ = new pbc::PopsicleList<string>();
  public scg::IList<string> BodySubstringKeysList {
    get { return pbc::Lists.AsReadOnly(bodySubstringKeys_); }
  }
  public int BodySubstringKeysCount {
    get { return bodySubstringKeys_.Count; }
  }
  public string GetBodySubstringKeys(int index) {
    return bodySubstringKeys_[index];
  }
  
  public const int BodySubstringValuesFieldNumber = 4;
  private pbc::PopsicleList<string> bodySubstringValues_ = new pbc::PopsicleList<string>();
  public scg::IList<string> BodySubstringValuesList {
    get { return pbc::Lists.AsReadOnly(bodySubstringValues_); }
  }
  public int BodySubstringValuesCount {
    get { return bodySubstringValues_.Count; }
  }
  public string GetBodySubstringValues(int index) {
    return bodySubstringValues_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCClientDisplayNotificationFieldNames;
    if (hasNotificationTitleLocalizationKey) {
      output.WriteString(1, field_names[3], NotificationTitleLocalizationKey);
    }
    if (hasNotificationBodyLocalizationKey) {
      output.WriteString(2, field_names[2], NotificationBodyLocalizationKey);
    }
    if (bodySubstringKeys_.Count > 0) {
      output.WriteStringArray(3, field_names[0], bodySubstringKeys_);
    }
    if (bodySubstringValues_.Count > 0) {
      output.WriteStringArray(4, field_names[1], bodySubstringValues_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasNotificationTitleLocalizationKey) {
        size += pb::CodedOutputStream.ComputeStringSize(1, NotificationTitleLocalizationKey);
      }
      if (hasNotificationBodyLocalizationKey) {
        size += pb::CodedOutputStream.ComputeStringSize(2, NotificationBodyLocalizationKey);
      }
      {
        int dataSize = 0;
        foreach (string element in BodySubstringKeysList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * bodySubstringKeys_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in BodySubstringValuesList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * bodySubstringValues_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCClientDisplayNotification ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCClientDisplayNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCClientDisplayNotification ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCClientDisplayNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCClientDisplayNotification ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCClientDisplayNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCClientDisplayNotification ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCClientDisplayNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCClientDisplayNotification ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCClientDisplayNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCClientDisplayNotification MakeReadOnly() {
    bodySubstringKeys_.MakeReadOnly();
    bodySubstringValues_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCClientDisplayNotification prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCClientDisplayNotification, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCClientDisplayNotification cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCClientDisplayNotification result;
    
    private CMsgGCClientDisplayNotification PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCClientDisplayNotification original = result;
        result = new CMsgGCClientDisplayNotification();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCClientDisplayNotification MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCClientDisplayNotification.Descriptor; }
    }
    
    public override CMsgGCClientDisplayNotification DefaultInstanceForType {
      get { return global::CMsgGCClientDisplayNotification.DefaultInstance; }
    }
    
    public override CMsgGCClientDisplayNotification BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCClientDisplayNotification) {
        return MergeFrom((CMsgGCClientDisplayNotification) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCClientDisplayNotification other) {
      if (other == global::CMsgGCClientDisplayNotification.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasNotificationTitleLocalizationKey) {
        NotificationTitleLocalizationKey = other.NotificationTitleLocalizationKey;
      }
      if (other.HasNotificationBodyLocalizationKey) {
        NotificationBodyLocalizationKey = other.NotificationBodyLocalizationKey;
      }
      if (other.bodySubstringKeys_.Count != 0) {
        result.bodySubstringKeys_.Add(other.bodySubstringKeys_);
      }
      if (other.bodySubstringValues_.Count != 0) {
        result.bodySubstringValues_.Add(other.bodySubstringValues_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCClientDisplayNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCClientDisplayNotificationFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasNotificationTitleLocalizationKey = input.ReadString(ref result.notificationTitleLocalizationKey_);
            break;
          }
          case 18: {
            result.hasNotificationBodyLocalizationKey = input.ReadString(ref result.notificationBodyLocalizationKey_);
            break;
          }
          case 26: {
            input.ReadStringArray(tag, field_name, result.bodySubstringKeys_);
            break;
          }
          case 34: {
            input.ReadStringArray(tag, field_name, result.bodySubstringValues_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasNotificationTitleLocalizationKey {
      get { return result.hasNotificationTitleLocalizationKey; }
    }
    public string NotificationTitleLocalizationKey {
      get { return result.NotificationTitleLocalizationKey; }
      set { SetNotificationTitleLocalizationKey(value); }
    }
    public Builder SetNotificationTitleLocalizationKey(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasNotificationTitleLocalizationKey = true;
      result.notificationTitleLocalizationKey_ = value;
      return this;
    }
    public Builder ClearNotificationTitleLocalizationKey() {
      PrepareBuilder();
      result.hasNotificationTitleLocalizationKey = false;
      result.notificationTitleLocalizationKey_ = "";
      return this;
    }
    
    public bool HasNotificationBodyLocalizationKey {
      get { return result.hasNotificationBodyLocalizationKey; }
    }
    public string NotificationBodyLocalizationKey {
      get { return result.NotificationBodyLocalizationKey; }
      set { SetNotificationBodyLocalizationKey(value); }
    }
    public Builder SetNotificationBodyLocalizationKey(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasNotificationBodyLocalizationKey = true;
      result.notificationBodyLocalizationKey_ = value;
      return this;
    }
    public Builder ClearNotificationBodyLocalizationKey() {
      PrepareBuilder();
      result.hasNotificationBodyLocalizationKey = false;
      result.notificationBodyLocalizationKey_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<string> BodySubstringKeysList {
      get { return PrepareBuilder().bodySubstringKeys_; }
    }
    public int BodySubstringKeysCount {
      get { return result.BodySubstringKeysCount; }
    }
    public string GetBodySubstringKeys(int index) {
      return result.GetBodySubstringKeys(index);
    }
    public Builder SetBodySubstringKeys(int index, string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.bodySubstringKeys_[index] = value;
      return this;
    }
    public Builder AddBodySubstringKeys(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.bodySubstringKeys_.Add(value);
      return this;
    }
    public Builder AddRangeBodySubstringKeys(scg::IEnumerable<string> values) {
      PrepareBuilder();
      result.bodySubstringKeys_.Add(values);
      return this;
    }
    public Builder ClearBodySubstringKeys() {
      PrepareBuilder();
      result.bodySubstringKeys_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<string> BodySubstringValuesList {
      get { return PrepareBuilder().bodySubstringValues_; }
    }
    public int BodySubstringValuesCount {
      get { return result.BodySubstringValuesCount; }
    }
    public string GetBodySubstringValues(int index) {
      return result.GetBodySubstringValues(index);
    }
    public Builder SetBodySubstringValues(int index, string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.bodySubstringValues_[index] = value;
      return this;
    }
    public Builder AddBodySubstringValues(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.bodySubstringValues_.Add(value);
      return this;
    }
    public Builder AddRangeBodySubstringValues(scg::IEnumerable<string> values) {
      PrepareBuilder();
      result.bodySubstringValues_.Add(values);
      return this;
    }
    public Builder ClearBodySubstringValues() {
      PrepareBuilder();
      result.bodySubstringValues_.Clear();
      return this;
    }
  }
  static CMsgGCClientDisplayNotification() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCShowItemsPickedUp : pb::GeneratedMessage<CMsgGCShowItemsPickedUp, CMsgGCShowItemsPickedUp.Builder> {
  private CMsgGCShowItemsPickedUp() { }
  private static readonly CMsgGCShowItemsPickedUp defaultInstance = new CMsgGCShowItemsPickedUp().MakeReadOnly();
  private static readonly string[] _cMsgGCShowItemsPickedUpFieldNames = new string[] { "player_steamid" };
  private static readonly uint[] _cMsgGCShowItemsPickedUpFieldTags = new uint[] { 9 };
  public static CMsgGCShowItemsPickedUp DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCShowItemsPickedUp DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCShowItemsPickedUp ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCShowItemsPickedUp__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCShowItemsPickedUp, CMsgGCShowItemsPickedUp.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCShowItemsPickedUp__FieldAccessorTable; }
  }
  
  public const int PlayerSteamidFieldNumber = 1;
  private bool hasPlayerSteamid;
  private ulong playerSteamid_;
  public bool HasPlayerSteamid {
    get { return hasPlayerSteamid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong PlayerSteamid {
    get { return playerSteamid_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCShowItemsPickedUpFieldNames;
    if (hasPlayerSteamid) {
      output.WriteFixed64(1, field_names[0], PlayerSteamid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPlayerSteamid) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, PlayerSteamid);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCShowItemsPickedUp ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCShowItemsPickedUp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCShowItemsPickedUp ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCShowItemsPickedUp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCShowItemsPickedUp ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCShowItemsPickedUp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCShowItemsPickedUp ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCShowItemsPickedUp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCShowItemsPickedUp ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCShowItemsPickedUp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCShowItemsPickedUp MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCShowItemsPickedUp prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCShowItemsPickedUp, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCShowItemsPickedUp cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCShowItemsPickedUp result;
    
    private CMsgGCShowItemsPickedUp PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCShowItemsPickedUp original = result;
        result = new CMsgGCShowItemsPickedUp();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCShowItemsPickedUp MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCShowItemsPickedUp.Descriptor; }
    }
    
    public override CMsgGCShowItemsPickedUp DefaultInstanceForType {
      get { return global::CMsgGCShowItemsPickedUp.DefaultInstance; }
    }
    
    public override CMsgGCShowItemsPickedUp BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCShowItemsPickedUp) {
        return MergeFrom((CMsgGCShowItemsPickedUp) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCShowItemsPickedUp other) {
      if (other == global::CMsgGCShowItemsPickedUp.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPlayerSteamid) {
        PlayerSteamid = other.PlayerSteamid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCShowItemsPickedUpFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCShowItemsPickedUpFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasPlayerSteamid = input.ReadFixed64(ref result.playerSteamid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPlayerSteamid {
      get { return result.hasPlayerSteamid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong PlayerSteamid {
      get { return result.PlayerSteamid; }
      set { SetPlayerSteamid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetPlayerSteamid(ulong value) {
      PrepareBuilder();
      result.hasPlayerSteamid = true;
      result.playerSteamid_ = value;
      return this;
    }
    public Builder ClearPlayerSteamid() {
      PrepareBuilder();
      result.hasPlayerSteamid = false;
      result.playerSteamid_ = 0;
      return this;
    }
  }
  static CMsgGCShowItemsPickedUp() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCIncrementKillCountResponse : pb::GeneratedMessage<CMsgGCIncrementKillCountResponse, CMsgGCIncrementKillCountResponse.Builder> {
  private CMsgGCIncrementKillCountResponse() { }
  private static readonly CMsgGCIncrementKillCountResponse defaultInstance = new CMsgGCIncrementKillCountResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCIncrementKillCountResponseFieldNames = new string[] { "item_def", "killer_account_id", "level_type", "num_kills" };
  private static readonly uint[] _cMsgGCIncrementKillCountResponseFieldTags = new uint[] { 24, 8, 32, 16 };
  public static CMsgGCIncrementKillCountResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCIncrementKillCountResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCIncrementKillCountResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCIncrementKillCountResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCIncrementKillCountResponse, CMsgGCIncrementKillCountResponse.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCIncrementKillCountResponse__FieldAccessorTable; }
  }
  
  public const int KillerAccountIdFieldNumber = 1;
  private bool hasKillerAccountId;
  private uint killerAccountId_;
  public bool HasKillerAccountId {
    get { return hasKillerAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint KillerAccountId {
    get { return killerAccountId_; }
  }
  
  public const int NumKillsFieldNumber = 2;
  private bool hasNumKills;
  private uint numKills_;
  public bool HasNumKills {
    get { return hasNumKills; }
  }
  [global::System.CLSCompliant(false)]
  public uint NumKills {
    get { return numKills_; }
  }
  
  public const int ItemDefFieldNumber = 3;
  private bool hasItemDef;
  private uint itemDef_;
  public bool HasItemDef {
    get { return hasItemDef; }
  }
  [global::System.CLSCompliant(false)]
  public uint ItemDef {
    get { return itemDef_; }
  }
  
  public const int LevelTypeFieldNumber = 4;
  private bool hasLevelType;
  private uint levelType_;
  public bool HasLevelType {
    get { return hasLevelType; }
  }
  [global::System.CLSCompliant(false)]
  public uint LevelType {
    get { return levelType_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCIncrementKillCountResponseFieldNames;
    if (hasKillerAccountId) {
      output.WriteUInt32(1, field_names[1], KillerAccountId);
    }
    if (hasNumKills) {
      output.WriteUInt32(2, field_names[3], NumKills);
    }
    if (hasItemDef) {
      output.WriteUInt32(3, field_names[0], ItemDef);
    }
    if (hasLevelType) {
      output.WriteUInt32(4, field_names[2], LevelType);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasKillerAccountId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, KillerAccountId);
      }
      if (hasNumKills) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, NumKills);
      }
      if (hasItemDef) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, ItemDef);
      }
      if (hasLevelType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, LevelType);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCIncrementKillCountResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCIncrementKillCountResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCIncrementKillCountResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCIncrementKillCountResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCIncrementKillCountResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCIncrementKillCountResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCIncrementKillCountResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCIncrementKillCountResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCIncrementKillCountResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCIncrementKillCountResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCIncrementKillCountResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCIncrementKillCountResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCIncrementKillCountResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCIncrementKillCountResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCIncrementKillCountResponse result;
    
    private CMsgGCIncrementKillCountResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCIncrementKillCountResponse original = result;
        result = new CMsgGCIncrementKillCountResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCIncrementKillCountResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCIncrementKillCountResponse.Descriptor; }
    }
    
    public override CMsgGCIncrementKillCountResponse DefaultInstanceForType {
      get { return global::CMsgGCIncrementKillCountResponse.DefaultInstance; }
    }
    
    public override CMsgGCIncrementKillCountResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCIncrementKillCountResponse) {
        return MergeFrom((CMsgGCIncrementKillCountResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCIncrementKillCountResponse other) {
      if (other == global::CMsgGCIncrementKillCountResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasKillerAccountId) {
        KillerAccountId = other.KillerAccountId;
      }
      if (other.HasNumKills) {
        NumKills = other.NumKills;
      }
      if (other.HasItemDef) {
        ItemDef = other.ItemDef;
      }
      if (other.HasLevelType) {
        LevelType = other.LevelType;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCIncrementKillCountResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCIncrementKillCountResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasKillerAccountId = input.ReadUInt32(ref result.killerAccountId_);
            break;
          }
          case 16: {
            result.hasNumKills = input.ReadUInt32(ref result.numKills_);
            break;
          }
          case 24: {
            result.hasItemDef = input.ReadUInt32(ref result.itemDef_);
            break;
          }
          case 32: {
            result.hasLevelType = input.ReadUInt32(ref result.levelType_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasKillerAccountId {
      get { return result.hasKillerAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint KillerAccountId {
      get { return result.KillerAccountId; }
      set { SetKillerAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetKillerAccountId(uint value) {
      PrepareBuilder();
      result.hasKillerAccountId = true;
      result.killerAccountId_ = value;
      return this;
    }
    public Builder ClearKillerAccountId() {
      PrepareBuilder();
      result.hasKillerAccountId = false;
      result.killerAccountId_ = 0;
      return this;
    }
    
    public bool HasNumKills {
      get { return result.hasNumKills; }
    }
    [global::System.CLSCompliant(false)]
    public uint NumKills {
      get { return result.NumKills; }
      set { SetNumKills(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetNumKills(uint value) {
      PrepareBuilder();
      result.hasNumKills = true;
      result.numKills_ = value;
      return this;
    }
    public Builder ClearNumKills() {
      PrepareBuilder();
      result.hasNumKills = false;
      result.numKills_ = 0;
      return this;
    }
    
    public bool HasItemDef {
      get { return result.hasItemDef; }
    }
    [global::System.CLSCompliant(false)]
    public uint ItemDef {
      get { return result.ItemDef; }
      set { SetItemDef(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemDef(uint value) {
      PrepareBuilder();
      result.hasItemDef = true;
      result.itemDef_ = value;
      return this;
    }
    public Builder ClearItemDef() {
      PrepareBuilder();
      result.hasItemDef = false;
      result.itemDef_ = 0;
      return this;
    }
    
    public bool HasLevelType {
      get { return result.hasLevelType; }
    }
    [global::System.CLSCompliant(false)]
    public uint LevelType {
      get { return result.LevelType; }
      set { SetLevelType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetLevelType(uint value) {
      PrepareBuilder();
      result.hasLevelType = true;
      result.levelType_ = value;
      return this;
    }
    public Builder ClearLevelType() {
      PrepareBuilder();
      result.hasLevelType = false;
      result.levelType_ = 0;
      return this;
    }
  }
  static CMsgGCIncrementKillCountResponse() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOEconItemDropRateBonus : pb::GeneratedMessage<CSOEconItemDropRateBonus, CSOEconItemDropRateBonus.Builder> {
  private CSOEconItemDropRateBonus() { }
  private static readonly CSOEconItemDropRateBonus defaultInstance = new CSOEconItemDropRateBonus().MakeReadOnly();
  private static readonly string[] _cSOEconItemDropRateBonusFieldNames = new string[] { "account_id", "bonus", "bonus_count", "def_index", "expiration_date", "item_id" };
  private static readonly uint[] _cSOEconItemDropRateBonusFieldTags = new uint[] { 8, 29, 32, 48, 21, 40 };
  public static CSOEconItemDropRateBonus DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOEconItemDropRateBonus DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOEconItemDropRateBonus ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOEconItemDropRateBonus__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOEconItemDropRateBonus, CSOEconItemDropRateBonus.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOEconItemDropRateBonus__FieldAccessorTable; }
  }
  
  public const int AccountIdFieldNumber = 1;
  private bool hasAccountId;
  private uint accountId_;
  public bool HasAccountId {
    get { return hasAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AccountId {
    get { return accountId_; }
  }
  
  public const int ExpirationDateFieldNumber = 2;
  private bool hasExpirationDate;
  private uint expirationDate_;
  public bool HasExpirationDate {
    get { return hasExpirationDate; }
  }
  [global::System.CLSCompliant(false)]
  public uint ExpirationDate {
    get { return expirationDate_; }
  }
  
  public const int BonusFieldNumber = 3;
  private bool hasBonus;
  private float bonus_;
  public bool HasBonus {
    get { return hasBonus; }
  }
  public float Bonus {
    get { return bonus_; }
  }
  
  public const int BonusCountFieldNumber = 4;
  private bool hasBonusCount;
  private uint bonusCount_;
  public bool HasBonusCount {
    get { return hasBonusCount; }
  }
  [global::System.CLSCompliant(false)]
  public uint BonusCount {
    get { return bonusCount_; }
  }
  
  public const int ItemIdFieldNumber = 5;
  private bool hasItemId;
  private ulong itemId_;
  public bool HasItemId {
    get { return hasItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ItemId {
    get { return itemId_; }
  }
  
  public const int DefIndexFieldNumber = 6;
  private bool hasDefIndex;
  private uint defIndex_;
  public bool HasDefIndex {
    get { return hasDefIndex; }
  }
  [global::System.CLSCompliant(false)]
  public uint DefIndex {
    get { return defIndex_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOEconItemDropRateBonusFieldNames;
    if (hasAccountId) {
      output.WriteUInt32(1, field_names[0], AccountId);
    }
    if (hasExpirationDate) {
      output.WriteFixed32(2, field_names[4], ExpirationDate);
    }
    if (hasBonus) {
      output.WriteFloat(3, field_names[1], Bonus);
    }
    if (hasBonusCount) {
      output.WriteUInt32(4, field_names[2], BonusCount);
    }
    if (hasItemId) {
      output.WriteUInt64(5, field_names[5], ItemId);
    }
    if (hasDefIndex) {
      output.WriteUInt32(6, field_names[3], DefIndex);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, AccountId);
      }
      if (hasExpirationDate) {
        size += pb::CodedOutputStream.ComputeFixed32Size(2, ExpirationDate);
      }
      if (hasBonus) {
        size += pb::CodedOutputStream.ComputeFloatSize(3, Bonus);
      }
      if (hasBonusCount) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, BonusCount);
      }
      if (hasItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(5, ItemId);
      }
      if (hasDefIndex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(6, DefIndex);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOEconItemDropRateBonus ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemDropRateBonus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemDropRateBonus ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemDropRateBonus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemDropRateBonus ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemDropRateBonus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemDropRateBonus ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOEconItemDropRateBonus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOEconItemDropRateBonus ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemDropRateBonus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOEconItemDropRateBonus MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOEconItemDropRateBonus prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOEconItemDropRateBonus, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOEconItemDropRateBonus cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOEconItemDropRateBonus result;
    
    private CSOEconItemDropRateBonus PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOEconItemDropRateBonus original = result;
        result = new CSOEconItemDropRateBonus();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOEconItemDropRateBonus MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOEconItemDropRateBonus.Descriptor; }
    }
    
    public override CSOEconItemDropRateBonus DefaultInstanceForType {
      get { return global::CSOEconItemDropRateBonus.DefaultInstance; }
    }
    
    public override CSOEconItemDropRateBonus BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOEconItemDropRateBonus) {
        return MergeFrom((CSOEconItemDropRateBonus) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOEconItemDropRateBonus other) {
      if (other == global::CSOEconItemDropRateBonus.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasExpirationDate) {
        ExpirationDate = other.ExpirationDate;
      }
      if (other.HasBonus) {
        Bonus = other.Bonus;
      }
      if (other.HasBonusCount) {
        BonusCount = other.BonusCount;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      if (other.HasDefIndex) {
        DefIndex = other.DefIndex;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOEconItemDropRateBonusFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOEconItemDropRateBonusFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAccountId = input.ReadUInt32(ref result.accountId_);
            break;
          }
          case 21: {
            result.hasExpirationDate = input.ReadFixed32(ref result.expirationDate_);
            break;
          }
          case 29: {
            result.hasBonus = input.ReadFloat(ref result.bonus_);
            break;
          }
          case 32: {
            result.hasBonusCount = input.ReadUInt32(ref result.bonusCount_);
            break;
          }
          case 40: {
            result.hasItemId = input.ReadUInt64(ref result.itemId_);
            break;
          }
          case 48: {
            result.hasDefIndex = input.ReadUInt32(ref result.defIndex_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAccountId {
      get { return result.hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return result.AccountId; }
      set { SetAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAccountId(uint value) {
      PrepareBuilder();
      result.hasAccountId = true;
      result.accountId_ = value;
      return this;
    }
    public Builder ClearAccountId() {
      PrepareBuilder();
      result.hasAccountId = false;
      result.accountId_ = 0;
      return this;
    }
    
    public bool HasExpirationDate {
      get { return result.hasExpirationDate; }
    }
    [global::System.CLSCompliant(false)]
    public uint ExpirationDate {
      get { return result.ExpirationDate; }
      set { SetExpirationDate(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetExpirationDate(uint value) {
      PrepareBuilder();
      result.hasExpirationDate = true;
      result.expirationDate_ = value;
      return this;
    }
    public Builder ClearExpirationDate() {
      PrepareBuilder();
      result.hasExpirationDate = false;
      result.expirationDate_ = 0;
      return this;
    }
    
    public bool HasBonus {
      get { return result.hasBonus; }
    }
    public float Bonus {
      get { return result.Bonus; }
      set { SetBonus(value); }
    }
    public Builder SetBonus(float value) {
      PrepareBuilder();
      result.hasBonus = true;
      result.bonus_ = value;
      return this;
    }
    public Builder ClearBonus() {
      PrepareBuilder();
      result.hasBonus = false;
      result.bonus_ = 0F;
      return this;
    }
    
    public bool HasBonusCount {
      get { return result.hasBonusCount; }
    }
    [global::System.CLSCompliant(false)]
    public uint BonusCount {
      get { return result.BonusCount; }
      set { SetBonusCount(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetBonusCount(uint value) {
      PrepareBuilder();
      result.hasBonusCount = true;
      result.bonusCount_ = value;
      return this;
    }
    public Builder ClearBonusCount() {
      PrepareBuilder();
      result.hasBonusCount = false;
      result.bonusCount_ = 0;
      return this;
    }
    
    public bool HasItemId {
      get { return result.hasItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ItemId {
      get { return result.ItemId; }
      set { SetItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemId(ulong value) {
      PrepareBuilder();
      result.hasItemId = true;
      result.itemId_ = value;
      return this;
    }
    public Builder ClearItemId() {
      PrepareBuilder();
      result.hasItemId = false;
      result.itemId_ = 0UL;
      return this;
    }
    
    public bool HasDefIndex {
      get { return result.hasDefIndex; }
    }
    [global::System.CLSCompliant(false)]
    public uint DefIndex {
      get { return result.DefIndex; }
      set { SetDefIndex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDefIndex(uint value) {
      PrepareBuilder();
      result.hasDefIndex = true;
      result.defIndex_ = value;
      return this;
    }
    public Builder ClearDefIndex() {
      PrepareBuilder();
      result.hasDefIndex = false;
      result.defIndex_ = 0;
      return this;
    }
  }
  static CSOEconItemDropRateBonus() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOEconItemLeagueViewPass : pb::GeneratedMessage<CSOEconItemLeagueViewPass, CSOEconItemLeagueViewPass.Builder> {
  private CSOEconItemLeagueViewPass() { }
  private static readonly CSOEconItemLeagueViewPass defaultInstance = new CSOEconItemLeagueViewPass().MakeReadOnly();
  private static readonly string[] _cSOEconItemLeagueViewPassFieldNames = new string[] { "account_id", "admin", "itemindex", "league_id" };
  private static readonly uint[] _cSOEconItemLeagueViewPassFieldTags = new uint[] { 8, 24, 32, 16 };
  public static CSOEconItemLeagueViewPass DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOEconItemLeagueViewPass DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOEconItemLeagueViewPass ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOEconItemLeagueViewPass__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOEconItemLeagueViewPass, CSOEconItemLeagueViewPass.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOEconItemLeagueViewPass__FieldAccessorTable; }
  }
  
  public const int AccountIdFieldNumber = 1;
  private bool hasAccountId;
  private uint accountId_;
  public bool HasAccountId {
    get { return hasAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AccountId {
    get { return accountId_; }
  }
  
  public const int LeagueIdFieldNumber = 2;
  private bool hasLeagueId;
  private uint leagueId_;
  public bool HasLeagueId {
    get { return hasLeagueId; }
  }
  [global::System.CLSCompliant(false)]
  public uint LeagueId {
    get { return leagueId_; }
  }
  
  public const int AdminFieldNumber = 3;
  private bool hasAdmin;
  private uint admin_;
  public bool HasAdmin {
    get { return hasAdmin; }
  }
  [global::System.CLSCompliant(false)]
  public uint Admin {
    get { return admin_; }
  }
  
  public const int ItemindexFieldNumber = 4;
  private bool hasItemindex;
  private uint itemindex_;
  public bool HasItemindex {
    get { return hasItemindex; }
  }
  [global::System.CLSCompliant(false)]
  public uint Itemindex {
    get { return itemindex_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOEconItemLeagueViewPassFieldNames;
    if (hasAccountId) {
      output.WriteUInt32(1, field_names[0], AccountId);
    }
    if (hasLeagueId) {
      output.WriteUInt32(2, field_names[3], LeagueId);
    }
    if (hasAdmin) {
      output.WriteUInt32(3, field_names[1], Admin);
    }
    if (hasItemindex) {
      output.WriteUInt32(4, field_names[2], Itemindex);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, AccountId);
      }
      if (hasLeagueId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, LeagueId);
      }
      if (hasAdmin) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Admin);
      }
      if (hasItemindex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Itemindex);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOEconItemLeagueViewPass ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemLeagueViewPass ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemLeagueViewPass ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemLeagueViewPass ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemLeagueViewPass ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemLeagueViewPass ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemLeagueViewPass ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOEconItemLeagueViewPass ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOEconItemLeagueViewPass ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemLeagueViewPass ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOEconItemLeagueViewPass MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOEconItemLeagueViewPass prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOEconItemLeagueViewPass, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOEconItemLeagueViewPass cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOEconItemLeagueViewPass result;
    
    private CSOEconItemLeagueViewPass PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOEconItemLeagueViewPass original = result;
        result = new CSOEconItemLeagueViewPass();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOEconItemLeagueViewPass MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOEconItemLeagueViewPass.Descriptor; }
    }
    
    public override CSOEconItemLeagueViewPass DefaultInstanceForType {
      get { return global::CSOEconItemLeagueViewPass.DefaultInstance; }
    }
    
    public override CSOEconItemLeagueViewPass BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOEconItemLeagueViewPass) {
        return MergeFrom((CSOEconItemLeagueViewPass) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOEconItemLeagueViewPass other) {
      if (other == global::CSOEconItemLeagueViewPass.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasLeagueId) {
        LeagueId = other.LeagueId;
      }
      if (other.HasAdmin) {
        Admin = other.Admin;
      }
      if (other.HasItemindex) {
        Itemindex = other.Itemindex;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOEconItemLeagueViewPassFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOEconItemLeagueViewPassFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAccountId = input.ReadUInt32(ref result.accountId_);
            break;
          }
          case 16: {
            result.hasLeagueId = input.ReadUInt32(ref result.leagueId_);
            break;
          }
          case 24: {
            result.hasAdmin = input.ReadUInt32(ref result.admin_);
            break;
          }
          case 32: {
            result.hasItemindex = input.ReadUInt32(ref result.itemindex_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAccountId {
      get { return result.hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return result.AccountId; }
      set { SetAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAccountId(uint value) {
      PrepareBuilder();
      result.hasAccountId = true;
      result.accountId_ = value;
      return this;
    }
    public Builder ClearAccountId() {
      PrepareBuilder();
      result.hasAccountId = false;
      result.accountId_ = 0;
      return this;
    }
    
    public bool HasLeagueId {
      get { return result.hasLeagueId; }
    }
    [global::System.CLSCompliant(false)]
    public uint LeagueId {
      get { return result.LeagueId; }
      set { SetLeagueId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetLeagueId(uint value) {
      PrepareBuilder();
      result.hasLeagueId = true;
      result.leagueId_ = value;
      return this;
    }
    public Builder ClearLeagueId() {
      PrepareBuilder();
      result.hasLeagueId = false;
      result.leagueId_ = 0;
      return this;
    }
    
    public bool HasAdmin {
      get { return result.hasAdmin; }
    }
    [global::System.CLSCompliant(false)]
    public uint Admin {
      get { return result.Admin; }
      set { SetAdmin(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAdmin(uint value) {
      PrepareBuilder();
      result.hasAdmin = true;
      result.admin_ = value;
      return this;
    }
    public Builder ClearAdmin() {
      PrepareBuilder();
      result.hasAdmin = false;
      result.admin_ = 0;
      return this;
    }
    
    public bool HasItemindex {
      get { return result.hasItemindex; }
    }
    [global::System.CLSCompliant(false)]
    public uint Itemindex {
      get { return result.Itemindex; }
      set { SetItemindex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemindex(uint value) {
      PrepareBuilder();
      result.hasItemindex = true;
      result.itemindex_ = value;
      return this;
    }
    public Builder ClearItemindex() {
      PrepareBuilder();
      result.hasItemindex = false;
      result.itemindex_ = 0;
      return this;
    }
  }
  static CSOEconItemLeagueViewPass() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOEconItemEventTicket : pb::GeneratedMessage<CSOEconItemEventTicket, CSOEconItemEventTicket.Builder> {
  private CSOEconItemEventTicket() { }
  private static readonly CSOEconItemEventTicket defaultInstance = new CSOEconItemEventTicket().MakeReadOnly();
  private static readonly string[] _cSOEconItemEventTicketFieldNames = new string[] { "account_id", "event_id", "item_id" };
  private static readonly uint[] _cSOEconItemEventTicketFieldTags = new uint[] { 8, 16, 24 };
  public static CSOEconItemEventTicket DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOEconItemEventTicket DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOEconItemEventTicket ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOEconItemEventTicket__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOEconItemEventTicket, CSOEconItemEventTicket.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOEconItemEventTicket__FieldAccessorTable; }
  }
  
  public const int AccountIdFieldNumber = 1;
  private bool hasAccountId;
  private uint accountId_;
  public bool HasAccountId {
    get { return hasAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AccountId {
    get { return accountId_; }
  }
  
  public const int EventIdFieldNumber = 2;
  private bool hasEventId;
  private uint eventId_;
  public bool HasEventId {
    get { return hasEventId; }
  }
  [global::System.CLSCompliant(false)]
  public uint EventId {
    get { return eventId_; }
  }
  
  public const int ItemIdFieldNumber = 3;
  private bool hasItemId;
  private ulong itemId_;
  public bool HasItemId {
    get { return hasItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ItemId {
    get { return itemId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOEconItemEventTicketFieldNames;
    if (hasAccountId) {
      output.WriteUInt32(1, field_names[0], AccountId);
    }
    if (hasEventId) {
      output.WriteUInt32(2, field_names[1], EventId);
    }
    if (hasItemId) {
      output.WriteUInt64(3, field_names[2], ItemId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, AccountId);
      }
      if (hasEventId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, EventId);
      }
      if (hasItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(3, ItemId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOEconItemEventTicket ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemEventTicket ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemEventTicket ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconItemEventTicket ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemEventTicket ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemEventTicket ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOEconItemEventTicket ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOEconItemEventTicket ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOEconItemEventTicket ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconItemEventTicket ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOEconItemEventTicket MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOEconItemEventTicket prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOEconItemEventTicket, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOEconItemEventTicket cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOEconItemEventTicket result;
    
    private CSOEconItemEventTicket PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOEconItemEventTicket original = result;
        result = new CSOEconItemEventTicket();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOEconItemEventTicket MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOEconItemEventTicket.Descriptor; }
    }
    
    public override CSOEconItemEventTicket DefaultInstanceForType {
      get { return global::CSOEconItemEventTicket.DefaultInstance; }
    }
    
    public override CSOEconItemEventTicket BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOEconItemEventTicket) {
        return MergeFrom((CSOEconItemEventTicket) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOEconItemEventTicket other) {
      if (other == global::CSOEconItemEventTicket.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasEventId) {
        EventId = other.EventId;
      }
      if (other.HasItemId) {
        ItemId = other.ItemId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOEconItemEventTicketFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOEconItemEventTicketFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAccountId = input.ReadUInt32(ref result.accountId_);
            break;
          }
          case 16: {
            result.hasEventId = input.ReadUInt32(ref result.eventId_);
            break;
          }
          case 24: {
            result.hasItemId = input.ReadUInt64(ref result.itemId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAccountId {
      get { return result.hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return result.AccountId; }
      set { SetAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAccountId(uint value) {
      PrepareBuilder();
      result.hasAccountId = true;
      result.accountId_ = value;
      return this;
    }
    public Builder ClearAccountId() {
      PrepareBuilder();
      result.hasAccountId = false;
      result.accountId_ = 0;
      return this;
    }
    
    public bool HasEventId {
      get { return result.hasEventId; }
    }
    [global::System.CLSCompliant(false)]
    public uint EventId {
      get { return result.EventId; }
      set { SetEventId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEventId(uint value) {
      PrepareBuilder();
      result.hasEventId = true;
      result.eventId_ = value;
      return this;
    }
    public Builder ClearEventId() {
      PrepareBuilder();
      result.hasEventId = false;
      result.eventId_ = 0;
      return this;
    }
    
    public bool HasItemId {
      get { return result.hasItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ItemId {
      get { return result.ItemId; }
      set { SetItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemId(ulong value) {
      PrepareBuilder();
      result.hasItemId = true;
      result.itemId_ = value;
      return this;
    }
    public Builder ClearItemId() {
      PrepareBuilder();
      result.hasItemId = false;
      result.itemId_ = 0UL;
      return this;
    }
  }
  static CSOEconItemEventTicket() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCItemPreviewItemBoughtNotification : pb::GeneratedMessage<CMsgGCItemPreviewItemBoughtNotification, CMsgGCItemPreviewItemBoughtNotification.Builder> {
  private CMsgGCItemPreviewItemBoughtNotification() { }
  private static readonly CMsgGCItemPreviewItemBoughtNotification defaultInstance = new CMsgGCItemPreviewItemBoughtNotification().MakeReadOnly();
  private static readonly string[] _cMsgGCItemPreviewItemBoughtNotificationFieldNames = new string[] { "item_def_index" };
  private static readonly uint[] _cMsgGCItemPreviewItemBoughtNotificationFieldTags = new uint[] { 8 };
  public static CMsgGCItemPreviewItemBoughtNotification DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCItemPreviewItemBoughtNotification DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCItemPreviewItemBoughtNotification ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCItemPreviewItemBoughtNotification__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCItemPreviewItemBoughtNotification, CMsgGCItemPreviewItemBoughtNotification.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCItemPreviewItemBoughtNotification__FieldAccessorTable; }
  }
  
  public const int ItemDefIndexFieldNumber = 1;
  private bool hasItemDefIndex;
  private uint itemDefIndex_;
  public bool HasItemDefIndex {
    get { return hasItemDefIndex; }
  }
  [global::System.CLSCompliant(false)]
  public uint ItemDefIndex {
    get { return itemDefIndex_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCItemPreviewItemBoughtNotificationFieldNames;
    if (hasItemDefIndex) {
      output.WriteUInt32(1, field_names[0], ItemDefIndex);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasItemDefIndex) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, ItemDefIndex);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCItemPreviewItemBoughtNotification ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCItemPreviewItemBoughtNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCItemPreviewItemBoughtNotification ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCItemPreviewItemBoughtNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCItemPreviewItemBoughtNotification ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCItemPreviewItemBoughtNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCItemPreviewItemBoughtNotification ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCItemPreviewItemBoughtNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCItemPreviewItemBoughtNotification ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCItemPreviewItemBoughtNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCItemPreviewItemBoughtNotification MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCItemPreviewItemBoughtNotification prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCItemPreviewItemBoughtNotification, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCItemPreviewItemBoughtNotification cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCItemPreviewItemBoughtNotification result;
    
    private CMsgGCItemPreviewItemBoughtNotification PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCItemPreviewItemBoughtNotification original = result;
        result = new CMsgGCItemPreviewItemBoughtNotification();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCItemPreviewItemBoughtNotification MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCItemPreviewItemBoughtNotification.Descriptor; }
    }
    
    public override CMsgGCItemPreviewItemBoughtNotification DefaultInstanceForType {
      get { return global::CMsgGCItemPreviewItemBoughtNotification.DefaultInstance; }
    }
    
    public override CMsgGCItemPreviewItemBoughtNotification BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCItemPreviewItemBoughtNotification) {
        return MergeFrom((CMsgGCItemPreviewItemBoughtNotification) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCItemPreviewItemBoughtNotification other) {
      if (other == global::CMsgGCItemPreviewItemBoughtNotification.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasItemDefIndex) {
        ItemDefIndex = other.ItemDefIndex;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCItemPreviewItemBoughtNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCItemPreviewItemBoughtNotificationFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasItemDefIndex = input.ReadUInt32(ref result.itemDefIndex_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasItemDefIndex {
      get { return result.hasItemDefIndex; }
    }
    [global::System.CLSCompliant(false)]
    public uint ItemDefIndex {
      get { return result.ItemDefIndex; }
      set { SetItemDefIndex(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemDefIndex(uint value) {
      PrepareBuilder();
      result.hasItemDefIndex = true;
      result.itemDefIndex_ = value;
      return this;
    }
    public Builder ClearItemDefIndex() {
      PrepareBuilder();
      result.hasItemDefIndex = false;
      result.itemDefIndex_ = 0;
      return this;
    }
  }
  static CMsgGCItemPreviewItemBoughtNotification() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCStorePurchaseCancel : pb::GeneratedMessage<CMsgGCStorePurchaseCancel, CMsgGCStorePurchaseCancel.Builder> {
  private CMsgGCStorePurchaseCancel() { }
  private static readonly CMsgGCStorePurchaseCancel defaultInstance = new CMsgGCStorePurchaseCancel().MakeReadOnly();
  private static readonly string[] _cMsgGCStorePurchaseCancelFieldNames = new string[] { "txn_id" };
  private static readonly uint[] _cMsgGCStorePurchaseCancelFieldTags = new uint[] { 8 };
  public static CMsgGCStorePurchaseCancel DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCStorePurchaseCancel DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCStorePurchaseCancel ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseCancel__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCStorePurchaseCancel, CMsgGCStorePurchaseCancel.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseCancel__FieldAccessorTable; }
  }
  
  public const int TxnIdFieldNumber = 1;
  private bool hasTxnId;
  private ulong txnId_;
  public bool HasTxnId {
    get { return hasTxnId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong TxnId {
    get { return txnId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCStorePurchaseCancelFieldNames;
    if (hasTxnId) {
      output.WriteUInt64(1, field_names[0], TxnId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTxnId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, TxnId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCStorePurchaseCancel ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancel ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancel ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancel ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancel ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancel ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancel ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancel ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancel ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancel ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCStorePurchaseCancel MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCStorePurchaseCancel prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCStorePurchaseCancel, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCStorePurchaseCancel cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCStorePurchaseCancel result;
    
    private CMsgGCStorePurchaseCancel PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCStorePurchaseCancel original = result;
        result = new CMsgGCStorePurchaseCancel();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCStorePurchaseCancel MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCStorePurchaseCancel.Descriptor; }
    }
    
    public override CMsgGCStorePurchaseCancel DefaultInstanceForType {
      get { return global::CMsgGCStorePurchaseCancel.DefaultInstance; }
    }
    
    public override CMsgGCStorePurchaseCancel BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCStorePurchaseCancel) {
        return MergeFrom((CMsgGCStorePurchaseCancel) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCStorePurchaseCancel other) {
      if (other == global::CMsgGCStorePurchaseCancel.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTxnId) {
        TxnId = other.TxnId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCStorePurchaseCancelFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCStorePurchaseCancelFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasTxnId = input.ReadUInt64(ref result.txnId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTxnId {
      get { return result.hasTxnId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TxnId {
      get { return result.TxnId; }
      set { SetTxnId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTxnId(ulong value) {
      PrepareBuilder();
      result.hasTxnId = true;
      result.txnId_ = value;
      return this;
    }
    public Builder ClearTxnId() {
      PrepareBuilder();
      result.hasTxnId = false;
      result.txnId_ = 0UL;
      return this;
    }
  }
  static CMsgGCStorePurchaseCancel() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCStorePurchaseCancelResponse : pb::GeneratedMessage<CMsgGCStorePurchaseCancelResponse, CMsgGCStorePurchaseCancelResponse.Builder> {
  private CMsgGCStorePurchaseCancelResponse() { }
  private static readonly CMsgGCStorePurchaseCancelResponse defaultInstance = new CMsgGCStorePurchaseCancelResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCStorePurchaseCancelResponseFieldNames = new string[] { "result" };
  private static readonly uint[] _cMsgGCStorePurchaseCancelResponseFieldTags = new uint[] { 8 };
  public static CMsgGCStorePurchaseCancelResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCStorePurchaseCancelResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCStorePurchaseCancelResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseCancelResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCStorePurchaseCancelResponse, CMsgGCStorePurchaseCancelResponse.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseCancelResponse__FieldAccessorTable; }
  }
  
  public const int ResultFieldNumber = 1;
  private bool hasResult;
  private uint result_;
  public bool HasResult {
    get { return hasResult; }
  }
  [global::System.CLSCompliant(false)]
  public uint Result {
    get { return result_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCStorePurchaseCancelResponseFieldNames;
    if (hasResult) {
      output.WriteUInt32(1, field_names[0], Result);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Result);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCStorePurchaseCancelResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancelResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancelResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancelResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancelResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancelResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancelResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancelResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancelResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseCancelResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCStorePurchaseCancelResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCStorePurchaseCancelResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCStorePurchaseCancelResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCStorePurchaseCancelResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCStorePurchaseCancelResponse result;
    
    private CMsgGCStorePurchaseCancelResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCStorePurchaseCancelResponse original = result;
        result = new CMsgGCStorePurchaseCancelResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCStorePurchaseCancelResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCStorePurchaseCancelResponse.Descriptor; }
    }
    
    public override CMsgGCStorePurchaseCancelResponse DefaultInstanceForType {
      get { return global::CMsgGCStorePurchaseCancelResponse.DefaultInstance; }
    }
    
    public override CMsgGCStorePurchaseCancelResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCStorePurchaseCancelResponse) {
        return MergeFrom((CMsgGCStorePurchaseCancelResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCStorePurchaseCancelResponse other) {
      if (other == global::CMsgGCStorePurchaseCancelResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasResult) {
        Result = other.Result;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCStorePurchaseCancelResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCStorePurchaseCancelResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasResult = input.ReadUInt32(ref result.result_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    [global::System.CLSCompliant(false)]
    public uint Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetResult(uint value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
  }
  static CMsgGCStorePurchaseCancelResponse() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCStorePurchaseFinalize : pb::GeneratedMessage<CMsgGCStorePurchaseFinalize, CMsgGCStorePurchaseFinalize.Builder> {
  private CMsgGCStorePurchaseFinalize() { }
  private static readonly CMsgGCStorePurchaseFinalize defaultInstance = new CMsgGCStorePurchaseFinalize().MakeReadOnly();
  private static readonly string[] _cMsgGCStorePurchaseFinalizeFieldNames = new string[] { "txn_id" };
  private static readonly uint[] _cMsgGCStorePurchaseFinalizeFieldTags = new uint[] { 8 };
  public static CMsgGCStorePurchaseFinalize DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCStorePurchaseFinalize DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCStorePurchaseFinalize ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseFinalize__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCStorePurchaseFinalize, CMsgGCStorePurchaseFinalize.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseFinalize__FieldAccessorTable; }
  }
  
  public const int TxnIdFieldNumber = 1;
  private bool hasTxnId;
  private ulong txnId_;
  public bool HasTxnId {
    get { return hasTxnId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong TxnId {
    get { return txnId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCStorePurchaseFinalizeFieldNames;
    if (hasTxnId) {
      output.WriteUInt64(1, field_names[0], TxnId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTxnId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, TxnId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCStorePurchaseFinalize ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalize ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalize ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalize ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalize ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalize ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalize ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalize ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalize ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalize ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCStorePurchaseFinalize MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCStorePurchaseFinalize prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCStorePurchaseFinalize, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCStorePurchaseFinalize cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCStorePurchaseFinalize result;
    
    private CMsgGCStorePurchaseFinalize PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCStorePurchaseFinalize original = result;
        result = new CMsgGCStorePurchaseFinalize();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCStorePurchaseFinalize MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCStorePurchaseFinalize.Descriptor; }
    }
    
    public override CMsgGCStorePurchaseFinalize DefaultInstanceForType {
      get { return global::CMsgGCStorePurchaseFinalize.DefaultInstance; }
    }
    
    public override CMsgGCStorePurchaseFinalize BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCStorePurchaseFinalize) {
        return MergeFrom((CMsgGCStorePurchaseFinalize) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCStorePurchaseFinalize other) {
      if (other == global::CMsgGCStorePurchaseFinalize.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTxnId) {
        TxnId = other.TxnId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCStorePurchaseFinalizeFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCStorePurchaseFinalizeFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasTxnId = input.ReadUInt64(ref result.txnId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTxnId {
      get { return result.hasTxnId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TxnId {
      get { return result.TxnId; }
      set { SetTxnId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTxnId(ulong value) {
      PrepareBuilder();
      result.hasTxnId = true;
      result.txnId_ = value;
      return this;
    }
    public Builder ClearTxnId() {
      PrepareBuilder();
      result.hasTxnId = false;
      result.txnId_ = 0UL;
      return this;
    }
  }
  static CMsgGCStorePurchaseFinalize() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCStorePurchaseFinalizeResponse : pb::GeneratedMessage<CMsgGCStorePurchaseFinalizeResponse, CMsgGCStorePurchaseFinalizeResponse.Builder> {
  private CMsgGCStorePurchaseFinalizeResponse() { }
  private static readonly CMsgGCStorePurchaseFinalizeResponse defaultInstance = new CMsgGCStorePurchaseFinalizeResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCStorePurchaseFinalizeResponseFieldNames = new string[] { "item_ids", "result" };
  private static readonly uint[] _cMsgGCStorePurchaseFinalizeResponseFieldTags = new uint[] { 16, 8 };
  public static CMsgGCStorePurchaseFinalizeResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCStorePurchaseFinalizeResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCStorePurchaseFinalizeResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseFinalizeResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCStorePurchaseFinalizeResponse, CMsgGCStorePurchaseFinalizeResponse.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCStorePurchaseFinalizeResponse__FieldAccessorTable; }
  }
  
  public const int ResultFieldNumber = 1;
  private bool hasResult;
  private uint result_;
  public bool HasResult {
    get { return hasResult; }
  }
  [global::System.CLSCompliant(false)]
  public uint Result {
    get { return result_; }
  }
  
  public const int ItemIdsFieldNumber = 2;
  private pbc::PopsicleList<ulong> itemIds_ = new pbc::PopsicleList<ulong>();
  [global::System.CLSCompliant(false)]
  public scg::IList<ulong> ItemIdsList {
    get { return pbc::Lists.AsReadOnly(itemIds_); }
  }
  public int ItemIdsCount {
    get { return itemIds_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GetItemIds(int index) {
    return itemIds_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCStorePurchaseFinalizeResponseFieldNames;
    if (hasResult) {
      output.WriteUInt32(1, field_names[1], Result);
    }
    if (itemIds_.Count > 0) {
      output.WriteUInt64Array(2, field_names[0], itemIds_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Result);
      }
      {
        int dataSize = 0;
        foreach (ulong element in ItemIdsList) {
          dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * itemIds_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCStorePurchaseFinalizeResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalizeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalizeResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalizeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalizeResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalizeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalizeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalizeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalizeResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCStorePurchaseFinalizeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCStorePurchaseFinalizeResponse MakeReadOnly() {
    itemIds_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCStorePurchaseFinalizeResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCStorePurchaseFinalizeResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCStorePurchaseFinalizeResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCStorePurchaseFinalizeResponse result;
    
    private CMsgGCStorePurchaseFinalizeResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCStorePurchaseFinalizeResponse original = result;
        result = new CMsgGCStorePurchaseFinalizeResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCStorePurchaseFinalizeResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCStorePurchaseFinalizeResponse.Descriptor; }
    }
    
    public override CMsgGCStorePurchaseFinalizeResponse DefaultInstanceForType {
      get { return global::CMsgGCStorePurchaseFinalizeResponse.DefaultInstance; }
    }
    
    public override CMsgGCStorePurchaseFinalizeResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCStorePurchaseFinalizeResponse) {
        return MergeFrom((CMsgGCStorePurchaseFinalizeResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCStorePurchaseFinalizeResponse other) {
      if (other == global::CMsgGCStorePurchaseFinalizeResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.itemIds_.Count != 0) {
        result.itemIds_.Add(other.itemIds_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCStorePurchaseFinalizeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCStorePurchaseFinalizeResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasResult = input.ReadUInt32(ref result.result_);
            break;
          }
          case 18:
          case 16: {
            input.ReadUInt64Array(tag, field_name, result.itemIds_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    [global::System.CLSCompliant(false)]
    public uint Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetResult(uint value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<ulong> ItemIdsList {
      get { return PrepareBuilder().itemIds_; }
    }
    public int ItemIdsCount {
      get { return result.ItemIdsCount; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetItemIds(int index) {
      return result.GetItemIds(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemIds(int index, ulong value) {
      PrepareBuilder();
      result.itemIds_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddItemIds(ulong value) {
      PrepareBuilder();
      result.itemIds_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeItemIds(scg::IEnumerable<ulong> values) {
      PrepareBuilder();
      result.itemIds_.Add(values);
      return this;
    }
    public Builder ClearItemIds() {
      PrepareBuilder();
      result.itemIds_.Clear();
      return this;
    }
  }
  static CMsgGCStorePurchaseFinalizeResponse() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCBannedWordListRequest : pb::GeneratedMessage<CMsgGCBannedWordListRequest, CMsgGCBannedWordListRequest.Builder> {
  private CMsgGCBannedWordListRequest() { }
  private static readonly CMsgGCBannedWordListRequest defaultInstance = new CMsgGCBannedWordListRequest().MakeReadOnly();
  private static readonly string[] _cMsgGCBannedWordListRequestFieldNames = new string[] { "ban_list_group_id", "word_id" };
  private static readonly uint[] _cMsgGCBannedWordListRequestFieldTags = new uint[] { 8, 16 };
  public static CMsgGCBannedWordListRequest DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCBannedWordListRequest DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCBannedWordListRequest ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCBannedWordListRequest__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCBannedWordListRequest, CMsgGCBannedWordListRequest.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCBannedWordListRequest__FieldAccessorTable; }
  }
  
  public const int BanListGroupIdFieldNumber = 1;
  private bool hasBanListGroupId;
  private uint banListGroupId_;
  public bool HasBanListGroupId {
    get { return hasBanListGroupId; }
  }
  [global::System.CLSCompliant(false)]
  public uint BanListGroupId {
    get { return banListGroupId_; }
  }
  
  public const int WordIdFieldNumber = 2;
  private bool hasWordId;
  private uint wordId_;
  public bool HasWordId {
    get { return hasWordId; }
  }
  [global::System.CLSCompliant(false)]
  public uint WordId {
    get { return wordId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCBannedWordListRequestFieldNames;
    if (hasBanListGroupId) {
      output.WriteUInt32(1, field_names[0], BanListGroupId);
    }
    if (hasWordId) {
      output.WriteUInt32(2, field_names[1], WordId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBanListGroupId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, BanListGroupId);
      }
      if (hasWordId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, WordId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCBannedWordListRequest ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCBannedWordListRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCBannedWordListRequest ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCBannedWordListRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCBannedWordListRequest ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCBannedWordListRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCBannedWordListRequest ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCBannedWordListRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCBannedWordListRequest ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCBannedWordListRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCBannedWordListRequest MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCBannedWordListRequest prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCBannedWordListRequest, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCBannedWordListRequest cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCBannedWordListRequest result;
    
    private CMsgGCBannedWordListRequest PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCBannedWordListRequest original = result;
        result = new CMsgGCBannedWordListRequest();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCBannedWordListRequest MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCBannedWordListRequest.Descriptor; }
    }
    
    public override CMsgGCBannedWordListRequest DefaultInstanceForType {
      get { return global::CMsgGCBannedWordListRequest.DefaultInstance; }
    }
    
    public override CMsgGCBannedWordListRequest BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCBannedWordListRequest) {
        return MergeFrom((CMsgGCBannedWordListRequest) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCBannedWordListRequest other) {
      if (other == global::CMsgGCBannedWordListRequest.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasBanListGroupId) {
        BanListGroupId = other.BanListGroupId;
      }
      if (other.HasWordId) {
        WordId = other.WordId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCBannedWordListRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCBannedWordListRequestFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasBanListGroupId = input.ReadUInt32(ref result.banListGroupId_);
            break;
          }
          case 16: {
            result.hasWordId = input.ReadUInt32(ref result.wordId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasBanListGroupId {
      get { return result.hasBanListGroupId; }
    }
    [global::System.CLSCompliant(false)]
    public uint BanListGroupId {
      get { return result.BanListGroupId; }
      set { SetBanListGroupId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetBanListGroupId(uint value) {
      PrepareBuilder();
      result.hasBanListGroupId = true;
      result.banListGroupId_ = value;
      return this;
    }
    public Builder ClearBanListGroupId() {
      PrepareBuilder();
      result.hasBanListGroupId = false;
      result.banListGroupId_ = 0;
      return this;
    }
    
    public bool HasWordId {
      get { return result.hasWordId; }
    }
    [global::System.CLSCompliant(false)]
    public uint WordId {
      get { return result.WordId; }
      set { SetWordId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetWordId(uint value) {
      PrepareBuilder();
      result.hasWordId = true;
      result.wordId_ = value;
      return this;
    }
    public Builder ClearWordId() {
      PrepareBuilder();
      result.hasWordId = false;
      result.wordId_ = 0;
      return this;
    }
  }
  static CMsgGCBannedWordListRequest() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCRequestAnnouncements : pb::GeneratedMessage<CMsgGCRequestAnnouncements, CMsgGCRequestAnnouncements.Builder> {
  private CMsgGCRequestAnnouncements() { }
  private static readonly CMsgGCRequestAnnouncements defaultInstance = new CMsgGCRequestAnnouncements().MakeReadOnly();
  private static readonly string[] _cMsgGCRequestAnnouncementsFieldNames = new string[] {  };
  private static readonly uint[] _cMsgGCRequestAnnouncementsFieldTags = new uint[] {  };
  public static CMsgGCRequestAnnouncements DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCRequestAnnouncements DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCRequestAnnouncements ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCRequestAnnouncements__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCRequestAnnouncements, CMsgGCRequestAnnouncements.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCRequestAnnouncements__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCRequestAnnouncementsFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCRequestAnnouncements ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncements ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncements ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncements ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncements ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncements ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncements ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCRequestAnnouncements ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCRequestAnnouncements ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncements ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCRequestAnnouncements MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCRequestAnnouncements prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCRequestAnnouncements, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCRequestAnnouncements cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCRequestAnnouncements result;
    
    private CMsgGCRequestAnnouncements PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCRequestAnnouncements original = result;
        result = new CMsgGCRequestAnnouncements();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCRequestAnnouncements MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCRequestAnnouncements.Descriptor; }
    }
    
    public override CMsgGCRequestAnnouncements DefaultInstanceForType {
      get { return global::CMsgGCRequestAnnouncements.DefaultInstance; }
    }
    
    public override CMsgGCRequestAnnouncements BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCRequestAnnouncements) {
        return MergeFrom((CMsgGCRequestAnnouncements) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCRequestAnnouncements other) {
      if (other == global::CMsgGCRequestAnnouncements.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCRequestAnnouncementsFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCRequestAnnouncementsFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static CMsgGCRequestAnnouncements() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCRequestAnnouncementsResponse : pb::GeneratedMessage<CMsgGCRequestAnnouncementsResponse, CMsgGCRequestAnnouncementsResponse.Builder> {
  private CMsgGCRequestAnnouncementsResponse() { }
  private static readonly CMsgGCRequestAnnouncementsResponse defaultInstance = new CMsgGCRequestAnnouncementsResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCRequestAnnouncementsResponseFieldNames = new string[] { "announcement", "announcement_title", "nextmatch", "nextmatch_title" };
  private static readonly uint[] _cMsgGCRequestAnnouncementsResponseFieldTags = new uint[] { 18, 10, 34, 26 };
  public static CMsgGCRequestAnnouncementsResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCRequestAnnouncementsResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCRequestAnnouncementsResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCRequestAnnouncementsResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCRequestAnnouncementsResponse, CMsgGCRequestAnnouncementsResponse.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCRequestAnnouncementsResponse__FieldAccessorTable; }
  }
  
  public const int AnnouncementTitleFieldNumber = 1;
  private bool hasAnnouncementTitle;
  private string announcementTitle_ = "";
  public bool HasAnnouncementTitle {
    get { return hasAnnouncementTitle; }
  }
  public string AnnouncementTitle {
    get { return announcementTitle_; }
  }
  
  public const int AnnouncementFieldNumber = 2;
  private bool hasAnnouncement;
  private string announcement_ = "";
  public bool HasAnnouncement {
    get { return hasAnnouncement; }
  }
  public string Announcement {
    get { return announcement_; }
  }
  
  public const int NextmatchTitleFieldNumber = 3;
  private bool hasNextmatchTitle;
  private string nextmatchTitle_ = "";
  public bool HasNextmatchTitle {
    get { return hasNextmatchTitle; }
  }
  public string NextmatchTitle {
    get { return nextmatchTitle_; }
  }
  
  public const int NextmatchFieldNumber = 4;
  private bool hasNextmatch;
  private string nextmatch_ = "";
  public bool HasNextmatch {
    get { return hasNextmatch; }
  }
  public string Nextmatch {
    get { return nextmatch_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCRequestAnnouncementsResponseFieldNames;
    if (hasAnnouncementTitle) {
      output.WriteString(1, field_names[1], AnnouncementTitle);
    }
    if (hasAnnouncement) {
      output.WriteString(2, field_names[0], Announcement);
    }
    if (hasNextmatchTitle) {
      output.WriteString(3, field_names[3], NextmatchTitle);
    }
    if (hasNextmatch) {
      output.WriteString(4, field_names[2], Nextmatch);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAnnouncementTitle) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AnnouncementTitle);
      }
      if (hasAnnouncement) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Announcement);
      }
      if (hasNextmatchTitle) {
        size += pb::CodedOutputStream.ComputeStringSize(3, NextmatchTitle);
      }
      if (hasNextmatch) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Nextmatch);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCRequestAnnouncementsResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncementsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncementsResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncementsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncementsResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncementsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncementsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCRequestAnnouncementsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCRequestAnnouncementsResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCRequestAnnouncementsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCRequestAnnouncementsResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCRequestAnnouncementsResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCRequestAnnouncementsResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCRequestAnnouncementsResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCRequestAnnouncementsResponse result;
    
    private CMsgGCRequestAnnouncementsResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCRequestAnnouncementsResponse original = result;
        result = new CMsgGCRequestAnnouncementsResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCRequestAnnouncementsResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCRequestAnnouncementsResponse.Descriptor; }
    }
    
    public override CMsgGCRequestAnnouncementsResponse DefaultInstanceForType {
      get { return global::CMsgGCRequestAnnouncementsResponse.DefaultInstance; }
    }
    
    public override CMsgGCRequestAnnouncementsResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCRequestAnnouncementsResponse) {
        return MergeFrom((CMsgGCRequestAnnouncementsResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCRequestAnnouncementsResponse other) {
      if (other == global::CMsgGCRequestAnnouncementsResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAnnouncementTitle) {
        AnnouncementTitle = other.AnnouncementTitle;
      }
      if (other.HasAnnouncement) {
        Announcement = other.Announcement;
      }
      if (other.HasNextmatchTitle) {
        NextmatchTitle = other.NextmatchTitle;
      }
      if (other.HasNextmatch) {
        Nextmatch = other.Nextmatch;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCRequestAnnouncementsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCRequestAnnouncementsResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasAnnouncementTitle = input.ReadString(ref result.announcementTitle_);
            break;
          }
          case 18: {
            result.hasAnnouncement = input.ReadString(ref result.announcement_);
            break;
          }
          case 26: {
            result.hasNextmatchTitle = input.ReadString(ref result.nextmatchTitle_);
            break;
          }
          case 34: {
            result.hasNextmatch = input.ReadString(ref result.nextmatch_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAnnouncementTitle {
      get { return result.hasAnnouncementTitle; }
    }
    public string AnnouncementTitle {
      get { return result.AnnouncementTitle; }
      set { SetAnnouncementTitle(value); }
    }
    public Builder SetAnnouncementTitle(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAnnouncementTitle = true;
      result.announcementTitle_ = value;
      return this;
    }
    public Builder ClearAnnouncementTitle() {
      PrepareBuilder();
      result.hasAnnouncementTitle = false;
      result.announcementTitle_ = "";
      return this;
    }
    
    public bool HasAnnouncement {
      get { return result.hasAnnouncement; }
    }
    public string Announcement {
      get { return result.Announcement; }
      set { SetAnnouncement(value); }
    }
    public Builder SetAnnouncement(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAnnouncement = true;
      result.announcement_ = value;
      return this;
    }
    public Builder ClearAnnouncement() {
      PrepareBuilder();
      result.hasAnnouncement = false;
      result.announcement_ = "";
      return this;
    }
    
    public bool HasNextmatchTitle {
      get { return result.hasNextmatchTitle; }
    }
    public string NextmatchTitle {
      get { return result.NextmatchTitle; }
      set { SetNextmatchTitle(value); }
    }
    public Builder SetNextmatchTitle(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasNextmatchTitle = true;
      result.nextmatchTitle_ = value;
      return this;
    }
    public Builder ClearNextmatchTitle() {
      PrepareBuilder();
      result.hasNextmatchTitle = false;
      result.nextmatchTitle_ = "";
      return this;
    }
    
    public bool HasNextmatch {
      get { return result.hasNextmatch; }
    }
    public string Nextmatch {
      get { return result.Nextmatch; }
      set { SetNextmatch(value); }
    }
    public Builder SetNextmatch(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasNextmatch = true;
      result.nextmatch_ = value;
      return this;
    }
    public Builder ClearNextmatch() {
      PrepareBuilder();
      result.hasNextmatch = false;
      result.nextmatch_ = "";
      return this;
    }
  }
  static CMsgGCRequestAnnouncementsResponse() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCBannedWord : pb::GeneratedMessage<CMsgGCBannedWord, CMsgGCBannedWord.Builder> {
  private CMsgGCBannedWord() { }
  private static readonly CMsgGCBannedWord defaultInstance = new CMsgGCBannedWord().MakeReadOnly();
  private static readonly string[] _cMsgGCBannedWordFieldNames = new string[] { "word", "word_id", "word_type" };
  private static readonly uint[] _cMsgGCBannedWordFieldTags = new uint[] { 26, 8, 16 };
  public static CMsgGCBannedWord DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCBannedWord DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCBannedWord ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCBannedWord__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCBannedWord, CMsgGCBannedWord.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCBannedWord__FieldAccessorTable; }
  }
  
  public const int WordIdFieldNumber = 1;
  private bool hasWordId;
  private uint wordId_;
  public bool HasWordId {
    get { return hasWordId; }
  }
  [global::System.CLSCompliant(false)]
  public uint WordId {
    get { return wordId_; }
  }
  
  public const int WordTypeFieldNumber = 2;
  private bool hasWordType;
  private global::GC_BannedWordType wordType_ = global::GC_BannedWordType.GC_BANNED_WORD_DISABLE_WORD;
  public bool HasWordType {
    get { return hasWordType; }
  }
  public global::GC_BannedWordType WordType {
    get { return wordType_; }
  }
  
  public const int WordFieldNumber = 3;
  private bool hasWord;
  private string word_ = "";
  public bool HasWord {
    get { return hasWord; }
  }
  public string Word {
    get { return word_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCBannedWordFieldNames;
    if (hasWordId) {
      output.WriteUInt32(1, field_names[1], WordId);
    }
    if (hasWordType) {
      output.WriteEnum(2, field_names[2], (int) WordType, WordType);
    }
    if (hasWord) {
      output.WriteString(3, field_names[0], Word);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasWordId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, WordId);
      }
      if (hasWordType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) WordType);
      }
      if (hasWord) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Word);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCBannedWord ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCBannedWord ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCBannedWord ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCBannedWord ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCBannedWord ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCBannedWord ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCBannedWord ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCBannedWord ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCBannedWord ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCBannedWord ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCBannedWord MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCBannedWord prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCBannedWord, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCBannedWord cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCBannedWord result;
    
    private CMsgGCBannedWord PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCBannedWord original = result;
        result = new CMsgGCBannedWord();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCBannedWord MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCBannedWord.Descriptor; }
    }
    
    public override CMsgGCBannedWord DefaultInstanceForType {
      get { return global::CMsgGCBannedWord.DefaultInstance; }
    }
    
    public override CMsgGCBannedWord BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCBannedWord) {
        return MergeFrom((CMsgGCBannedWord) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCBannedWord other) {
      if (other == global::CMsgGCBannedWord.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasWordId) {
        WordId = other.WordId;
      }
      if (other.HasWordType) {
        WordType = other.WordType;
      }
      if (other.HasWord) {
        Word = other.Word;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCBannedWordFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCBannedWordFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasWordId = input.ReadUInt32(ref result.wordId_);
            break;
          }
          case 16: {
            object unknown;
            if(input.ReadEnum(ref result.wordType_, out unknown)) {
              result.hasWordType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(2, (ulong)(int)unknown);
            }
            break;
          }
          case 26: {
            result.hasWord = input.ReadString(ref result.word_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasWordId {
      get { return result.hasWordId; }
    }
    [global::System.CLSCompliant(false)]
    public uint WordId {
      get { return result.WordId; }
      set { SetWordId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetWordId(uint value) {
      PrepareBuilder();
      result.hasWordId = true;
      result.wordId_ = value;
      return this;
    }
    public Builder ClearWordId() {
      PrepareBuilder();
      result.hasWordId = false;
      result.wordId_ = 0;
      return this;
    }
    
    public bool HasWordType {
     get { return result.hasWordType; }
    }
    public global::GC_BannedWordType WordType {
      get { return result.WordType; }
      set { SetWordType(value); }
    }
    public Builder SetWordType(global::GC_BannedWordType value) {
      PrepareBuilder();
      result.hasWordType = true;
      result.wordType_ = value;
      return this;
    }
    public Builder ClearWordType() {
      PrepareBuilder();
      result.hasWordType = false;
      result.wordType_ = global::GC_BannedWordType.GC_BANNED_WORD_DISABLE_WORD;
      return this;
    }
    
    public bool HasWord {
      get { return result.hasWord; }
    }
    public string Word {
      get { return result.Word; }
      set { SetWord(value); }
    }
    public Builder SetWord(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasWord = true;
      result.word_ = value;
      return this;
    }
    public Builder ClearWord() {
      PrepareBuilder();
      result.hasWord = false;
      result.word_ = "";
      return this;
    }
  }
  static CMsgGCBannedWord() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCBannedWordListResponse : pb::GeneratedMessage<CMsgGCBannedWordListResponse, CMsgGCBannedWordListResponse.Builder> {
  private CMsgGCBannedWordListResponse() { }
  private static readonly CMsgGCBannedWordListResponse defaultInstance = new CMsgGCBannedWordListResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCBannedWordListResponseFieldNames = new string[] { "ban_list_group_id", "word_list" };
  private static readonly uint[] _cMsgGCBannedWordListResponseFieldTags = new uint[] { 8, 18 };
  public static CMsgGCBannedWordListResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCBannedWordListResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCBannedWordListResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCBannedWordListResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCBannedWordListResponse, CMsgGCBannedWordListResponse.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCBannedWordListResponse__FieldAccessorTable; }
  }
  
  public const int BanListGroupIdFieldNumber = 1;
  private bool hasBanListGroupId;
  private uint banListGroupId_;
  public bool HasBanListGroupId {
    get { return hasBanListGroupId; }
  }
  [global::System.CLSCompliant(false)]
  public uint BanListGroupId {
    get { return banListGroupId_; }
  }
  
  public const int WordListFieldNumber = 2;
  private pbc::PopsicleList<global::CMsgGCBannedWord> wordList_ = new pbc::PopsicleList<global::CMsgGCBannedWord>();
  public scg::IList<global::CMsgGCBannedWord> WordListList {
    get { return wordList_; }
  }
  public int WordListCount {
    get { return wordList_.Count; }
  }
  public global::CMsgGCBannedWord GetWordList(int index) {
    return wordList_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCBannedWordListResponseFieldNames;
    if (hasBanListGroupId) {
      output.WriteUInt32(1, field_names[0], BanListGroupId);
    }
    if (wordList_.Count > 0) {
      output.WriteMessageArray(2, field_names[1], wordList_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBanListGroupId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, BanListGroupId);
      }
      foreach (global::CMsgGCBannedWord element in WordListList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCBannedWordListResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCBannedWordListResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCBannedWordListResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCBannedWordListResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCBannedWordListResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCBannedWordListResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCBannedWordListResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCBannedWordListResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCBannedWordListResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCBannedWordListResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCBannedWordListResponse MakeReadOnly() {
    wordList_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCBannedWordListResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCBannedWordListResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCBannedWordListResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCBannedWordListResponse result;
    
    private CMsgGCBannedWordListResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCBannedWordListResponse original = result;
        result = new CMsgGCBannedWordListResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCBannedWordListResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCBannedWordListResponse.Descriptor; }
    }
    
    public override CMsgGCBannedWordListResponse DefaultInstanceForType {
      get { return global::CMsgGCBannedWordListResponse.DefaultInstance; }
    }
    
    public override CMsgGCBannedWordListResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCBannedWordListResponse) {
        return MergeFrom((CMsgGCBannedWordListResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCBannedWordListResponse other) {
      if (other == global::CMsgGCBannedWordListResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasBanListGroupId) {
        BanListGroupId = other.BanListGroupId;
      }
      if (other.wordList_.Count != 0) {
        result.wordList_.Add(other.wordList_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCBannedWordListResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCBannedWordListResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasBanListGroupId = input.ReadUInt32(ref result.banListGroupId_);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.wordList_, global::CMsgGCBannedWord.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasBanListGroupId {
      get { return result.hasBanListGroupId; }
    }
    [global::System.CLSCompliant(false)]
    public uint BanListGroupId {
      get { return result.BanListGroupId; }
      set { SetBanListGroupId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetBanListGroupId(uint value) {
      PrepareBuilder();
      result.hasBanListGroupId = true;
      result.banListGroupId_ = value;
      return this;
    }
    public Builder ClearBanListGroupId() {
      PrepareBuilder();
      result.hasBanListGroupId = false;
      result.banListGroupId_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::CMsgGCBannedWord> WordListList {
      get { return PrepareBuilder().wordList_; }
    }
    public int WordListCount {
      get { return result.WordListCount; }
    }
    public global::CMsgGCBannedWord GetWordList(int index) {
      return result.GetWordList(index);
    }
    public Builder SetWordList(int index, global::CMsgGCBannedWord value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.wordList_[index] = value;
      return this;
    }
    public Builder SetWordList(int index, global::CMsgGCBannedWord.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.wordList_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddWordList(global::CMsgGCBannedWord value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.wordList_.Add(value);
      return this;
    }
    public Builder AddWordList(global::CMsgGCBannedWord.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.wordList_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeWordList(scg::IEnumerable<global::CMsgGCBannedWord> values) {
      PrepareBuilder();
      result.wordList_.Add(values);
      return this;
    }
    public Builder ClearWordList() {
      PrepareBuilder();
      result.wordList_.Clear();
      return this;
    }
  }
  static CMsgGCBannedWordListResponse() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCToGCBannedWordListBroadcast : pb::GeneratedMessage<CMsgGCToGCBannedWordListBroadcast, CMsgGCToGCBannedWordListBroadcast.Builder> {
  private CMsgGCToGCBannedWordListBroadcast() { }
  private static readonly CMsgGCToGCBannedWordListBroadcast defaultInstance = new CMsgGCToGCBannedWordListBroadcast().MakeReadOnly();
  private static readonly string[] _cMsgGCToGCBannedWordListBroadcastFieldNames = new string[] { "broadcast" };
  private static readonly uint[] _cMsgGCToGCBannedWordListBroadcastFieldTags = new uint[] { 10 };
  public static CMsgGCToGCBannedWordListBroadcast DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCToGCBannedWordListBroadcast DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCToGCBannedWordListBroadcast ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCBannedWordListBroadcast__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCToGCBannedWordListBroadcast, CMsgGCToGCBannedWordListBroadcast.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCBannedWordListBroadcast__FieldAccessorTable; }
  }
  
  public const int BroadcastFieldNumber = 1;
  private bool hasBroadcast;
  private global::CMsgGCBannedWordListResponse broadcast_;
  public bool HasBroadcast {
    get { return hasBroadcast; }
  }
  public global::CMsgGCBannedWordListResponse Broadcast {
    get { return broadcast_ ?? global::CMsgGCBannedWordListResponse.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCToGCBannedWordListBroadcastFieldNames;
    if (hasBroadcast) {
      output.WriteMessage(1, field_names[0], Broadcast);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBroadcast) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Broadcast);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCToGCBannedWordListBroadcast ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListBroadcast ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListBroadcast ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListBroadcast ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListBroadcast ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListBroadcast ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListBroadcast ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListBroadcast ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListBroadcast ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListBroadcast ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCToGCBannedWordListBroadcast MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCToGCBannedWordListBroadcast prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCToGCBannedWordListBroadcast, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCToGCBannedWordListBroadcast cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCToGCBannedWordListBroadcast result;
    
    private CMsgGCToGCBannedWordListBroadcast PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCToGCBannedWordListBroadcast original = result;
        result = new CMsgGCToGCBannedWordListBroadcast();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCToGCBannedWordListBroadcast MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCToGCBannedWordListBroadcast.Descriptor; }
    }
    
    public override CMsgGCToGCBannedWordListBroadcast DefaultInstanceForType {
      get { return global::CMsgGCToGCBannedWordListBroadcast.DefaultInstance; }
    }
    
    public override CMsgGCToGCBannedWordListBroadcast BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCToGCBannedWordListBroadcast) {
        return MergeFrom((CMsgGCToGCBannedWordListBroadcast) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCToGCBannedWordListBroadcast other) {
      if (other == global::CMsgGCToGCBannedWordListBroadcast.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasBroadcast) {
        MergeBroadcast(other.Broadcast);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCToGCBannedWordListBroadcastFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCToGCBannedWordListBroadcastFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::CMsgGCBannedWordListResponse.Builder subBuilder = global::CMsgGCBannedWordListResponse.CreateBuilder();
            if (result.hasBroadcast) {
              subBuilder.MergeFrom(Broadcast);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Broadcast = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasBroadcast {
     get { return result.hasBroadcast; }
    }
    public global::CMsgGCBannedWordListResponse Broadcast {
      get { return result.Broadcast; }
      set { SetBroadcast(value); }
    }
    public Builder SetBroadcast(global::CMsgGCBannedWordListResponse value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasBroadcast = true;
      result.broadcast_ = value;
      return this;
    }
    public Builder SetBroadcast(global::CMsgGCBannedWordListResponse.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasBroadcast = true;
      result.broadcast_ = builderForValue.Build();
      return this;
    }
    public Builder MergeBroadcast(global::CMsgGCBannedWordListResponse value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasBroadcast &&
          result.broadcast_ != global::CMsgGCBannedWordListResponse.DefaultInstance) {
          result.broadcast_ = global::CMsgGCBannedWordListResponse.CreateBuilder(result.broadcast_).MergeFrom(value).BuildPartial();
      } else {
        result.broadcast_ = value;
      }
      result.hasBroadcast = true;
      return this;
    }
    public Builder ClearBroadcast() {
      PrepareBuilder();
      result.hasBroadcast = false;
      result.broadcast_ = null;
      return this;
    }
  }
  static CMsgGCToGCBannedWordListBroadcast() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCToGCBannedWordListUpdated : pb::GeneratedMessage<CMsgGCToGCBannedWordListUpdated, CMsgGCToGCBannedWordListUpdated.Builder> {
  private CMsgGCToGCBannedWordListUpdated() { }
  private static readonly CMsgGCToGCBannedWordListUpdated defaultInstance = new CMsgGCToGCBannedWordListUpdated().MakeReadOnly();
  private static readonly string[] _cMsgGCToGCBannedWordListUpdatedFieldNames = new string[] { "group_id" };
  private static readonly uint[] _cMsgGCToGCBannedWordListUpdatedFieldTags = new uint[] { 8 };
  public static CMsgGCToGCBannedWordListUpdated DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCToGCBannedWordListUpdated DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCToGCBannedWordListUpdated ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCBannedWordListUpdated__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCToGCBannedWordListUpdated, CMsgGCToGCBannedWordListUpdated.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCBannedWordListUpdated__FieldAccessorTable; }
  }
  
  public const int GroupIdFieldNumber = 1;
  private bool hasGroupId;
  private uint groupId_;
  public bool HasGroupId {
    get { return hasGroupId; }
  }
  [global::System.CLSCompliant(false)]
  public uint GroupId {
    get { return groupId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCToGCBannedWordListUpdatedFieldNames;
    if (hasGroupId) {
      output.WriteUInt32(1, field_names[0], GroupId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasGroupId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, GroupId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCToGCBannedWordListUpdated ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListUpdated ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListUpdated ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListUpdated ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListUpdated ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListUpdated ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListUpdated ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListUpdated ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListUpdated ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCBannedWordListUpdated ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCToGCBannedWordListUpdated MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCToGCBannedWordListUpdated prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCToGCBannedWordListUpdated, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCToGCBannedWordListUpdated cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCToGCBannedWordListUpdated result;
    
    private CMsgGCToGCBannedWordListUpdated PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCToGCBannedWordListUpdated original = result;
        result = new CMsgGCToGCBannedWordListUpdated();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCToGCBannedWordListUpdated MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCToGCBannedWordListUpdated.Descriptor; }
    }
    
    public override CMsgGCToGCBannedWordListUpdated DefaultInstanceForType {
      get { return global::CMsgGCToGCBannedWordListUpdated.DefaultInstance; }
    }
    
    public override CMsgGCToGCBannedWordListUpdated BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCToGCBannedWordListUpdated) {
        return MergeFrom((CMsgGCToGCBannedWordListUpdated) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCToGCBannedWordListUpdated other) {
      if (other == global::CMsgGCToGCBannedWordListUpdated.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasGroupId) {
        GroupId = other.GroupId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCToGCBannedWordListUpdatedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCToGCBannedWordListUpdatedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasGroupId = input.ReadUInt32(ref result.groupId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasGroupId {
      get { return result.hasGroupId; }
    }
    [global::System.CLSCompliant(false)]
    public uint GroupId {
      get { return result.GroupId; }
      set { SetGroupId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGroupId(uint value) {
      PrepareBuilder();
      result.hasGroupId = true;
      result.groupId_ = value;
      return this;
    }
    public Builder ClearGroupId() {
      PrepareBuilder();
      result.hasGroupId = false;
      result.groupId_ = 0;
      return this;
    }
  }
  static CMsgGCToGCBannedWordListUpdated() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CSOEconDefaultEquippedDefinitionInstanceClient : pb::GeneratedMessage<CSOEconDefaultEquippedDefinitionInstanceClient, CSOEconDefaultEquippedDefinitionInstanceClient.Builder> {
  private CSOEconDefaultEquippedDefinitionInstanceClient() { }
  private static readonly CSOEconDefaultEquippedDefinitionInstanceClient defaultInstance = new CSOEconDefaultEquippedDefinitionInstanceClient().MakeReadOnly();
  private static readonly string[] _cSOEconDefaultEquippedDefinitionInstanceClientFieldNames = new string[] { "account_id", "class_id", "item_definition", "slot_id" };
  private static readonly uint[] _cSOEconDefaultEquippedDefinitionInstanceClientFieldTags = new uint[] { 8, 24, 16, 32 };
  public static CSOEconDefaultEquippedDefinitionInstanceClient DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CSOEconDefaultEquippedDefinitionInstanceClient DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CSOEconDefaultEquippedDefinitionInstanceClient ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CSOEconDefaultEquippedDefinitionInstanceClient__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CSOEconDefaultEquippedDefinitionInstanceClient, CSOEconDefaultEquippedDefinitionInstanceClient.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CSOEconDefaultEquippedDefinitionInstanceClient__FieldAccessorTable; }
  }
  
  public const int AccountIdFieldNumber = 1;
  private bool hasAccountId;
  private uint accountId_;
  public bool HasAccountId {
    get { return hasAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public uint AccountId {
    get { return accountId_; }
  }
  
  public const int ItemDefinitionFieldNumber = 2;
  private bool hasItemDefinition;
  private uint itemDefinition_;
  public bool HasItemDefinition {
    get { return hasItemDefinition; }
  }
  [global::System.CLSCompliant(false)]
  public uint ItemDefinition {
    get { return itemDefinition_; }
  }
  
  public const int ClassIdFieldNumber = 3;
  private bool hasClassId;
  private uint classId_;
  public bool HasClassId {
    get { return hasClassId; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClassId {
    get { return classId_; }
  }
  
  public const int SlotIdFieldNumber = 4;
  private bool hasSlotId;
  private uint slotId_;
  public bool HasSlotId {
    get { return hasSlotId; }
  }
  [global::System.CLSCompliant(false)]
  public uint SlotId {
    get { return slotId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cSOEconDefaultEquippedDefinitionInstanceClientFieldNames;
    if (hasAccountId) {
      output.WriteUInt32(1, field_names[0], AccountId);
    }
    if (hasItemDefinition) {
      output.WriteUInt32(2, field_names[2], ItemDefinition);
    }
    if (hasClassId) {
      output.WriteUInt32(3, field_names[1], ClassId);
    }
    if (hasSlotId) {
      output.WriteUInt32(4, field_names[3], SlotId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAccountId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, AccountId);
      }
      if (hasItemDefinition) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, ItemDefinition);
      }
      if (hasClassId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, ClassId);
      }
      if (hasSlotId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, SlotId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CSOEconDefaultEquippedDefinitionInstanceClient ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconDefaultEquippedDefinitionInstanceClient ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconDefaultEquippedDefinitionInstanceClient ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CSOEconDefaultEquippedDefinitionInstanceClient ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CSOEconDefaultEquippedDefinitionInstanceClient ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconDefaultEquippedDefinitionInstanceClient ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CSOEconDefaultEquippedDefinitionInstanceClient ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CSOEconDefaultEquippedDefinitionInstanceClient ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CSOEconDefaultEquippedDefinitionInstanceClient ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CSOEconDefaultEquippedDefinitionInstanceClient ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CSOEconDefaultEquippedDefinitionInstanceClient MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CSOEconDefaultEquippedDefinitionInstanceClient prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CSOEconDefaultEquippedDefinitionInstanceClient, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CSOEconDefaultEquippedDefinitionInstanceClient cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CSOEconDefaultEquippedDefinitionInstanceClient result;
    
    private CSOEconDefaultEquippedDefinitionInstanceClient PrepareBuilder() {
      if (resultIsReadOnly) {
        CSOEconDefaultEquippedDefinitionInstanceClient original = result;
        result = new CSOEconDefaultEquippedDefinitionInstanceClient();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CSOEconDefaultEquippedDefinitionInstanceClient MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CSOEconDefaultEquippedDefinitionInstanceClient.Descriptor; }
    }
    
    public override CSOEconDefaultEquippedDefinitionInstanceClient DefaultInstanceForType {
      get { return global::CSOEconDefaultEquippedDefinitionInstanceClient.DefaultInstance; }
    }
    
    public override CSOEconDefaultEquippedDefinitionInstanceClient BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CSOEconDefaultEquippedDefinitionInstanceClient) {
        return MergeFrom((CSOEconDefaultEquippedDefinitionInstanceClient) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CSOEconDefaultEquippedDefinitionInstanceClient other) {
      if (other == global::CSOEconDefaultEquippedDefinitionInstanceClient.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAccountId) {
        AccountId = other.AccountId;
      }
      if (other.HasItemDefinition) {
        ItemDefinition = other.ItemDefinition;
      }
      if (other.HasClassId) {
        ClassId = other.ClassId;
      }
      if (other.HasSlotId) {
        SlotId = other.SlotId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cSOEconDefaultEquippedDefinitionInstanceClientFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cSOEconDefaultEquippedDefinitionInstanceClientFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAccountId = input.ReadUInt32(ref result.accountId_);
            break;
          }
          case 16: {
            result.hasItemDefinition = input.ReadUInt32(ref result.itemDefinition_);
            break;
          }
          case 24: {
            result.hasClassId = input.ReadUInt32(ref result.classId_);
            break;
          }
          case 32: {
            result.hasSlotId = input.ReadUInt32(ref result.slotId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAccountId {
      get { return result.hasAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public uint AccountId {
      get { return result.AccountId; }
      set { SetAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAccountId(uint value) {
      PrepareBuilder();
      result.hasAccountId = true;
      result.accountId_ = value;
      return this;
    }
    public Builder ClearAccountId() {
      PrepareBuilder();
      result.hasAccountId = false;
      result.accountId_ = 0;
      return this;
    }
    
    public bool HasItemDefinition {
      get { return result.hasItemDefinition; }
    }
    [global::System.CLSCompliant(false)]
    public uint ItemDefinition {
      get { return result.ItemDefinition; }
      set { SetItemDefinition(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetItemDefinition(uint value) {
      PrepareBuilder();
      result.hasItemDefinition = true;
      result.itemDefinition_ = value;
      return this;
    }
    public Builder ClearItemDefinition() {
      PrepareBuilder();
      result.hasItemDefinition = false;
      result.itemDefinition_ = 0;
      return this;
    }
    
    public bool HasClassId {
      get { return result.hasClassId; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClassId {
      get { return result.ClassId; }
      set { SetClassId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClassId(uint value) {
      PrepareBuilder();
      result.hasClassId = true;
      result.classId_ = value;
      return this;
    }
    public Builder ClearClassId() {
      PrepareBuilder();
      result.hasClassId = false;
      result.classId_ = 0;
      return this;
    }
    
    public bool HasSlotId {
      get { return result.hasSlotId; }
    }
    [global::System.CLSCompliant(false)]
    public uint SlotId {
      get { return result.SlotId; }
      set { SetSlotId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSlotId(uint value) {
      PrepareBuilder();
      result.hasSlotId = true;
      result.slotId_ = value;
      return this;
    }
    public Builder ClearSlotId() {
      PrepareBuilder();
      result.hasSlotId = false;
      result.slotId_ = 0;
      return this;
    }
  }
  static CSOEconDefaultEquippedDefinitionInstanceClient() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCToGCDirtySDOCache : pb::GeneratedMessage<CMsgGCToGCDirtySDOCache, CMsgGCToGCDirtySDOCache.Builder> {
  private CMsgGCToGCDirtySDOCache() { }
  private static readonly CMsgGCToGCDirtySDOCache defaultInstance = new CMsgGCToGCDirtySDOCache().MakeReadOnly();
  private static readonly string[] _cMsgGCToGCDirtySDOCacheFieldNames = new string[] { "key_uint64", "sdo_type" };
  private static readonly uint[] _cMsgGCToGCDirtySDOCacheFieldTags = new uint[] { 16, 8 };
  public static CMsgGCToGCDirtySDOCache DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCToGCDirtySDOCache DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCToGCDirtySDOCache ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCDirtySDOCache__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCToGCDirtySDOCache, CMsgGCToGCDirtySDOCache.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCDirtySDOCache__FieldAccessorTable; }
  }
  
  public const int SdoTypeFieldNumber = 1;
  private bool hasSdoType;
  private uint sdoType_;
  public bool HasSdoType {
    get { return hasSdoType; }
  }
  [global::System.CLSCompliant(false)]
  public uint SdoType {
    get { return sdoType_; }
  }
  
  public const int KeyUint64FieldNumber = 2;
  private bool hasKeyUint64;
  private ulong keyUint64_;
  public bool HasKeyUint64 {
    get { return hasKeyUint64; }
  }
  [global::System.CLSCompliant(false)]
  public ulong KeyUint64 {
    get { return keyUint64_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCToGCDirtySDOCacheFieldNames;
    if (hasSdoType) {
      output.WriteUInt32(1, field_names[1], SdoType);
    }
    if (hasKeyUint64) {
      output.WriteUInt64(2, field_names[0], KeyUint64);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSdoType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, SdoType);
      }
      if (hasKeyUint64) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, KeyUint64);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCToGCDirtySDOCache ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCDirtySDOCache ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCDirtySDOCache ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCDirtySDOCache ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCDirtySDOCache ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCDirtySDOCache ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCDirtySDOCache ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCToGCDirtySDOCache ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCToGCDirtySDOCache ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCDirtySDOCache ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCToGCDirtySDOCache MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCToGCDirtySDOCache prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCToGCDirtySDOCache, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCToGCDirtySDOCache cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCToGCDirtySDOCache result;
    
    private CMsgGCToGCDirtySDOCache PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCToGCDirtySDOCache original = result;
        result = new CMsgGCToGCDirtySDOCache();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCToGCDirtySDOCache MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCToGCDirtySDOCache.Descriptor; }
    }
    
    public override CMsgGCToGCDirtySDOCache DefaultInstanceForType {
      get { return global::CMsgGCToGCDirtySDOCache.DefaultInstance; }
    }
    
    public override CMsgGCToGCDirtySDOCache BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCToGCDirtySDOCache) {
        return MergeFrom((CMsgGCToGCDirtySDOCache) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCToGCDirtySDOCache other) {
      if (other == global::CMsgGCToGCDirtySDOCache.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSdoType) {
        SdoType = other.SdoType;
      }
      if (other.HasKeyUint64) {
        KeyUint64 = other.KeyUint64;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCToGCDirtySDOCacheFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCToGCDirtySDOCacheFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSdoType = input.ReadUInt32(ref result.sdoType_);
            break;
          }
          case 16: {
            result.hasKeyUint64 = input.ReadUInt64(ref result.keyUint64_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSdoType {
      get { return result.hasSdoType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SdoType {
      get { return result.SdoType; }
      set { SetSdoType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSdoType(uint value) {
      PrepareBuilder();
      result.hasSdoType = true;
      result.sdoType_ = value;
      return this;
    }
    public Builder ClearSdoType() {
      PrepareBuilder();
      result.hasSdoType = false;
      result.sdoType_ = 0;
      return this;
    }
    
    public bool HasKeyUint64 {
      get { return result.hasKeyUint64; }
    }
    [global::System.CLSCompliant(false)]
    public ulong KeyUint64 {
      get { return result.KeyUint64; }
      set { SetKeyUint64(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetKeyUint64(ulong value) {
      PrepareBuilder();
      result.hasKeyUint64 = true;
      result.keyUint64_ = value;
      return this;
    }
    public Builder ClearKeyUint64() {
      PrepareBuilder();
      result.hasKeyUint64 = false;
      result.keyUint64_ = 0UL;
      return this;
    }
  }
  static CMsgGCToGCDirtySDOCache() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCToGCDirtyMultipleSDOCache : pb::GeneratedMessage<CMsgGCToGCDirtyMultipleSDOCache, CMsgGCToGCDirtyMultipleSDOCache.Builder> {
  private CMsgGCToGCDirtyMultipleSDOCache() { }
  private static readonly CMsgGCToGCDirtyMultipleSDOCache defaultInstance = new CMsgGCToGCDirtyMultipleSDOCache().MakeReadOnly();
  private static readonly string[] _cMsgGCToGCDirtyMultipleSDOCacheFieldNames = new string[] { "key_uint64", "sdo_type" };
  private static readonly uint[] _cMsgGCToGCDirtyMultipleSDOCacheFieldTags = new uint[] { 16, 8 };
  public static CMsgGCToGCDirtyMultipleSDOCache DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCToGCDirtyMultipleSDOCache DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCToGCDirtyMultipleSDOCache ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCDirtyMultipleSDOCache__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCToGCDirtyMultipleSDOCache, CMsgGCToGCDirtyMultipleSDOCache.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCDirtyMultipleSDOCache__FieldAccessorTable; }
  }
  
  public const int SdoTypeFieldNumber = 1;
  private bool hasSdoType;
  private uint sdoType_;
  public bool HasSdoType {
    get { return hasSdoType; }
  }
  [global::System.CLSCompliant(false)]
  public uint SdoType {
    get { return sdoType_; }
  }
  
  public const int KeyUint64FieldNumber = 2;
  private pbc::PopsicleList<ulong> keyUint64_ = new pbc::PopsicleList<ulong>();
  [global::System.CLSCompliant(false)]
  public scg::IList<ulong> KeyUint64List {
    get { return pbc::Lists.AsReadOnly(keyUint64_); }
  }
  public int KeyUint64Count {
    get { return keyUint64_.Count; }
  }
  [global::System.CLSCompliant(false)]
  public ulong GetKeyUint64(int index) {
    return keyUint64_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCToGCDirtyMultipleSDOCacheFieldNames;
    if (hasSdoType) {
      output.WriteUInt32(1, field_names[1], SdoType);
    }
    if (keyUint64_.Count > 0) {
      output.WriteUInt64Array(2, field_names[0], keyUint64_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSdoType) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, SdoType);
      }
      {
        int dataSize = 0;
        foreach (ulong element in KeyUint64List) {
          dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * keyUint64_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCToGCDirtyMultipleSDOCache ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCDirtyMultipleSDOCache ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCDirtyMultipleSDOCache ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCDirtyMultipleSDOCache ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCDirtyMultipleSDOCache ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCDirtyMultipleSDOCache ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCDirtyMultipleSDOCache ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCToGCDirtyMultipleSDOCache ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCToGCDirtyMultipleSDOCache ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCDirtyMultipleSDOCache ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCToGCDirtyMultipleSDOCache MakeReadOnly() {
    keyUint64_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCToGCDirtyMultipleSDOCache prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCToGCDirtyMultipleSDOCache, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCToGCDirtyMultipleSDOCache cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCToGCDirtyMultipleSDOCache result;
    
    private CMsgGCToGCDirtyMultipleSDOCache PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCToGCDirtyMultipleSDOCache original = result;
        result = new CMsgGCToGCDirtyMultipleSDOCache();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCToGCDirtyMultipleSDOCache MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCToGCDirtyMultipleSDOCache.Descriptor; }
    }
    
    public override CMsgGCToGCDirtyMultipleSDOCache DefaultInstanceForType {
      get { return global::CMsgGCToGCDirtyMultipleSDOCache.DefaultInstance; }
    }
    
    public override CMsgGCToGCDirtyMultipleSDOCache BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCToGCDirtyMultipleSDOCache) {
        return MergeFrom((CMsgGCToGCDirtyMultipleSDOCache) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCToGCDirtyMultipleSDOCache other) {
      if (other == global::CMsgGCToGCDirtyMultipleSDOCache.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSdoType) {
        SdoType = other.SdoType;
      }
      if (other.keyUint64_.Count != 0) {
        result.keyUint64_.Add(other.keyUint64_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCToGCDirtyMultipleSDOCacheFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCToGCDirtyMultipleSDOCacheFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSdoType = input.ReadUInt32(ref result.sdoType_);
            break;
          }
          case 18:
          case 16: {
            input.ReadUInt64Array(tag, field_name, result.keyUint64_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSdoType {
      get { return result.hasSdoType; }
    }
    [global::System.CLSCompliant(false)]
    public uint SdoType {
      get { return result.SdoType; }
      set { SetSdoType(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSdoType(uint value) {
      PrepareBuilder();
      result.hasSdoType = true;
      result.sdoType_ = value;
      return this;
    }
    public Builder ClearSdoType() {
      PrepareBuilder();
      result.hasSdoType = false;
      result.sdoType_ = 0;
      return this;
    }
    
    [global::System.CLSCompliant(false)]
    public pbc::IPopsicleList<ulong> KeyUint64List {
      get { return PrepareBuilder().keyUint64_; }
    }
    public int KeyUint64Count {
      get { return result.KeyUint64Count; }
    }
    [global::System.CLSCompliant(false)]
    public ulong GetKeyUint64(int index) {
      return result.GetKeyUint64(index);
    }
    [global::System.CLSCompliant(false)]
    public Builder SetKeyUint64(int index, ulong value) {
      PrepareBuilder();
      result.keyUint64_[index] = value;
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddKeyUint64(ulong value) {
      PrepareBuilder();
      result.keyUint64_.Add(value);
      return this;
    }
    [global::System.CLSCompliant(false)]
    public Builder AddRangeKeyUint64(scg::IEnumerable<ulong> values) {
      PrepareBuilder();
      result.keyUint64_.Add(values);
      return this;
    }
    public Builder ClearKeyUint64() {
      PrepareBuilder();
      result.keyUint64_.Clear();
      return this;
    }
  }
  static CMsgGCToGCDirtyMultipleSDOCache() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCCollectItem : pb::GeneratedMessage<CMsgGCCollectItem, CMsgGCCollectItem.Builder> {
  private CMsgGCCollectItem() { }
  private static readonly CMsgGCCollectItem defaultInstance = new CMsgGCCollectItem().MakeReadOnly();
  private static readonly string[] _cMsgGCCollectItemFieldNames = new string[] { "collection_item_id", "subject_item_id" };
  private static readonly uint[] _cMsgGCCollectItemFieldTags = new uint[] { 8, 16 };
  public static CMsgGCCollectItem DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCCollectItem DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCCollectItem ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCCollectItem__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCCollectItem, CMsgGCCollectItem.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCCollectItem__FieldAccessorTable; }
  }
  
  public const int CollectionItemIdFieldNumber = 1;
  private bool hasCollectionItemId;
  private ulong collectionItemId_;
  public bool HasCollectionItemId {
    get { return hasCollectionItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong CollectionItemId {
    get { return collectionItemId_; }
  }
  
  public const int SubjectItemIdFieldNumber = 2;
  private bool hasSubjectItemId;
  private ulong subjectItemId_;
  public bool HasSubjectItemId {
    get { return hasSubjectItemId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SubjectItemId {
    get { return subjectItemId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCCollectItemFieldNames;
    if (hasCollectionItemId) {
      output.WriteUInt64(1, field_names[0], CollectionItemId);
    }
    if (hasSubjectItemId) {
      output.WriteUInt64(2, field_names[1], SubjectItemId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCollectionItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, CollectionItemId);
      }
      if (hasSubjectItemId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, SubjectItemId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCCollectItem ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCCollectItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCCollectItem ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCCollectItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCCollectItem ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCCollectItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCCollectItem ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCCollectItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCCollectItem ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCCollectItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCCollectItem MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCCollectItem prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCCollectItem, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCCollectItem cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCCollectItem result;
    
    private CMsgGCCollectItem PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCCollectItem original = result;
        result = new CMsgGCCollectItem();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCCollectItem MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCCollectItem.Descriptor; }
    }
    
    public override CMsgGCCollectItem DefaultInstanceForType {
      get { return global::CMsgGCCollectItem.DefaultInstance; }
    }
    
    public override CMsgGCCollectItem BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCCollectItem) {
        return MergeFrom((CMsgGCCollectItem) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCCollectItem other) {
      if (other == global::CMsgGCCollectItem.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCollectionItemId) {
        CollectionItemId = other.CollectionItemId;
      }
      if (other.HasSubjectItemId) {
        SubjectItemId = other.SubjectItemId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCCollectItemFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCCollectItemFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasCollectionItemId = input.ReadUInt64(ref result.collectionItemId_);
            break;
          }
          case 16: {
            result.hasSubjectItemId = input.ReadUInt64(ref result.subjectItemId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCollectionItemId {
      get { return result.hasCollectionItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CollectionItemId {
      get { return result.CollectionItemId; }
      set { SetCollectionItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetCollectionItemId(ulong value) {
      PrepareBuilder();
      result.hasCollectionItemId = true;
      result.collectionItemId_ = value;
      return this;
    }
    public Builder ClearCollectionItemId() {
      PrepareBuilder();
      result.hasCollectionItemId = false;
      result.collectionItemId_ = 0UL;
      return this;
    }
    
    public bool HasSubjectItemId {
      get { return result.hasSubjectItemId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SubjectItemId {
      get { return result.SubjectItemId; }
      set { SetSubjectItemId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSubjectItemId(ulong value) {
      PrepareBuilder();
      result.hasSubjectItemId = true;
      result.subjectItemId_ = value;
      return this;
    }
    public Builder ClearSubjectItemId() {
      PrepareBuilder();
      result.hasSubjectItemId = false;
      result.subjectItemId_ = 0UL;
      return this;
    }
  }
  static CMsgGCCollectItem() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgSDONoMemcached : pb::GeneratedMessage<CMsgSDONoMemcached, CMsgSDONoMemcached.Builder> {
  private CMsgSDONoMemcached() { }
  private static readonly CMsgSDONoMemcached defaultInstance = new CMsgSDONoMemcached().MakeReadOnly();
  private static readonly string[] _cMsgSDONoMemcachedFieldNames = new string[] {  };
  private static readonly uint[] _cMsgSDONoMemcachedFieldTags = new uint[] {  };
  public static CMsgSDONoMemcached DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgSDONoMemcached DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgSDONoMemcached ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgSDONoMemcached__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgSDONoMemcached, CMsgSDONoMemcached.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgSDONoMemcached__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgSDONoMemcachedFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgSDONoMemcached ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSDONoMemcached ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSDONoMemcached ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgSDONoMemcached ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgSDONoMemcached ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSDONoMemcached ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgSDONoMemcached ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgSDONoMemcached ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgSDONoMemcached ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgSDONoMemcached ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgSDONoMemcached MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgSDONoMemcached prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgSDONoMemcached, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgSDONoMemcached cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgSDONoMemcached result;
    
    private CMsgSDONoMemcached PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgSDONoMemcached original = result;
        result = new CMsgSDONoMemcached();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgSDONoMemcached MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgSDONoMemcached.Descriptor; }
    }
    
    public override CMsgSDONoMemcached DefaultInstanceForType {
      get { return global::CMsgSDONoMemcached.DefaultInstance; }
    }
    
    public override CMsgSDONoMemcached BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgSDONoMemcached) {
        return MergeFrom((CMsgSDONoMemcached) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgSDONoMemcached other) {
      if (other == global::CMsgSDONoMemcached.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgSDONoMemcachedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgSDONoMemcachedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static CMsgSDONoMemcached() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCToGCUpdateSQLKeyValue : pb::GeneratedMessage<CMsgGCToGCUpdateSQLKeyValue, CMsgGCToGCUpdateSQLKeyValue.Builder> {
  private CMsgGCToGCUpdateSQLKeyValue() { }
  private static readonly CMsgGCToGCUpdateSQLKeyValue defaultInstance = new CMsgGCToGCUpdateSQLKeyValue().MakeReadOnly();
  private static readonly string[] _cMsgGCToGCUpdateSQLKeyValueFieldNames = new string[] { "key_name" };
  private static readonly uint[] _cMsgGCToGCUpdateSQLKeyValueFieldTags = new uint[] { 10 };
  public static CMsgGCToGCUpdateSQLKeyValue DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCToGCUpdateSQLKeyValue DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCToGCUpdateSQLKeyValue ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCUpdateSQLKeyValue__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCToGCUpdateSQLKeyValue, CMsgGCToGCUpdateSQLKeyValue.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCUpdateSQLKeyValue__FieldAccessorTable; }
  }
  
  public const int KeyNameFieldNumber = 1;
  private bool hasKeyName;
  private string keyName_ = "";
  public bool HasKeyName {
    get { return hasKeyName; }
  }
  public string KeyName {
    get { return keyName_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCToGCUpdateSQLKeyValueFieldNames;
    if (hasKeyName) {
      output.WriteString(1, field_names[0], KeyName);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasKeyName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, KeyName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCToGCUpdateSQLKeyValue ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCUpdateSQLKeyValue ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCUpdateSQLKeyValue ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCUpdateSQLKeyValue ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCUpdateSQLKeyValue ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCUpdateSQLKeyValue ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCUpdateSQLKeyValue ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCToGCUpdateSQLKeyValue ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCToGCUpdateSQLKeyValue ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCUpdateSQLKeyValue ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCToGCUpdateSQLKeyValue MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCToGCUpdateSQLKeyValue prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCToGCUpdateSQLKeyValue, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCToGCUpdateSQLKeyValue cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCToGCUpdateSQLKeyValue result;
    
    private CMsgGCToGCUpdateSQLKeyValue PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCToGCUpdateSQLKeyValue original = result;
        result = new CMsgGCToGCUpdateSQLKeyValue();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCToGCUpdateSQLKeyValue MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCToGCUpdateSQLKeyValue.Descriptor; }
    }
    
    public override CMsgGCToGCUpdateSQLKeyValue DefaultInstanceForType {
      get { return global::CMsgGCToGCUpdateSQLKeyValue.DefaultInstance; }
    }
    
    public override CMsgGCToGCUpdateSQLKeyValue BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCToGCUpdateSQLKeyValue) {
        return MergeFrom((CMsgGCToGCUpdateSQLKeyValue) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCToGCUpdateSQLKeyValue other) {
      if (other == global::CMsgGCToGCUpdateSQLKeyValue.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasKeyName) {
        KeyName = other.KeyName;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCToGCUpdateSQLKeyValueFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCToGCUpdateSQLKeyValueFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasKeyName = input.ReadString(ref result.keyName_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasKeyName {
      get { return result.hasKeyName; }
    }
    public string KeyName {
      get { return result.KeyName; }
      set { SetKeyName(value); }
    }
    public Builder SetKeyName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasKeyName = true;
      result.keyName_ = value;
      return this;
    }
    public Builder ClearKeyName() {
      PrepareBuilder();
      result.hasKeyName = false;
      result.keyName_ = "";
      return this;
    }
  }
  static CMsgGCToGCUpdateSQLKeyValue() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCToGCIsTrustedServer : pb::GeneratedMessage<CMsgGCToGCIsTrustedServer, CMsgGCToGCIsTrustedServer.Builder> {
  private CMsgGCToGCIsTrustedServer() { }
  private static readonly CMsgGCToGCIsTrustedServer defaultInstance = new CMsgGCToGCIsTrustedServer().MakeReadOnly();
  private static readonly string[] _cMsgGCToGCIsTrustedServerFieldNames = new string[] { "steam_id" };
  private static readonly uint[] _cMsgGCToGCIsTrustedServerFieldTags = new uint[] { 9 };
  public static CMsgGCToGCIsTrustedServer DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCToGCIsTrustedServer DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCToGCIsTrustedServer ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCIsTrustedServer__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCToGCIsTrustedServer, CMsgGCToGCIsTrustedServer.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCIsTrustedServer__FieldAccessorTable; }
  }
  
  public const int SteamIdFieldNumber = 1;
  private bool hasSteamId;
  private ulong steamId_;
  public bool HasSteamId {
    get { return hasSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamId {
    get { return steamId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCToGCIsTrustedServerFieldNames;
    if (hasSteamId) {
      output.WriteFixed64(1, field_names[0], SteamId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, SteamId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCToGCIsTrustedServer ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServer ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServer ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServer ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServer ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCToGCIsTrustedServer MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCToGCIsTrustedServer prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCToGCIsTrustedServer, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCToGCIsTrustedServer cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCToGCIsTrustedServer result;
    
    private CMsgGCToGCIsTrustedServer PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCToGCIsTrustedServer original = result;
        result = new CMsgGCToGCIsTrustedServer();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCToGCIsTrustedServer MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCToGCIsTrustedServer.Descriptor; }
    }
    
    public override CMsgGCToGCIsTrustedServer DefaultInstanceForType {
      get { return global::CMsgGCToGCIsTrustedServer.DefaultInstance; }
    }
    
    public override CMsgGCToGCIsTrustedServer BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCToGCIsTrustedServer) {
        return MergeFrom((CMsgGCToGCIsTrustedServer) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCToGCIsTrustedServer other) {
      if (other == global::CMsgGCToGCIsTrustedServer.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCToGCIsTrustedServerFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCToGCIsTrustedServerFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamId = input.ReadFixed64(ref result.steamId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamId {
      get { return result.hasSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamId {
      get { return result.SteamId; }
      set { SetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamId(ulong value) {
      PrepareBuilder();
      result.hasSteamId = true;
      result.steamId_ = value;
      return this;
    }
    public Builder ClearSteamId() {
      PrepareBuilder();
      result.hasSteamId = false;
      result.steamId_ = 0;
      return this;
    }
  }
  static CMsgGCToGCIsTrustedServer() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCToGCIsTrustedServerResponse : pb::GeneratedMessage<CMsgGCToGCIsTrustedServerResponse, CMsgGCToGCIsTrustedServerResponse.Builder> {
  private CMsgGCToGCIsTrustedServerResponse() { }
  private static readonly CMsgGCToGCIsTrustedServerResponse defaultInstance = new CMsgGCToGCIsTrustedServerResponse().MakeReadOnly();
  private static readonly string[] _cMsgGCToGCIsTrustedServerResponseFieldNames = new string[] { "is_trusted" };
  private static readonly uint[] _cMsgGCToGCIsTrustedServerResponseFieldTags = new uint[] { 8 };
  public static CMsgGCToGCIsTrustedServerResponse DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCToGCIsTrustedServerResponse DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCToGCIsTrustedServerResponse ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCIsTrustedServerResponse__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCToGCIsTrustedServerResponse, CMsgGCToGCIsTrustedServerResponse.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCIsTrustedServerResponse__FieldAccessorTable; }
  }
  
  public const int IsTrustedFieldNumber = 1;
  private bool hasIsTrusted;
  private bool isTrusted_;
  public bool HasIsTrusted {
    get { return hasIsTrusted; }
  }
  public bool IsTrusted {
    get { return isTrusted_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCToGCIsTrustedServerResponseFieldNames;
    if (hasIsTrusted) {
      output.WriteBool(1, field_names[0], IsTrusted);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIsTrusted) {
        size += pb::CodedOutputStream.ComputeBoolSize(1, IsTrusted);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCToGCIsTrustedServerResponse ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServerResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServerResponse ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServerResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServerResponse ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServerResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServerResponse ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServerResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServerResponse ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCIsTrustedServerResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCToGCIsTrustedServerResponse MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCToGCIsTrustedServerResponse prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCToGCIsTrustedServerResponse, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCToGCIsTrustedServerResponse cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCToGCIsTrustedServerResponse result;
    
    private CMsgGCToGCIsTrustedServerResponse PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCToGCIsTrustedServerResponse original = result;
        result = new CMsgGCToGCIsTrustedServerResponse();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCToGCIsTrustedServerResponse MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCToGCIsTrustedServerResponse.Descriptor; }
    }
    
    public override CMsgGCToGCIsTrustedServerResponse DefaultInstanceForType {
      get { return global::CMsgGCToGCIsTrustedServerResponse.DefaultInstance; }
    }
    
    public override CMsgGCToGCIsTrustedServerResponse BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCToGCIsTrustedServerResponse) {
        return MergeFrom((CMsgGCToGCIsTrustedServerResponse) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCToGCIsTrustedServerResponse other) {
      if (other == global::CMsgGCToGCIsTrustedServerResponse.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasIsTrusted) {
        IsTrusted = other.IsTrusted;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCToGCIsTrustedServerResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCToGCIsTrustedServerResponseFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasIsTrusted = input.ReadBool(ref result.isTrusted_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasIsTrusted {
      get { return result.hasIsTrusted; }
    }
    public bool IsTrusted {
      get { return result.IsTrusted; }
      set { SetIsTrusted(value); }
    }
    public Builder SetIsTrusted(bool value) {
      PrepareBuilder();
      result.hasIsTrusted = true;
      result.isTrusted_ = value;
      return this;
    }
    public Builder ClearIsTrusted() {
      PrepareBuilder();
      result.hasIsTrusted = false;
      result.isTrusted_ = false;
      return this;
    }
  }
  static CMsgGCToGCIsTrustedServerResponse() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCToGCBroadcastConsoleCommand : pb::GeneratedMessage<CMsgGCToGCBroadcastConsoleCommand, CMsgGCToGCBroadcastConsoleCommand.Builder> {
  private CMsgGCToGCBroadcastConsoleCommand() { }
  private static readonly CMsgGCToGCBroadcastConsoleCommand defaultInstance = new CMsgGCToGCBroadcastConsoleCommand().MakeReadOnly();
  private static readonly string[] _cMsgGCToGCBroadcastConsoleCommandFieldNames = new string[] { "con_command" };
  private static readonly uint[] _cMsgGCToGCBroadcastConsoleCommandFieldTags = new uint[] { 10 };
  public static CMsgGCToGCBroadcastConsoleCommand DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCToGCBroadcastConsoleCommand DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCToGCBroadcastConsoleCommand ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCBroadcastConsoleCommand__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCToGCBroadcastConsoleCommand, CMsgGCToGCBroadcastConsoleCommand.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCBroadcastConsoleCommand__FieldAccessorTable; }
  }
  
  public const int ConCommandFieldNumber = 1;
  private bool hasConCommand;
  private string conCommand_ = "";
  public bool HasConCommand {
    get { return hasConCommand; }
  }
  public string ConCommand {
    get { return conCommand_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCToGCBroadcastConsoleCommandFieldNames;
    if (hasConCommand) {
      output.WriteString(1, field_names[0], ConCommand);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasConCommand) {
        size += pb::CodedOutputStream.ComputeStringSize(1, ConCommand);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCToGCBroadcastConsoleCommand ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCBroadcastConsoleCommand ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCBroadcastConsoleCommand ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCBroadcastConsoleCommand ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCBroadcastConsoleCommand ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCBroadcastConsoleCommand ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCBroadcastConsoleCommand ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCToGCBroadcastConsoleCommand ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCToGCBroadcastConsoleCommand ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCBroadcastConsoleCommand ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCToGCBroadcastConsoleCommand MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCToGCBroadcastConsoleCommand prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCToGCBroadcastConsoleCommand, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCToGCBroadcastConsoleCommand cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCToGCBroadcastConsoleCommand result;
    
    private CMsgGCToGCBroadcastConsoleCommand PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCToGCBroadcastConsoleCommand original = result;
        result = new CMsgGCToGCBroadcastConsoleCommand();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCToGCBroadcastConsoleCommand MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCToGCBroadcastConsoleCommand.Descriptor; }
    }
    
    public override CMsgGCToGCBroadcastConsoleCommand DefaultInstanceForType {
      get { return global::CMsgGCToGCBroadcastConsoleCommand.DefaultInstance; }
    }
    
    public override CMsgGCToGCBroadcastConsoleCommand BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCToGCBroadcastConsoleCommand) {
        return MergeFrom((CMsgGCToGCBroadcastConsoleCommand) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCToGCBroadcastConsoleCommand other) {
      if (other == global::CMsgGCToGCBroadcastConsoleCommand.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasConCommand) {
        ConCommand = other.ConCommand;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCToGCBroadcastConsoleCommandFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCToGCBroadcastConsoleCommandFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasConCommand = input.ReadString(ref result.conCommand_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasConCommand {
      get { return result.hasConCommand; }
    }
    public string ConCommand {
      get { return result.ConCommand; }
      set { SetConCommand(value); }
    }
    public Builder SetConCommand(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasConCommand = true;
      result.conCommand_ = value;
      return this;
    }
    public Builder ClearConCommand() {
      PrepareBuilder();
      result.hasConCommand = false;
      result.conCommand_ = "";
      return this;
    }
  }
  static CMsgGCToGCBroadcastConsoleCommand() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCServerVersionUpdated : pb::GeneratedMessage<CMsgGCServerVersionUpdated, CMsgGCServerVersionUpdated.Builder> {
  private CMsgGCServerVersionUpdated() { }
  private static readonly CMsgGCServerVersionUpdated defaultInstance = new CMsgGCServerVersionUpdated().MakeReadOnly();
  private static readonly string[] _cMsgGCServerVersionUpdatedFieldNames = new string[] { "server_version" };
  private static readonly uint[] _cMsgGCServerVersionUpdatedFieldTags = new uint[] { 8 };
  public static CMsgGCServerVersionUpdated DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCServerVersionUpdated DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCServerVersionUpdated ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCServerVersionUpdated__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCServerVersionUpdated, CMsgGCServerVersionUpdated.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCServerVersionUpdated__FieldAccessorTable; }
  }
  
  public const int ServerVersionFieldNumber = 1;
  private bool hasServerVersion;
  private uint serverVersion_;
  public bool HasServerVersion {
    get { return hasServerVersion; }
  }
  [global::System.CLSCompliant(false)]
  public uint ServerVersion {
    get { return serverVersion_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCServerVersionUpdatedFieldNames;
    if (hasServerVersion) {
      output.WriteUInt32(1, field_names[0], ServerVersion);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasServerVersion) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, ServerVersion);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCServerVersionUpdated ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCServerVersionUpdated ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCServerVersionUpdated ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCServerVersionUpdated ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCServerVersionUpdated ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCServerVersionUpdated ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCServerVersionUpdated ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCServerVersionUpdated ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCServerVersionUpdated ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCServerVersionUpdated ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCServerVersionUpdated MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCServerVersionUpdated prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCServerVersionUpdated, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCServerVersionUpdated cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCServerVersionUpdated result;
    
    private CMsgGCServerVersionUpdated PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCServerVersionUpdated original = result;
        result = new CMsgGCServerVersionUpdated();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCServerVersionUpdated MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCServerVersionUpdated.Descriptor; }
    }
    
    public override CMsgGCServerVersionUpdated DefaultInstanceForType {
      get { return global::CMsgGCServerVersionUpdated.DefaultInstance; }
    }
    
    public override CMsgGCServerVersionUpdated BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCServerVersionUpdated) {
        return MergeFrom((CMsgGCServerVersionUpdated) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCServerVersionUpdated other) {
      if (other == global::CMsgGCServerVersionUpdated.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasServerVersion) {
        ServerVersion = other.ServerVersion;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCServerVersionUpdatedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCServerVersionUpdatedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasServerVersion = input.ReadUInt32(ref result.serverVersion_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasServerVersion {
      get { return result.hasServerVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint ServerVersion {
      get { return result.ServerVersion; }
      set { SetServerVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetServerVersion(uint value) {
      PrepareBuilder();
      result.hasServerVersion = true;
      result.serverVersion_ = value;
      return this;
    }
    public Builder ClearServerVersion() {
      PrepareBuilder();
      result.hasServerVersion = false;
      result.serverVersion_ = 0;
      return this;
    }
  }
  static CMsgGCServerVersionUpdated() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCClientVersionUpdated : pb::GeneratedMessage<CMsgGCClientVersionUpdated, CMsgGCClientVersionUpdated.Builder> {
  private CMsgGCClientVersionUpdated() { }
  private static readonly CMsgGCClientVersionUpdated defaultInstance = new CMsgGCClientVersionUpdated().MakeReadOnly();
  private static readonly string[] _cMsgGCClientVersionUpdatedFieldNames = new string[] { "client_version" };
  private static readonly uint[] _cMsgGCClientVersionUpdatedFieldTags = new uint[] { 8 };
  public static CMsgGCClientVersionUpdated DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCClientVersionUpdated DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCClientVersionUpdated ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCClientVersionUpdated__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCClientVersionUpdated, CMsgGCClientVersionUpdated.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCClientVersionUpdated__FieldAccessorTable; }
  }
  
  public const int ClientVersionFieldNumber = 1;
  private bool hasClientVersion;
  private uint clientVersion_;
  public bool HasClientVersion {
    get { return hasClientVersion; }
  }
  [global::System.CLSCompliant(false)]
  public uint ClientVersion {
    get { return clientVersion_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCClientVersionUpdatedFieldNames;
    if (hasClientVersion) {
      output.WriteUInt32(1, field_names[0], ClientVersion);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasClientVersion) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, ClientVersion);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCClientVersionUpdated ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCClientVersionUpdated ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCClientVersionUpdated ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCClientVersionUpdated ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCClientVersionUpdated ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCClientVersionUpdated ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCClientVersionUpdated ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCClientVersionUpdated ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCClientVersionUpdated ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCClientVersionUpdated ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCClientVersionUpdated MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCClientVersionUpdated prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCClientVersionUpdated, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCClientVersionUpdated cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCClientVersionUpdated result;
    
    private CMsgGCClientVersionUpdated PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCClientVersionUpdated original = result;
        result = new CMsgGCClientVersionUpdated();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCClientVersionUpdated MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCClientVersionUpdated.Descriptor; }
    }
    
    public override CMsgGCClientVersionUpdated DefaultInstanceForType {
      get { return global::CMsgGCClientVersionUpdated.DefaultInstance; }
    }
    
    public override CMsgGCClientVersionUpdated BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCClientVersionUpdated) {
        return MergeFrom((CMsgGCClientVersionUpdated) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCClientVersionUpdated other) {
      if (other == global::CMsgGCClientVersionUpdated.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasClientVersion) {
        ClientVersion = other.ClientVersion;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCClientVersionUpdatedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCClientVersionUpdatedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasClientVersion = input.ReadUInt32(ref result.clientVersion_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasClientVersion {
      get { return result.hasClientVersion; }
    }
    [global::System.CLSCompliant(false)]
    public uint ClientVersion {
      get { return result.ClientVersion; }
      set { SetClientVersion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetClientVersion(uint value) {
      PrepareBuilder();
      result.hasClientVersion = true;
      result.clientVersion_ = value;
      return this;
    }
    public Builder ClearClientVersion() {
      PrepareBuilder();
      result.hasClientVersion = false;
      result.clientVersion_ = 0;
      return this;
    }
  }
  static CMsgGCClientVersionUpdated() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCToGCWebAPIAccountChanged : pb::GeneratedMessage<CMsgGCToGCWebAPIAccountChanged, CMsgGCToGCWebAPIAccountChanged.Builder> {
  private CMsgGCToGCWebAPIAccountChanged() { }
  private static readonly CMsgGCToGCWebAPIAccountChanged defaultInstance = new CMsgGCToGCWebAPIAccountChanged().MakeReadOnly();
  private static readonly string[] _cMsgGCToGCWebAPIAccountChangedFieldNames = new string[] {  };
  private static readonly uint[] _cMsgGCToGCWebAPIAccountChangedFieldTags = new uint[] {  };
  public static CMsgGCToGCWebAPIAccountChanged DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCToGCWebAPIAccountChanged DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCToGCWebAPIAccountChanged ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCWebAPIAccountChanged__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCToGCWebAPIAccountChanged, CMsgGCToGCWebAPIAccountChanged.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCWebAPIAccountChanged__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCToGCWebAPIAccountChangedFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCToGCWebAPIAccountChanged ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCWebAPIAccountChanged ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCWebAPIAccountChanged ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCWebAPIAccountChanged ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCWebAPIAccountChanged ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCWebAPIAccountChanged ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCWebAPIAccountChanged ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCToGCWebAPIAccountChanged ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCToGCWebAPIAccountChanged ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCWebAPIAccountChanged ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCToGCWebAPIAccountChanged MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCToGCWebAPIAccountChanged prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCToGCWebAPIAccountChanged, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCToGCWebAPIAccountChanged cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCToGCWebAPIAccountChanged result;
    
    private CMsgGCToGCWebAPIAccountChanged PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCToGCWebAPIAccountChanged original = result;
        result = new CMsgGCToGCWebAPIAccountChanged();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCToGCWebAPIAccountChanged MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCToGCWebAPIAccountChanged.Descriptor; }
    }
    
    public override CMsgGCToGCWebAPIAccountChanged DefaultInstanceForType {
      get { return global::CMsgGCToGCWebAPIAccountChanged.DefaultInstance; }
    }
    
    public override CMsgGCToGCWebAPIAccountChanged BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCToGCWebAPIAccountChanged) {
        return MergeFrom((CMsgGCToGCWebAPIAccountChanged) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCToGCWebAPIAccountChanged other) {
      if (other == global::CMsgGCToGCWebAPIAccountChanged.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCToGCWebAPIAccountChangedFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCToGCWebAPIAccountChangedFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static CMsgGCToGCWebAPIAccountChanged() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGCToGCRequestPassportItemGrant : pb::GeneratedMessage<CMsgGCToGCRequestPassportItemGrant, CMsgGCToGCRequestPassportItemGrant.Builder> {
  private CMsgGCToGCRequestPassportItemGrant() { }
  private static readonly CMsgGCToGCRequestPassportItemGrant defaultInstance = new CMsgGCToGCRequestPassportItemGrant().MakeReadOnly();
  private static readonly string[] _cMsgGCToGCRequestPassportItemGrantFieldNames = new string[] { "league_id", "reward_flag", "steam_id" };
  private static readonly uint[] _cMsgGCToGCRequestPassportItemGrantFieldTags = new uint[] { 16, 24, 9 };
  public static CMsgGCToGCRequestPassportItemGrant DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGCToGCRequestPassportItemGrant DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGCToGCRequestPassportItemGrant ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCRequestPassportItemGrant__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGCToGCRequestPassportItemGrant, CMsgGCToGCRequestPassportItemGrant.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGCToGCRequestPassportItemGrant__FieldAccessorTable; }
  }
  
  public const int SteamIdFieldNumber = 1;
  private bool hasSteamId;
  private ulong steamId_;
  public bool HasSteamId {
    get { return hasSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong SteamId {
    get { return steamId_; }
  }
  
  public const int LeagueIdFieldNumber = 2;
  private bool hasLeagueId;
  private uint leagueId_;
  public bool HasLeagueId {
    get { return hasLeagueId; }
  }
  [global::System.CLSCompliant(false)]
  public uint LeagueId {
    get { return leagueId_; }
  }
  
  public const int RewardFlagFieldNumber = 3;
  private bool hasRewardFlag;
  private int rewardFlag_;
  public bool HasRewardFlag {
    get { return hasRewardFlag; }
  }
  public int RewardFlag {
    get { return rewardFlag_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGCToGCRequestPassportItemGrantFieldNames;
    if (hasSteamId) {
      output.WriteFixed64(1, field_names[2], SteamId);
    }
    if (hasLeagueId) {
      output.WriteUInt32(2, field_names[0], LeagueId);
    }
    if (hasRewardFlag) {
      output.WriteInt32(3, field_names[1], RewardFlag);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(1, SteamId);
      }
      if (hasLeagueId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, LeagueId);
      }
      if (hasRewardFlag) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, RewardFlag);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGCToGCRequestPassportItemGrant ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCRequestPassportItemGrant ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCRequestPassportItemGrant ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGCToGCRequestPassportItemGrant ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCRequestPassportItemGrant ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCRequestPassportItemGrant ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGCToGCRequestPassportItemGrant ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGCToGCRequestPassportItemGrant ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGCToGCRequestPassportItemGrant ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGCToGCRequestPassportItemGrant ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGCToGCRequestPassportItemGrant MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGCToGCRequestPassportItemGrant prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGCToGCRequestPassportItemGrant, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGCToGCRequestPassportItemGrant cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGCToGCRequestPassportItemGrant result;
    
    private CMsgGCToGCRequestPassportItemGrant PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGCToGCRequestPassportItemGrant original = result;
        result = new CMsgGCToGCRequestPassportItemGrant();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGCToGCRequestPassportItemGrant MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGCToGCRequestPassportItemGrant.Descriptor; }
    }
    
    public override CMsgGCToGCRequestPassportItemGrant DefaultInstanceForType {
      get { return global::CMsgGCToGCRequestPassportItemGrant.DefaultInstance; }
    }
    
    public override CMsgGCToGCRequestPassportItemGrant BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGCToGCRequestPassportItemGrant) {
        return MergeFrom((CMsgGCToGCRequestPassportItemGrant) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGCToGCRequestPassportItemGrant other) {
      if (other == global::CMsgGCToGCRequestPassportItemGrant.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSteamId) {
        SteamId = other.SteamId;
      }
      if (other.HasLeagueId) {
        LeagueId = other.LeagueId;
      }
      if (other.HasRewardFlag) {
        RewardFlag = other.RewardFlag;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGCToGCRequestPassportItemGrantFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGCToGCRequestPassportItemGrantFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasSteamId = input.ReadFixed64(ref result.steamId_);
            break;
          }
          case 16: {
            result.hasLeagueId = input.ReadUInt32(ref result.leagueId_);
            break;
          }
          case 24: {
            result.hasRewardFlag = input.ReadInt32(ref result.rewardFlag_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSteamId {
      get { return result.hasSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong SteamId {
      get { return result.SteamId; }
      set { SetSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSteamId(ulong value) {
      PrepareBuilder();
      result.hasSteamId = true;
      result.steamId_ = value;
      return this;
    }
    public Builder ClearSteamId() {
      PrepareBuilder();
      result.hasSteamId = false;
      result.steamId_ = 0;
      return this;
    }
    
    public bool HasLeagueId {
      get { return result.hasLeagueId; }
    }
    [global::System.CLSCompliant(false)]
    public uint LeagueId {
      get { return result.LeagueId; }
      set { SetLeagueId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetLeagueId(uint value) {
      PrepareBuilder();
      result.hasLeagueId = true;
      result.leagueId_ = value;
      return this;
    }
    public Builder ClearLeagueId() {
      PrepareBuilder();
      result.hasLeagueId = false;
      result.leagueId_ = 0;
      return this;
    }
    
    public bool HasRewardFlag {
      get { return result.hasRewardFlag; }
    }
    public int RewardFlag {
      get { return result.RewardFlag; }
      set { SetRewardFlag(value); }
    }
    public Builder SetRewardFlag(int value) {
      PrepareBuilder();
      result.hasRewardFlag = true;
      result.rewardFlag_ = value;
      return this;
    }
    public Builder ClearRewardFlag() {
      PrepareBuilder();
      result.hasRewardFlag = false;
      result.rewardFlag_ = 0;
      return this;
    }
  }
  static CMsgGCToGCRequestPassportItemGrant() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class CMsgGameServerInfo : pb::GeneratedMessage<CMsgGameServerInfo, CMsgGameServerInfo.Builder> {
  private CMsgGameServerInfo() { }
  private static readonly CMsgGameServerInfo defaultInstance = new CMsgGameServerInfo().MakeReadOnly();
  private static readonly string[] _cMsgGameServerInfoFieldNames = new string[] { "parent_relay_count", "relay_clients_connected", "relay_slots_max", "relayed_game_server_steam_id", "relays_connected", "server_game_time", "server_hibernation", "server_key", "server_loadavg", "server_port", "server_private_ip_addr", "server_public_ip_addr", "server_region", "server_relay_connected_steam_id", "server_tv_broadcast_time", "server_tv_port", "server_type", "tv_secret_code" };
  private static readonly uint[] _cMsgGameServerInfoFieldTags = new uint[] { 136, 120, 104, 129, 112, 93, 48, 42, 77, 24, 21, 13, 64, 97, 85, 32, 56, 145 };
  public static CMsgGameServerInfo DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override CMsgGameServerInfo DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override CMsgGameServerInfo ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::BaseGcmessages.internal__static_CMsgGameServerInfo__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<CMsgGameServerInfo, CMsgGameServerInfo.Builder> InternalFieldAccessors {
    get { return global::BaseGcmessages.internal__static_CMsgGameServerInfo__FieldAccessorTable; }
  }
  
  #region Nested types
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class Types {
    public enum ServerType {
      UNSPECIFIED = 0,
      GAME = 1,
      PROXY = 2,
    }
    
  }
  #endregion
  
  public const int ServerPublicIpAddrFieldNumber = 1;
  private bool hasServerPublicIpAddr;
  private uint serverPublicIpAddr_;
  public bool HasServerPublicIpAddr {
    get { return hasServerPublicIpAddr; }
  }
  [global::System.CLSCompliant(false)]
  public uint ServerPublicIpAddr {
    get { return serverPublicIpAddr_; }
  }
  
  public const int ServerPrivateIpAddrFieldNumber = 2;
  private bool hasServerPrivateIpAddr;
  private uint serverPrivateIpAddr_;
  public bool HasServerPrivateIpAddr {
    get { return hasServerPrivateIpAddr; }
  }
  [global::System.CLSCompliant(false)]
  public uint ServerPrivateIpAddr {
    get { return serverPrivateIpAddr_; }
  }
  
  public const int ServerPortFieldNumber = 3;
  private bool hasServerPort;
  private uint serverPort_;
  public bool HasServerPort {
    get { return hasServerPort; }
  }
  [global::System.CLSCompliant(false)]
  public uint ServerPort {
    get { return serverPort_; }
  }
  
  public const int ServerTvPortFieldNumber = 4;
  private bool hasServerTvPort;
  private uint serverTvPort_;
  public bool HasServerTvPort {
    get { return hasServerTvPort; }
  }
  [global::System.CLSCompliant(false)]
  public uint ServerTvPort {
    get { return serverTvPort_; }
  }
  
  public const int ServerKeyFieldNumber = 5;
  private bool hasServerKey;
  private string serverKey_ = "";
  public bool HasServerKey {
    get { return hasServerKey; }
  }
  public string ServerKey {
    get { return serverKey_; }
  }
  
  public const int ServerHibernationFieldNumber = 6;
  private bool hasServerHibernation;
  private bool serverHibernation_;
  public bool HasServerHibernation {
    get { return hasServerHibernation; }
  }
  public bool ServerHibernation {
    get { return serverHibernation_; }
  }
  
  public const int ServerTypeFieldNumber = 7;
  private bool hasServerType;
  private global::CMsgGameServerInfo.Types.ServerType serverType_ = global::CMsgGameServerInfo.Types.ServerType.UNSPECIFIED;
  public bool HasServerType {
    get { return hasServerType; }
  }
  public global::CMsgGameServerInfo.Types.ServerType ServerType {
    get { return serverType_; }
  }
  
  public const int ServerRegionFieldNumber = 8;
  private bool hasServerRegion;
  private uint serverRegion_;
  public bool HasServerRegion {
    get { return hasServerRegion; }
  }
  [global::System.CLSCompliant(false)]
  public uint ServerRegion {
    get { return serverRegion_; }
  }
  
  public const int ServerLoadavgFieldNumber = 9;
  private bool hasServerLoadavg;
  private float serverLoadavg_;
  public bool HasServerLoadavg {
    get { return hasServerLoadavg; }
  }
  public float ServerLoadavg {
    get { return serverLoadavg_; }
  }
  
  public const int ServerTvBroadcastTimeFieldNumber = 10;
  private bool hasServerTvBroadcastTime;
  private float serverTvBroadcastTime_;
  public bool HasServerTvBroadcastTime {
    get { return hasServerTvBroadcastTime; }
  }
  public float ServerTvBroadcastTime {
    get { return serverTvBroadcastTime_; }
  }
  
  public const int ServerGameTimeFieldNumber = 11;
  private bool hasServerGameTime;
  private float serverGameTime_;
  public bool HasServerGameTime {
    get { return hasServerGameTime; }
  }
  public float ServerGameTime {
    get { return serverGameTime_; }
  }
  
  public const int ServerRelayConnectedSteamIdFieldNumber = 12;
  private bool hasServerRelayConnectedSteamId;
  private ulong serverRelayConnectedSteamId_;
  public bool HasServerRelayConnectedSteamId {
    get { return hasServerRelayConnectedSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong ServerRelayConnectedSteamId {
    get { return serverRelayConnectedSteamId_; }
  }
  
  public const int RelaySlotsMaxFieldNumber = 13;
  private bool hasRelaySlotsMax;
  private uint relaySlotsMax_;
  public bool HasRelaySlotsMax {
    get { return hasRelaySlotsMax; }
  }
  [global::System.CLSCompliant(false)]
  public uint RelaySlotsMax {
    get { return relaySlotsMax_; }
  }
  
  public const int RelaysConnectedFieldNumber = 14;
  private bool hasRelaysConnected;
  private int relaysConnected_;
  public bool HasRelaysConnected {
    get { return hasRelaysConnected; }
  }
  public int RelaysConnected {
    get { return relaysConnected_; }
  }
  
  public const int RelayClientsConnectedFieldNumber = 15;
  private bool hasRelayClientsConnected;
  private int relayClientsConnected_;
  public bool HasRelayClientsConnected {
    get { return hasRelayClientsConnected; }
  }
  public int RelayClientsConnected {
    get { return relayClientsConnected_; }
  }
  
  public const int RelayedGameServerSteamIdFieldNumber = 16;
  private bool hasRelayedGameServerSteamId;
  private ulong relayedGameServerSteamId_;
  public bool HasRelayedGameServerSteamId {
    get { return hasRelayedGameServerSteamId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong RelayedGameServerSteamId {
    get { return relayedGameServerSteamId_; }
  }
  
  public const int ParentRelayCountFieldNumber = 17;
  private bool hasParentRelayCount;
  private uint parentRelayCount_;
  public bool HasParentRelayCount {
    get { return hasParentRelayCount; }
  }
  [global::System.CLSCompliant(false)]
  public uint ParentRelayCount {
    get { return parentRelayCount_; }
  }
  
  public const int TvSecretCodeFieldNumber = 18;
  private bool hasTvSecretCode;
  private ulong tvSecretCode_;
  public bool HasTvSecretCode {
    get { return hasTvSecretCode; }
  }
  [global::System.CLSCompliant(false)]
  public ulong TvSecretCode {
    get { return tvSecretCode_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    int size = SerializedSize;
    string[] field_names = _cMsgGameServerInfoFieldNames;
    if (hasServerPublicIpAddr) {
      output.WriteFixed32(1, field_names[11], ServerPublicIpAddr);
    }
    if (hasServerPrivateIpAddr) {
      output.WriteFixed32(2, field_names[10], ServerPrivateIpAddr);
    }
    if (hasServerPort) {
      output.WriteUInt32(3, field_names[9], ServerPort);
    }
    if (hasServerTvPort) {
      output.WriteUInt32(4, field_names[15], ServerTvPort);
    }
    if (hasServerKey) {
      output.WriteString(5, field_names[7], ServerKey);
    }
    if (hasServerHibernation) {
      output.WriteBool(6, field_names[6], ServerHibernation);
    }
    if (hasServerType) {
      output.WriteEnum(7, field_names[16], (int) ServerType, ServerType);
    }
    if (hasServerRegion) {
      output.WriteUInt32(8, field_names[12], ServerRegion);
    }
    if (hasServerLoadavg) {
      output.WriteFloat(9, field_names[8], ServerLoadavg);
    }
    if (hasServerTvBroadcastTime) {
      output.WriteFloat(10, field_names[14], ServerTvBroadcastTime);
    }
    if (hasServerGameTime) {
      output.WriteFloat(11, field_names[5], ServerGameTime);
    }
    if (hasServerRelayConnectedSteamId) {
      output.WriteFixed64(12, field_names[13], ServerRelayConnectedSteamId);
    }
    if (hasRelaySlotsMax) {
      output.WriteUInt32(13, field_names[2], RelaySlotsMax);
    }
    if (hasRelaysConnected) {
      output.WriteInt32(14, field_names[4], RelaysConnected);
    }
    if (hasRelayClientsConnected) {
      output.WriteInt32(15, field_names[1], RelayClientsConnected);
    }
    if (hasRelayedGameServerSteamId) {
      output.WriteFixed64(16, field_names[3], RelayedGameServerSteamId);
    }
    if (hasParentRelayCount) {
      output.WriteUInt32(17, field_names[0], ParentRelayCount);
    }
    if (hasTvSecretCode) {
      output.WriteFixed64(18, field_names[17], TvSecretCode);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasServerPublicIpAddr) {
        size += pb::CodedOutputStream.ComputeFixed32Size(1, ServerPublicIpAddr);
      }
      if (hasServerPrivateIpAddr) {
        size += pb::CodedOutputStream.ComputeFixed32Size(2, ServerPrivateIpAddr);
      }
      if (hasServerPort) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, ServerPort);
      }
      if (hasServerTvPort) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, ServerTvPort);
      }
      if (hasServerKey) {
        size += pb::CodedOutputStream.ComputeStringSize(5, ServerKey);
      }
      if (hasServerHibernation) {
        size += pb::CodedOutputStream.ComputeBoolSize(6, ServerHibernation);
      }
      if (hasServerType) {
        size += pb::CodedOutputStream.ComputeEnumSize(7, (int) ServerType);
      }
      if (hasServerRegion) {
        size += pb::CodedOutputStream.ComputeUInt32Size(8, ServerRegion);
      }
      if (hasServerLoadavg) {
        size += pb::CodedOutputStream.ComputeFloatSize(9, ServerLoadavg);
      }
      if (hasServerTvBroadcastTime) {
        size += pb::CodedOutputStream.ComputeFloatSize(10, ServerTvBroadcastTime);
      }
      if (hasServerGameTime) {
        size += pb::CodedOutputStream.ComputeFloatSize(11, ServerGameTime);
      }
      if (hasServerRelayConnectedSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(12, ServerRelayConnectedSteamId);
      }
      if (hasRelaySlotsMax) {
        size += pb::CodedOutputStream.ComputeUInt32Size(13, RelaySlotsMax);
      }
      if (hasRelaysConnected) {
        size += pb::CodedOutputStream.ComputeInt32Size(14, RelaysConnected);
      }
      if (hasRelayClientsConnected) {
        size += pb::CodedOutputStream.ComputeInt32Size(15, RelayClientsConnected);
      }
      if (hasRelayedGameServerSteamId) {
        size += pb::CodedOutputStream.ComputeFixed64Size(16, RelayedGameServerSteamId);
      }
      if (hasParentRelayCount) {
        size += pb::CodedOutputStream.ComputeUInt32Size(17, ParentRelayCount);
      }
      if (hasTvSecretCode) {
        size += pb::CodedOutputStream.ComputeFixed64Size(18, TvSecretCode);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
  }
  
  public static CMsgGameServerInfo ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGameServerInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGameServerInfo ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static CMsgGameServerInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static CMsgGameServerInfo ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGameServerInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static CMsgGameServerInfo ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static CMsgGameServerInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static CMsgGameServerInfo ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static CMsgGameServerInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private CMsgGameServerInfo MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(CMsgGameServerInfo prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<CMsgGameServerInfo, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(CMsgGameServerInfo cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private CMsgGameServerInfo result;
    
    private CMsgGameServerInfo PrepareBuilder() {
      if (resultIsReadOnly) {
        CMsgGameServerInfo original = result;
        result = new CMsgGameServerInfo();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override CMsgGameServerInfo MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::CMsgGameServerInfo.Descriptor; }
    }
    
    public override CMsgGameServerInfo DefaultInstanceForType {
      get { return global::CMsgGameServerInfo.DefaultInstance; }
    }
    
    public override CMsgGameServerInfo BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is CMsgGameServerInfo) {
        return MergeFrom((CMsgGameServerInfo) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(CMsgGameServerInfo other) {
      if (other == global::CMsgGameServerInfo.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasServerPublicIpAddr) {
        ServerPublicIpAddr = other.ServerPublicIpAddr;
      }
      if (other.HasServerPrivateIpAddr) {
        ServerPrivateIpAddr = other.ServerPrivateIpAddr;
      }
      if (other.HasServerPort) {
        ServerPort = other.ServerPort;
      }
      if (other.HasServerTvPort) {
        ServerTvPort = other.ServerTvPort;
      }
      if (other.HasServerKey) {
        ServerKey = other.ServerKey;
      }
      if (other.HasServerHibernation) {
        ServerHibernation = other.ServerHibernation;
      }
      if (other.HasServerType) {
        ServerType = other.ServerType;
      }
      if (other.HasServerRegion) {
        ServerRegion = other.ServerRegion;
      }
      if (other.HasServerLoadavg) {
        ServerLoadavg = other.ServerLoadavg;
      }
      if (other.HasServerTvBroadcastTime) {
        ServerTvBroadcastTime = other.ServerTvBroadcastTime;
      }
      if (other.HasServerGameTime) {
        ServerGameTime = other.ServerGameTime;
      }
      if (other.HasServerRelayConnectedSteamId) {
        ServerRelayConnectedSteamId = other.ServerRelayConnectedSteamId;
      }
      if (other.HasRelaySlotsMax) {
        RelaySlotsMax = other.RelaySlotsMax;
      }
      if (other.HasRelaysConnected) {
        RelaysConnected = other.RelaysConnected;
      }
      if (other.HasRelayClientsConnected) {
        RelayClientsConnected = other.RelayClientsConnected;
      }
      if (other.HasRelayedGameServerSteamId) {
        RelayedGameServerSteamId = other.RelayedGameServerSteamId;
      }
      if (other.HasParentRelayCount) {
        ParentRelayCount = other.ParentRelayCount;
      }
      if (other.HasTvSecretCode) {
        TvSecretCode = other.TvSecretCode;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_cMsgGameServerInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _cMsgGameServerInfoFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 13: {
            result.hasServerPublicIpAddr = input.ReadFixed32(ref result.serverPublicIpAddr_);
            break;
          }
          case 21: {
            result.hasServerPrivateIpAddr = input.ReadFixed32(ref result.serverPrivateIpAddr_);
            break;
          }
          case 24: {
            result.hasServerPort = input.ReadUInt32(ref result.serverPort_);
            break;
          }
          case 32: {
            result.hasServerTvPort = input.ReadUInt32(ref result.serverTvPort_);
            break;
          }
          case 42: {
            result.hasServerKey = input.ReadString(ref result.serverKey_);
            break;
          }
          case 48: {
            result.hasServerHibernation = input.ReadBool(ref result.serverHibernation_);
            break;
          }
          case 56: {
            object unknown;
            if(input.ReadEnum(ref result.serverType_, out unknown)) {
              result.hasServerType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(7, (ulong)(int)unknown);
            }
            break;
          }
          case 64: {
            result.hasServerRegion = input.ReadUInt32(ref result.serverRegion_);
            break;
          }
          case 77: {
            result.hasServerLoadavg = input.ReadFloat(ref result.serverLoadavg_);
            break;
          }
          case 85: {
            result.hasServerTvBroadcastTime = input.ReadFloat(ref result.serverTvBroadcastTime_);
            break;
          }
          case 93: {
            result.hasServerGameTime = input.ReadFloat(ref result.serverGameTime_);
            break;
          }
          case 97: {
            result.hasServerRelayConnectedSteamId = input.ReadFixed64(ref result.serverRelayConnectedSteamId_);
            break;
          }
          case 104: {
            result.hasRelaySlotsMax = input.ReadUInt32(ref result.relaySlotsMax_);
            break;
          }
          case 112: {
            result.hasRelaysConnected = input.ReadInt32(ref result.relaysConnected_);
            break;
          }
          case 120: {
            result.hasRelayClientsConnected = input.ReadInt32(ref result.relayClientsConnected_);
            break;
          }
          case 129: {
            result.hasRelayedGameServerSteamId = input.ReadFixed64(ref result.relayedGameServerSteamId_);
            break;
          }
          case 136: {
            result.hasParentRelayCount = input.ReadUInt32(ref result.parentRelayCount_);
            break;
          }
          case 145: {
            result.hasTvSecretCode = input.ReadFixed64(ref result.tvSecretCode_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasServerPublicIpAddr {
      get { return result.hasServerPublicIpAddr; }
    }
    [global::System.CLSCompliant(false)]
    public uint ServerPublicIpAddr {
      get { return result.ServerPublicIpAddr; }
      set { SetServerPublicIpAddr(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetServerPublicIpAddr(uint value) {
      PrepareBuilder();
      result.hasServerPublicIpAddr = true;
      result.serverPublicIpAddr_ = value;
      return this;
    }
    public Builder ClearServerPublicIpAddr() {
      PrepareBuilder();
      result.hasServerPublicIpAddr = false;
      result.serverPublicIpAddr_ = 0;
      return this;
    }
    
    public bool HasServerPrivateIpAddr {
      get { return result.hasServerPrivateIpAddr; }
    }
    [global::System.CLSCompliant(false)]
    public uint ServerPrivateIpAddr {
      get { return result.ServerPrivateIpAddr; }
      set { SetServerPrivateIpAddr(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetServerPrivateIpAddr(uint value) {
      PrepareBuilder();
      result.hasServerPrivateIpAddr = true;
      result.serverPrivateIpAddr_ = value;
      return this;
    }
    public Builder ClearServerPrivateIpAddr() {
      PrepareBuilder();
      result.hasServerPrivateIpAddr = false;
      result.serverPrivateIpAddr_ = 0;
      return this;
    }
    
    public bool HasServerPort {
      get { return result.hasServerPort; }
    }
    [global::System.CLSCompliant(false)]
    public uint ServerPort {
      get { return result.ServerPort; }
      set { SetServerPort(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetServerPort(uint value) {
      PrepareBuilder();
      result.hasServerPort = true;
      result.serverPort_ = value;
      return this;
    }
    public Builder ClearServerPort() {
      PrepareBuilder();
      result.hasServerPort = false;
      result.serverPort_ = 0;
      return this;
    }
    
    public bool HasServerTvPort {
      get { return result.hasServerTvPort; }
    }
    [global::System.CLSCompliant(false)]
    public uint ServerTvPort {
      get { return result.ServerTvPort; }
      set { SetServerTvPort(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetServerTvPort(uint value) {
      PrepareBuilder();
      result.hasServerTvPort = true;
      result.serverTvPort_ = value;
      return this;
    }
    public Builder ClearServerTvPort() {
      PrepareBuilder();
      result.hasServerTvPort = false;
      result.serverTvPort_ = 0;
      return this;
    }
    
    public bool HasServerKey {
      get { return result.hasServerKey; }
    }
    public string ServerKey {
      get { return result.ServerKey; }
      set { SetServerKey(value); }
    }
    public Builder SetServerKey(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasServerKey = true;
      result.serverKey_ = value;
      return this;
    }
    public Builder ClearServerKey() {
      PrepareBuilder();
      result.hasServerKey = false;
      result.serverKey_ = "";
      return this;
    }
    
    public bool HasServerHibernation {
      get { return result.hasServerHibernation; }
    }
    public bool ServerHibernation {
      get { return result.ServerHibernation; }
      set { SetServerHibernation(value); }
    }
    public Builder SetServerHibernation(bool value) {
      PrepareBuilder();
      result.hasServerHibernation = true;
      result.serverHibernation_ = value;
      return this;
    }
    public Builder ClearServerHibernation() {
      PrepareBuilder();
      result.hasServerHibernation = false;
      result.serverHibernation_ = false;
      return this;
    }
    
    public bool HasServerType {
     get { return result.hasServerType; }
    }
    public global::CMsgGameServerInfo.Types.ServerType ServerType {
      get { return result.ServerType; }
      set { SetServerType(value); }
    }
    public Builder SetServerType(global::CMsgGameServerInfo.Types.ServerType value) {
      PrepareBuilder();
      result.hasServerType = true;
      result.serverType_ = value;
      return this;
    }
    public Builder ClearServerType() {
      PrepareBuilder();
      result.hasServerType = false;
      result.serverType_ = global::CMsgGameServerInfo.Types.ServerType.UNSPECIFIED;
      return this;
    }
    
    public bool HasServerRegion {
      get { return result.hasServerRegion; }
    }
    [global::System.CLSCompliant(false)]
    public uint ServerRegion {
      get { return result.ServerRegion; }
      set { SetServerRegion(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetServerRegion(uint value) {
      PrepareBuilder();
      result.hasServerRegion = true;
      result.serverRegion_ = value;
      return this;
    }
    public Builder ClearServerRegion() {
      PrepareBuilder();
      result.hasServerRegion = false;
      result.serverRegion_ = 0;
      return this;
    }
    
    public bool HasServerLoadavg {
      get { return result.hasServerLoadavg; }
    }
    public float ServerLoadavg {
      get { return result.ServerLoadavg; }
      set { SetServerLoadavg(value); }
    }
    public Builder SetServerLoadavg(float value) {
      PrepareBuilder();
      result.hasServerLoadavg = true;
      result.serverLoadavg_ = value;
      return this;
    }
    public Builder ClearServerLoadavg() {
      PrepareBuilder();
      result.hasServerLoadavg = false;
      result.serverLoadavg_ = 0F;
      return this;
    }
    
    public bool HasServerTvBroadcastTime {
      get { return result.hasServerTvBroadcastTime; }
    }
    public float ServerTvBroadcastTime {
      get { return result.ServerTvBroadcastTime; }
      set { SetServerTvBroadcastTime(value); }
    }
    public Builder SetServerTvBroadcastTime(float value) {
      PrepareBuilder();
      result.hasServerTvBroadcastTime = true;
      result.serverTvBroadcastTime_ = value;
      return this;
    }
    public Builder ClearServerTvBroadcastTime() {
      PrepareBuilder();
      result.hasServerTvBroadcastTime = false;
      result.serverTvBroadcastTime_ = 0F;
      return this;
    }
    
    public bool HasServerGameTime {
      get { return result.hasServerGameTime; }
    }
    public float ServerGameTime {
      get { return result.ServerGameTime; }
      set { SetServerGameTime(value); }
    }
    public Builder SetServerGameTime(float value) {
      PrepareBuilder();
      result.hasServerGameTime = true;
      result.serverGameTime_ = value;
      return this;
    }
    public Builder ClearServerGameTime() {
      PrepareBuilder();
      result.hasServerGameTime = false;
      result.serverGameTime_ = 0F;
      return this;
    }
    
    public bool HasServerRelayConnectedSteamId {
      get { return result.hasServerRelayConnectedSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong ServerRelayConnectedSteamId {
      get { return result.ServerRelayConnectedSteamId; }
      set { SetServerRelayConnectedSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetServerRelayConnectedSteamId(ulong value) {
      PrepareBuilder();
      result.hasServerRelayConnectedSteamId = true;
      result.serverRelayConnectedSteamId_ = value;
      return this;
    }
    public Builder ClearServerRelayConnectedSteamId() {
      PrepareBuilder();
      result.hasServerRelayConnectedSteamId = false;
      result.serverRelayConnectedSteamId_ = 0;
      return this;
    }
    
    public bool HasRelaySlotsMax {
      get { return result.hasRelaySlotsMax; }
    }
    [global::System.CLSCompliant(false)]
    public uint RelaySlotsMax {
      get { return result.RelaySlotsMax; }
      set { SetRelaySlotsMax(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetRelaySlotsMax(uint value) {
      PrepareBuilder();
      result.hasRelaySlotsMax = true;
      result.relaySlotsMax_ = value;
      return this;
    }
    public Builder ClearRelaySlotsMax() {
      PrepareBuilder();
      result.hasRelaySlotsMax = false;
      result.relaySlotsMax_ = 0;
      return this;
    }
    
    public bool HasRelaysConnected {
      get { return result.hasRelaysConnected; }
    }
    public int RelaysConnected {
      get { return result.RelaysConnected; }
      set { SetRelaysConnected(value); }
    }
    public Builder SetRelaysConnected(int value) {
      PrepareBuilder();
      result.hasRelaysConnected = true;
      result.relaysConnected_ = value;
      return this;
    }
    public Builder ClearRelaysConnected() {
      PrepareBuilder();
      result.hasRelaysConnected = false;
      result.relaysConnected_ = 0;
      return this;
    }
    
    public bool HasRelayClientsConnected {
      get { return result.hasRelayClientsConnected; }
    }
    public int RelayClientsConnected {
      get { return result.RelayClientsConnected; }
      set { SetRelayClientsConnected(value); }
    }
    public Builder SetRelayClientsConnected(int value) {
      PrepareBuilder();
      result.hasRelayClientsConnected = true;
      result.relayClientsConnected_ = value;
      return this;
    }
    public Builder ClearRelayClientsConnected() {
      PrepareBuilder();
      result.hasRelayClientsConnected = false;
      result.relayClientsConnected_ = 0;
      return this;
    }
    
    public bool HasRelayedGameServerSteamId {
      get { return result.hasRelayedGameServerSteamId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong RelayedGameServerSteamId {
      get { return result.RelayedGameServerSteamId; }
      set { SetRelayedGameServerSteamId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetRelayedGameServerSteamId(ulong value) {
      PrepareBuilder();
      result.hasRelayedGameServerSteamId = true;
      result.relayedGameServerSteamId_ = value;
      return this;
    }
    public Builder ClearRelayedGameServerSteamId() {
      PrepareBuilder();
      result.hasRelayedGameServerSteamId = false;
      result.relayedGameServerSteamId_ = 0;
      return this;
    }
    
    public bool HasParentRelayCount {
      get { return result.hasParentRelayCount; }
    }
    [global::System.CLSCompliant(false)]
    public uint ParentRelayCount {
      get { return result.ParentRelayCount; }
      set { SetParentRelayCount(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetParentRelayCount(uint value) {
      PrepareBuilder();
      result.hasParentRelayCount = true;
      result.parentRelayCount_ = value;
      return this;
    }
    public Builder ClearParentRelayCount() {
      PrepareBuilder();
      result.hasParentRelayCount = false;
      result.parentRelayCount_ = 0;
      return this;
    }
    
    public bool HasTvSecretCode {
      get { return result.hasTvSecretCode; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TvSecretCode {
      get { return result.TvSecretCode; }
      set { SetTvSecretCode(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTvSecretCode(ulong value) {
      PrepareBuilder();
      result.hasTvSecretCode = true;
      result.tvSecretCode_ = value;
      return this;
    }
    public Builder ClearTvSecretCode() {
      PrepareBuilder();
      result.hasTvSecretCode = false;
      result.tvSecretCode_ = 0;
      return this;
    }
  }
  static CMsgGameServerInfo() {
    object.ReferenceEquals(global::BaseGcmessages.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
